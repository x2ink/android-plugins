//{"version":"3.7.9","encode":"base64"}
dmFyIF9fVW5pU2VydmljZVN0YXJ0VGltZV9fID0gRGF0ZS5ub3coKTt2YXIgZ2xvYmFsPXRoaXM7IHZhciBwcm9jZXNzPXtlbnY6e319OyB2YXIgc2V0VGltZW91dD1nbG9iYWwuc2V0VGltZW91dDsKKCgpPT57dmFyIEtJPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgSkk9KHYsbCk9Pntmb3IodmFyIGIgaW4gbClLSSh2LGIse2dldDpsW2JdLGVudW1lcmFibGU6ITB9KX07dmFyIGdzPU9iamVjdC5mcmVlemU7ZnVuY3Rpb24gRXUoe2dldEN1cnJlbnRQYWdlczp2LHVuaTpsLFVuaVNoYXJlZDpiLFZ1ZTpULFZ1ZVNoYXJlZDprfSl7dmFyIEM9ZnVuY3Rpb24oZCxtLFIsV2UpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBQdCgpe2xldCBLZT12KCksZHQ9S2UubGVuZ3RoO2lmKGR0KXJldHVybiBLZVtkdC0xXX1mdW5jdGlvbiBRdCgpe2xldCBLZT1QdCgpO2lmKEtlKXJldHVybiBLZS4kdm19ZnVuY3Rpb24gTyhLZSxkdCx3dCl7aWYoUi5pc1N0cmluZyhLZSkpd3Q9ZHQsZHQ9S2UsS2U9UXQoKTtlbHNlIGlmKHR5cGVvZiBLZT09Im51bWJlciIpe2xldCBObj12KCkuZmluZChKdD0+SnQuJHBhZ2UuaWQ9PT1LZSk7Tm4/S2U9Tm4uJHZtOktlPVF0KCl9aWYoIUtlKXJldHVybjtpZihLZS5fX2NhbGxfaG9vaylyZXR1cm4gS2UuX19jYWxsX2hvb2soZHQsd3QpO2xldCBybj1LZS4kW2R0XTtyZXR1cm4gcm4mJm0uaW52b2tlQXJyYXlGbnMocm4sd3QpfWZ1bmN0aW9uIGllKEtlLGR0LHd0LHJuKXtSLmlzRnVuY3Rpb24oZHQpJiZXZS5pbmplY3RIb29rKEtlLGR0LmJpbmQod3QpLHJuKX1mdW5jdGlvbiBUbihLZSxkdCx3dCl7dmFyIHJuO2xldCBObj1LZS5tcFR5cGV8fHd0LiRtcFR5cGU7aWYoISghTm58fE5uPT09ImNvbXBvbmVudCIpJiYoT2JqZWN0LmtleXMoS2UpLmZvckVhY2goSnQ9PntpZihtLmlzVW5pTGlmZWN5Y2xlSG9vayhKdCxLZVtKdF0sITEpKXtsZXQgRm49S2VbSnRdO1IuaXNBcnJheShGbik/Rm4uZm9yRWFjaChpcj0+aWUoSnQsaXIsd3QsZHQpKTppZShKdCxGbix3dCxkdCl9fSksTm49PT0icGFnZSIpKXtkdC5fX2lzVmlzaWJsZT0hMDt0cnl7Tyh3dCxtLk9OX0xPQUQsZHQuYXR0cnMuX19wYWdlUXVlcnkpLGRlbGV0ZSBkdC5hdHRycy5fX3BhZ2VRdWVyeSwoKHJuPXd0LiRwYWdlKT09PW51bGx8fHJuPT09dm9pZCAwP3ZvaWQgMDpybi5vcGVuVHlwZSkhPT0icHJlbG9hZFBhZ2UiJiZPKHd0LG0uT05fU0hPVyl9Y2F0Y2goSnQpe2NvbnNvbGUuZXJyb3IoSnQubWVzc2FnZSttLkxJTkVGRUVEK0p0LnN0YWNrKX19fWZ1bmN0aW9uIHFuKEtlLGR0KXttdChkdCxLZS4kcmVuZGVyanMsS2VbIiQiK20uUkVOREVSSlNfTU9EVUxFU10pfWZ1bmN0aW9uIG10KEtlLGR0LHd0PXt9KXtpZighUi5pc0FycmF5KGR0KSlyZXR1cm47bGV0IHJuPUtlLnVpZCxObj1LZS4kd3hzTW9kdWxlc3x8KEtlLiR3eHNNb2R1bGVzPVtdKSxKdD1LZS5jdHg7ZHQuZm9yRWFjaChGbj0+e3d0W0ZuXSYmKEp0W0ZuXT1KKHJuLHd0W0ZuXSxGbiksTm4ucHVzaChGbikpfSl9ZnVuY3Rpb24gSihLZSxkdCx3dCl7bGV0IHJuPXt9O3JldHVybiBuZXcgUHJveHkocm4se2dldChObixKdCl7cmV0dXJuIHJuW0p0XXx8KHJuW0p0XT1yZShLZSxkdCx3dCxKdCkpfX0pfWZ1bmN0aW9uIHJlKEtlLGR0LHd0LHJuKXtsZXQgTm49KCk9Pnt9LEp0PSgpPT5tLldYU19QUk9UT0NPTCtKU09OLnN0cmluZ2lmeShbS2UsZHQsd3QrIi4iK3JuXSk7cmV0dXJuIG5ldyBQcm94eShObix7Z2V0KEZuLGlyKXtyZXR1cm4gaXI9PT0idG9KU09OIj9KdDpObltpcl18fChObltpcl09cmUoS2UsZHQsd3QrIi4iK3JuLGlyKSl9LGFwcGx5KEZuLGlyLHhpKXtyZXR1cm4gbS5XWFNfUFJPVE9DT0wrSlNPTi5zdHJpbmdpZnkoW0tlLGR0LHd0KyIuIitybixbLi4ueGldXSl9fSl9ZnVuY3Rpb24gTG4oS2UsZHQpe210KGR0LEtlLiR3eHMsS2VbIiQiK20uV1hTX01PRFVMRVNdKX1mdW5jdGlvbiBjbihLZSxkdCx3dCl7TG4oS2UsZHQpLHFuKEtlLGR0KSxUbihLZSxkdCx3dCl9ZnVuY3Rpb24gSHQoS2UsZHQsd3Qpe3JldHVybiBLZVtkdF09d3R9ZnVuY3Rpb24gSW4oS2Upe3JldHVybiBmdW5jdGlvbih3dCxybixObil7aWYoIXJuKXRocm93IHd0O2xldCBKdD1LZS5faW5zdGFuY2U7aWYoIUp0fHwhSnQucHJveHkpdGhyb3cgd3Q7TyhKdC5wcm94eSxtLk9OX0VSUk9SLHd0KX19ZnVuY3Rpb24gUnIoS2UsZHQpe3JldHVybiBLZT9bLi4ubmV3IFNldChbXS5jb25jYXQoS2UsZHQpKV06ZHR9ZnVuY3Rpb24gSHIoS2Upe20uVW5pTGlmZWN5Y2xlSG9va3MuZm9yRWFjaChkdD0+e0tlW2R0XT1Scn0pfWxldCBycixubj0iQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0iLGp0PS9eKD86W0EtWmEtelxkKy9dezR9KSo/KD86W0EtWmEtelxkKy9dezJ9KD86PT0pP3xbQS1aYS16XGQrL117M309Pyk/JC87dHlwZW9mIGF0b2IhPSJmdW5jdGlvbiI/cnI9ZnVuY3Rpb24oS2Upe2lmKEtlPVN0cmluZyhLZSkucmVwbGFjZSgvW1x0XG5cZlxyIF0rL2csIiIpLCFqdC50ZXN0KEtlKSl0aHJvdyBuZXcgRXJyb3IoIkZhaWxlZCB0byBleGVjdXRlICdhdG9iJyBvbiAnV2luZG93JzogVGhlIHN0cmluZyB0byBiZSBkZWNvZGVkIGlzIG5vdCBjb3JyZWN0bHkgZW5jb2RlZC4iKTtLZSs9Ij09Ii5zbGljZSgyLShLZS5sZW5ndGgmMykpO2Zvcih2YXIgZHQsd3Q9IiIscm4sTm4sSnQ9MDtKdDxLZS5sZW5ndGg7KWR0PW5uLmluZGV4T2YoS2UuY2hhckF0KEp0KyspKTw8MTh8bm4uaW5kZXhPZihLZS5jaGFyQXQoSnQrKykpPDwxMnwocm49bm4uaW5kZXhPZihLZS5jaGFyQXQoSnQrKykpKTw8NnwoTm49bm4uaW5kZXhPZihLZS5jaGFyQXQoSnQrKykpKSx3dCs9cm49PT02ND9TdHJpbmcuZnJvbUNoYXJDb2RlKGR0Pj4xNiYyNTUpOk5uPT09NjQ/U3RyaW5nLmZyb21DaGFyQ29kZShkdD4+MTYmMjU1LGR0Pj44JjI1NSk6U3RyaW5nLmZyb21DaGFyQ29kZShkdD4+MTYmMjU1LGR0Pj44JjI1NSxkdCYyNTUpO3JldHVybiB3dH06cnI9YXRvYjtmdW5jdGlvbiBnbihLZSl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChycihLZSkuc3BsaXQoIiIpLm1hcChmdW5jdGlvbihkdCl7cmV0dXJuIiUiKygiMDAiK2R0LmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtMil9KS5qb2luKCIiKSl9ZnVuY3Rpb24gUm4oKXtsZXQgS2U9bC5nZXRTdG9yYWdlU3luYygidW5pX2lkX3Rva2VuIil8fCIiLGR0PUtlLnNwbGl0KCIuIik7aWYoIUtlfHxkdC5sZW5ndGghPT0zKXJldHVybnt1aWQ6bnVsbCxyb2xlOltdLHBlcm1pc3Npb246W10sdG9rZW5FeHBpcmVkOjB9O2xldCB3dDt0cnl7d3Q9SlNPTi5wYXJzZShnbihkdFsxXSkpfWNhdGNoKHJuKXt0aHJvdyBuZXcgRXJyb3IoIlx1ODNCN1x1NTNENlx1NUY1M1x1NTI0RFx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTFGQVx1OTUxOVx1RkYwQ1x1OEJFNlx1N0VDNlx1OTUxOVx1OEJFRlx1NEZFMVx1NjA2Rlx1NEUzQVx1RkYxQSIrcm4ubWVzc2FnZSl9cmV0dXJuIHd0LnRva2VuRXhwaXJlZD13dC5leHAqMWUzLGRlbGV0ZSB3dC5leHAsZGVsZXRlIHd0LmlhdCx3dH1mdW5jdGlvbiB4bihLZSl7S2UudW5pSURIYXNSb2xlPWZ1bmN0aW9uKGR0KXtsZXR7cm9sZTp3dH09Um4oKTtyZXR1cm4gd3QuaW5kZXhPZihkdCk+LTF9LEtlLnVuaUlESGFzUGVybWlzc2lvbj1mdW5jdGlvbihkdCl7bGV0e3Blcm1pc3Npb246d3R9PVJuKCk7cmV0dXJuIHRoaXMudW5pSURIYXNSb2xlKCJhZG1pbiIpfHx3dC5pbmRleE9mKGR0KT4tMX0sS2UudW5pSURUb2tlblZhbGlkPWZ1bmN0aW9uKCl7bGV0e3Rva2VuRXhwaXJlZDpkdH09Um4oKTtyZXR1cm4gZHQ+RGF0ZS5ub3coKX19ZnVuY3Rpb24gbXIoS2Upe2xldCBkdD1LZS5fY29udGV4dC5jb25maWc7ZHQuZXJyb3JIYW5kbGVyPW0uaW52b2tlQ3JlYXRlRXJyb3JIYW5kbGVyKEtlLEluKSxIcihkdC5vcHRpb25NZXJnZVN0cmF0ZWdpZXMpO2xldCB3dD1kdC5nbG9iYWxQcm9wZXJ0aWVzO3huKHd0KSx3dC4kc2V0PUh0LHd0LiRhcHBseU9wdGlvbnM9Y24sbS5pbnZva2VDcmVhdGVWdWVBcHBIb29rKEtlKX1yZXR1cm4gZC5pbml0QXBwPW1yLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxkfSh7fSxiLGssVCk7cmV0dXJuIEN9ZnVuY3Rpb24gb2Yodix7bnZ1ZTpsLFVuaVNoYXJlZDpiLFZ1ZVNoYXJlZDpULFZ1ZVJlYWN0aXZpdHk6a30pe2xldCBDPXtwbGF0Zm9ybTpsLmNvbmZpZy5lbnYucGxhdGZvcm0sVW5pU2hhcmVkOmIsVnVlU2hhcmVkOlQsVnVlUmVhY3Rpdml0eTprfTtyZXR1cm4gdihDLGwuZG9jdW1lbnQpfWZ1bmN0aW9uIFpJKHtzZXRUaW1lb3V0OnYsY2xlYXJUaW1lb3V0OmwsdW5pOmIsZ2V0Q3VycmVudFBhZ2VzOlQsVnVlOmssd2VleDpDLHBsdXM6ZCxCcm9hZGNhc3RDaGFubmVsOm0sVW5pVmlld0pTQnJpZGdlOlIsVnVlU2hhcmVkOldlLFVuaVNoYXJlZDpQdH0pe3ZhciBRdD1mdW5jdGlvbihPLGllLFRuKXsidXNlIHN0cmljdCI7bGV0IHFuPVsibmF2aWdhdGUiLCJyZWRpcmVjdCIsInN3aXRjaFRhYiIsInJlTGF1bmNoIiwibmF2aWdhdGVCYWNrIl0sbXQ9WyJzbGlkZS1pbi1yaWdodCIsInNsaWRlLWluLWxlZnQiLCJzbGlkZS1pbi10b3AiLCJzbGlkZS1pbi1ib3R0b20iLCJmYWRlLWluIiwiem9vbS1vdXQiLCJ6b29tLWZhZGUtb3V0IiwicG9wLWluIiwibm9uZSJdLEo9WyJzbGlkZS1vdXQtcmlnaHQiLCJzbGlkZS1vdXQtbGVmdCIsInNsaWRlLW91dC10b3AiLCJzbGlkZS1vdXQtYm90dG9tIiwiZmFkZS1vdXQiLCJ6b29tLWluIiwiem9vbS1mYWRlLWluIiwicG9wLW91dCIsIm5vbmUiXSxyZT17aG92ZXJDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDoibmF2aWdhdG9yLWhvdmVyIn0sdXJsOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxvcGVuVHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoibmF2aWdhdGUiLHZhbGlkYXRvcih5KXtyZXR1cm4gQm9vbGVhbih+cW4uaW5kZXhPZih5KSl9fSxkZWx0YTp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSxob3ZlclN0YXJ0VGltZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo1MH0saG92ZXJTdGF5VGltZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo2MDB9LGV4aXN0czp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0saG92ZXJTdG9wUHJvcGFnYXRpb246e3R5cGU6Qm9vbGVhbixkZWZhdWx0OiExfSxhbmltYXRpb25UeXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIiLHZhbGlkYXRvcih5KXtyZXR1cm4heXx8bXQuY29uY2F0KEopLmluY2x1ZGVzKHkpfX0sYW5pbWF0aW9uRHVyYXRpb246e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6MzAwfX07ZnVuY3Rpb24gTG4oeSl7cmV0dXJuKCk9PntpZih5Lm9wZW5UeXBlIT09Im5hdmlnYXRlQmFjayImJiF5LnVybCl7Y29uc29sZS5lcnJvcigiPG5hdmlnYXRvci8+IHNob3VsZCBoYXZlIHVybCBhdHRyaWJ1dGUgd2hlbiB1c2luZyBuYXZpZ2F0ZVRvLCByZWRpcmVjdFRvLCByZUxhdW5jaCBvciBzd2l0Y2hUYWIiKTtyZXR1cm59bGV0IEQ9cGFyc2VJbnQoeS5hbmltYXRpb25EdXJhdGlvbik7c3dpdGNoKHkub3BlblR5cGUpe2Nhc2UibmF2aWdhdGUiOmIubmF2aWdhdGVUbyh7dXJsOnkudXJsLGFuaW1hdGlvblR5cGU6eS5hbmltYXRpb25UeXBlfHwicG9wLWluIixhbmltYXRpb25EdXJhdGlvbjpEfSk7YnJlYWs7Y2FzZSJyZWRpcmVjdCI6Yi5yZWRpcmVjdFRvKHt1cmw6eS51cmwsZXhpc3RzOnkuZXhpc3RzfSk7YnJlYWs7Y2FzZSJzd2l0Y2hUYWIiOmIuc3dpdGNoVGFiKHt1cmw6eS51cmx9KTticmVhaztjYXNlInJlTGF1bmNoIjpiLnJlTGF1bmNoKHt1cmw6eS51cmx9KTticmVhaztjYXNlIm5hdmlnYXRlQmFjayI6Yi5uYXZpZ2F0ZUJhY2soe2RlbHRhOnkuZGVsdGEsYW5pbWF0aW9uVHlwZTp5LmFuaW1hdGlvblR5cGV8fCJwb3Atb3V0IixhbmltYXRpb25EdXJhdGlvbjpEfSk7YnJlYWt9fX1mdW5jdGlvbiBjbih5KXtpZih5LmhvdmVyQ2xhc3MmJnkuaG92ZXJDbGFzcyE9PSJub25lIil7bGV0IEQ9e2hvdmVyQ2xhc3M6eS5ob3ZlckNsYXNzfTtyZXR1cm4gaWUuaGFzT3duKHksImhvdmVyU3RhcnRUaW1lIikmJihELmhvdmVyU3RhcnRUaW1lPXkuaG92ZXJTdGFydFRpbWUpLGllLmhhc093bih5LCJob3ZlclN0YXlUaW1lIikmJihELmhvdmVyU3RheVRpbWU9eS5ob3ZlclN0YXlUaW1lKSxpZS5oYXNPd24oeSwiaG92ZXJTdG9wUHJvcGFnYXRpb24iKSYmKEQuaG92ZXJTdG9wUHJvcGFnYXRpb249eS5ob3ZlclN0b3BQcm9wYWdhdGlvbiksRH1yZXR1cm57fX1mdW5jdGlvbiBIdCh5LEQpe3JldHVybiBPLmNyZWF0ZUVsZW1lbnRWTm9kZSgidS10ZXh0IixpZS5leHRlbmQoe2FwcGVuZEFzVHJlZTohMH0sRCkseSl9bGV0IEluPVt7Im5hdmlnYXRvci1ob3ZlciI6eyIiOntiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMC4xKSIsb3BhY2l0eTouN319fV0sUnI9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6Ik5hdmlnYXRvciIscHJvcHM6cmUsc3R5bGVzOkluLHNldHVwKHkse3Nsb3RzOkR9KXtsZXQgRz1Mbih5KTtyZXR1cm4oKT0+Ty5jcmVhdGVWTm9kZSgidmlldyIsTy5tZXJnZVByb3BzKGNuKHkpLHtvbkNsaWNrOkd9KSxbRC5kZWZhdWx0JiZELmRlZmF1bHQoKV0pfX0pO2Z1bmN0aW9uIEhyKHkpe3JldHVybiBTeW1ib2woeSl9ZnVuY3Rpb24gcnIoKXtsZXQgeTt0cnl7eT1PLmdldEN1cnJlbnRJbnN0YW5jZSgpLnJvb3QucHJveHkuJHBhZ2UuaWR9Y2F0Y2goRCl7bGV0IEc9ZC53ZWJ2aWV3LmN1cnJlbnRXZWJ2aWV3KCkuaWQ7eT1pc05hTihOdW1iZXIoRykpP0c6TnVtYmVyKEcpfXJldHVybiB5fWxldCBubixqdCxnbjtmdW5jdGlvbiBSbigpe3JldHVybiB0eXBlb2Ygd2luZG93PT0ib2JqZWN0IiYmdHlwZW9mIG5hdmlnYXRvcj09Im9iamVjdCImJnR5cGVvZiBkb2N1bWVudD09Im9iamVjdCI/IndlYnZpZXciOiJ2OCJ9ZnVuY3Rpb24geG4oKXtyZXR1cm4gbm4ud2Vidmlldy5jdXJyZW50V2VidmlldygpLmlkfWxldCBtcixLZSxkdD17fTtmdW5jdGlvbiB3dCh5KXtsZXQgRD15LmRhdGEmJnkuZGF0YS5fX21lc3NhZ2U7aWYoIUR8fCFELl9fcGFnZSlyZXR1cm47bGV0IEc9RC5fX3BhZ2UsVT1kdFtHXTtVJiZVKEQpLEQua2VlcHx8ZGVsZXRlIGR0W0ddfWZ1bmN0aW9uIHJuKHksRCl7Um4oKT09PSJ2OCI/Z24/KG1yJiZtci5jbG9zZSgpLG1yPW5ldyBnbih4bigpKSxtci5vbm1lc3NhZ2U9d3QpOktlfHwoS2U9anQucmVxdWlyZU1vZHVsZSgiZ2xvYmFsRXZlbnQiKSxLZS5hZGRFdmVudExpc3RlbmVyKCJwbHVzTWVzc2FnZSIsd3QpKTp3aW5kb3cuX19wbHVzTWVzc2FnZT13dCxkdFt5XT1EfWNsYXNzIE5ue2NvbnN0cnVjdG9yKEQpe3RoaXMud2Vidmlldz1EfXNlbmRNZXNzYWdlKEQpe2xldCBHPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoe19fbWVzc2FnZTp7ZGF0YTpEfX0pKSxVPXRoaXMud2Vidmlldy5pZDtnbj9uZXcgZ24oVSkucG9zdE1lc3NhZ2UoRyk6bm4ud2Vidmlldy5wb3N0TWVzc2FnZVRvVW5pTlZpZXcmJm5uLndlYnZpZXcucG9zdE1lc3NhZ2VUb1VuaU5WaWV3KEcsVSl9Y2xvc2UoKXt0aGlzLndlYnZpZXcuY2xvc2UoKX19ZnVuY3Rpb24gSnQoe2NvbnRleHQ6eT17fSx1cmw6RCxkYXRhOkc9e30sc3R5bGU6VT17fSxvbk1lc3NhZ2U6USxvbkNsb3NlOmVlfSl7bGV0IHBlPV9fdW5pQ29uZmlnLmRhcmttb2RlO25uPXkucGx1c3x8ZCxqdD15LndlZXh8fCh0eXBlb2YgQz09Im9iamVjdCI/QzpudWxsKSxnbj15LkJyb2FkY2FzdENoYW5uZWx8fCh0eXBlb2YgbT09Im9iamVjdCI/bTpudWxsKTtsZXQgQ2U9e2F1dG9CYWNrQnV0dG9uOiEwLHRpdGxlU2l6ZToiMTdweCJ9LFNlPWBwYWdlJHtEYXRlLm5vdygpfWA7VT1pZS5leHRlbmQoe30sVSksVS50aXRsZU5WaWV3IT09ITEmJlUudGl0bGVOVmlldyE9PSJub25lIiYmKFUudGl0bGVOVmlldz1pZS5leHRlbmQoQ2UsVS50aXRsZU5WaWV3KSk7bGV0IEllPXt0b3A6MCxib3R0b206MCx1c2luZ0NvbXBvbmVudHM6e30scG9wR2VzdHVyZToiY2xvc2UiLHNjcm9sbEluZGljYXRvcjoibm9uZSIsYW5pbWF0aW9uVHlwZToicG9wLWluIixhbmltYXRpb25EdXJhdGlvbjoyMDAsdW5pTlZpZXc6e3BhdGg6YC8ke0R9LmpzYCxkZWZhdWx0Rm9udFNpemU6MTYsdmlld3BvcnQ6bm4uc2NyZWVuLnJlc29sdXRpb25XaWR0aH19O1U9aWUuZXh0ZW5kKEllLFUpO2xldCBiZT1ubi53ZWJ2aWV3LmNyZWF0ZSgiIixTZSxVLHtleHRyYXM6e2Zyb206eG4oKSxydW50aW1lOlJuKCksZGF0YTppZS5leHRlbmQoe30sRyx7ZGFya21vZGU6cGV9KSx1c2VHbG9iYWxFdmVudDohZ259fSk7cmV0dXJuIGJlLmFkZEV2ZW50TGlzdGVuZXIoImNsb3NlIixlZSkscm4oU2UsSGU9PntpZS5pc0Z1bmN0aW9uKFEpJiZRKEhlLmRhdGEpLEhlLmtlZXB8fGJlLmNsb3NlKCJhdXRvIil9KSxiZS5zaG93KFUuYW5pbWF0aW9uVHlwZSxVLmFuaW1hdGlvbkR1cmF0aW9uKSxuZXcgTm4oYmUpfWxldCBGbj17Zm9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifX0saXI9SHIoInVsIik7ZnVuY3Rpb24geGkoKXtsZXQgeT1bXTtyZXR1cm4gTy5wcm92aWRlKGlyLHthZGRIYW5kbGVyKEQpe3kucHVzaChEKX0scmVtb3ZlSGFuZGxlcihEKXt5LnNwbGljZSh5LmluZGV4T2YoRCksMSl9fSkseX1sZXQgQmk9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IkxhYmVsIixwcm9wczpGbixzdHlsZXM6W10sc2V0dXAoeSx7c2xvdHM6RH0pe2xldCBHPXJyKCksVT14aSgpLFE9ZWU9Pnt5LmZvcj9SLmVtaXQoYHVuaS1sYWJlbC1jbGljay0ke0d9LSR7eS5mb3J9YCxlZSwhMCk6VS5sZW5ndGgmJlVbMF0oZWUsITApfTtyZXR1cm4oKT0+Ty5jcmVhdGVWTm9kZSgidmlldyIse29uQ2xpY2s6UX0sW0QuZGVmYXVsdCYmRC5kZWZhdWx0KCldKX19KTtmdW5jdGlvbiBqbih5LEQpe2pyKHkuaWQsRCksTy53YXRjaCgoKT0+eS5pZCwoRyxVKT0+e01pKFUsRCwhMCksanIoRyxELCEwKX0pLE8ub25Vbm1vdW50ZWQoKCk9PntNaSh5LmlkLEQpfSl9ZnVuY3Rpb24ganIoeSxELEcpe2xldCBVPXJyKCk7RyYmIXl8fCFpZS5pc1BsYWluT2JqZWN0KEQpfHxPYmplY3Qua2V5cyhEKS5mb3JFYWNoKFE9PntHP1EuaW5kZXhPZigiQCIpIT09MCYmUS5pbmRleE9mKCJ1bmktIikhPT0wJiZSLm9uKGB1bmktJHtRfS0ke1V9LSR7eX1gLERbUV0pOlEuaW5kZXhPZigidW5pLSIpPT09MD9SLm9uKFEsRFtRXSk6eSYmUi5vbihgdW5pLSR7UX0tJHtVfS0ke3l9YCxEW1FdKX0pfWZ1bmN0aW9uIE1pKHksRCxHKXtsZXQgVT1ycigpO0cmJiF5fHwhaWUuaXNQbGFpbk9iamVjdChEKXx8T2JqZWN0LmtleXMoRCkuZm9yRWFjaChRPT57Rz9RLmluZGV4T2YoIkAiKSE9PTAmJlEuaW5kZXhPZigidW5pLSIpIT09MCYmUi5vZmYoYHVuaS0ke1F9LSR7VX0tJHt5fWAsRFtRXSk6US5pbmRleE9mKCJ1bmktIik9PT0wP1Iub2ZmKFEsRFtRXSk6eSYmUi5vZmYoYHVuaS0ke1F9LSR7VX0tJHt5fWAsRFtRXSl9KX1mdW5jdGlvbiBwYSh5KXtyZXR1cm4gT2JqZWN0LmtleXMoeSkubWFwKEQ9PltELHlbRF1dKX1sZXQgSm89WyJjbGFzcyIsInN0eWxlIl0seHI9L15vbltBLVpdKy8sQnI9KHk9e30pPT57bGV0e2V4Y2x1ZGVMaXN0ZW5lcnM6RD0hMSxleGNsdWRlS2V5czpHPVtdfT15LFU9Ty5nZXRDdXJyZW50SW5zdGFuY2UoKSxRPU8uc2hhbGxvd1JlZih7fSksZWU9Ty5zaGFsbG93UmVmKHt9KSxwZT1PLnNoYWxsb3dSZWYoe30pLENlPUcuY29uY2F0KEpvKTtyZXR1cm4gVS5hdHRycz1PLnJlYWN0aXZlKFUuYXR0cnMpLE8ud2F0Y2hFZmZlY3QoKCk9PntsZXQgU2U9cGEoVS5hdHRycykucmVkdWNlKChJZSxbYmUsSGVdKT0+KENlLmluY2x1ZGVzKGJlKT9JZS5leGNsdWRlW2JlXT1IZTp4ci50ZXN0KGJlKT8oRHx8KEllLmF0dHJzW2JlXT1IZSksSWUubGlzdGVuZXJzW2JlXT1IZSk6SWUuYXR0cnNbYmVdPUhlLEllKSx7ZXhjbHVkZTp7fSxhdHRyczp7fSxsaXN0ZW5lcnM6e319KTtRLnZhbHVlPVNlLmF0dHJzLGVlLnZhbHVlPVNlLmxpc3RlbmVycyxwZS52YWx1ZT1TZS5leGNsdWRlfSkseyRhdHRyczpRLCRsaXN0ZW5lcnM6ZWUsJGV4Y2x1ZGVBdHRyczpwZX19LE1yPXtpZDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0saG92ZXJDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiYnV0dG9uLWhvdmVyIn0saG92ZXJTdGFydFRpbWU6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MjB9LGhvdmVyU3RheVRpbWU6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NzB9LGhvdmVyU3RvcFByb3BhZ2F0aW9uOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDohMX0sZGlzYWJsZWQ6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxmb3JtVHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sb3BlblR5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LGxvYWRpbmc6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxwbGFpbjp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9fSxmcj1IcigidWYiKSxnYT1be3ViOnsiIjp7ZmxleERpcmVjdGlvbjoicm93IixhbGlnbkl0ZW1zOiJjZW50ZXIiLGp1c3RpZnlDb250ZW50OiJjZW50ZXIiLHBvc2l0aW9uOiJyZWxhdGl2ZSIscGFkZGluZ0xlZnQ6IjUiLHBhZGRpbmdSaWdodDoiNSIsb3ZlcmZsb3c6ImhpZGRlbiIsY29sb3I6IiMwMDAwMDAiLGJhY2tncm91bmRDb2xvcjoiI2Y4ZjhmOCIsYm9yZGVyUmFkaXVzOiI1Iixib3JkZXJTdHlsZToic29saWQiLGJvcmRlcldpZHRoOiIxIixib3JkZXJDb2xvcjoiI2RiZGJkYiJ9fSwidWItdCI6eyIiOntjb2xvcjoiIzAwMDAwMCIsZm9udFNpemU6IjE4Iix0ZXh0RGVjb3JhdGlvbjoibm9uZSIsbGluZUhlaWdodDoiNDYifX0sInViLWQiOnsiIjp7YmFja2dyb3VuZENvbG9yOiIjZjhmOGY4In19LCJ1Yi1wIjp7IiI6e2JhY2tncm91bmRDb2xvcjoiIzAwN2FmZiIsYm9yZGVyQ29sb3I6IiMwMDYyY2MifX0sInViLXciOnsiIjp7YmFja2dyb3VuZENvbG9yOiIjZTY0MzQwIixib3JkZXJDb2xvcjoiI2I4MzYzMyJ9fSwidWItZC10Ijp7IiI6e2NvbG9yOiIjMDAwMDAwIn19LCJ1Yi1wLXQiOnsiIjp7Y29sb3I6IiNmZmZmZmYifX0sInViLXctdCI6eyIiOntjb2xvcjoiI2ZmZmZmZiJ9fSwidWItZC1kIjp7IiI6e2JhY2tncm91bmRDb2xvcjoiI2Y3ZjdmNyJ9fSwidWItcC1kIjp7IiI6e2JhY2tncm91bmRDb2xvcjoiIzYzYWNmYyIsYm9yZGVyQ29sb3I6IiM0ZjhhY2EifX0sInViLXctZCI6eyIiOntiYWNrZ3JvdW5kQ29sb3I6IiNlYzhiODkiLGJvcmRlckNvbG9yOiIjYmQ2ZjZlIn19LCJ1Yi1kLXQtZCI6eyIiOntjb2xvcjoiI2NjY2NjYyJ9fSwidWItcC10LWQiOnsiIjp7Y29sb3I6InJnYmEoMjU1LDI1NSwyNTUsMC42KSJ9fSwidWItdy10LWQiOnsiIjp7Y29sb3I6InJnYmEoMjU1LDI1NSwyNTUsMC42KSJ9fSwidWItZC1wbGFpbiI6eyIiOntib3JkZXJDb2xvcjoiIzM1MzUzNSIsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIn19LCJ1Yi1wLXBsYWluIjp7IiI6e2JvcmRlckNvbG9yOiIjMDA3YWZmIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkifX0sInViLXctcGxhaW4iOnsiIjp7Ym9yZGVyQ29sb3I6IiNlNjQzNDAiLGJhY2tncm91bmRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fSwidWItZC10LXBsYWluIjp7IiI6e2NvbG9yOiIjMzUzNTM1In19LCJ1Yi1wLXQtcGxhaW4iOnsiIjp7Y29sb3I6IiMwMDdhZmYifX0sInViLXctdC1wbGFpbiI6eyIiOntjb2xvcjoiI2U2NDM0MCJ9fSwidWItZC1kLXBsYWluIjp7IiI6e2JvcmRlckNvbG9yOiIjYzZjNmM2IixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkifX0sInViLXAtZC1wbGFpbiI6eyIiOntib3JkZXJDb2xvcjoiI2M2YzZjNiIsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIn19LCJ1Yi13LWQtcGxhaW4iOnsiIjp7Ym9yZGVyQ29sb3I6IiNjNmM2YzYiLGJhY2tncm91bmRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fSwidWItZC10LWQtcGxhaW4iOnsiIjp7Y29sb3I6InJnYmEoMCwwLDAsMC4yKSJ9fSwidWItcC10LWQtcGxhaW4iOnsiIjp7Y29sb3I6InJnYmEoMCwwLDAsMC4yKSJ9fSwidWItdy10LWQtcGxhaW4iOnsiIjp7Y29sb3I6InJnYmEoMCwwLDAsMC4yKSJ9fSwidWItbWluaSI6eyIiOntsaW5lSGVpZ2h0OiIzMCIsZm9udFNpemU6IjEzIixwYWRkaW5nVG9wOjAscGFkZGluZ1JpZ2h0OiIxNy41IixwYWRkaW5nQm90dG9tOjAscGFkZGluZ0xlZnQ6IjE3LjUifX0sInViLWxvYWRpbmciOnsiIjp7d2lkdGg6IjE4IixoZWlnaHQ6IjE4IixtYXJnaW5SaWdodDoiMTAifX0sInViLWQtbG9hZGluZyI6eyIiOntjb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjYpIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkifX0sInViLXAtbG9hZGluZyI6eyIiOntjb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjYpIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkifX0sInViLXctbG9hZGluZyI6eyIiOntjb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjYpIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkifX0sInViLWQtbG9hZGluZy1wbGFpbiI6eyIiOntjb2xvcjoiIzM1MzUzNSJ9fSwidWItcC1sb2FkaW5nLXBsYWluIjp7IiI6e2NvbG9yOiIjMDA3YWZmIixiYWNrZ3JvdW5kQ29sb3I6IiMwMDYyY2MifX0sInViLXctbG9hZGluZy1wbGFpbiI6eyIiOntjb2xvcjoiI2U2NDM0MCIsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIn19LCJ1Yi1kLWhvdmVyIjp7IiI6e29wYWNpdHk6LjgsYmFja2dyb3VuZENvbG9yOiIjZGVkZWRlIn19LCJ1Yi1wLWhvdmVyIjp7IiI6e29wYWNpdHk6LjgsYmFja2dyb3VuZENvbG9yOiIjMDA2MmNjIn19LCJ1Yi13LWhvdmVyIjp7IiI6e29wYWNpdHk6LjgsYmFja2dyb3VuZENvbG9yOiIjY2UzYzM5In19LCJ1Yi1kLXQtaG92ZXIiOnsiIjp7Y29sb3I6InJnYmEoMCwwLDAsMC42KSJ9fSwidWItcC10LWhvdmVyIjp7IiI6e2NvbG9yOiJyZ2JhKDI1NSwyNTUsMjU1LDAuNikifX0sInViLXctdC1ob3ZlciI6eyIiOntjb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjYpIn19LCJ1Yi1kLWhvdmVyLXBsYWluIjp7IiI6e2NvbG9yOiJyZ2JhKDUzLDUzLDUzLDAuNikiLGJvcmRlckNvbG9yOiJyZ2JhKDUzLDUzLDUzLDAuNikiLGJhY2tncm91bmRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fSwidWItcC1ob3Zlci1wbGFpbiI6eyIiOntjb2xvcjoicmdiYSgyNiwxNzMsMjUsMC42KSIsYm9yZGVyQ29sb3I6InJnYmEoMCwxMjIsMjU1LDAuNikiLGJhY2tncm91bmRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fSwidWItdy1ob3Zlci1wbGFpbiI6eyIiOntjb2xvcjoicmdiYSgyMzAsNjcsNjQsMC42KSIsYm9yZGVyQ29sb3I6InJnYmEoMjMwLDY3LDY0LDAuNikiLGJhY2tncm91bmRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fX1dLFpvPXtkZWZhdWx0OiJkIixwcmltYXJ5OiJwIix3YXJuOiJ3In0saG89Ty5kZWZpbmVDb21wb25lbnQoe2luaGVyaXRBdHRyczohMSxuYW1lOiJCdXR0b24iLHByb3BzOmllLmV4dGVuZChNcix7dHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiZGVmYXVsdCJ9LHNpemU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6ImRlZmF1bHQifX0pLHN0eWxlczpnYSxzZXR1cCh5LHtzbG90czpELGF0dHJzOkd9KXtsZXR7JGF0dHJzOlUsJGV4Y2x1ZGVBdHRyczpRLCRsaXN0ZW5lcnM6ZWV9PUJyKHtleGNsdWRlTGlzdGVuZXJzOiEwfSkscGU9eS50eXBlLENlPU8ucmVmKG51bGwpLFNlPU8uaW5qZWN0KGZyLCExKSxJZT0oRXQsaHQpPT57bGV0IHV0PWVlLnZhbHVlLm9uQ2xpY2t8fCgoKT0+e30pO2lmKHkuZGlzYWJsZWQpcmV0dXJuO3V0KEV0KTtsZXQgaG49eS5mb3JtVHlwZTtpZihobil7aWYoIVNlKXJldHVybjtobj09PSJzdWJtaXQiP1NlLnN1Ym1pdChFdCk6aG49PT0icmVzZXQiJiZTZS5yZXNldChFdCl9fSxiZT1FdD0+e2xldCBodD0idWItIitab1twZV0rRXQ7cmV0dXJuIHkuZGlzYWJsZWQmJihodCs9Ii1kIikseS5wbGFpbiYmKGh0Kz0iLXBsYWluIikseS5zaXplPT09Im1pbmkiJiZFdD09PSItdCImJihodCs9IiB1Yi1taW5pIiksaHR9LEhlPUV0PT57aWYoeS5kaXNhYmxlZClyZXR1cm4iIjtsZXQgaHQ9InViLSIrWm9bcGVdK0V0KyItaG92ZXIiO3JldHVybiB5LnBsYWluJiYoaHQrPSItcGxhaW4iKSxodH0sX3Q9Ty5pbmplY3QoaXIsITEpO190JiYoX3QuYWRkSGFuZGxlcihJZSksTy5vbkJlZm9yZVVubW91bnQoKCk9PntfdC5yZW1vdmVIYW5kbGVyKEllKX0pKSxqbih5LHsibGFiZWwtY2xpY2siOkllfSk7bGV0IE50PU8uY29tcHV0ZWQoKCk9PntsZXQgRXQ9e307Zm9yKGxldCBodCBpbiBlZS52YWx1ZSl7bGV0IHV0PWVlLnZhbHVlW2h0XTtodCE9PSJvbkNsaWNrIiYmKEV0W2h0XT11dCl9cmV0dXJuIEV0fSksV3Q9KCk9PntpZighRC5kZWZhdWx0KXJldHVybltdO2xldCBFdD1ELmRlZmF1bHQoKTtyZXR1cm4gRXQubGVuZ3RoPT09MSYmRXRbMF0udHlwZT09PU8uVGV4dD9bSHQoRXRbMF0uY2hpbGRyZW4se2NsYXNzOiJ1Yi10ICIrYmUoIi10Iil9KV06RXR9O3JldHVybigpPT57bGV0IEV0PWllLmV4dGVuZCh7fSxjbih5KSx7aG92ZXJDbGFzczpIZSgiIil9LFUudmFsdWUsUS52YWx1ZSxOdC52YWx1ZSk7cmV0dXJuIE8uY3JlYXRlVk5vZGUoInZpZXciLE8ubWVyZ2VQcm9wcyh7cmVmOkNlLGNsYXNzOlsidWIiLGJlKCIiKV0sb25DbGljazpJZX0sRXQpLFt5LmxvYWRpbmc/Ty5jcmVhdGVWTm9kZSgibG9hZGluZy1pbmRpY2F0b3IiLE8ubWVyZ2VQcm9wcyh7Y2xhc3M6WyJ1Yi1sb2FkaW5nIixgdWItJHtab1twZV19LWxvYWRpbmdgXX0se2Fycm93OiJmYWxzZSIsYW5pbWF0aW5nOiJ0cnVlIn0pLG51bGwpOm51bGwsLi4uV3QoKV0pfX19KSxwbz17c2NhbGVBcmVhOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDohMX19O2Z1bmN0aW9uIGdvKHkpe2xldCBEPVtdO3JldHVybiBpZS5pc0FycmF5KHkpJiZ5LmZvckVhY2goRz0+e08uaXNWTm9kZShHKT9HLnR5cGU9PT1PLkZyYWdtZW50P0QucHVzaCguLi5nbyhHLmNoaWxkcmVuKSk6RC5wdXNoKEcpOmllLmlzQXJyYXkoRykmJkQucHVzaCguLi5nbyhHKSl9KSxEfWZ1bmN0aW9uIHZhKHkpe2xldCBEPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGZ1bmN0aW9uKFUpe3JldHVybiBEW1VdfHwoRFtVXT15KFUpKX19bGV0IEJvPXZhKGZ1bmN0aW9uKHkpe2xldCBEPXt9LEc9LzsoPyFbXihdKlwpKS9nLFU9LzooLispLztyZXR1cm4geS5zcGxpdChHKS5mb3JFYWNoKGZ1bmN0aW9uKFEpe2lmKFEpe2xldCBlZT1RLnNwbGl0KFUpO2VlLmxlbmd0aD4xJiYoRFtlZVswXS50cmltKCldPWVlWzFdLnRyaW0oKSl9fSksRH0pLEtuPXk9Pm5ldyBQcm9taXNlKChELEcpPT57aWYoIXkpcmV0dXJuIEQoe3dpZHRoOjAsaGVpZ2h0OjAsdG9wOjAsbGVmdDowfSk7Qy5yZXF1aXJlTW9kdWxlKCJkb20iKS5nZXRDb21wb25lbnRSZWN0KHksKHtzaXplOlF9KT0+e0QoUSl9KX0pLF9yPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJNb3ZhYmxlQXJlYSIscHJvcHM6cG8sc3R5bGVzOlt7InVuaS1tb3ZhYmxlLWFyZWEiOnsiIjp7b3ZlcmZsb3c6ImhpZGRlbiIsd2lkdGg6IjEwcHgiLGhlaWdodDoiMTBweCJ9fX1dLHNldHVwKHkse3Nsb3RzOkR9KXtsZXQgRz1PLnJlZigwKSxVPU8ucmVmKDApLFE9Ty5yZWYoMCksZWU9Ty5yZWYoMCkscGU9Ty5yZWYoITEpLENlPU8ucmVmKG51bGwpLFNlPVtdLEllPW51bGwsYmU9aHQ9PntJZT1odH0sSGU9KCk9PktuKENlLnZhbHVlKS50aGVuKCh7d2lkdGg6aHQsaGVpZ2h0OnV0LHRvcDpobixsZWZ0OkNufSk9PntHLnZhbHVlPWh0LFUudmFsdWU9dXQsUS52YWx1ZT1obixlZS52YWx1ZT1Dbn0pLF90PSgpPT57SGUoKS50aGVuKCgpPT57U2UuZm9yRWFjaChmdW5jdGlvbihodCl7aHQuc2V0UGFyZW50KCl9KX0pfTtPLm9uTW91bnRlZCgoKT0+e3YoKCk9PntwZS52YWx1ZT0hMCxfdCgpfSwyMDApfSk7bGV0IE50PXtvblBhbnN0YXJ0KGh0KXtJZSYmSWUudG91Y2hzdGFydChodCl9LG9uUGFubW92ZShodCl7aHQuc3RvcFByb3BhZ2F0aW9uKCksSWUmJkllLnRvdWNobW92ZShodCl9LG9uUGFuZW5kKGh0KXtJZSYmSWUudG91Y2hlbmQoaHQpLEllPW51bGx9fSxXdD1odD0+e1NlLnB1c2goaHQpfSxFdD1odD0+e2xldCB1dD1TZS5pbmRleE9mKGh0KTt1dD49MCYmU2Uuc3BsaWNlKHV0LDEpfTtyZXR1cm4gTy5wcm92aWRlKCJfaXNNb3VudGVkIixwZSksTy5wcm92aWRlKCJwYXJlbnRTaXplIix7d2lkdGg6RyxoZWlnaHQ6VSx0b3A6USxsZWZ0OmVlfSksTy5wcm92aWRlKCJhZGRNb3ZhYmxlVmlld0NvbnRleHQiLFd0KSxPLnByb3ZpZGUoInJlbW92ZU1vdmFibGVWaWV3Q29udGV4dCIsRXQpLE8ucHJvdmlkZSgic2V0VG91Y2hNb3ZhYmxlVmlld0NvbnRleHQiLGJlKSwoKT0+e2xldCBodD1ELmRlZmF1bHQmJkQuZGVmYXVsdCgpLHV0PWdvKGh0KTtyZXR1cm4gTy5jcmVhdGVWTm9kZSgidmlldyIsTy5tZXJnZVByb3BzKHtyZWY6Q2UsY2xhc3M6InVuaS1tb3ZhYmxlLWFyZWEifSxOdCksW3V0XSl9fX0pO2Z1bmN0aW9uIGRyKHkpe2xldCBEPXt9O2Z1bmN0aW9uIEcoYmUsSGUpe0RbYmVdJiZEW2JlXShIZSl9ZnVuY3Rpb24gVShiZSxIZSl7RFtiZV09ZnVuY3Rpb24oX3Qpe2llLmlzRnVuY3Rpb24oSGUpJiYoX3QudG91Y2hlcz1fdC5jaGFuZ2VkVG91Y2hlcyxIZShfdCk9PT0hMSYmX3Quc3RvcFByb3BhZ2F0aW9uKCkpfX1sZXQgUT0wLGVlPTAscGU9MCxDZT0wLFNlPWZ1bmN0aW9uKGJlLEhlLF90LE50KXtpZih5KHt0YXJnZXQ6YmUudGFyZ2V0LGN1cnJlbnRUYXJnZXQ6YmUuY3VycmVudFRhcmdldCxzdG9wUHJvcGFnYXRpb246YmUuc3RvcFByb3BhZ2F0aW9uLmJpbmQoYmUpLHRvdWNoZXM6YmUudG91Y2hlcyxjaGFuZ2VkVG91Y2hlczpiZS5jaGFuZ2VkVG91Y2hlcyxkZXRhaWw6e3N0YXRlOkhlLHg6X3QseTpOdCxkeDpfdC1RLGR5Ok50LWVlLGRkeDpfdC1wZSxkZHk6TnQtQ2UsdGltZVN0YW1wOmJlLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX19KT09PSExKXJldHVybiExfSxJZT1udWxsO3JldHVybiBVKCJ0b3VjaHN0YXJ0IixmdW5jdGlvbihiZSl7aWYoIUllKXJldHVybiBJZT1iZSxRPXBlPWJlLnRvdWNoZXNbMF0ucGFnZVgsZWU9Q2U9YmUudG91Y2hlc1swXS5wYWdlWSxTZShiZSwic3RhcnQiLFEsZWUpfSksVSgidG91Y2htb3ZlIixmdW5jdGlvbihiZSl7aWYoSWUpe2xldCBIZT1TZShiZSwibW92ZSIsYmUudG91Y2hlc1swXS5wYWdlWCxiZS50b3VjaGVzWzBdLnBhZ2VZKTtyZXR1cm4gcGU9YmUudG91Y2hlc1swXS5wYWdlWCxDZT1iZS50b3VjaGVzWzBdLnBhZ2VZLEhlfX0pLFUoInRvdWNoZW5kIixmdW5jdGlvbihiZSl7aWYoSWUpcmV0dXJuIEllPW51bGwsU2UoYmUsImVuZCIsYmUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVgsYmUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVkpfSkse3RvdWNoc3RhcnQ6ZnVuY3Rpb24oYmUpe0coInRvdWNoc3RhcnQiLGJlKX0sdG91Y2htb3ZlOmZ1bmN0aW9uKGJlKXtHKCJ0b3VjaG1vdmUiLGJlKX0sdG91Y2hlbmQ6ZnVuY3Rpb24oYmUpe0coInRvdWNoZW5kIixiZSl9fX1mdW5jdGlvbiBEbih5LEQpe3JldHVybihHLFUpPT57eS52YWx1ZSYmRChHLFhpKEcseS52YWx1ZSxVfHx7fSkpfX1mdW5jdGlvbiBYaSh5LEQsRz17fSl7cmV0dXJuIEQ9TW8oRCkse3R5cGU6eSx0aW1lU3RhbXA6RGF0ZS5ub3coKSx0YXJnZXQ6RCxjdXJyZW50VGFyZ2V0OkQsZGV0YWlsOkd9fWxldCBYbz1Ubi5jYWNoZVN0cmluZ0Z1bmN0aW9uKHk9PnkuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkreS5zbGljZSgxKSk7ZnVuY3Rpb24gTW8oeSl7bGV0e29mZnNldExlZnQ6RCxvZmZzZXRUb3A6R309eSxVPXkuYXR0cixRPXt9O3JldHVybiBPYmplY3Qua2V5cyhVfHx7fSkuZm9yRWFjaChlZT0+e2VlLmluZGV4T2YoImRhdGEiKT09PTAmJihRW1hvKGVlLnJlcGxhY2UoImRhdGEiLCIiKSldPVVbZWVdKX0pLHtpZDpVJiZVLmlkfHwiIixkYXRhc2V0OlEsb2Zmc2V0TGVmdDpEfHwwLG9mZnNldFRvcDpHfHwwfX1mdW5jdGlvbiBvaSh5LEQsRyl7cmV0dXJuIHk+RC1HJiZ5PEQrR31mdW5jdGlvbiBhaSh5LEQpe3JldHVybiBvaSh5LDAsRCl9ZnVuY3Rpb24gUWkoKXt9UWkucHJvdG90eXBlLng9ZnVuY3Rpb24oeSl7cmV0dXJuIE1hdGguc3FydCh5KX07ZnVuY3Rpb24gVHIoeSxEKXt0aGlzLl9tPXksdGhpcy5fZj0xZTMqRCx0aGlzLl9zdGFydFRpbWU9MCx0aGlzLl92PTB9VHIucHJvdG90eXBlLnNldFY9ZnVuY3Rpb24oeSxEKXtsZXQgRz1NYXRoLnBvdyhNYXRoLnBvdyh5LDIpK01hdGgucG93KEQsMiksLjUpO3RoaXMuX3hfdj15LHRoaXMuX3lfdj1ELHRoaXMuX3hfYT0tdGhpcy5fZip0aGlzLl94X3YvRyx0aGlzLl95X2E9LXRoaXMuX2YqdGhpcy5feV92L0csdGhpcy5fdD1NYXRoLmFicyh5L3RoaXMuX3hfYSl8fE1hdGguYWJzKEQvdGhpcy5feV9hKSx0aGlzLl9sYXN0RHQ9bnVsbCx0aGlzLl9zdGFydFRpbWU9bmV3IERhdGUoKS5nZXRUaW1lKCl9LFRyLnByb3RvdHlwZS5zZXRTPWZ1bmN0aW9uKHksRCl7dGhpcy5feF9zPXksdGhpcy5feV9zPUR9LFRyLnByb3RvdHlwZS5zPWZ1bmN0aW9uKHkpe3k9PT12b2lkIDAmJih5PShuZXcgRGF0ZSgpLmdldFRpbWUoKS10aGlzLl9zdGFydFRpbWUpLzFlMykseT50aGlzLl90JiYoeT10aGlzLl90LHRoaXMuX2xhc3REdD15KTtsZXQgRD10aGlzLl94X3YqeSsuNSp0aGlzLl94X2EqTWF0aC5wb3coeSwyKSt0aGlzLl94X3MsRz10aGlzLl95X3YqeSsuNSp0aGlzLl95X2EqTWF0aC5wb3coeSwyKSt0aGlzLl95X3M7cmV0dXJuKHRoaXMuX3hfYT4wJiZEPHRoaXMuX2VuZFBvc2l0aW9uWHx8dGhpcy5feF9hPDAmJkQ+dGhpcy5fZW5kUG9zaXRpb25YKSYmKEQ9dGhpcy5fZW5kUG9zaXRpb25YKSwodGhpcy5feV9hPjAmJkc8dGhpcy5fZW5kUG9zaXRpb25ZfHx0aGlzLl95X2E8MCYmRz50aGlzLl9lbmRQb3NpdGlvblkpJiYoRz10aGlzLl9lbmRQb3NpdGlvblkpLHt4OkQseTpHfX0sVHIucHJvdG90eXBlLmRzPWZ1bmN0aW9uKHkpe3JldHVybiB5PT09dm9pZCAwJiYoeT0obmV3IERhdGUoKS5nZXRUaW1lKCktdGhpcy5fc3RhcnRUaW1lKS8xZTMpLHk+dGhpcy5fdCYmKHk9dGhpcy5fdCkse2R4OnRoaXMuX3hfdit0aGlzLl94X2EqeSxkeTp0aGlzLl95X3YrdGhpcy5feV9hKnl9fSxUci5wcm90b3R5cGUuZGVsdGE9ZnVuY3Rpb24oKXtyZXR1cm57eDotMS41Kk1hdGgucG93KHRoaXMuX3hfdiwyKS90aGlzLl94X2F8fDAseTotMS41Kk1hdGgucG93KHRoaXMuX3lfdiwyKS90aGlzLl95X2F8fDB9fSxUci5wcm90b3R5cGUuZHQ9ZnVuY3Rpb24oKXtyZXR1cm4tdGhpcy5feF92L3RoaXMuX3hfYX0sVHIucHJvdG90eXBlLmRvbmU9ZnVuY3Rpb24oKXtsZXQgeT1vaSh0aGlzLnMoKS54LHRoaXMuX2VuZFBvc2l0aW9uWCl8fG9pKHRoaXMucygpLnksdGhpcy5fZW5kUG9zaXRpb25ZKXx8dGhpcy5fbGFzdER0PT09dGhpcy5fdDtyZXR1cm4gdGhpcy5fbGFzdER0PW51bGwseX0sVHIucHJvdG90eXBlLnNldEVuZD1mdW5jdGlvbih5LEQpe3RoaXMuX2VuZFBvc2l0aW9uWD15LHRoaXMuX2VuZFBvc2l0aW9uWT1EfSxUci5wcm90b3R5cGUucmVjb25maWd1cmU9ZnVuY3Rpb24oeSxEKXt0aGlzLl9tPXksdGhpcy5fZj0xZTMqRH07ZnVuY3Rpb24ga24oeSxELEcpe3RoaXMuX209eSx0aGlzLl9rPUQsdGhpcy5fYz1HLHRoaXMuX3NvbHV0aW9uPW51bGwsdGhpcy5fZW5kUG9zaXRpb249MCx0aGlzLl9zdGFydFRpbWU9MH1rbi5wcm90b3R5cGUuX3NvbHZlPWZ1bmN0aW9uKHksRCl7bGV0IEc9dGhpcy5fYyxVPXRoaXMuX20sUT10aGlzLl9rLGVlPUcqRy00KlUqUTtpZihlZT09PTApe2xldCBiZT0tRy8oMipVKSxIZT15LF90PUQvKGJlKnkpO3JldHVybnt4OmZ1bmN0aW9uKE50KXtyZXR1cm4oSGUrX3QqTnQpKk1hdGgucG93KE1hdGguRSxiZSpOdCl9LGR4OmZ1bmN0aW9uKE50KXtsZXQgV3Q9TWF0aC5wb3coTWF0aC5FLGJlKk50KTtyZXR1cm4gYmUqKEhlK190Kk50KSpXdCtfdCpXdH19fWlmKGVlPjApe2xldCBiZT0oLUctTWF0aC5zcXJ0KGVlKSkvKDIqVSksSGU9KC1HK01hdGguc3FydChlZSkpLygyKlUpLF90PShELWJlKnkpLyhIZS1iZSksTnQ9eS1fdDtyZXR1cm57eDpmdW5jdGlvbihXdCl7bGV0IEV0LGh0O3JldHVybiBXdD09PXRoaXMuX3QmJihFdD10aGlzLl9wb3dFUjFULGh0PXRoaXMuX3Bvd0VSMlQpLHRoaXMuX3Q9V3QsRXR8fChFdD10aGlzLl9wb3dFUjFUPU1hdGgucG93KE1hdGguRSxiZSpXdCkpLGh0fHwoaHQ9dGhpcy5fcG93RVIyVD1NYXRoLnBvdyhNYXRoLkUsSGUqV3QpKSxOdCpFdCtfdCpodH0sZHg6ZnVuY3Rpb24oV3Qpe2xldCBFdCxodDtyZXR1cm4gV3Q9PT10aGlzLl90JiYoRXQ9dGhpcy5fcG93RVIxVCxodD10aGlzLl9wb3dFUjJUKSx0aGlzLl90PVd0LEV0fHwoRXQ9dGhpcy5fcG93RVIxVD1NYXRoLnBvdyhNYXRoLkUsYmUqV3QpKSxodHx8KGh0PXRoaXMuX3Bvd0VSMlQ9TWF0aC5wb3coTWF0aC5FLEhlKld0KSksTnQqYmUqRXQrX3QqSGUqaHR9fX1sZXQgcGU9TWF0aC5zcXJ0KDQqVSpRLUcqRykvKDIqVSksQ2U9LUcvMipVLFNlPXksSWU9KEQtQ2UqeSkvcGU7cmV0dXJue3g6ZnVuY3Rpb24oYmUpe3JldHVybiBNYXRoLnBvdyhNYXRoLkUsQ2UqYmUpKihTZSpNYXRoLmNvcyhwZSpiZSkrSWUqTWF0aC5zaW4ocGUqYmUpKX0sZHg6ZnVuY3Rpb24oYmUpe2xldCBIZT1NYXRoLnBvdyhNYXRoLkUsQ2UqYmUpLF90PU1hdGguY29zKHBlKmJlKSxOdD1NYXRoLnNpbihwZSpiZSk7cmV0dXJuIEhlKihJZSpwZSpfdC1TZSpwZSpOdCkrQ2UqSGUqKEllKk50K1NlKl90KX19fSxrbi5wcm90b3R5cGUueD1mdW5jdGlvbih5KXtyZXR1cm4geT09PXZvaWQgMCYmKHk9KG5ldyBEYXRlKCkuZ2V0VGltZSgpLXRoaXMuX3N0YXJ0VGltZSkvMWUzKSx0aGlzLl9zb2x1dGlvbj90aGlzLl9lbmRQb3NpdGlvbit0aGlzLl9zb2x1dGlvbi54KHkpOjB9LGtuLnByb3RvdHlwZS5keD1mdW5jdGlvbih5KXtyZXR1cm4geT09PXZvaWQgMCYmKHk9KG5ldyBEYXRlKCkuZ2V0VGltZSgpLXRoaXMuX3N0YXJ0VGltZSkvMWUzKSx0aGlzLl9zb2x1dGlvbj90aGlzLl9zb2x1dGlvbi5keCh5KTowfSxrbi5wcm90b3R5cGUuc2V0RW5kPWZ1bmN0aW9uKHksRCxHKXtpZihHfHwoRz1uZXcgRGF0ZSgpLmdldFRpbWUoKSkseSE9PXRoaXMuX2VuZFBvc2l0aW9ufHwhYWkoRCwuMSkpe0Q9RHx8MDtsZXQgVT10aGlzLl9lbmRQb3NpdGlvbjt0aGlzLl9zb2x1dGlvbiYmKGFpKEQsLjEpJiYoRD10aGlzLl9zb2x1dGlvbi5keCgoRy10aGlzLl9zdGFydFRpbWUpLzFlMykpLFU9dGhpcy5fc29sdXRpb24ueCgoRy10aGlzLl9zdGFydFRpbWUpLzFlMyksYWkoRCwuMSkmJihEPTApLGFpKFUsLjEpJiYoVT0wKSxVKz10aGlzLl9lbmRQb3NpdGlvbiksdGhpcy5fc29sdXRpb24mJmFpKFUteSwuMSkmJmFpKEQsLjEpfHwodGhpcy5fZW5kUG9zaXRpb249eSx0aGlzLl9zb2x1dGlvbj10aGlzLl9zb2x2ZShVLXRoaXMuX2VuZFBvc2l0aW9uLEQpLHRoaXMuX3N0YXJ0VGltZT1HKX19LGtuLnByb3RvdHlwZS5zbmFwPWZ1bmN0aW9uKHkpe3RoaXMuX3N0YXJ0VGltZT1uZXcgRGF0ZSgpLmdldFRpbWUoKSx0aGlzLl9lbmRQb3NpdGlvbj15LHRoaXMuX3NvbHV0aW9uPXt4OmZ1bmN0aW9uKCl7cmV0dXJuIDB9LGR4OmZ1bmN0aW9uKCl7cmV0dXJuIDB9fX0sa24ucHJvdG90eXBlLmRvbmU9ZnVuY3Rpb24oeSl7cmV0dXJuIHl8fCh5PW5ldyBEYXRlKCkuZ2V0VGltZSgpKSxvaSh0aGlzLngoKSx0aGlzLl9lbmRQb3NpdGlvbiwuMSkmJmFpKHRoaXMuZHgoKSwuMSl9LGtuLnByb3RvdHlwZS5yZWNvbmZpZ3VyZT1mdW5jdGlvbih5LEQsRyl7dGhpcy5fbT15LHRoaXMuX2s9RCx0aGlzLl9jPUcsdGhpcy5kb25lKCl8fCh0aGlzLl9zb2x1dGlvbj10aGlzLl9zb2x2ZSh0aGlzLngoKS10aGlzLl9lbmRQb3NpdGlvbix0aGlzLmR4KCkpLHRoaXMuX3N0YXJ0VGltZT1uZXcgRGF0ZSgpLmdldFRpbWUoKSl9LGtuLnByb3RvdHlwZS5zcHJpbmdDb25zdGFudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSxrbi5wcm90b3R5cGUuZGFtcGluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jfSxrbi5wcm90b3R5cGUuY29uZmlndXJhdGlvbj1mdW5jdGlvbigpe2Z1bmN0aW9uIHkoRyxVKXtHLnJlY29uZmlndXJlKDEsVSxHLmRhbXBpbmcoKSl9ZnVuY3Rpb24gRChHLFUpe0cucmVjb25maWd1cmUoMSxHLnNwcmluZ0NvbnN0YW50KCksVSl9cmV0dXJuW3tsYWJlbDoiU3ByaW5nIENvbnN0YW50IixyZWFkOnRoaXMuc3ByaW5nQ29uc3RhbnQuYmluZCh0aGlzKSx3cml0ZTp5LmJpbmQodGhpcyx0aGlzKSxtaW46MTAwLG1heDoxZTN9LHtsYWJlbDoiRGFtcGluZyIscmVhZDp0aGlzLmRhbXBpbmcuYmluZCh0aGlzKSx3cml0ZTpELmJpbmQodGhpcyx0aGlzKSxtaW46MSxtYXg6NTAwfV19O2Z1bmN0aW9uIHZvKHksRCxHKXt0aGlzLl9zcHJpbmdYPW5ldyBrbih5LEQsRyksdGhpcy5fc3ByaW5nWT1uZXcga24oeSxELEcpLHRoaXMuX3NwcmluZ1NjYWxlPW5ldyBrbih5LEQsRyksdGhpcy5fc3RhcnRUaW1lPTB9dm8ucHJvdG90eXBlLnNldEVuZD1mdW5jdGlvbih5LEQsRyxVKXtsZXQgUT1uZXcgRGF0ZSgpLmdldFRpbWUoKTt0aGlzLl9zcHJpbmdYLnNldEVuZCh5LFUsUSksdGhpcy5fc3ByaW5nWS5zZXRFbmQoRCxVLFEpLHRoaXMuX3NwcmluZ1NjYWxlLnNldEVuZChHLFUsUSksdGhpcy5fc3RhcnRUaW1lPVF9LHZvLnByb3RvdHlwZS54PWZ1bmN0aW9uKCl7bGV0IHk9KG5ldyBEYXRlKCkuZ2V0VGltZSgpLXRoaXMuX3N0YXJ0VGltZSkvMWUzO3JldHVybnt4OnRoaXMuX3NwcmluZ1gueCh5KSx5OnRoaXMuX3NwcmluZ1kueCh5KSxzY2FsZTp0aGlzLl9zcHJpbmdTY2FsZS54KHkpfX0sdm8ucHJvdG90eXBlLmRvbmU9ZnVuY3Rpb24oKXtsZXQgeT1uZXcgRGF0ZSgpLmdldFRpbWUoKTtyZXR1cm4gdGhpcy5fc3ByaW5nWC5kb25lKHkpJiZ0aGlzLl9zcHJpbmdZLmRvbmUoeSkmJnRoaXMuX3NwcmluZ1NjYWxlLmRvbmUoeSl9LHZvLnByb3RvdHlwZS5yZWNvbmZpZ3VyZT1mdW5jdGlvbih5LEQsRyl7dGhpcy5fc3ByaW5nWC5yZWNvbmZpZ3VyZSh5LEQsRyksdGhpcy5fc3ByaW5nWS5yZWNvbmZpZ3VyZSh5LEQsRyksdGhpcy5fc3ByaW5nU2NhbGUucmVjb25maWd1cmUoeSxELEcpfTtsZXQgbW89e2RpcmVjdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoibm9uZSJ9LGluZXJ0aWE6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxvdXRPZkJvdW5kczp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LHg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0seTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDowfSxkYW1waW5nOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjIwfSxmcmljdGlvbjp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoyfSxkaXNhYmxlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LHNjYWxlOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX0sc2NhbGVNaW46e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6LjV9LHNjYWxlTWF4Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjEwfSxzY2FsZVZhbHVlOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjF9LGFuaW1hdGlvbjp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITB9fTtmdW5jdGlvbiBEbyh5LEQpe3JldHVybisoKDFlMyp5LTFlMypEKS8xZTMpLnRvRml4ZWQoMSl9ZnVuY3Rpb24gX28oeSxELEcpe2xldCBVPXtpZDowLGNhbmNlbGxlZDohMX0sUT1mdW5jdGlvbihwZSl7cGUmJnBlLmlkJiZFbihwZS5pZCkscGUmJihwZS5jYW5jZWxsZWQ9ITApfTtmdW5jdGlvbiBlZShwZSxDZSxTZSxJZSl7aWYoIXBlfHwhcGUuY2FuY2VsbGVkKXtTZShDZSk7bGV0IGJlPUNlLmRvbmUoKTtiZXx8cGUuY2FuY2VsbGVkfHwocGUuaWQ9eW4oZWUuYmluZChudWxsLHBlLENlLFNlLEllKSkpLGJlJiZJZSYmSWUoQ2UpfX1yZXR1cm4gZWUoVSx5LEQsRykse2NhbmNlbDpRLmJpbmQobnVsbCxVKSxtb2RlbDp5fX1sZXQgTG89ITE7ZnVuY3Rpb24gc2koeSl7TG98fChMbz0hMCx5bihmdW5jdGlvbigpe3koKSxMbz0hMX0pKX1mdW5jdGlvbiB5bih5KXtyZXR1cm4gdih5LDE2KX1mdW5jdGlvbiBFbih5KXtsKHkpfWxldCBsaT1DLnJlcXVpcmVNb2R1bGUoImFuaW1hdGlvbiIpLEZvPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJNb3ZhYmxlVmlldyIscHJvcHM6bW8sZW1pdHM6WyJjaGFuZ2UiLCJzY2FsZSJdLHN0eWxlczpbeyJ1bmktbW92YWJsZS12aWV3Ijp7IiI6e3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdG9wOiIwcHgiLGxlZnQ6IjBweCIsd2lkdGg6IjEwcHgiLGhlaWdodDoiMTBweCJ9fX1dLHNldHVwKHkse2VtaXQ6RCxzbG90czpHfSl7bGV0IFU9Ty5yZWYobnVsbCksUT1EbihVLEQpLGVlPU8uaW5qZWN0KCJzZXRUb3VjaE1vdmFibGVWaWV3Q29udGV4dCIsKCk9Pnt9KSxwZT1xYSh5LFEsVSxlZSk7cmV0dXJuKCk9PntsZXQgQ2U9e3ByZXZlbnRHZXN0dXJlOiEwfTtyZXR1cm4gTy5jcmVhdGVWTm9kZSgidmlldyIsTy5tZXJnZVByb3BzKHtyZWY6VSxvblRvdWNoc3RhcnQ6cGUsY2xhc3M6InVuaS1tb3ZhYmxlLXZpZXciLHN0eWxlOiJ0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7In0sQ2UpLFtHLmRlZmF1bHQmJkcuZGVmYXVsdCgpXSl9fX0pO2Z1bmN0aW9uIHFhKHksRCxHLFUpe2xldCBRPU8uaW5qZWN0KCJfaXNNb3VudGVkIixPLnJlZighMSkpLGVlPU8uaW5qZWN0KCJwYXJlbnRTaXplIix7d2lkdGg6Ty5yZWYoMCksaGVpZ2h0Ok8ucmVmKDApLHRvcDpPLnJlZigwKSxsZWZ0Ok8ucmVmKDApfSkscGU9Ty5pbmplY3QoImFkZE1vdmFibGVWaWV3Q29udGV4dCIsKCk9Pnt9KSxDZT1PLmluamVjdCgicmVtb3ZlTW92YWJsZVZpZXdDb250ZXh0IiwoKT0+e30pLFNlPXt0b3VjaHN0YXJ0OigpPT57fSx0b3VjaG1vdmU6KCk9Pnt9LHRvdWNoZW5kOigpPT57fX07ZnVuY3Rpb24gSWUoemUpe3JldHVybiBOdW1iZXIoemUpfHwwfWZ1bmN0aW9uIGJlKHplKXtyZXR1cm4gemU9TnVtYmVyKHplKSxpc05hTih6ZSk/MTp6ZX1sZXQgSGU9Ty5yZWYoSWUoeS54KSksX3Q9Ty5yZWYoSWUoeS55KSksTnQ9Ty5yZWYoYmUoTnVtYmVyKHkuc2NhbGVWYWx1ZSkpKSxXdD1PLnJlZigwKSxFdD1PLnJlZigwKSxodD1PLnJlZigwKSx1dD1PLnJlZigwKSxobj1PLnJlZigwKSxDbj1PLnJlZigwKSxDdD1udWxsLEt0PW51bGwsbHI9e3g6MCx5OjB9LGNyPXt4OjAseTowfSxHdD0xLFl0PTAsZXI9MCx5YT0hMSx5cyxFcyxsbz1udWxsLE1hPW51bGwsRGE9e3RvcDowLGxlZnQ6MCx3aWR0aDowLGhlaWdodDowfSxGaT1uZXcgUWksTGE9bmV3IFFpLHpuPXtoaXN0b3J5WDpbMCwwXSxoaXN0b3J5WTpbMCwwXSxoaXN0b3J5VDpbMCwwXX0sSG89Ty5jb21wdXRlZCgoKT0+e2xldCB6ZT1OdW1iZXIoeS5kYW1waW5nKTtyZXR1cm4gaXNOYU4oemUpPzIwOnplfSksanM9Ty5jb21wdXRlZCgoKT0+e2xldCB6ZT1OdW1iZXIoeS5mcmljdGlvbik7cmV0dXJuIGlzTmFOKHplKXx8emU8PTA/Mjp6ZX0pLGNsPU8uY29tcHV0ZWQoKCk9PntsZXQgemU9TnVtYmVyKHkuc2NhbGVNaW4pO3JldHVybiBpc05hTih6ZSk/LjU6emV9KSxqbz1PLmNvbXB1dGVkKCgpPT57bGV0IHplPU51bWJlcih5LnNjYWxlTWF4KTtyZXR1cm4gaXNOYU4oemUpPzEwOnplfSksZWk9Ty5jb21wdXRlZCgoKT0+eS5kaXJlY3Rpb249PT0iYWxsInx8eS5kaXJlY3Rpb249PT0iaG9yaXpvbnRhbCIpLCRuPU8uY29tcHV0ZWQoKCk9PnkuZGlyZWN0aW9uPT09ImFsbCJ8fHkuZGlyZWN0aW9uPT09InZlcnRpY2FsIiksVnI9bmV3IHZvKDEsOSpNYXRoLnBvdyhIby52YWx1ZSwyKS80MCxIby52YWx1ZSksVmk9bmV3IFRyKDEsanMudmFsdWUpO08ud2F0Y2goKCk9PnkueCx6ZT0+e0hlLnZhbHVlPUllKHplKX0pLE8ud2F0Y2goKCk9PnkueSx6ZT0+e190LnZhbHVlPUllKHplKX0pLE8ud2F0Y2goKCk9Pnkuc2NhbGVWYWx1ZSx6ZT0+e050LnZhbHVlPWJlKE51bWJlcih6ZSkpfSksTy53YXRjaChIZSwkaSksTy53YXRjaChfdCxXciksTy53YXRjaChOdCxVaSksTy53YXRjaChjbCxFciksTy53YXRjaChqbyxFcik7ZnVuY3Rpb24gem8oKXtLdCYmS3QuY2FuY2VsKCksQ3QmJkN0LmNhbmNlbCgpfWZ1bmN0aW9uICRpKHplKXtpZihlaS52YWx1ZSl7aWYoemUrY3IueD09PVl0KXJldHVybiBZdDtDdCYmQ3QuY2FuY2VsKCksY28oemUrY3IueCxfdC52YWx1ZStjci55LEd0KX1yZXR1cm4gemV9ZnVuY3Rpb24gV3IoemUpe2lmKCRuLnZhbHVlKXtpZih6ZStjci55PT09ZXIpcmV0dXJuIGVyO0N0JiZDdC5jYW5jZWwoKSxjbyhIZS52YWx1ZStjci54LHplK2NyLnksR3QpfXJldHVybiB6ZX1mdW5jdGlvbiBFcigpe2lmKCF5LnNjYWxlKXJldHVybiExO0VhKEd0LCEwKX1mdW5jdGlvbiBVaSh6ZSl7cmV0dXJuIHkuc2NhbGU/KHplPWlhKHplKSxFYSh6ZSwhMCksemUpOiExfWZ1bmN0aW9uIHdzKCl7eS5kaXNhYmxlZHx8KHpvKCksem4uaGlzdG9yeVg9WzAsMF0sem4uaGlzdG9yeVk9WzAsMF0sem4uaGlzdG9yeVQ9WzAsMF0sZWkudmFsdWUmJih5cz1ZdCksJG4udmFsdWUmJihFcz1lciksbG89bnVsbCxNYT1udWxsLHlhPSEwKX1mdW5jdGlvbiBwcih6ZSl7aWYoIXkuZGlzYWJsZWQmJnlhKXtsZXQgVHQ9WXQseXQ9ZXI7aWYoTWE9PT1udWxsJiYoTWE9TWF0aC5hYnMoemUuZGV0YWlsLmR4L3plLmRldGFpbC5keSk+MT8iaHRvdWNobW92ZSI6InZ0b3VjaG1vdmUiKSxlaS52YWx1ZSYmKFR0PXplLmRldGFpbC5keCt5cyx6bi5oaXN0b3J5WC5zaGlmdCgpLHpuLmhpc3RvcnlYLnB1c2goVHQpLCEkbi52YWx1ZSYmbG89PT1udWxsJiYobG89TWF0aC5hYnMoemUuZGV0YWlsLmR4L3plLmRldGFpbC5keSk8MSkpLCRuLnZhbHVlJiYoeXQ9emUuZGV0YWlsLmR5K0VzLHpuLmhpc3RvcnlZLnNoaWZ0KCksem4uaGlzdG9yeVkucHVzaCh5dCksIWVpLnZhbHVlJiZsbz09PW51bGwmJihsbz1NYXRoLmFicyh6ZS5kZXRhaWwuZHkvemUuZGV0YWlsLmR4KTwxKSksem4uaGlzdG9yeVQuc2hpZnQoKSx6bi5oaXN0b3J5VC5wdXNoKHplLmRldGFpbC50aW1lU3RhbXApLCFsbyl7bGV0IGt0PSJ0b3VjaCI7VHQ8aHQudmFsdWU/eS5vdXRPZkJvdW5kcz8oa3Q9InRvdWNoLW91dC1vZi1ib3VuZHMiLFR0PWh0LnZhbHVlLUZpLngoaHQudmFsdWUtVHQpKTpUdD1odC52YWx1ZTpUdD5obi52YWx1ZSYmKHkub3V0T2ZCb3VuZHM/KGt0PSJ0b3VjaC1vdXQtb2YtYm91bmRzIixUdD1obi52YWx1ZStGaS54KFR0LWhuLnZhbHVlKSk6VHQ9aG4udmFsdWUpLHl0PHV0LnZhbHVlP3kub3V0T2ZCb3VuZHM/KGt0PSJ0b3VjaC1vdXQtb2YtYm91bmRzIix5dD11dC52YWx1ZS1MYS54KHV0LnZhbHVlLXl0KSk6eXQ9dXQudmFsdWU6eXQ+Q24udmFsdWUmJih5Lm91dE9mQm91bmRzPyhrdD0idG91Y2gtb3V0LW9mLWJvdW5kcyIseXQ9Q24udmFsdWUrTGEueCh5dC1Dbi52YWx1ZSkpOnl0PUNuLnZhbHVlKSxzaShmdW5jdGlvbigpe1dvKFR0LHl0LEd0LGt0KX0pfX19ZnVuY3Rpb24gUHIoKXtpZigheS5kaXNhYmxlZCYmeWEmJih5YT0hMSwhbG8mJiFUbygib3V0LW9mLWJvdW5kcyIpJiZ5LmluZXJ0aWEpKXtsZXQgemU9MWUzKih6bi5oaXN0b3J5WFsxXS16bi5oaXN0b3J5WFswXSkvKHpuLmhpc3RvcnlUWzFdLXpuLmhpc3RvcnlUWzBdKSxUdD0xZTMqKHpuLmhpc3RvcnlZWzFdLXpuLmhpc3RvcnlZWzBdKS8oem4uaGlzdG9yeVRbMV0tem4uaGlzdG9yeVRbMF0pO1ZpLnNldFYoemUsVHQpLFZpLnNldFMoWXQsZXIpO2xldCB5dD1WaS5kZWx0YSgpLngsa3Q9VmkuZGVsdGEoKS55LEx0PXl0K1l0LGVuPWt0K2VyO0x0PGh0LnZhbHVlPyhMdD1odC52YWx1ZSxlbj1lcisoaHQudmFsdWUtWXQpKmt0L3l0KTpMdD5obi52YWx1ZSYmKEx0PWhuLnZhbHVlLGVuPWVyKyhobi52YWx1ZS1ZdCkqa3QveXQpLGVuPHV0LnZhbHVlPyhlbj11dC52YWx1ZSxMdD1ZdCsodXQudmFsdWUtZXIpKnl0L2t0KTplbj5Dbi52YWx1ZSYmKGVuPUNuLnZhbHVlLEx0PVl0KyhDbi52YWx1ZS1lcikqeXQva3QpLFZpLnNldEVuZChMdCxlbiksS3Q9X28oVmksZnVuY3Rpb24oKXtsZXQgTnI9VmkucygpLFduPU5yLngsZ3I9TnIueTtXbyhXbixncixHdCwiZnJpY3Rpb24iKX0sZnVuY3Rpb24oKXtLdC5jYW5jZWwoKX0pfX1mdW5jdGlvbiBGYSh6ZSxUdCl7bGV0IHl0PSExO3JldHVybiB6ZT5obi52YWx1ZT8oemU9aG4udmFsdWUseXQ9ITApOnplPGh0LnZhbHVlJiYoemU9aHQudmFsdWUseXQ9ITApLFR0PkNuLnZhbHVlPyhUdD1Dbi52YWx1ZSx5dD0hMCk6VHQ8dXQudmFsdWUmJihUdD11dC52YWx1ZSx5dD0hMCkse3g6emUseTpUdCxvdXRPZkJvdW5kczp5dH19ZnVuY3Rpb24gSGkoKXtsci54PURhLmxlZnQtZWUubGVmdC52YWx1ZSxsci55PURhLnRvcC1lZS50b3AudmFsdWV9ZnVuY3Rpb24gQW8oemUpe3plPXplfHxHdCx6ZT1pYSh6ZSksRXQudmFsdWU9RGEuaGVpZ2h0L0d0LFd0LnZhbHVlPURhLndpZHRoL0d0O2xldCBUdD1FdC52YWx1ZSp6ZSx5dD1XdC52YWx1ZSp6ZTtjci54PSh5dC1XdC52YWx1ZSkvMixjci55PShUdC1FdC52YWx1ZSkvMn1mdW5jdGlvbiBqaSgpe2xldCB6ZT0wLWxyLngrY3IueCxUdD1lZS53aWR0aC52YWx1ZS1XdC52YWx1ZS1sci54LWNyLng7aHQudmFsdWU9TWF0aC5taW4oemUsVHQpLGhuLnZhbHVlPU1hdGgubWF4KHplLFR0KTtsZXQgeXQ9MC1sci55K2NyLnksa3Q9ZWUuaGVpZ2h0LnZhbHVlLUV0LnZhbHVlLWxyLnktY3IueTt1dC52YWx1ZT1NYXRoLm1pbih5dCxrdCksQ24udmFsdWU9TWF0aC5tYXgoeXQsa3QpfWZ1bmN0aW9uIEVhKHplLFR0KXtpZih5LnNjYWxlKXt6ZT1pYSh6ZSksQW8oemUpLGppKCk7bGV0IHl0PUZhKFl0LGVyKSxrdD15dC54LEx0PXl0Lnk7VHQ/Y28oa3QsTHQsemUsIiIsITAsITApOnNpKGZ1bmN0aW9uKCl7V28oa3QsTHQsemUsIiIsITAsITApfSl9fWZ1bmN0aW9uIGlhKHplKXtyZXR1cm4gemU9TWF0aC5tYXgoLjUsY2wudmFsdWUsemUpLHplPU1hdGgubWluKDEwLGpvLnZhbHVlLHplKSx6ZX1mdW5jdGlvbiBjbyh6ZSxUdCx5dCxrdCxMdCxlbil7em8oKSxlaS52YWx1ZXx8KHplPVl0KSwkbi52YWx1ZXx8KFR0PWVyKSx5LnNjYWxlfHwoeXQ9R3QpO2xldCBOcj1GYSh6ZSxUdCk7aWYoemU9TnIueCxUdD1Oci55LCF5LmFuaW1hdGlvbil7V28oemUsVHQseXQsa3QsTHQsZW4pO3JldHVybn1Wci5fc3ByaW5nWC5fc29sdXRpb249bnVsbCxWci5fc3ByaW5nWS5fc29sdXRpb249bnVsbCxWci5fc3ByaW5nU2NhbGUuX3NvbHV0aW9uPW51bGwsVnIuX3NwcmluZ1guX2VuZFBvc2l0aW9uPVl0LFZyLl9zcHJpbmdZLl9lbmRQb3NpdGlvbj1lcixWci5fc3ByaW5nU2NhbGUuX2VuZFBvc2l0aW9uPUd0LFZyLnNldEVuZCh6ZSxUdCx5dCwxKSxDdD1fbyhWcixmdW5jdGlvbigpe2xldCBXbj1Wci54KCksZ3I9V24ueCxYYT1Xbi55LEFpPVduLnNjYWxlO1dvKGdyLFhhLEFpLGt0LEx0LGVuKX0sZnVuY3Rpb24oKXtDdC5jYW5jZWwoKX0pfWZ1bmN0aW9uIFRvKHplKXtsZXQgVHQ9RmEoWXQsZXIpLHl0PVR0Lngsa3Q9VHQueSxMdD1UdC5vdXRPZkJvdW5kcztyZXR1cm4gTHQmJmNvKHl0LGt0LEd0LHplKSxMdH1mdW5jdGlvbiBXbyh6ZSxUdCx5dCxrdD0iIixMdCxlbil7emUhPT1udWxsJiZ6ZS50b1N0cmluZygpIT09Ik5hTiImJnR5cGVvZiB6ZT09Im51bWJlciJ8fCh6ZT1ZdHx8MCksVHQhPT1udWxsJiZUdC50b1N0cmluZygpIT09Ik5hTiImJnR5cGVvZiBUdD09Im51bWJlciJ8fChUdD1lcnx8MCksemU9TnVtYmVyKHplLnRvRml4ZWQoMSkpLFR0PU51bWJlcihUdC50b0ZpeGVkKDEpKSx5dD1OdW1iZXIoeXQudG9GaXhlZCgxKSksWXQ9PT16ZSYmZXI9PT1UdHx8THR8fEQoImNoYW5nZSIse3g6RG8oemUsY3IueCkseTpEbyhUdCxjci55KSxzb3VyY2U6a3R9KSx5LnNjYWxlfHwoeXQ9R3QpLHl0PWlhKHl0KSx5dD0reXQudG9GaXhlZCgzKSxlbiYmeXQhPT1HdCYmRCgic2NhbGUiLHt4OnplLHk6VHQsc2NhbGU6eXR9KTtsZXQgTnI9YHRyYW5zbGF0ZSgke3plfXB4LCAke1R0fXB4KSBzY2FsZSgke3l0fSlgO2xpLnRyYW5zaXRpb24oRy52YWx1ZSx7c3R5bGVzOnt0cmFuc2Zvcm06TnJ9LGR1cmF0aW9uOjAsZGVsYXk6MH0pLFl0PXplLGVyPVR0LEd0PXl0fWZ1bmN0aW9uIFNzKCl7cmV0dXJuIEtuKEcudmFsdWUpLnRoZW4oemU9PntEYT16ZX0pfWZ1bmN0aW9uIFphKCl7aWYoIVEudmFsdWUpcmV0dXJuO3pvKCk7bGV0IHplPXkuc2NhbGU/TnQudmFsdWU6MTtIaSgpLEFvKHplKSxqaSgpLFl0PUhlLnZhbHVlK2NyLngsZXI9X3QudmFsdWUrY3IueTtsZXQgVHQ9RmEoWXQsZXIpLHl0PVR0Lngsa3Q9VHQueTtXbyh5dCxrdCx6ZSwiIiwhMCl9cmV0dXJuIE8ub25Nb3VudGVkKCgpPT57U2U9ZHIoVHQ9Pntzd2l0Y2goVHQuZGV0YWlsLnN0YXRlKXtjYXNlInN0YXJ0Ijp3cygpO2JyZWFrO2Nhc2UibW92ZSI6cHIoVHQpO2JyZWFrO2Nhc2UiZW5kIjpQcigpfX0pLHYoKCk9PntTcygpLnRoZW4oKCk9PntaYSgpfSl9LDEwMCksVmkucmVjb25maWd1cmUoMSxqcy52YWx1ZSksVnIucmVjb25maWd1cmUoMSw5Kk1hdGgucG93KEhvLnZhbHVlLDIpLzQwLEhvLnZhbHVlKTtsZXQgemU9e3NldFBhcmVudDpaYX07cGUoemUpLE8ub25Vbm1vdW50ZWQoKCk9PntDZSh6ZSl9KX0pLE8ub25Vbm1vdW50ZWQoKCk9Pnt6bygpfSksKCk9PntVKFNlKX19bGV0IEpuPTE2LG9yPXthY3RpdmVDb2xvcjpUbi5QUklNQVJZX0NPTE9SLGJhY2tncm91bmRDb2xvcjoiI0VCRUJFQiIsYWN0aXZlTW9kZToiYmFja3dhcmRzIn0sY2k9e3BlcmNlbnQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MCx2YWxpZGF0b3IoeSl7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQoeSkpfX0sZm9udFNpemU6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6Sm59LHNob3dJbmZvOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX0sc3Ryb2tlV2lkdGg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6Nix2YWxpZGF0b3IoeSl7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQoeSkpfX0sY29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6b3IuYWN0aXZlQ29sb3J9LGFjdGl2ZUNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0Om9yLmFjdGl2ZUNvbG9yfSxiYWNrZ3JvdW5kQ29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6b3IuYmFja2dyb3VuZENvbG9yfSxhY3RpdmU6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxhY3RpdmVNb2RlOnt0eXBlOlN0cmluZyxkZWZhdWx0Om9yLmFjdGl2ZU1vZGV9LGR1cmF0aW9uOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjMwLHZhbGlkYXRvcih5KXtyZXR1cm4haXNOYU4ocGFyc2VGbG9hdCh5KSl9fSxib3JkZXJSYWRpdXM6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH19LEJ0PVt7InVuaS1wcm9ncmVzcyI6eyIiOntmbGV4OjEsZmxleERpcmVjdGlvbjoicm93IixhbGlnbkl0ZW1zOiJjZW50ZXIifX0sInVuaS1wcm9ncmVzcy1iYXIiOnsiIjp7ZmxleDoxfX0sInVuaS1wcm9ncmVzcy1pbm5lci1iYXIiOnsiIjp7cG9zaXRpb246ImFic29sdXRlIn19LCJ1bmktcHJvZ3Jlc3MtaW5mbyI6eyIiOnttYXJnaW5MZWZ0OiIxNXB4In19fV0seGU9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IlByb2dyZXNzIixwcm9wczpjaSxzdHlsZXM6QnQsZW1pdHM6WyJhY3RpdmVlbmQiXSxzZXR1cCh5LHtlbWl0OkR9KXtsZXQgRz1PLnJlZihudWxsKSxVPU8ucmVmKG51bGwpLFE9RG4oRyxEKSxlZT1ibyh5KTtyZXR1cm4gTy53YXRjaCgoKT0+ZWUucmVhbFBlcmNlbnQsKHBlLENlKT0+e2VlLmxhc3RQZXJjZW50PUNlfHwwLGVvKGVlLHksUSl9KSxPLm9uTW91bnRlZCgoKT0+e3YoKCk9PntLbihVLnZhbHVlKS50aGVuKCh7d2lkdGg6cGV9KT0+e2VlLnByb2dyZXNzV2lkdGg9cGV8fDAsZW8oZWUseSxRKX0pfSw1MCl9KSwoKT0+e2xldHtzaG93SW5mbzpwZSxmb250U2l6ZTpDZX09eSx7b3V0ZXJCYXJTdHlsZTpTZSxpbm5lckJhclN0eWxlOkllLGN1cnJlbnRQZXJjZW50OmJlfT1lZTtyZXR1cm4gTy5jcmVhdGVWTm9kZSgiZGl2Iix7cmVmOkcsY2xhc3M6InVuaS1wcm9ncmVzcyJ9LFtPLmNyZWF0ZVZOb2RlKCJkaXYiLHtyZWY6VSxzdHlsZTpTZSxjbGFzczoidW5pLXByb2dyZXNzLWJhciJ9LFtPLmNyZWF0ZVZOb2RlKCJkaXYiLHtzdHlsZTpJZSxjbGFzczoidW5pLXByb2dyZXNzLWlubmVyLWJhciJ9LG51bGwpXSkscGU/SHQoYmUrIiUiLHtjbGFzczoidW5pLXByb2dyZXNzLWluZm8iLHN0eWxlOntmb250U2l6ZTpDZX19KTpudWxsXSl9fX0pO2Z1bmN0aW9uIGJvKHkpe2xldCBEPU8ucmVmKDApLEc9Ty5yZWYoMCksVT1PLmNvbXB1dGVkKCgpPT4oe2JhY2tncm91bmRDb2xvcjp5LmJhY2tncm91bmRDb2xvcixib3JkZXJSYWRpdXM6eS5ib3JkZXJSYWRpdXMsaGVpZ2h0Onkuc3Ryb2tlV2lkdGh9KSksUT1PLmNvbXB1dGVkKCgpPT57bGV0IENlPXkuY29sb3IhPT1vci5hY3RpdmVDb2xvciYmeS5hY3RpdmVDb2xvcj09PW9yLmFjdGl2ZUNvbG9yP3kuY29sb3I6eS5hY3RpdmVDb2xvcjtyZXR1cm57d2lkdGg6RC52YWx1ZSpHLnZhbHVlLzEwMCxoZWlnaHQ6eS5zdHJva2VXaWR0aCxiYWNrZ3JvdW5kQ29sb3I6Q2UsYm9yZGVyUmFkaXVzOnkuYm9yZGVyUmFkaXVzfX0pLGVlPU8uY29tcHV0ZWQoKCk9PntsZXQgQ2U9cGFyc2VGbG9hdCh5LnBlcmNlbnQpO3JldHVybiBDZTwwJiYoQ2U9MCksQ2U+MTAwJiYoQ2U9MTAwKSxDZX0pO3JldHVybiBPLnJlYWN0aXZlKHtvdXRlckJhclN0eWxlOlUsaW5uZXJCYXJTdHlsZTpRLHJlYWxQZXJjZW50OmVlLGN1cnJlbnRQZXJjZW50OkQsc3Ryb2tlVGltZXI6MCxsYXN0UGVyY2VudDowLHByb2dyZXNzV2lkdGg6R30pfWZ1bmN0aW9uIGVvKHksRCxHKXt5LnN0cm9rZVRpbWVyJiZjbGVhckludGVydmFsKHkuc3Ryb2tlVGltZXIpLEQuYWN0aXZlPyh5LmN1cnJlbnRQZXJjZW50PUQuYWN0aXZlTW9kZT09PW9yLmFjdGl2ZU1vZGU/MDp5Lmxhc3RQZXJjZW50LHkuc3Ryb2tlVGltZXI9c2V0SW50ZXJ2YWwoKCk9Pnt5LmN1cnJlbnRQZXJjZW50KzE+eS5yZWFsUGVyY2VudD8oeS5jdXJyZW50UGVyY2VudD15LnJlYWxQZXJjZW50LHkuc3Ryb2tlVGltZXImJmNsZWFySW50ZXJ2YWwoeS5zdHJva2VUaW1lciksRygiYWN0aXZlZW5kIix7fSkpOnkuY3VycmVudFBlcmNlbnQrPTF9LHBhcnNlRmxvYXQoRC5kdXJhdGlvbikpKTp5LmN1cnJlbnRQZXJjZW50PXkucmVhbFBlcmNlbnR9bGV0IFZvPXt2YWx1ZTp7dHlwZTpBcnJheSxkZWZhdWx0KCl7cmV0dXJuW119LHZhbGlkYXRvcjpmdW5jdGlvbih5KXtyZXR1cm4gaWUuaXNBcnJheSh5KSYmeS5maWx0ZXIoRD0+dHlwZW9mIEQ9PSJudW1iZXIiKS5sZW5ndGg9PT15Lmxlbmd0aH19LGluZGljYXRvclN0eWxlOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxpbmRpY2F0b3JDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sbWFza1N0eWxlOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxtYXNrQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9fSxtYT1pZS5leHRlbmQoe30sVm8se2hlaWdodDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDowfSxtYXNrVG9wU3R5bGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LG1hc2tCb3R0b21TdHlsZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn19KSxRbz1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiUGlja2VyVmlldyIscHJvcHM6bWEsZW1pdHM6WyJjaGFuZ2UiLCJ1cGRhdGU6dmFsdWUiXSxzZXR1cCh5LHtzbG90czpELGVtaXQ6R30pe2xldCBVPU8ucmVmKG51bGwpLFE9RGkoeSksZWU9RG4oVSxHKSxwZT1bXSxDZT1JZT0+QXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChwZS5maWx0ZXIoYmU9PmJlLnR5cGUhPT1PLkNvbW1lbnQpLEllKSxTZT1JZT0+Ty5jb21wdXRlZCh7Z2V0KCl7bGV0IGJlPUNlKEllLnZub2RlKTtyZXR1cm4gUS52YWx1ZVtiZV18fDB9LHNldChiZSl7aWYoIUllLmRhdGEuX2lzTW91bnRlZClyZXR1cm47bGV0IEhlPUNlKEllLnZub2RlKTtpZihIZTwwKXJldHVybjtpZihRLnZhbHVlW0hlXSE9PWJlKXtRLnZhbHVlW0hlXT1iZTtsZXQgTnQ9US52YWx1ZS5tYXAoV3Q9Pld0KTtHKCJ1cGRhdGU6dmFsdWUiLE50KSxlZSgiY2hhbmdlIix7dmFsdWU6TnR9KX19fSk7cmV0dXJuIE8ucHJvdmlkZSgiZ2V0UGlja2VyVmlld0NvbHVtbiIsU2UpLE8ucHJvdmlkZSgicGlja2VyVmlld1Byb3BzIix5KSwoKT0+e2xldCBJZT1ELmRlZmF1bHQmJkQuZGVmYXVsdCgpO3BlPWdvKEllKTtsZXQgYmU9eS5oZWlnaHQ/e2hlaWdodDpgJHtwYXJzZUZsb2F0KHkuaGVpZ2h0KX1weGB9Ont9O3JldHVybiBPLmNyZWF0ZVZOb2RlKCJ2aWV3IixPLm1lcmdlUHJvcHMoe3JlZjpVLGNsYXNzOiJ1bmktcGlja2VyLXZpZXciLHN0eWxlOmJlfSx7cHJldmVudEdlc3R1cmU6ITB9KSxbTy5jcmVhdGVWTm9kZSgidmlldyIse2NsYXNzOiJ1bmktcGlja2VyLXZpZXctd3JhcHBlciJ9LFtwZV0pXSl9fSxzdHlsZXM6W3sidW5pLXBpY2tlci12aWV3Ijp7IiI6e3Bvc2l0aW9uOiJyZWxhdGl2ZSJ9fSwidW5pLXBpY2tlci12aWV3LXdyYXBwZXIiOnsiIjp7ZGlzcGxheToiZmxleCIsZmxleERpcmVjdGlvbjoicm93Iixwb3NpdGlvbjoiYWJzb2x1dGUiLHRvcDowLGxlZnQ6MCxyaWdodDowLGJvdHRvbTowLG92ZXJmbG93OiJoaWRkZW4ifX19XX0pO2Z1bmN0aW9uIERpKHkpe2xldCBEPU8ucmVhY3RpdmUoWy4uLnkudmFsdWVdKSxHPU8ucmVhY3RpdmUoe3ZhbHVlOkR9KTtyZXR1cm4gTy53YXRjaCgoKT0+eS52YWx1ZSxVPT57Ry52YWx1ZS5sZW5ndGg9VS5sZW5ndGgsTy5uZXh0VGljaygoKT0+e1UuZm9yRWFjaCgoUSxlZSk9PntRIT09Ry52YWx1ZVtlZV0mJkcudmFsdWUuc3BsaWNlKGVlLDEsUSl9KX0pfSksR31sZXQgeW89Qy5yZXF1aXJlTW9kdWxlKCJkb20iKSxJcj1DLmNvbmZpZy5lbnYucGxhdGZvcm0udG9Mb3dlckNhc2UoKT09PSJhbmRyb2lkIjtmdW5jdGlvbiBFaSh5KXtyZXR1cm4gaWUuZXh0ZW5kKHt9LGllLmlzU3RyaW5nKHkpP0JvKHkpOnkpfWxldCBUYT17bGVuZ3RoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9fSxvbj1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiUGlja2VyVmlld0NvbHVtbiIscHJvcHM6VGEsZGF0YTooKT0+KHtfaXNNb3VudGVkOiExfSksc2V0dXAoeSx7c2xvdHM6RH0pe2xldCBHPU8uZ2V0Q3VycmVudEluc3RhbmNlKCksVT1PLnJlZihudWxsKSxRPU8ucmVmKG51bGwpLGVlPU8ucmVmKG51bGwpLHBlPU8ucmVmKG51bGwpLENlPU8uaW5qZWN0KCJwaWNrZXJWaWV3UHJvcHMiKSxJZT1PLmluamVjdCgiZ2V0UGlja2VyVmlld0NvbHVtbiIpKEcpLGJlPU8uY29tcHV0ZWQoKCk9PkVpKENlLmluZGljYXRvclN0eWxlKSksSGU9Ty5jb21wdXRlZCgoKT0+RWkoQ2UubWFza1RvcFN0eWxlKSksX3Q9Ty5jb21wdXRlZCgoKT0+RWkoQ2UubWFza0JvdHRvbVN0eWxlKSksTnQ9Ty5yZWYoMCk7TnQudmFsdWU9RW8oYmUudmFsdWUpO2xldCBXdD1PLnJlZigwKTtXdC52YWx1ZT1wYXJzZUZsb2F0KENlLmhlaWdodCk7bGV0e3NldEN1cnJlbnQ6RXQsb25TY3JvbGxlbmQ6aHR9PXVpKHksSWUsUSxOdCksdXQ9KCk9PntsZXQgQ24sQ3Q7digoKT0+e1Byb21pc2UuYWxsKFtLbihVLnZhbHVlKS50aGVuKCh7aGVpZ2h0Okt0fSk9PntDbj1XdC52YWx1ZT1LdH0pLElyJiZ5Lmxlbmd0aD9LbihlZS52YWx1ZSkudGhlbigoe2hlaWdodDpLdH0pPT57Q3Q9TnQudmFsdWU9S3QvcGFyc2VGbG9hdCh5Lmxlbmd0aCl9KTpLbihwZS52YWx1ZSkudGhlbigoe2hlaWdodDpLdH0pPT57Q3Q9TnQudmFsdWU9S3R9KV0pLnRoZW4oKCk9PntDbiYmQ3Q/digoKT0+e0cuZGF0YS5faXNNb3VudGVkPSEwLEV0KEllLnZhbHVlLCExLCEwKX0sNTApOnV0KCl9KX0sNTApfTtPLm9uTW91bnRlZCh1dCk7bGV0IGhuPUNuPT5Dbj9Jcj9PLmNyZWF0ZVZOb2RlKCJkaXYiLHtyZWY6ZWUsc3R5bGU6ImZsZXgtZGlyZWN0aW9uOmNvbHVtbjsifSxbQ25dKTpDbjpudWxsO3JldHVybigpPT57bGV0IENuPUQuZGVmYXVsdCYmRC5kZWZhdWx0KCksQ3Q9KFd0LnZhbHVlLU50LnZhbHVlKS8yLEt0PWAke1d0LnZhbHVlLUN0fXB4YCxscj17c2hvd1Njcm9sbGJhcjohMSxzY3JvbGxUb0JlZ2luOiExLGRlY2VsZXJhdGlvblJhdGU6LjMsc2Nyb2xsWTohMH07cmV0dXJuIElyfHwobHIuc2Nyb2xsVG9wPUllLnZhbHVlKk50LnZhbHVlKSxPLmNyZWF0ZVZOb2RlKCJ2aWV3Iix7cmVmOlUsY2xhc3M6InVuaS1waWNrZXItdmlldy1jb2x1bW4ifSxbTy5jcmVhdGVWTm9kZSgic2Nyb2xsLXZpZXciLE8ubWVyZ2VQcm9wcyh7Y2xhc3M6InVuaS1waWNrZXItdmlldy1ncm91cCIsc3R5bGU6ImZsZXgtZGlyZWN0aW9uOmNvbHVtbjsiLG9uU2Nyb2xsZW5kOmh0fSxsciksW08uY3JlYXRlVk5vZGUoInZpZXciLHtyZWY6USxjbGFzczoidW5pLXBpY2tlci12aWV3LWNvbnRlbnQiLHN0eWxlOntwYWRkaW5nVG9wOmAke0N0fXB4YCxwYWRkaW5nQm90dG9tOmAke0N0fXB4YH19LFtobihDbildKV0pLE8uY3JlYXRlVk5vZGUoInUtc2NhbGFibGUiLHtjbGFzczoidW5pLXBpY2tlci12aWV3LW1hc2sifSxbTy5jcmVhdGVWTm9kZSgidS1zY2FsYWJsZSIse2NsYXNzOiJ1bmktcGlja2VyLXZpZXctbWFzayB1bmktcGlja2VyLXZpZXctbWFzay10b3AiLHN0eWxlOmllLmV4dGVuZCh7fSxIZS52YWx1ZSx7Ym90dG9tOkt0fSl9LG51bGwpLE8uY3JlYXRlVk5vZGUoInUtc2NhbGFibGUiLHtjbGFzczoidW5pLXBpY2tlci12aWV3LW1hc2sgdW5pLXBpY2tlci12aWV3LW1hc2stYm90dG9tIixzdHlsZTppZS5leHRlbmQoe30sX3QudmFsdWUse3RvcDpLdH0pfSxudWxsKV0pLE8uY3JlYXRlVk5vZGUoInUtc2NhbGFibGUiLHtyZWY6cGUsY2xhc3M6InVuaS1waWNrZXItdmlldy1pbmRpY2F0b3IiLHN0eWxlOmllLmV4dGVuZCh7fSxiZS52YWx1ZSx7dG9wOmAke0N0fXB4YH0pfSxudWxsKV0pfX0sc3R5bGVzOlt7InVuaS1waWNrZXItdmlldy1jb2x1bW4iOnsiIjp7ZmxleDoxLHBvc2l0aW9uOiJyZWxhdGl2ZSIsYWxpZ25JdGVtczoic3RyZXRjaCIsb3ZlcmZsb3c6ImhpZGRlbiJ9fSwidW5pLXBpY2tlci12aWV3LW1hc2siOnsiIjp7cG9zaXRpb246ImFic29sdXRlIix0b3A6MCxsZWZ0OjAscmlnaHQ6MCxib3R0b206MCxwb2ludGVyRXZlbnRzOiJub25lIn19LCJ1bmktcGlja2VyLXZpZXctbWFzay10b3AiOnsiIjp7Ym90dG9tOjAsYmFja2dyb3VuZEltYWdlOiJsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45NSkscmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpKSJ9fSwidW5pLXBpY2tlci12aWV3LW1hc2stYm90dG9tIjp7IiI6e3RvcDowLGJhY2tncm91bmRJbWFnZToibGluZWFyLWdyYWRpZW50KHRvIHRvcCxyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTUpLHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KSkifX0sInVuaS1waWNrZXItdmlldy1ncm91cCI6eyIiOntwb3NpdGlvbjoiYWJzb2x1dGUiLHRvcDowLGxlZnQ6MCxyaWdodDowLGJvdHRvbTowfX0sInVuaS1waWNrZXItdmlldy1jb250ZW50Ijp7IiI6e2ZsZXhEaXJlY3Rpb246ImNvbHVtbiIscGFkZGluZ1RvcDowLHBhZGRpbmdSaWdodDowLHBhZGRpbmdCb3R0b206MCxwYWRkaW5nTGVmdDowfX0sInVuaS1waWNrZXItdmlldy1pbmRpY2F0b3IiOnsiIjp7cG9zaXRpb246ImFic29sdXRlIixsZWZ0OjAscmlnaHQ6MCx0b3A6MCxoZWlnaHQ6IjM0cHgiLHBvaW50ZXJFdmVudHM6Im5vbmUiLGJvcmRlckNvbG9yOiIjZTVlNWU1Iixib3JkZXJUb3BXaWR0aDoiMXB4Iixib3JkZXJCb3R0b21XaWR0aDoiMXB4In19fV19KTtmdW5jdGlvbiBFbyh5KXtsZXQgRz0oeS5oZWlnaHR8fHkubGluZUhlaWdodHx8IiIpLm1hdGNoKC8oLT9bXGRcLl0rKXB4LyksVT0wO3JldHVybiBHJiYoVT1wYXJzZUZsb2F0KEdbMV0pKSxVfWZ1bmN0aW9uIHVpKHksRCxHLFUpe2xldCBRO2Z1bmN0aW9uIGVlKFNlLEllPSEwKXt5by5zY3JvbGxUb0VsZW1lbnQoRy52YWx1ZSx7b2Zmc2V0OlNlKlUudmFsdWUsYW5pbWF0ZWQ6SWV9KSxJZSYmKFE9RGF0ZS5ub3coKSl9Ty53YXRjaCgoKT0+eS5sZW5ndGgsKCk9Pnt2KCgpPT57cGUoRC52YWx1ZSwhMCwhMCl9LDE1MCl9KSxPLndhdGNoKEQsU2U9PmVlKFNlKSk7bGV0IHBlPShTZSxJZT0hMCxiZSk9PntELnZhbHVlPT09U2UmJiFiZXx8KEQudmFsdWU9U2UsSXImJmVlKFNlLEllKSl9O3JldHVybntzZXRDdXJyZW50OnBlLG9uU2Nyb2xsZW5kOlNlPT57aWYoRGF0ZS5ub3coKS1RPDM0MClyZXR1cm47bGV0IEllPVNlLmRldGFpbC5jb250ZW50T2Zmc2V0LnksYmU9TWF0aC5yb3VuZChJZS9VLnZhbHVlKTtJZSVVLnZhbHVlP3BlKGJlLCEwLCEwKTpELnZhbHVlPWJlfX19bGV0IHduPXtTRUxFQ1RPUjoic2VsZWN0b3IiLE1VTFRJU0VMRUNUT1I6Im11bHRpU2VsZWN0b3IiLFRJTUU6InRpbWUiLERBVEU6ImRhdGUifSxmaT17WUVBUjoieWVhciIsTU9OVEg6Im1vbnRoIixEQVk6ImRheSJ9O2Z1bmN0aW9uIFpyKHkpe3JldHVybiB5Pjk/eTpgMCR7eX1gfWZ1bmN0aW9uIGhyKHksRCl7eT1TdHJpbmcoeXx8IiIpO2xldCBHPW5ldyBEYXRlO2lmKEQ9PT13bi5USU1FKXtsZXQgVT15LnNwbGl0KCI6Iik7VS5sZW5ndGg9PT0yJiZHLnNldEhvdXJzKHBhcnNlSW50KFVbMF0pLHBhcnNlSW50KFVbMV0pKX1lbHNle2xldCBVPXkuc3BsaXQoIi0iKTtVLmxlbmd0aD09PTMmJkcuc2V0RnVsbFllYXIocGFyc2VJbnQoVVswXSkscGFyc2VJbnQoU3RyaW5nKHBhcnNlRmxvYXQoVVsxXSktMSkpLHBhcnNlSW50KFVbMl0pKX1yZXR1cm4gR31mdW5jdGlvbiBLYSh5KXtpZih5Lm1vZGU9PT13bi5USU1FKXJldHVybiIwMDowMCI7aWYoeS5tb2RlPT09d24uREFURSl7bGV0IEQ9bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLTEwMDtzd2l0Y2goeS5maWVsZHMpe2Nhc2UgZmkuWUVBUjpyZXR1cm4gRDtjYXNlIGZpLk1PTlRIOnJldHVybiBEKyItMDEiO2RlZmF1bHQ6cmV0dXJuIEQrIi0wMS0wMSJ9fXJldHVybiIifWZ1bmN0aW9uIElhKHkpe2lmKHkubW9kZT09PXduLlRJTUUpcmV0dXJuIjIzOjU5IjtpZih5Lm1vZGU9PT13bi5EQVRFKXtsZXQgRD1uZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkrMTAwO3N3aXRjaCh5LmZpZWxkcyl7Y2FzZSBmaS5ZRUFSOnJldHVybiBEO2Nhc2UgZmkuTU9OVEg6cmV0dXJuIEQrIi0xMiI7ZGVmYXVsdDpyZXR1cm4gRCsiLTEyLTMxIn19cmV0dXJuIiJ9bGV0IGVhPXtuYW1lOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxyYW5nZTp7dHlwZTpBcnJheSxkZWZhdWx0KCl7cmV0dXJuW119fSxyYW5nZUtleTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sdmFsdWU6e3R5cGU6W051bWJlcixTdHJpbmcsQXJyYXldLGRlZmF1bHQ6MH0sbW9kZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDp3bi5TRUxFQ1RPUix2YWxpZGF0b3IoeSl7cmV0dXJuIE9iamVjdC52YWx1ZXMod24pLmluZGV4T2YoeSk+PTB9fSxmaWVsZHM6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LHN0YXJ0Ont0eXBlOlN0cmluZyxkZWZhdWx0OkthfSxlbmQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6SWF9LGRpc2FibGVkOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX19LHRvPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJQaWNrZXIiLHByb3BzOmVhLGVtaXRzOlsiY2hhbmdlIiwiY2FuY2VsIiwiY29sdW1uY2hhbmdlIl0sc2V0dXAoeSx7c2xvdHM6RCxlbWl0Okd9KXtsZXQgVT1PLnJlZihudWxsKSxRPURuKFUsRyksZWU9Ty5yZWYobnVsbCkscGU9Ty5yZWYobnVsbCksQ2U9KCk9PntsZXQgRXQ9eS52YWx1ZTtzd2l0Y2goeS5tb2RlKXtjYXNlIHduLk1VTFRJU0VMRUNUT1I6e2llLmlzQXJyYXkoRXQpfHwoRXQ9W10pLGllLmlzQXJyYXkoZWUudmFsdWUpfHwoZWUudmFsdWU9W10pO2xldCBodD1lZS52YWx1ZS5sZW5ndGg9TWF0aC5tYXgoRXQubGVuZ3RoLHkucmFuZ2UubGVuZ3RoKTtmb3IobGV0IHV0PTA7dXQ8aHQ7dXQrKyl7bGV0IGhuPU51bWJlcihFdFt1dF0pLENuPU51bWJlcihlZS52YWx1ZVt1dF0pLEN0PWlzTmFOKGhuKT9pc05hTihDbik/MDpDbjpobjtlZS52YWx1ZS5zcGxpY2UodXQsMSxDdDwwPzA6Q3QpfX1icmVhaztjYXNlIHduLlRJTUU6Y2FzZSB3bi5EQVRFOmVlLnZhbHVlPVN0cmluZyhFdCk7YnJlYWs7ZGVmYXVsdDp7bGV0IGh0PU51bWJlcihFdCk7ZWUudmFsdWU9aHQ8MD8wOmh0O2JyZWFrfX19LFNlPUV0PT57cGUudmFsdWUmJnBlLnZhbHVlLnNlbmRNZXNzYWdlKEV0KX0sSWU9RXQ9PntsZXQgaHQ9e2V2ZW50OiJjYW5jZWwifTtwZS52YWx1ZT1KdCh7dXJsOiJfX3VuaWFwcHBpY2tlciIsZGF0YTpFdCxzdHlsZTp7dGl0bGVOVmlldzohMSxhbmltYXRpb25UeXBlOiJub25lIixhbmltYXRpb25EdXJhdGlvbjowLGJhY2tncm91bmQ6InJnYmEoMCwwLDAsMCkiLHBvcEdlc3R1cmU6Im5vbmUifSxvbk1lc3NhZ2U6dXQ9PntsZXQgaG49dXQuZXZlbnQ7aWYoaG49PT0iY3JlYXRlZCIpe1NlKEV0KTtyZXR1cm59aWYoaG49PT0iY29sdW1uY2hhbmdlIil7ZGVsZXRlIHV0LmV2ZW50LFEoaG4sdXQpO3JldHVybn1odD11dH0sb25DbG9zZTooKT0+e3BlLnZhbHVlPW51bGw7bGV0IHV0PWh0LmV2ZW50O2RlbGV0ZSBodC5ldmVudCx1dCYmUSh1dCxodCl9fSl9LGJlPUV0PT57ZC5uYXRpdmVVSVt5Lm1vZGU9PT13bi5USU1FPyJwaWNrVGltZSI6InBpY2tEYXRlIl0oaHQ9PntsZXQgdXQ9aHQuZGF0ZTtRKCJjaGFuZ2UiLHt2YWx1ZTp5Lm1vZGU9PT13bi5USU1FP2Ake1pyKHV0LmdldEhvdXJzKCkpfToke1pyKHV0LmdldE1pbnV0ZXMoKSl9YDpgJHt1dC5nZXRGdWxsWWVhcigpfS0ke1pyKHV0LmdldE1vbnRoKCkrMSl9LSR7WnIodXQuZ2V0RGF0ZSgpKX1gfSl9LCgpPT57USgiY2FuY2VsIix7fSl9LHkubW9kZT09PXduLlRJTUU/e3RpbWU6aHIoeS52YWx1ZSx3bi5USU1FKX06e2RhdGU6aHIoeS52YWx1ZSx3bi5EQVRFKSxtaW5EYXRlOmhyKHkuc3RhcnQsd24uREFURSksbWF4RGF0ZTpocih5LmVuZCx3bi5EQVRFKX0pfSxIZT1FdD0+eyhFdC5tb2RlPT09d24uVElNRXx8RXQubW9kZT09PXduLkRBVEUpJiYhRXQuZmllbGRzP2JlKCk6KEV0LmZpZWxkcz1PYmplY3QudmFsdWVzKGZpKS5pbmNsdWRlcyhFdC5maWVsZHMpP0V0LmZpZWxkczpmaS5EQVksSWUoRXQpKX0sX3Q9RXQ9Pnt5LmRpc2FibGVkfHxIZShpZS5leHRlbmQoe30seSx7dmFsdWU6ZWUudmFsdWUsbG9jYWxlOmIuZ2V0TG9jYWxlKCl9KSl9LE50PU8uaW5qZWN0KGZyLCExKSxXdD17c3VibWl0OigpPT5beS5uYW1lLGVlLnZhbHVlXSxyZXNldDooKT0+e3N3aXRjaCh5Lm1vZGUpe2Nhc2Ugd24uU0VMRUNUT1I6ZWUudmFsdWU9MDticmVhaztjYXNlIHduLk1VTFRJU0VMRUNUT1I6aWUuaXNBcnJheSh5LnZhbHVlKSYmKGVlLnZhbHVlPXkudmFsdWUubWFwKEV0PT4wKSk7YnJlYWs7Y2FzZSB3bi5EQVRFOmNhc2Ugd24uVElNRTplZS52YWx1ZT0iIjticmVha319fTtyZXR1cm4gTnQmJihOdC5hZGRGaWVsZChXdCksTy5vbkJlZm9yZVVubW91bnQoKCk9Pk50LnJlbW92ZUZpZWxkKFd0KSkpLE9iamVjdC5rZXlzKHkpLmZvckVhY2goRXQ9PntPLndhdGNoKCgpPT55W0V0XSxodD0+e2xldCB1dD17fTt1dFtFdF09aHQsU2UodXQpfSx7ZGVlcDohMH0pfSksTy53YXRjaCgoKT0+eS52YWx1ZSxDZSx7ZGVlcDohMH0pLENlKCksKCk9Pk8uY3JlYXRlVk5vZGUoInZpZXciLHtyZWY6VSxvbkNsaWNrOl90fSxbRC5kZWZhdWx0JiZELmRlZmF1bHQoKV0pfX0pLFpuPXtuYW1lOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxtaW46e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sbWF4Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjEwMH0sdmFsdWU6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sc3RlcDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxfSxkaXNhYmxlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjZTllOWU5In0sYmFja2dyb3VuZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjZTllOWU5In0sYWN0aXZlQ29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiMwMDdhZmYifSxzZWxlY3RlZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjMDA3YWZmIn0sYmxvY2tDb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiI2ZmZmZmZiJ9LGJsb2NrU2l6ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoyOH0sc2hvd1ZhbHVlOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX19LGFyPVt7InVuaS1zbGlkZXIiOnsiIjp7ZmxleDoxLGZsZXhEaXJlY3Rpb246ImNvbHVtbiJ9fSwidW5pLXNsaWRlci13cmFwcGVyIjp7IiI6e2ZsZXhEaXJlY3Rpb246InJvdyIsanVzdGlmeUNvbnRlbnQ6ImNlbnRlciIsYWxpZ25JdGVtczoiY2VudGVyIn19LCJ1bmktc2xpZGVyLXRhcC1hcmVhIjp7IiI6e3Bvc2l0aW9uOiJyZWxhdGl2ZSIsZmxleDoxLGZsZXhEaXJlY3Rpb246InJvdyIsYWxpZ25JdGVtczoiY2VudGVyIixwYWRkaW5nVG9wOiIxNCIscGFkZGluZ0JvdHRvbToiMTQifX0sInVuaS1zbGlkZXItaGFuZGxlLXdyYXBwZXIiOnsiIjp7cG9zaXRpb246InJlbGF0aXZlIixmbGV4OjEsYmFja2dyb3VuZENvbG9yOiIjZTllOWU5IixoZWlnaHQ6IjIiLGJvcmRlclJhZGl1czoiNSIsbWFyZ2luUmlnaHQ6IjE0IixtYXJnaW5MZWZ0OiIxNCJ9fSwidW5pLXNsaWRlci10cmFjayI6eyIiOntoZWlnaHQ6IjIiLGJvcmRlclJhZGl1czoiNiIsYmFja2dyb3VuZENvbG9yOiIjMDA3YWZmIn19LCJ1bmktc2xpZGVyLXRodW1iIjp7IiI6e3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdG9wOiIxIix3aWR0aDoiMjgiLGhlaWdodDoiMjgiLGJvcmRlclJhZGl1czo1MCxib3hTaGFkb3c6IjAgMCA0cHggI2ViZWJlYiJ9fSwidW5pLXNsaWRlci12YWx1ZSI6eyIiOntjb2xvcjoiIzg4ODg4OCIsZm9udFNpemU6IjE2Iix3aWR0aDoiMzAifX19XSxWbj1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiVVNsaWRlciIscHJvcHM6Wm4sc3R5bGVzOmFyLHNldHVwKHkse2VtaXQ6RH0pe2xldCBHPU8ucmVmKG51bGwpLFU9Ty5yZWYobnVsbCksUT1EbihHLEQpLGVlPVhyKHkpLHBlPWRpKHksZWUsUSk7cmV0dXJuIHRhKHksZWUpLE8ud2F0Y2goKCk9PnkudmFsdWUsQ2U9PntlZS5zbGlkZXJWYWx1ZT1OdW1iZXIoQ2UpfSksTy5vbk1vdW50ZWQoKCk9Pnt2KCgpPT57S24oVS52YWx1ZSkudGhlbigoe3dpZHRoOkNlLGxlZnQ6U2V9KT0+e2VlLnNsaWRlckxlZnQ9U2UsZWUuc2xpZGVyV2lkdGg9Q2V8fDAsZWUuc2xpZGVyVmFsdWU9TnVtYmVyKHkudmFsdWUpfSl9LDEwMCl9KSwoKT0+e2xldHtzaG93VmFsdWU6Q2V9PXkse3RyYWNrVGFwU3R5bGU6U2UsdHJhY2tTdHlsZTpJZSx0cmFja0FjdGl2ZVN0eWxlOmJlLHRodW1iU3R5bGU6SGUsc2xpZGVyVmFsdWU6X3R9PWVlO3JldHVybiBPLmNyZWF0ZVZOb2RlKCJkaXYiLHtjbGFzczoidW5pLXNsaWRlciIscmVmOkd9LFtPLmNyZWF0ZVZOb2RlKCJkaXYiLHtjbGFzczoidW5pLXNsaWRlci13cmFwcGVyIn0sW08uY3JlYXRlVk5vZGUoImRpdiIsTy5tZXJnZVByb3BzKHtjbGFzczoidW5pLXNsaWRlci10YXAtYXJlYSIsc3R5bGU6U2V9LHBlKSxbTy5jcmVhdGVWTm9kZSgiZGl2Iix7Y2xhc3M6InVuaS1zbGlkZXItaGFuZGxlLXdyYXBwZXIiLHN0eWxlOkllLHJlZjpVfSxbTy5jcmVhdGVWTm9kZSgiZGl2Iix7Y2xhc3M6InVuaS1zbGlkZXItdHJhY2siLHN0eWxlOmJlfSxudWxsKV0pLE8uY3JlYXRlVk5vZGUoImRpdiIse2NsYXNzOiJ1bmktc2xpZGVyLXRodW1iIixzdHlsZTpIZX0sbnVsbCldKSxDZT9IdChfdCsiIix7Y2xhc3M6InVuaS1zbGlkZXItdmFsdWUifSk6bnVsbF0pXSl9fX0pO2Z1bmN0aW9uIFhyKHkpe2xldCBEPU8ucmVmKDApLEc9Ty5yZWYoMCksVT1PLnJlZigwKSxRPSgpPT55LmJhY2tncm91bmRDb2xvciE9PSIjZTllOWU5Ij95LmJhY2tncm91bmRDb2xvcjp5LmNvbG9yIT09IiMwMDdhZmYiP3kuY29sb3I6IiMwMDdhZmYiLGVlPSgpPT55LmFjdGl2ZUNvbG9yIT09IiMwMDdhZmYiP3kuYWN0aXZlQ29sb3I6eS5zZWxlY3RlZENvbG9yIT09IiNlOWU5ZTkiP3kuc2VsZWN0ZWRDb2xvcjoiI2U5ZTllOSIscGU9KCk9PntsZXQgSWU9TnVtYmVyKHkubWF4KSxiZT1OdW1iZXIoeS5taW4pO3JldHVybihVLnZhbHVlLWJlKS8oSWUtYmUpKkcudmFsdWV9LENlPU51bWJlcih5LmJsb2NrU2l6ZSkvMjtyZXR1cm4gTy5yZWFjdGl2ZSh7c2xpZGVyTGVmdDpELHNsaWRlcldpZHRoOkcsc2xpZGVyVmFsdWU6VSxzbGlkZXJUaHVtYk9mZnNldDpDZSx0cmFja1RhcFN0eWxlOk8uY29tcHV0ZWQoKCk9Pih7cGFkZGluZ1RvcDpDZSxwYWRkaW5nQm90dG9tOkNlfSkpLHRyYWNrU3R5bGU6Ty5jb21wdXRlZCgoKT0+KHtiYWNrZ3JvdW5kQ29sb3I6USgpLG1hcmdpbkxlZnQ6Q2UsbWFyZ2luUmlnaHQ6Q2V9KSksdHJhY2tBY3RpdmVTdHlsZTpPLmNvbXB1dGVkKCgpPT4oe2JhY2tncm91bmRDb2xvcjplZSgpLHdpZHRoOnBlKCl9KSksdGh1bWJTdHlsZTpPLmNvbXB1dGVkKCgpPT4oe3dpZHRoOnkuYmxvY2tTaXplLGhlaWdodDp5LmJsb2NrU2l6ZSxiYWNrZ3JvdW5kQ29sb3I6eS5ibG9ja0NvbG9yLGxlZnQ6cGUoKX0pKX0pfWZ1bmN0aW9uIGRpKHksRCxHKXtsZXQgVT1udWxsO2Z1bmN0aW9uIFEoQ2UsU2Upe3kuZGlzYWJsZWR8fChDZT09PSJtb3ZlIj8oZWUoU2UpLEcoImNoYW5naW5nIix7dmFsdWU6RC5zbGlkZXJWYWx1ZX0pKTpDZT09PSJlbmQiJiYoZWUoU2UpLEcoImNoYW5nZSIse3ZhbHVlOkQuc2xpZGVyVmFsdWV9KSkpfWZ1bmN0aW9uIGVlKENlKXtDZS09RC5zbGlkZXJUaHVtYk9mZnNldCxDZTwwJiYoQ2U9MCksQ2U+RC5zbGlkZXJXaWR0aCYmKENlPUQuc2xpZGVyV2lkdGgpO2xldCBTZT1OdW1iZXIoeS5tYXgpLEllPU51bWJlcih5Lm1pbiksYmU9TnVtYmVyKHkuc3RlcCksSGU9Q2UvRC5zbGlkZXJXaWR0aCooU2UtSWUpO2JlPjAmJkhlPmJlJiZIZSViZS9iZSE9PTA/SGUtPUhlJWJlOkhlPXBhcnNlSW50KEhlKyIiKSxELnNsaWRlclZhbHVlPUhlK0llfXJldHVybntvblRvdWNoc3RhcnQoQ2Upe0NlLmNoYW5nZWRUb3VjaGVzLmxlbmd0aD09PTEmJiFVJiYoVT1DZSxRKCJzdGFydCIsQ2UuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVgpKX0sb25Ub3VjaG1vdmUoQ2Upe0NlLmNoYW5nZWRUb3VjaGVzLmxlbmd0aD09PTEmJlUmJlEoIm1vdmUiLENlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYKX0sb25Ub3VjaGVuZChDZSl7Q2UuY2hhbmdlZFRvdWNoZXMubGVuZ3RoPT09MSYmVSYmKFU9bnVsbCxRKCJlbmQiLENlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYKSl9fX1mdW5jdGlvbiB0YSh5LEQpe2xldCBHPU8uaW5qZWN0KGZyLCExKSxVPXtzdWJtaXQ6KCk9PntsZXQgUT1bIiIsbnVsbF07cmV0dXJuIHkubmFtZSYmKFFbMF09eS5uYW1lLFFbMV09RC5zbGlkZXJWYWx1ZSksUX0scmVzZXQ6KCk9PntELnNsaWRlclZhbHVlPU51bWJlcih5LnZhbHVlKX19O0cmJihHLmFkZEZpZWxkKFUpLE8ub25Vbm1vdW50ZWQoKCk9PntHLnJlbW92ZUZpZWxkKFUpfSkpfWxldCB3aT17bmFtZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sY2hlY2tlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LHR5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6InN3aXRjaCJ9LGlkOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxkaXNhYmxlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjMDA3YWZmIn19LGhpPXtzd2l0Y2g6InN3aXRjaCIsY2hlY2tib3g6ImNoZWNrYm94In0sd289e3dpZHRoOjUyLGhlaWdodDozMn0sX2E9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IlN3aXRjaCIscHJvcHM6d2ksZW1pdHM6WyJjaGFuZ2UiXSxzZXR1cCh5LHtlbWl0OkR9KXtsZXQgRz1PLnJlZihudWxsKSxVPU8ucmVmKHkuY2hlY2tlZCksUT1TaSh5LFUpLGVlPURuKEcsRCk7Ty53YXRjaCgoKT0+eS5jaGVja2VkLFNlPT57VS52YWx1ZT1TZX0pO2xldCBwZT17b25DaGFuZ2UoU2Upe1UudmFsdWU9U2UuZGV0YWlsLnZhbHVlLGVlKCJjaGFuZ2UiLHt2YWx1ZTpVLnZhbHVlfSl9fSxDZT0oU2UsSWUpPT57eS5kaXNhYmxlZHx8KFUudmFsdWU9IVUudmFsdWUsZWUoImNoYW5nZSIse3ZhbHVlOlUudmFsdWV9KSl9O3JldHVybiBRJiYoUS5hZGRIYW5kbGVyKENlKSxPLm9uQmVmb3JlVW5tb3VudCgoKT0+e1EucmVtb3ZlSGFuZGxlcihDZSl9KSksam4oeSx7ImxhYmVsLWNsaWNrIjpDZX0pLCgpPT57bGV0e2NvbG9yOlNlLHR5cGU6SWUsZGlzYWJsZWQ6YmV9PXk7cmV0dXJuIE8uY3JlYXRlVk5vZGUoImRpdiIse3JlZjpHfSxbSWU9PT1oaS5zd2l0Y2g/Ty5jcmVhdGVWTm9kZSgiZGMtc3dpdGNoIixPLm1lcmdlUHJvcHMoe2RhdGFVbmNUeXBlOiJ1bmktc3dpdGNoIn0scGUse2NoZWNrZWQ6VS52YWx1ZSxjb2xvcjpTZSxkaXNhYmxlZDpiZX0se3N0eWxlOndvfSksbnVsbCk6bnVsbCxJZT09PWhpLmNoZWNrYm94P08uY3JlYXRlVk5vZGUoTy5yZXNvbHZlQ29tcG9uZW50KCJjaGVja2JveCIpLE8ubWVyZ2VQcm9wcyh7c3R5bGU6e2NvbG9yOlNlfX0se2NoZWNrZWQ6VS52YWx1ZX0scGUpLG51bGwpOm51bGxdKX19fSk7ZnVuY3Rpb24gU2koeSxEKXtsZXQgRz1PLmluamVjdChmciwhMSksVT1PLmluamVjdChpciwhMSksUT17c3VibWl0OigpPT57bGV0IGVlPVsiIixudWxsXTtyZXR1cm4geS5uYW1lJiYoZWVbMF09eS5uYW1lLGVlWzFdPUQudmFsdWUpLGVlfSxyZXNldDooKT0+e0QudmFsdWU9ITF9fTtyZXR1cm4gRyYmKEcuYWRkRmllbGQoUSksTy5vblVubW91bnRlZCgoKT0+e0cucmVtb3ZlRmllbGQoUSl9KSksVX1sZXQgTGk9e2NoZWNrZWQ6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxpZDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sZGlzYWJsZWQ6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxjb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIzAwN2FmZiJ9LHZhbHVlOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifX0sc3I9SHIoInVjZyIpLERyPXtuYW1lOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifX0sbm89W3sidW5pLWNoZWNrYm94Ijp7IiI6e2ZsZXhEaXJlY3Rpb246InJvdyIsYWxpZ25JdGVtczoiY2VudGVyIn19LCJ1bmktY2hlY2tib3gtaW5wdXQiOnsiIjp7anVzdGlmeUNvbnRlbnQ6ImNlbnRlciIsYWxpZ25JdGVtczoiY2VudGVyIixwb3NpdGlvbjoicmVsYXRpdmUiLGJvcmRlcldpZHRoOiIxIixib3JkZXJDb2xvcjoiI2QxZDFkMSIsYm9yZGVyU3R5bGU6InNvbGlkIixiYWNrZ3JvdW5kQ29sb3I6IiNmZmZmZmYiLGJvcmRlclJhZGl1czoiMyIsd2lkdGg6IjIyIixoZWlnaHQ6IjIyIn19LCJ1bmktaWNvbiI6eyIiOntmb250RmFtaWx5OiJ1bmluY29tcG9uZW50cyIsZm9udFNpemU6IjE2IixtYXJnaW5MZWZ0OiIyIixtYXJnaW5Ub3A6IjIiLGNvbG9yOiIjMDA3YWZmIn19LCJ1bmktY2hlY2tib3gtaW5wdXQtZGlzYWJsZWQiOnsiIjp7YmFja2dyb3VuZENvbG9yOiIjZTFlMWUxIn19LCJ1bmktY2hlY2tib3gtaW5wdXQtZGlzYWJsZWQtYmVmb3JlIjp7IiI6e2NvbG9yOiIjYWRhZGFkIn19LCJ1bmktY2hlY2tib3gtc2xvdCI6eyIiOntmb250U2l6ZToiMTYiLG1hcmdpbkxlZnQ6IjUifX19XSwkbz1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiQ2hlY2tib3giLHByb3BzOkxpLHN0eWxlczpubyxzZXR1cCh5LHtzbG90czpEfSl7bGV0IEc9Ty5yZWYobnVsbCksVT1PLnJlZih5LmNoZWNrZWQpLFE9Ty5yZWYoeS52YWx1ZSksZWU9Ty5jb21wdXRlZCgoKT0+eS5kaXNhYmxlZD8iI2FkYWRhZCI6eS5jb2xvcikscGU9KCk9PntVLnZhbHVlPSExfSxDZT0oSGUsX3QpPT57eS5kaXNhYmxlZHx8KFUudmFsdWU9IVUudmFsdWUsU2UmJlNlLmNoZWNrYm94Q2hhbmdlKEhlKSl9LHt1bmlDaGVja0dyb3VwOlNlLHVuaUxhYmVsOkllfT1TbyhVLFEscGUpO0llJiYoSWUuYWRkSGFuZGxlcihDZSksTy5vbkJlZm9yZVVubW91bnQoKCk9PntJZS5yZW1vdmVIYW5kbGVyKENlKX0pKSxqbih5LHsibGFiZWwtY2xpY2siOkNlfSksTy53YXRjaChbKCk9PnkuY2hlY2tlZCwoKT0+eS52YWx1ZV0sKFtIZSxfdF0pPT57VS52YWx1ZT1IZSxRLnZhbHVlPV90fSk7bGV0IGJlPSgpPT57aWYoIUQuZGVmYXVsdClyZXR1cm5bXTtsZXQgSGU9RC5kZWZhdWx0KCk7cmV0dXJuIEhlLmxlbmd0aD09PTEmJkhlWzBdLnR5cGU9PT1UZXh0P1tIdChIZVswXS5jaGlsZHJlbix7Y2xhc3M6InVuaS1jaGVja2JveC1zbG90In0pXTpIZX07cmV0dXJuKCk9Pk8uY3JlYXRlVk5vZGUoImRpdiIsTy5tZXJnZVByb3BzKHtyZWY6R30se2RhdGFVbmNUeXBlOiJ1bmktY2hlY2tib3gifSx7b25DbGljazpDZSxjbGFzczoidW5pLWNoZWNrYm94In0pLFtPLmNyZWF0ZVZOb2RlKCJkaXYiLHtjbGFzczpbInVuaS1jaGVja2JveC1pbnB1dCIseyJ1bmktY2hlY2tib3gtaW5wdXQtZGlzYWJsZWQiOnkuZGlzYWJsZWR9XX0sW1UudmFsdWU/SHQoIlx1RUEwOCIse2NsYXNzOiJ1bmktaWNvbiIsc3R5bGU6e2NvbG9yOmVlLnZhbHVlfX0pOm51bGxdKSwuLi5iZSgpXSl9fSk7ZnVuY3Rpb24gU28oeSxELEcpe2xldCBVPU8uY29tcHV0ZWQoKCk9Pih7Y2hlY2tib3hDaGVja2VkOkJvb2xlYW4oeS52YWx1ZSksdmFsdWU6RC52YWx1ZX0pKSxRPXtyZXNldDpHfSxlZT1PLmluamVjdChzciwhMSk7ZWUmJmVlLmFkZEZpZWxkKFUpO2xldCBwZT1PLmluamVjdChmciwhMSk7cGUmJnBlLmFkZEZpZWxkKFEpO2xldCBDZT1PLmluamVjdChpciwhMSk7cmV0dXJuIE8ub25CZWZvcmVVbm1vdW50KCgpPT57ZWUmJmVlLnJlbW92ZUZpZWxkKFUpLHBlJiZwZS5yZW1vdmVGaWVsZChRKX0pLHt1bmlDaGVja0dyb3VwOmVlLHVuaUZvcm06cGUsdW5pTGFiZWw6Q2V9fWxldCBDaT1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiQ2hlY2tib3hHcm91cCIscHJvcHM6RHIsZW1pdHM6WyJjaGFuZ2UiXSxzZXR1cCh5LHtzbG90czpELGVtaXQ6R30pe2xldCBVPU8ucmVmKG51bGwpLFE9RG4oVSxHKTtyZXR1cm4gcGkoeSxRKSwoKT0+Ty5jcmVhdGVWTm9kZSgiZGl2Iix7cmVmOlUsY2xhc3M6InVuaS1jaGVja2JveC1ncm91cCJ9LFtELmRlZmF1bHQmJkQuZGVmYXVsdCgpXSl9fSk7ZnVuY3Rpb24gcGkoeSxEKXtsZXQgRz1bXSxVPSgpPT5HLnJlZHVjZSgoZWUscGUpPT4ocGUudmFsdWUuY2hlY2tib3hDaGVja2VkJiZlZS5wdXNoKHBlLnZhbHVlLnZhbHVlKSxlZSksbmV3IEFycmF5KTtPLnByb3ZpZGUoc3Ise2FkZEZpZWxkKGVlKXtHLnB1c2goZWUpfSxyZW1vdmVGaWVsZChlZSl7Ry5zcGxpY2UoRy5pbmRleE9mKGVlKSwxKX0sY2hlY2tib3hDaGFuZ2UoZWUpe0QoImNoYW5nZSIse3ZhbHVlOlUoKX0pfX0pO2xldCBRPU8uaW5qZWN0KGZyLCExKTtyZXR1cm4gUSYmUS5hZGRGaWVsZCh7c3VibWl0OigpPT57bGV0IGVlPVsiIixudWxsXTtyZXR1cm4geS5uYW1lIT09IiImJihlZVswXT15Lm5hbWUsZWVbMV09VSgpKSxlZX19KSxVfWxldCBVbz17Y2hlY2tlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LGlkOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSxkaXNhYmxlZDp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjMDA3YWZmIn0sdmFsdWU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9fSxNPUhyKCJ1Y2ciKSxaPXtuYW1lOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifX0sdmU9W3sidW5pLXJhZGlvIjp7IiI6e2FsaWduSXRlbXM6ImNlbnRlciIsZmxleERpcmVjdGlvbjoicm93In19LCJ1bmktcmFkaW8taW5wdXQiOnsiIjp7cG9zaXRpb246InJlbGF0aXZlIixhbGlnbkl0ZW1zOiJjZW50ZXIiLGp1c3RpZnlDb250ZW50OiJjZW50ZXIiLG1hcmdpblJpZ2h0OiI1Iixib3JkZXJTdHlsZToic29saWQiLGJvcmRlcldpZHRoOiIxIixib3JkZXJDb2xvcjoiI2QxZDFkMSIsYm9yZGVyUmFkaXVzOjUwLHdpZHRoOiIyMiIsaGVpZ2h0OiIyMiIsb3V0bGluZTowfX0sInVuaS1yYWRpby1pbnB1dC1pY29uIjp7IiI6e2ZvbnRGYW1pbHk6InVuaW5jb21wb25lbnRzIixmb250U2l6ZToiMTQiLGNvbG9yOiIjZmZmZmZmIn19LCJ1bmktcmFkaW8taW5wdXQtZGlzYWJsZWQiOnsiIjp7YmFja2dyb3VuZENvbG9yOiIjZTFlMWUxIixib3JkZXJDb2xvcjoiI2QxZDFkMSIsY29sb3I6IiNhZGFkYWQifX0sInVuaS1yYWRpby1zbG90Ijp7IiI6e2ZvbnRTaXplOiIxNiIsbWFyZ2luTGVmdDoiNSJ9fX1dLGNlPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJSYWRpbyIscHJvcHM6VW8sc3R5bGVzOnZlLGVtaXRzOlsiY2hhbmdlIl0sc2V0dXAoeSx7c2xvdHM6RH0pe2xldCBHPU8ucmVmKG51bGwpLFU9Ty5yZWYoeS5jaGVja2VkKSxRPU8ucmVmKHkudmFsdWUpLGVlPU8uY29tcHV0ZWQoKCk9PntsZXQgX3Q9eS5kaXNhYmxlZD8iI2FkYWRhZCI6eS5jb2xvcjtyZXR1cm4gVS52YWx1ZT97YmFja2dyb3VuZENvbG9yOl90LGJvcmRlckNvbG9yOl90fTp7Ym9yZGVyQ29sb3I6IiNkMWQxZDEifX0pLHBlPSgpPT57VS52YWx1ZT0hMX0se3VuaUNoZWNrR3JvdXA6Q2UsdW5pTGFiZWw6U2UsZmllbGQ6SWV9PWhlKFUsUSxwZSksYmU9KF90LE50KT0+e3kuZGlzYWJsZWR8fChVLnZhbHVlPSFVLnZhbHVlLENlJiZDZS5yYWRpb0NoYW5nZShfdCxJZSkpfTtTZSYmKFNlLmFkZEhhbmRsZXIoYmUpLE8ub25CZWZvcmVVbm1vdW50KCgpPT57U2UucmVtb3ZlSGFuZGxlcihiZSl9KSksam4oeSx7ImxhYmVsLWNsaWNrIjpiZX0pLE8ud2F0Y2goWygpPT55LmNoZWNrZWQsKCk9PnkudmFsdWVdLChbX3QsTnRdKT0+e1UudmFsdWU9X3QsUS52YWx1ZT1OdH0pO2xldCBIZT0oKT0+e2lmKCFELmRlZmF1bHQpcmV0dXJuW107bGV0IF90PUQuZGVmYXVsdCgpO3JldHVybiBfdC5sZW5ndGg9PT0xJiZfdFswXS50eXBlPT09VGV4dD9bSHQoX3RbMF0uY2hpbGRyZW4se2NsYXNzOiJ1bmktcmFkaW8tc2xvdCJ9KV06X3R9O3JldHVybigpPT57bGV0e2Rpc2FibGVkOl90fT15O3JldHVybiBPLmNyZWF0ZVZOb2RlKCJkaXYiLE8ubWVyZ2VQcm9wcyh7cmVmOkd9LHtkYXRhVW5jVHlwZToidW5pLXJhZGlvIn0se29uQ2xpY2s6YmUsY2xhc3M6InVuaS1yYWRpbyJ9KSxbTy5jcmVhdGVWTm9kZSgiZGl2Iix7c3R5bGU6ZWUudmFsdWUsY2xhc3M6WyJ1bmktcmFkaW8taW5wdXQiLHsidW5pLXJhZGlvLWlucHV0LWRpc2FibGVkIjpfdH1dfSxbVS52YWx1ZT9IdCgiXHVFQTA4Iix7Y2xhc3M6InVuaS1yYWRpby1pbnB1dC1pY29uIn0pOm51bGxdKSwuLi5IZSgpXSl9fX0pO2Z1bmN0aW9uIGhlKHksRCxHKXtsZXQgVT1PLmNvbXB1dGVkKHtnZXQ6KCk9Pih7cmFkaW9DaGVja2VkOkJvb2xlYW4oeS52YWx1ZSksdmFsdWU6RC52YWx1ZX0pLHNldDooe3JhZGlvQ2hlY2tlZDpTZX0pPT57eS52YWx1ZT1TZX19KSxRPXtyZXNldDpHfSxlZT1PLmluamVjdChNLCExKTtlZSYmZWUuYWRkRmllbGQoVSk7bGV0IHBlPU8uaW5qZWN0KGZyLCExKTtwZSYmcGUuYWRkRmllbGQoUSk7bGV0IENlPU8uaW5qZWN0KGlyLCExKTtyZXR1cm4gTy5vbkJlZm9yZVVubW91bnQoKCk9PntlZSYmZWUucmVtb3ZlRmllbGQoVSkscGUmJnBlLnJlbW92ZUZpZWxkKFEpfSkse3VuaUNoZWNrR3JvdXA6ZWUsdW5pRm9ybTpwZSx1bmlMYWJlbDpDZSxmaWVsZDpVfX1sZXQgU3Q9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IlJhZGlvR3JvdXAiLHByb3BzOlosZW1pdHM6WyJjaGFuZ2UiXSxzZXR1cCh5LHtzbG90czpELGVtaXQ6R30pe2xldCBVPU8ucmVmKG51bGwpLFE9RG4oVSxHKTtyZXR1cm4gSyh5LFEpLCgpPT5PLmNyZWF0ZVZOb2RlKCJkaXYiLHtyZWY6VX0sW0QuZGVmYXVsdCYmRC5kZWZhdWx0KCldKX19KTtmdW5jdGlvbiBLKHksRCl7bGV0IEc9W107Ty5vbk1vdW50ZWQoKCk9PntDZShHLmxlbmd0aC0xKX0pO2xldCBVPSgpPT57dmFyIFNlO3JldHVybihTZT1HLmZpbmQoSWU9PkllLnZhbHVlLnJhZGlvQ2hlY2tlZCkpPT1udWxsP3ZvaWQgMDpTZS52YWx1ZS52YWx1ZX07Ty5wcm92aWRlKE0se2FkZEZpZWxkKFNlKXtHLnB1c2goU2UpfSxyZW1vdmVGaWVsZChTZSl7Ry5zcGxpY2UoRy5pbmRleE9mKFNlKSwxKX0scmFkaW9DaGFuZ2UoU2UsSWUpe2xldCBiZT1HLmluZGV4T2YoSWUpO0NlKGJlLCEwKSxEKCJjaGFuZ2UiLHt2YWx1ZTpVKCl9KX19KTtsZXQgUT1PLmluamVjdChmciwhMSksZWU9e3N1Ym1pdDooKT0+e2xldCBTZT1bIiIsbnVsbF07cmV0dXJuIHkubmFtZSE9PSIiJiYoU2VbMF09eS5uYW1lLFNlWzFdPVUoKSksU2V9fTtRJiYoUS5hZGRGaWVsZChlZSksTy5vbkJlZm9yZVVubW91bnQoKCk9PntRLnJlbW92ZUZpZWxkKGVlKX0pKTtmdW5jdGlvbiBwZShTZSxJZSl7U2UudmFsdWU9e3JhZGlvQ2hlY2tlZDpJZSx2YWx1ZTpTZS52YWx1ZS52YWx1ZX19ZnVuY3Rpb24gQ2UoU2UsSWUpe0cuZm9yRWFjaCgoYmUsSGUpPT57SGUhPT1TZSYmSWUmJnBlKEdbSGVdLCExKX0pfXJldHVybiBHfWxldCBZPVsidS1pbnB1dCIsInUtdGV4dGFyZWEiXSx1ZT1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiRm9ybSIsZW1pdHM6WyJzdWJtaXQiLCJyZXNldCJdLHNldHVwKHt9LHtzbG90czp5LGVtaXQ6RH0pe2xldCBHPU8ucmVmKG51bGwpLFU9RG4oRyxEKSxRPVtdLGVlO3JldHVybiBPLnByb3ZpZGUoZnIse2FkZEZpZWxkKHBlKXtRLnB1c2gocGUpfSxyZW1vdmVGaWVsZChwZSl7US5zcGxpY2UoUS5pbmRleE9mKHBlKSwxKX0sc3VibWl0KHBlKXtsZXQgQ2U9e307ZWUmJmVlKENlKTtsZXQgU2U9US5yZWR1Y2UoKEllLGJlKT0+e2lmKGJlLnN1Ym1pdCl7bGV0W0hlLF90XT1iZS5zdWJtaXQoKTtIZSYmKEllW0hlXT1fdCl9cmV0dXJuIEllfSxPYmplY3QuY3JlYXRlKG51bGwpKTtPYmplY3QuYXNzaWduKENlLFNlKSxVKCJzdWJtaXQiLHt2YWx1ZTpDZX0pfSxyZXNldChwZSl7ZWUmJmVlKCksUS5mb3JFYWNoKENlPT5DZS5yZXNldCYmQ2UucmVzZXQoKSksVSgicmVzZXQiLHBlKX19KSwoKT0+e2xldCBwZT15LmRlZmF1bHQmJnkuZGVmYXVsdCgpO3JldHVybiBlZT1CZShwZSksTy5jcmVhdGVWTm9kZSgidmlldyIse3JlZjpHfSxbcGVdKX19fSk7ZnVuY3Rpb24gQmUoeSl7bGV0IEQ9Qy5yZXF1aXJlTW9kdWxlKCJwbHVzIiksRz0oVSxRKT0+eyhRfHx5fHxbXSkuZm9yRWFjaChmdW5jdGlvbihlZSl7WS5pbmRleE9mKFN0cmluZyhlZS50eXBlKSk+PTAmJmVlLmVsJiZlZS5lbC5hdHRyJiZlZS5lbC5hdHRyLm5hbWUmJihVP1VbZWUuZWwuYXR0ci5uYW1lXT1ELmdldFZhbHVlKGVlLmVsLm5vZGVJZCk6ZWUuZWwuc2V0VmFsdWUoIiIpKSxpZS5pc0FycmF5KGVlLmNoaWxkcmVuKSYmZWUuY2hpbGRyZW4mJmVlLmNoaWxkcmVuLmxlbmd0aCYmRyhVLGVlLmNoaWxkcmVuKX0pfTtyZXR1cm4gR31sZXQgbHQ9e3R5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LHNpemU6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6MjN9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifX0senQ9e3N1Y2Nlc3M6IiMwOWJiMDciLGluZm86IiMxMGFlZmYiLHdhcm46IiNmNzYyNjAiLHdhaXRpbmc6IiMxMGFlZmYiLHNhZmVfc3VjY2VzczoiIzA5YmIwNyIsc2FmZV93YXJuOiIjZmZiZTAwIixzdWNjZXNzX2NpcmNsZToiIzA5YmIwNyIsc3VjY2Vzc19ub19jaXJjbGU6IiMwOWJiMDciLHdhaXRpbmdfY2lyY2xlOiIjMTBhZWZmIixjaXJjbGU6IiNjOWM5YzkiLGRvd25sb2FkOiIjMDliYjA3IixpbmZvX2NpcmNsZToiIzA5YmIwNyIsY2FuY2VsOiIjZjQzNTMwIixzZWFyY2g6IiNiMmIyYjIiLGNsZWFyOiIjYjJiMmIyIn0sU249e3N1Y2Nlc3M6Ilx1RUEwNiIsaW5mbzoiXHVFQTAzIix3YXJuOiJcdUVBMEIiLHdhaXRpbmc6Ilx1RUEwOSIsc2FmZV9zdWNjZXNzOiJcdUVBMDQiLHNhZmVfd2FybjoiXHVFQTA1IixzdWNjZXNzX2NpcmNsZToiXHVFQTA3IixzdWNjZXNzX25vX2NpcmNsZToiXHVFQTA4Iix3YWl0aW5nX2NpcmNsZToiXHVFQTBBIixjaXJjbGU6Ilx1RUEwMSIsZG93bmxvYWQ6Ilx1RUEwMiIsaW5mb19jaXJjbGU6Ilx1RUEwQyIsY2FuY2VsOiJcdUVBMEQiLHNlYXJjaDoiXHVFQTBFIixjbGVhcjoiXHVFQTBGIn0sWG49W3sidW5pLWljb24iOnsiIjp7Zm9udEZhbWlseToidW5pbmNvbXBvbmVudHMifX19XSxRcj1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiSWNvbiIscHJvcHM6bHQsc3R5bGVzOlhuLHNldHVwKHkse30pe3JldHVybigpPT5IdChTblt5LnR5cGVdLHtjbGFzczoidW5pLWljb24iLHN0eWxlOntjb2xvcjp5LmNvbG9yfHx6dFt5LnR5cGVdLGZvbnRTaXplOnkuc2l6ZX19KX19KSxMcj17aW5kaWNhdG9yRG90czp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LHZlcnRpY2FsOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX0sYXV0b3BsYXk6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OiExfSxjaXJjdWxhcjp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ITF9LGludGVydmFsOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjVlM30sZHVyYXRpb246e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NTAwfSxjdXJyZW50Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9LGluZGljYXRvckNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiJyZ2JhKDAsMCwwLC4zKSJ9LGluZGljYXRvckFjdGl2ZUNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIjMDAwMDAwIn0scHJldmlvdXNNYXJnaW46e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LG5leHRNYXJnaW46e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LGN1cnJlbnRJdGVtSWQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6IiJ9LHNraXBIaWRkZW5JdGVtTGF5b3V0Ont0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX0sZGlzcGxheU11bHRpcGxlSXRlbXM6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MX0sZGlzYWJsZVRvdWNoOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDohMX19LHJvPUMuY29uZmlnLmVudi5wbGF0Zm9ybS50b0xvd2VyQ2FzZSgpPT09ImFuZHJvaWQiLGJyPVt7InVuaS1zd2lwZXIiOnsiIjp7cG9zaXRpb246InJlbGF0aXZlIixoZWlnaHQ6IjE1MHB4In19LCJ1bmktc3dpcGVyLXNsaWRlciI6eyIiOntwb3NpdGlvbjoiYWJzb2x1dGUiLGxlZnQ6MCx0b3A6MCxyaWdodDowLGJvdHRvbTowfX0sInVuaS1zd2lwZXItZG90cyI6eyIiOntwb3NpdGlvbjoiYWJzb2x1dGUiLGxlZnQ6MCxyaWdodDowLGJvdHRvbToiMTAiLGhlaWdodDoiMTAifX19XSxnaT1PLmRlZmluZUNvbXBvbmVudCh7bmFtZToiU3dpcGVyIixwcm9wczpMcixzdHlsZXM6YnIsZW1pdHM6WyJjaGFuZ2UiLCJ0cmFuc2l0aW9uIiwiYW5pbWF0aW9uZmluaXNoIl0sc2V0dXAoeSx7c2xvdHM6RCxlbWl0Okd9KXtsZXQgVT1PLnJlZihudWxsKSxRPVtdLGVlPURuKFUsRykscGU9aW8oeSksQ2U9b28ocGUseSxRLGVlKTtyZXR1cm4gTy53YXRjaChbKCk9PnkuY3VycmVudCwoKT0+eS5jdXJyZW50SXRlbUlkXSwoW1NlLEllXSk9PntuYShwZSx5LFEpfSksTy5vbk1vdW50ZWQoKCk9Pnt2KCgpPT57S24oVS52YWx1ZSkudGhlbigoe3dpZHRoOlNlLGhlaWdodDpJZX0pPT57cGUuc3dpcGVyV2lkdGg9U2UscGUuc3dpcGVySGVpZ2h0PUllfSl9LDUwKX0pLCgpPT57bGV0IFNlPUQuZGVmYXVsdCYmRC5kZWZhdWx0KCkse2luZGljYXRvclN0eWxlOkllLGN1cnJlbnRTeW5jOmJlfT1wZTtyZXR1cm4gUT1nbyhTZSksTy5jcmVhdGVWTm9kZSgiZGl2Iix7cmVmOlUsY2xhc3M6InVuaS1zd2lwZXIifSxbTy5jcmVhdGVWTm9kZSgic2xpZGVyIixPLm1lcmdlUHJvcHMoe2NsYXNzOiJ1bmktc3dpcGVyLXNsaWRlciJ9LHthdXRvUGxheTp5LmF1dG9wbGF5LGludGVydmFsOnkuaW50ZXJ2YWwsaW5kZXg6YmUsa2VlcEluZGV4OiEwLHNob3dJbmRpY2F0b3JzOnkuaW5kaWNhdG9yRG90cyxpbmZpbml0ZTp5LmNpcmN1bGFyLHZlcnRpY2FsOnkudmVydGljYWwsc2Nyb2xsYWJsZToheS5kaXNhYmxlVG91Y2h9LENlKSxbUSxPLmNyZWF0ZVZOb2RlKCJpbmRpY2F0b3IiLHtjbGFzczoidW5pLXN3aXBlci1kb3RzIixzdHlsZTpJZX0sbnVsbCldKV0pfX19KTtmdW5jdGlvbiBpbyh5KXtsZXQgRD1PLnJlZigwKSxHPU8ucmVmKDApLFU9Ty5yZWYoeS5jdXJyZW50KSxRPU8ucmVmKCJhdXRvcGxheSIpLGVlPU8uY29tcHV0ZWQoKCk9Pih7aXRlbUNvbG9yOnkuaW5kaWNhdG9yQ29sb3IsaXRlbVNlbGVjdGVkQ29sb3I6eS5pbmRpY2F0b3JBY3RpdmVDb2xvcixpdGVtU2l6ZTo4LG9wYWNpdHk6eS5pbmRpY2F0b3JEb3RzPzE6MH0pKTtyZXR1cm4gTy5yZWFjdGl2ZSh7c3dpcGVyV2lkdGg6RCxzd2lwZXJIZWlnaHQ6RyxpbmRpY2F0b3JTdHlsZTplZSxjdXJyZW50U3luYzpVLGN1cnJlbnRDaGFuZ2VTb3VyY2U6UX0pfWZ1bmN0aW9uIG9vKHksRCxHLFUpe2xldCBRPTAsZWU9YmU9PntsZXQgSGU9YmUuZGV0YWlsLF90PUQudmVydGljYWwsTnQ9KF90P0hlLm9mZnNldFlSYXRpbzpIZS5vZmZzZXRYUmF0aW8pfHwwO2lmKChiZS5kcmFnfHxiZS5kcmFnKSYmKHkuY3VycmVudENoYW5nZVNvdXJjZT0idG91Y2giKSxOdD09PTApe2xldCBXdD1NYXRoLmFicyhRKTtpZihXdD09PTEpcmV0dXJuO1d0Pi41JiYoTnQ9MSl9UT1OdCxVKCJ0cmFuc2l0aW9uIix7ZHg6X3Q/MDoteS5zd2lwZXJXaWR0aCpOdCxkeTpfdD8teS5zd2lwZXJIZWlnaHQqTnQ6MH0pfSxwZT1iZT0+e2xldCBIZT0oKT0+e1UoImFuaW1hdGlvbmZpbmlzaCIsU2UoKSkseS5jdXJyZW50Q2hhbmdlU291cmNlPSJhdXRvcGxheSJ9O3JvP0hlKCk6dihIZSw1MCl9LENlPWJlPT57aWUuaXNTdHJpbmcoYmUuZGV0YWlsLnNvdXJjZSkmJih5LmN1cnJlbnRDaGFuZ2VTb3VyY2U9YmUuZGV0YWlsLnNvdXJjZSkseS5jdXJyZW50U3luYz1iZS5kZXRhaWwuaW5kZXgsUT0wfTtmdW5jdGlvbiBTZSgpe2xldCBiZT1OdW1iZXIoeS5jdXJyZW50U3luYyksSGU9R1tiZV18fHt9LF90PUhlLmNvbXBvbmVudEluc3RhbmNlJiZIZS5jb21wb25lbnRJbnN0YW5jZS5pdGVtSWR8fCIiO3JldHVybntjdXJyZW50OmJlLGN1cnJlbnRJdGVtSWQ6X3Qsc291cmNlOnkuY3VycmVudENoYW5nZVNvdXJjZX19cmV0dXJuIE8ud2F0Y2goKCk9PnkuY3VycmVudFN5bmMsYmU9PntVKCJjaGFuZ2UiLFNlKCkpfSkse29uU2Nyb2xsOmVlLG9uU2Nyb2xsZW5kOnBlLG9uQ2hhbmdlOkNlfX1mdW5jdGlvbiBuYSh5LEQsRyl7bGV0IFU9LTE7aWYoRC5jdXJyZW50SXRlbUlkKWZvcihsZXQgUT0wLGVlPUc7UTxlZS5sZW5ndGg7USsrKXtsZXQgcGU9ZWVbUV0uY29tcG9uZW50SW5zdGFuY2U7aWYocGUmJnBlLml0ZW1JZD09PUQuY3VycmVudEl0ZW1JZCl7VT1RO2JyZWFrfX1VPDAmJihVPU1hdGgucm91bmQoTnVtYmVyKEQuY3VycmVudCkpfHwwKSxVPVU8MD8wOlUseS5jdXJyZW50U3luYyE9PVUmJih5LmN1cnJlbnRDaGFuZ2VTb3VyY2U9IiIseS5jdXJyZW50U3luYz1VKX1sZXQgUW49e2l0ZW1JZDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn19LEZyPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJTd2lwZXJJdGVtIixwcm9wczpRbixzZXR1cCh5LHtzbG90czpEfSl7cmV0dXJuKCk9Pk8uY3JlYXRlVk5vZGUoImRpdiIse2NsYXNzOiJ1bmktc3dpcGVyLWl0ZW0iLHN0eWxlOntwb3NpdGlvbjoiYWJzb2x1dGUiLGxlZnQ6MCx0b3A6MCxyaWdodDowLGJvdHRvbTowLG92ZXJmbG93OiJoaWRkZW4ifX0sW0QuZGVmYXVsdCYmRC5kZWZhdWx0KCldKX19KTt2YXIgUGE9L148KFstQS1aYS16MC05X10rKSgoPzpccytbYS16QS1aXzpdWy1hLXpBLVowLTlfOi5dKig/OlxzKj1ccyooPzooPzoiW14iXSoiKXwoPzonW14nXSonKXxbXj5cc10rKSk/KSopXHMqKFwvPyk+LyxOYT0vXjxcLyhbLUEtWmEtejAtOV9dKylbXj5dKj4vLHpyPS8oW2EtekEtWl86XVstYS16QS1aMC05XzouXSopKD86XHMqPVxzKig/Oig/OiIoKD86XFwufFteIl0pKikiKXwoPzonKCg/OlxcLnxbXiddKSopJyl8KFtePlxzXSspKSk/L2csVnM9UG4oImFyZWEsYmFzZSxiYXNlZm9udCxicixjb2wsZnJhbWUsaHIsaW1nLGlucHV0LGxpbmssbWV0YSxwYXJhbSxlbWJlZCxjb21tYW5kLGtleWdlbixzb3VyY2UsdHJhY2ssd2JyIiksJHM9UG4oImEsYWRkcmVzcyxhcnRpY2xlLGFwcGxldCxhc2lkZSxhdWRpbyxibG9ja3F1b3RlLGJ1dHRvbixjYW52YXMsY2VudGVyLGRkLGRlbCxkaXIsZGl2LGRsLGR0LGZpZWxkc2V0LGZpZ2NhcHRpb24sZmlndXJlLGZvb3Rlcixmb3JtLGZyYW1lc2V0LGgxLGgyLGgzLGg0LGg1LGg2LGhlYWRlcixoZ3JvdXAsaHIsaWZyYW1lLGlzaW5kZXgsbGksbWFwLG1lbnUsbm9mcmFtZXMsbm9zY3JpcHQsb2JqZWN0LG9sLG91dHB1dCxwLHByZSxzZWN0aW9uLHNjcmlwdCx0YWJsZSx0Ym9keSx0ZCx0Zm9vdCx0aCx0aGVhZCx0cix1bCx2aWRlbyIpLGlsPVBuKCJhYmJyLGFjcm9ueW0sYXBwbGV0LGIsYmFzZWZvbnQsYmRvLGJpZyxicixidXR0b24sY2l0ZSxjb2RlLGRlbCxkZm4sZW0sZm9udCxpLGlmcmFtZSxpbWcsaW5wdXQsaW5zLGtiZCxsYWJlbCxtYXAsb2JqZWN0LHEscyxzYW1wLHNjcmlwdCxzZWxlY3Qsc21hbGwsc3BhbixzdHJpa2Usc3Ryb25nLHN1YixzdXAsdGV4dGFyZWEsdHQsdSx2YXIiKSxDbz1QbigiY29sZ3JvdXAsZGQsZHQsbGksb3B0aW9ucyxwLHRkLHRmb290LHRoLHRoZWFkLHRyIiksT2k9UG4oImNoZWNrZWQsY29tcGFjdCxkZWNsYXJlLGRlZmVyLGRpc2FibGVkLGlzbWFwLG11bHRpcGxlLG5vaHJlZixub3Jlc2l6ZSxub3NoYWRlLG5vd3JhcCxyZWFkb25seSxzZWxlY3RlZCIpLGthPVBuKCJzY3JpcHQsc3R5bGUiKTtmdW5jdGlvbiBObCh5LEQpe3ZhciBHLFUsUSxlZT1bXSxwZT15O2ZvcihlZS5sYXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbdGhpcy5sZW5ndGgtMV19O3k7KXtpZihVPSEwLCFlZS5sYXN0KCl8fCFrYVtlZS5sYXN0KCldKXtpZih5LmluZGV4T2YoIjwhLS0iKT09MD8oRz15LmluZGV4T2YoIi0tPiIpLEc+PTAmJihELmNvbW1lbnQmJkQuY29tbWVudCh5LnN1YnN0cmluZyg0LEcpKSx5PXkuc3Vic3RyaW5nKEcrMyksVT0hMSkpOnkuaW5kZXhPZigiPC8iKT09MD8oUT15Lm1hdGNoKE5hKSxRJiYoeT15LnN1YnN0cmluZyhRWzBdLmxlbmd0aCksUVswXS5yZXBsYWNlKE5hLEllKSxVPSExKSk6eS5pbmRleE9mKCI8Iik9PTAmJihRPXkubWF0Y2goUGEpLFEmJih5PXkuc3Vic3RyaW5nKFFbMF0ubGVuZ3RoKSxRWzBdLnJlcGxhY2UoUGEsU2UpLFU9ITEpKSxVKXtHPXkuaW5kZXhPZigiPCIpO3ZhciBDZT1HPDA/eTp5LnN1YnN0cmluZygwLEcpO3k9RzwwPyIiOnkuc3Vic3RyaW5nKEcpLEQuY2hhcnMmJkQuY2hhcnMoQ2UpfX1lbHNlIHk9eS5yZXBsYWNlKG5ldyBSZWdFeHAoIihbXFxzXFxTXSo/KTwvIitlZS5sYXN0KCkrIltePl0qPiIpLGZ1bmN0aW9uKGJlLEhlKXtyZXR1cm4gSGU9SGUucmVwbGFjZSgvPCEtLShbXHNcU10qPyktLT58PCFcW0NEQVRBXFsoW1xzXFNdKj8pXV0+L2csIiQxJDIiKSxELmNoYXJzJiZELmNoYXJzKEhlKSwiIn0pLEllKCIiLGVlLmxhc3QoKSk7aWYoeT09cGUpdGhyb3ciUGFyc2UgRXJyb3I6ICIreTtwZT15fUllKCk7ZnVuY3Rpb24gU2UoYmUsSGUsX3QsTnQpe2lmKEhlPUhlLnRvTG93ZXJDYXNlKCksJHNbSGVdKWZvcig7ZWUubGFzdCgpJiZpbFtlZS5sYXN0KCldOylJZSgiIixlZS5sYXN0KCkpO2lmKENvW0hlXSYmZWUubGFzdCgpPT1IZSYmSWUoIiIsSGUpLE50PVZzW0hlXXx8ISFOdCxOdHx8ZWUucHVzaChIZSksRC5zdGFydCl7dmFyIFd0PVtdO190LnJlcGxhY2UoenIsZnVuY3Rpb24oRXQsaHQpe3ZhciB1dD1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOmFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTpPaVtodF0/aHQ6IiI7V3QucHVzaCh7bmFtZTpodCx2YWx1ZTp1dCxlc2NhcGVkOnV0LnJlcGxhY2UoLyhefFteXFxdKSIvZywnJDFcXCInKX0pfSksRC5zdGFydCYmRC5zdGFydChIZSxXdCxOdCl9fWZ1bmN0aW9uIEllKGJlLEhlKXtpZihIZSlmb3IodmFyIF90PWVlLmxlbmd0aC0xO190Pj0wJiZlZVtfdF0hPUhlO190LS0pO2Vsc2UgdmFyIF90PTA7aWYoX3Q+PTApe2Zvcih2YXIgTnQ9ZWUubGVuZ3RoLTE7TnQ+PV90O050LS0pRC5lbmQmJkQuZW5kKGVlW050XSk7ZWUubGVuZ3RoPV90fX19ZnVuY3Rpb24gUG4oeSl7Zm9yKHZhciBEPXt9LEc9eS5zcGxpdCgiLCIpLFU9MDtVPEcubGVuZ3RoO1UrKylEW0dbVV1dPSEwO3JldHVybiBEfWZ1bmN0aW9uIG9sKHkpe3JldHVybiB5LnJlcGxhY2UoLzxcP3htbC4qXD8+XG4vLCIiKS5yZXBsYWNlKC88IWRvY3R5cGUuKj5cbi8sIiIpLnJlcGxhY2UoLzwhRE9DVFlQRS4qPlxuLywiIil9ZnVuY3Rpb24gdnMoeSl7cmV0dXJuIHkucmVkdWNlKGZ1bmN0aW9uKEQsRyl7bGV0IFU9Ry52YWx1ZSxRPUcubmFtZTtyZXR1cm4gVS5tYXRjaCgvIC8pJiZbInN0eWxlIiwic3JjIl0uaW5kZXhPZihRKT09PS0xJiYoVT1VLnNwbGl0KCIgIikpLERbUV0/QXJyYXkuaXNBcnJheShEW1FdKT9EW1FdLnB1c2goVSk6RFtRXT1bRFtRXSxVXTpEW1FdPVUsRH0se30pfWZ1bmN0aW9uIGFvKHkpe3k9b2woeSk7bGV0IEQ9W10sRz17bm9kZToicm9vdCIsY2hpbGRyZW46W119O3JldHVybiBObCh5LHtzdGFydDpmdW5jdGlvbihVLFEsZWUpe2xldCBwZT17bmFtZTpVfTtpZihRLmxlbmd0aCE9PTAmJihwZS5hdHRycz12cyhRKSksZWUpe2xldCBDZT1EWzBdfHxHO0NlLmNoaWxkcmVufHwoQ2UuY2hpbGRyZW49W10pLENlLmNoaWxkcmVuLnB1c2gocGUpfWVsc2UgRC51bnNoaWZ0KHBlKX0sZW5kOmZ1bmN0aW9uKFUpe2xldCBRPUQuc2hpZnQoKTtpZihRLm5hbWUhPT1VJiZjb25zb2xlLmVycm9yKCJpbnZhbGlkIHN0YXRlOiBtaXNtYXRjaCBlbmQgdGFnIiksRC5sZW5ndGg9PT0wKUcuY2hpbGRyZW4ucHVzaChRKTtlbHNle2xldCBlZT1EWzBdO2VlLmNoaWxkcmVufHwoZWUuY2hpbGRyZW49W10pLGVlLmNoaWxkcmVuLnB1c2goUSl9fSxjaGFyczpmdW5jdGlvbihVKXtsZXQgUT17dHlwZToidGV4dCIsdGV4dDpVfTtpZihELmxlbmd0aD09PTApRy5jaGlsZHJlbi5wdXNoKFEpO2Vsc2V7bGV0IGVlPURbMF07ZWUuY2hpbGRyZW58fChlZS5jaGlsZHJlbj1bXSksZWUuY2hpbGRyZW4ucHVzaChRKX19LGNvbW1lbnQ6ZnVuY3Rpb24oVSl7bGV0IFE9e25vZGU6ImNvbW1lbnQiLHRleHQ6VX0sZWU9RFswXTtlZS5jaGlsZHJlbnx8KGVlLmNoaWxkcmVuPVtdKSxlZS5jaGlsZHJlbi5wdXNoKFEpfX0pLEcuY2hpbGRyZW59bGV0IEphPXtub2Rlczp7dHlwZTpbQXJyYXksU3RyaW5nXSxkZWZhdWx0OmZ1bmN0aW9uKCl7cmV0dXJuW119fX0sYWw9MTYsUmE9Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IlJpY2hUZXh0Iixwcm9wczpKYSxzZXR1cCh5KXtsZXQgRD1PLmdldEN1cnJlbnRJbnN0YW5jZSgpO3JldHVybigpPT57bGV0IEc9eS5ub2RlcztyZXR1cm4gaWUuaXNTdHJpbmcoRykmJihHPWFvKEcpKSxPLmNyZWF0ZVZOb2RlKCJ1LXJpY2gtdGV4dCIse3ZhbHVlOnNsKEd8fFtdLEQucm9vdCx7ZGVmYXVsdEZvbnRTaXplOmFsfSl9LG51bGwpfX19KTtmdW5jdGlvbiBzbCh5LEQsRyl7bGV0IFU9WyJzcGFuIiwiYSIsImltYWdlIiwiaW1nIl0sUT17YmxvY2txdW90ZTpIZSxicjpFdCxkaXY6SGUsZGw6SGUsaDE6TnQoMiksaDI6TnQoMS41KSxoMzpOdCgxLjE3KSxoNDpOdCgxKSxoNTpOdCguODMpLGg2Ok50KC42NyksaHI6SGUsb2w6SGUscDpIZSxzdHJvbmc6V3QsdGFibGU6SGUsdGJvZHk6SGUsdGZvb3Q6SGUsdGhlYWQ6SGUsdWw6SGV9LGVlPS8mKGFtcHxndHxsdHxuYnNwfHF1b3R8YXBvcyk7L2cscGU9e2FtcDoiJiIsZ3Q6Ij4iLGx0OiI8IixuYnNwOiIgIixxdW90OiciJyxhcG9zOiInIn0sQ2U9e3R5cGU6InNwYW4iLF9fdHlwZToiYnJlYWsiLGF0dHI6e3ZhbHVlOmAKYH19LFNlPXtfX2Jsb2NrOiEwLF9fYnJlYWs6ITAsY2hpbGRyZW46W119LEllPW51bGw7ZnVuY3Rpb24gYmUoQ3Qpe2xldCBLdD1PYmplY3QuY3JlYXRlKG51bGwpO2lmKEN0LmF0dHJzKXtsZXQgbHI9KEN0LmF0dHJzLmNsYXNzfHwiIikuc3BsaXQoIiAiKTtPYmplY3QuYXNzaWduKEt0LE8ucGFyc2VDbGFzc0xpc3QobHIsRCksQm8oQ3QuYXR0cnMuc3R5bGV8fCIiKSl9aWYoQ3QubmFtZT09PSJpbWcifHxDdC5uYW1lPT09ImltYWdlIil7bGV0IGxyPUN0LmF0dHJzO0t0LndpZHRoPUt0LndpZHRofHxsci53aWR0aCxLdC5oZWlnaHQ9S3QuaGVpZ2h0fHxsci5oZWlnaHR9cmV0dXJuIEt0fWZ1bmN0aW9uIEhlKEN0KXtyZXR1cm4gQ3QuX19ibG9jaz0hMCxDdH1mdW5jdGlvbiBfdChDdCxLdCl7cmV0dXJuIEN0LnN0eWxlJiYhQ3Quc3R5bGUuZm9udFNpemUmJihDdC5zdHlsZS5mb250U2l6ZT1HLmRlZmF1bHRGb250U2l6ZSpLdCksSGUoV3QoQ3QpKX1mdW5jdGlvbiBOdChDdCl7cmV0dXJuIGZ1bmN0aW9uKEt0KXtyZXR1cm4gX3QoS3QsQ3QpfX1mdW5jdGlvbiBXdChDdCl7cmV0dXJuIEN0LnN0eWxlJiYhQ3Quc3R5bGUuZm9udFdlaWdodCYmKEN0LnN0eWxlLmZvbnRXZWlnaHQ9ImJvbGQiKSxDdH1mdW5jdGlvbiBFdChDdCl7cmV0dXJuIEN0Ll9fdmFsdWU9IiAiLEhlKEN0KX1mdW5jdGlvbiBodChDdCl7cmV0dXJuIEN0LnJlcGxhY2UoZWUsZnVuY3Rpb24oS3QsbHIpe3JldHVybiBwZVtscl19KX1mdW5jdGlvbiB1dChDdCl7bGV0IEt0PShDdC5uYW1lfHwiIikudG9Mb3dlckNhc2UoKSxscj1LdCxjcj1RW0t0XTtVLmluZGV4T2YoS3QpPT09LTEmJihLdD0ic3BhbiIpLEt0PT09ImltZyImJihLdD0iaW1hZ2UiKTtsZXQgR3Q9e3R5cGU6S3QsX190eXBlOmxyLGF0dHI6T2JqZWN0LmNyZWF0ZShudWxsKX07cmV0dXJuKEN0LnR5cGU9PT0idGV4dCJ8fEN0LnRleHQpJiYoR3QuX192YWx1ZT1HdC5hdHRyLnZhbHVlPWh0KChDdC50ZXh0fHwiIikudHJpbSgpKSksQ3QuYXR0cnMmJk9iamVjdC5rZXlzKEN0LmF0dHJzKS5mb3JFYWNoKFl0PT57WXQhPT0iY2xhc3MiJiZZdCE9PSJzdHlsZSImJihHdC5hdHRyW1l0XT1DdC5hdHRyc1tZdF0pfSksR3Quc3R5bGU9YmUoQ3QpLGNyJiZjcihHdCksKFNlLl9fYmxvY2t8fEd0Ll9fYmxvY2spJiYoSWV8fChTZS5jaGlsZHJlbi5wdXNoKENlKSxJZT1bU2UsQ2VdKSksU2U9R3QsKFNlLl9fdmFsdWV8fFNlLnR5cGU9PT0iaW1hZ2UiJiZTZS5hdHRyLnNyYykmJihJZT1udWxsKSxHdC5jaGlsZHJlbj1obihDdC5jaGlsZHJlbiksU2U9R3QsU2UuX19ibG9jayYmU2Uuc3R5bGUuaGVpZ2h0JiYhL14wKHB4KT8kLy50ZXN0KFNlLnN0eWxlLmhlaWdodCkmJihJZT1udWxsKSxHdH1mdW5jdGlvbiBobihDdCl7cmV0dXJuIGllLmlzQXJyYXkoQ3QpP0N0Lm1hcChLdD0+dXQoS3QpKTpbXX1sZXQgQ249aG4oeSk7aWYoSWUpe2xldFtDdCxLdF09SWUsbHI9Q3QuY2hpbGRyZW4sY3I9bHIuaW5kZXhPZihLdCk7bHIuc3BsaWNlKGNyLDEpfXJldHVybiBDbn1sZXQgcmE9e307ZnVuY3Rpb24gVXMoeSxELEcpe2xldHthZHBpZDpVLHdpZHRoOlF9PXksZWU9VSsiLSIrUSxwZT1yYVtlZV07aWYocGUmJnBlLmxlbmd0aD4wKXtEKHBlLnNwbGljZSgwLDEpWzBdKTtyZXR1cm59ZC5hZC5nZXRBZHMoeSxDZT0+e2xldCBTZT1DZS5hZHM7RChTZS5zcGxpY2UoMCwxKVswXSkscmFbZWVdPXBlP3BlLmNvbmNhdChTZSk6U2V9LENlPT57Ryh7ZXJyQ29kZTpDZS5jb2RlLGVyck1zZzpDZS5tZXNzYWdlfSl9KX1sZXQgbXM9e2FkcGlkOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OiIifSxkYXRhOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSx3aWR0aDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn0sY2hhbm5lbDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn19LHlyPXtsb2FkOiJsb2FkIixjbG9zZToiY2xvc2UiLGVycm9yOiJlcnJvciIsZG93bmxvYWRjaGFuZ2U6ImRvd25sb2FkY2hhbmdlIn0sc289Ty5kZWZpbmVDb21wb25lbnQoe25hbWU6IkFkIixwcm9wczptcyxlbWl0czpbeXIubG9hZCx5ci5jbG9zZSx5ci5lcnJvcix5ci5kb3dubG9hZGNoYW5nZV0sc2V0dXAoeSx7ZW1pdDpEfSl7bGV0IEc9Ty5yZWYobnVsbCksVT1EbihHLEQpLFE9YmEoKTtPLndhdGNoKCgpPT55LmFkcGlkLHBlPT57T28oUSx5LFUpfSksTy53YXRjaCgoKT0+eS5kYXRhLHBlPT57US5kYXRhPXBlfSksTy5vbk1vdW50ZWQoKCk9Pnt2KCgpPT57S24oRy52YWx1ZSkudGhlbigoe3dpZHRoOnBlfSk9PntRLndpZHRoPXBlPT09MD8tMTpwZSxPbyhRLHksVSl9KX0sNTApfSk7bGV0IGVlPXtvbkRvd25sb2FkY2hhbmdlKHBlKXtVKHlyLmRvd25sb2FkY2hhbmdlLHBlKX0sb25EaXNsaWtlKHBlKXtVKHlyLmNsb3NlLHBlKX19O3JldHVybigpPT5PLmNyZWF0ZVZOb2RlKCJ1LWFkIixPLm1lcmdlUHJvcHMoe3JlZjpHfSx7ZGF0YTpRLmRhdGEscmVuZGVyaW5nOiEwfSxlZSksbnVsbCl9fSk7ZnVuY3Rpb24gYmEoeSl7bGV0IEQ9Ty5yZWYoIiIpO3JldHVybiBPLnJlYWN0aXZlKHt3aWR0aDowLGRhdGE6RH0pfWZ1bmN0aW9uIE9vKHksRCxHKXtVcyh7YWRwaWQ6RC5hZHBpZCx3aWR0aDp5LndpZHRofSxVPT57eS5kYXRhPVUsRyh5ci5sb2FkLHt9KX0sVT0+e0coeXIuZXJyb3IsVSl9KX1sZXQgeGE9e307ZnVuY3Rpb24ga2woeSxELEcsVSxRKXtsZXQgZWU9eSsiLSIrRCxwZT14YVtlZV07aWYocGUmJnBlLmxlbmd0aD4wKXtVKHBlLnNwbGljZSgwLDEpWzBdKTtyZXR1cm59ZC5hZC5nZXREcmF3QWRzKHthZHBpZDpTdHJpbmcoeSksY291bnQ6Myx3aWR0aDpEfSxDZT0+e2xldCBTZT1DZS5hZHM7VShTZS5zcGxpY2UoMCwxKVswXSkseGFbZWVdPXBlP3BlLmNvbmNhdChTZSk6U2V9LENlPT57USh7ZXJyQ29kZTpDZS5jb2RlLGVyck1zZzpDZS5tZXNzYWdlfSl9KX1sZXQgSHM9e2FkcGlkOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OiIifSxkYXRhOnt0eXBlOlN0cmluZyxkZWZhdWx0OiIifSx3aWR0aDp7dHlwZTpTdHJpbmcsZGVmYXVsdDoiIn19LEJhPXtsb2FkOiJsb2FkIixjbG9zZToiY2xvc2UiLGVycm9yOiJlcnJvciJ9LGxsPU8uZGVmaW5lQ29tcG9uZW50KHtuYW1lOiJBZERyYXciLHByb3BzOkhzLGVtaXRzOltCYS5sb2FkLEJhLmNsb3NlLEJhLmVycm9yXSxzZXR1cCh5LHtlbWl0OkR9KXtsZXQgRz1PLnJlZihudWxsKSxVPURuKEcsRCksUT1fcygpO08ud2F0Y2goKCk9PnkuYWRwaWQscGU9PnticyhRLHksVSl9KSxPLndhdGNoKCgpPT55LmRhdGEscGU9PntRLmRhdGE9cGV9KTtsZXQgZWU9e29uRGlzbGlrZShwZSl7VShCYS5jbG9zZSxwZSl9fTtyZXR1cm4gTy5vbk1vdW50ZWQoKCk9Pnt2KCgpPT57S24oRy52YWx1ZSkudGhlbigoe3dpZHRoOnBlLGhlaWdodDpDZX0pPT57US53aWR0aD1wZT09PTA/LTE6cGUsUS5oZWlnaHQ9Q2U9PT0wPy0xOkNlLGJzKFEseSxVKX0pfSw1MCl9KSwoKT0+e2xldHtkYXRhOnBlfT1RO3JldHVybiBPLmNyZWF0ZVZOb2RlKCJ1LWFkLWRyYXciLE8ubWVyZ2VQcm9wcyh7cmVmOkd9LHtkYXRhOnBlLHJlbmRlcmluZzohMH0sZWUpLG51bGwpfX19KTtmdW5jdGlvbiBfcyh5KXtsZXQgRD1PLnJlZigiIik7cmV0dXJuIE8ucmVhY3RpdmUoe3dpZHRoOjAsaGVpZ2h0OjAsZGF0YTpEfSl9ZnVuY3Rpb24gYnMoeSxELEcpe2tsKEQuYWRwaWQseS53aWR0aCx5LmhlaWdodCxVPT57eS5kYXRhPVUsRyhCYS5sb2FkLHt9KX0sVT0+e0coQmEuZXJyb3IsVSl9KX1yZXR1cm57TmF2aWdhdG9yOlJyLExhYmVsOkJpLEJ1dHRvbjpobyxNb3ZhYmxlQXJlYTpfcixNb3ZhYmxlVmlldzpGbyxQcm9ncmVzczp4ZSxQaWNrZXJWaWV3OlFvLFBpY2tlclZpZXdDb2x1bW46b24sUGlja2VyOnRvLFVTbGlkZXI6Vm4sU3dpdGNoOl9hLENoZWNrYm94OiRvLENoZWNrYm94R3JvdXA6Q2ksUmFkaW86Y2UsUmFkaW9Hcm91cDpTdCxGb3JtOnVlLEljb246UXIsU3dpcGVyOmdpLFN3aXBlckl0ZW06RnIsUmljaFRleHQ6UmEsQWQ6c28sQWREcmF3OmxsfX0oayxXZSxQdCk7cmV0dXJuIFF0fWZ1bmN0aW9uIFhJKHYsbCl7bGV0e1VuaVNoYXJlZDpiLFZ1ZTpUfT1sO2Z1bmN0aW9uIGsoZCxtLFIpe2xldCBXZT1kLiRbbV07cmV0dXJuIFdlJiZiLmludm9rZUFycmF5Rm5zKFdlLFIpfWxldCBDPXYuc2V0dXA7cmV0dXJuIHYuaW5oZXJpdEF0dHJzPSExLHYuc2V0dXA9KGQsbSk9PntsZXR7YXR0cnM6e19fcGFnZUlkOlIsX19wYWdlUGF0aDpXZSxfX3BhZ2VRdWVyeTpQdH19PW0sUXQ9bC5fX3VuaVJvdXRlcy5maW5kKFRuPT5Ubi5tZXRhLnJvdXRlPT09V2UpLE89VC5nZXRDdXJyZW50SW5zdGFuY2UoKSxpZT1PLnByb3h5O2lmKFF0JiYoUXQubWV0YS5pc1N1Yk5WdWV8fFFJKGllLGwse19fcGFnZUlkOlIsX19wYWdlUGF0aDpXZX0pKSxULm9uTW91bnRlZCgoKT0+e1QubmV4dFRpY2soKCk9PntrKGllLGIuT05fUkVBRFkpfSksTy5vblBhZ2VTY3JvbGwmJmllLiRlbC5hZGRFdmVudCgic2Nyb2xsIixUbj0+e1RuLnNjcm9sbFRvcD1Ubi5kZXRhaWwuc2Nyb2xsVG9wLGsoaWUsYi5PTl9QQUdFX1NDUk9MTCxUbil9KSxPLm9uUmVhY2hCb3R0b20mJmllLiRlbC5hZGRFdmVudCgic2Nyb2xsdG9sb3dlciIsVG49PntrKGllLGIuT05fUkVBQ0hfQk9UVE9NLFRuKX0pfSksVC5vbkJlZm9yZVVubW91bnQoKCk9PntrKGllLGIuT05fVU5MT0FEKX0pLEMpcmV0dXJuIEMoUHQsbSl9LHZ9ZnVuY3Rpb24gUUkodixsLHtfX3BhZ2VJZDpiLF9fcGFnZVBhdGg6VH0pe2xldCBrPWwuZ2V0Q3VycmVudFBhZ2VzKCksQz1rW2subGVuZ3RoLTFdO2lmKEMmJkMuX19zZXR1cClDLl9fc2V0dXAodixDKTtlbHNle2xldCBkPSIvIitUO3JldHVybiBsLl9fcmVnaXN0ZXJQYWdlKHt1cmw6ZCxwYXRoOmQscXVlcnk6e30sb3BlblR5cGU6ImxhdW5jaCIsd2Vidmlldzp7aWQ6YisiIn0sbnZ1ZVBhZ2VWbTp2fSl9fXZhciBMYz17fSx6ZztmdW5jdGlvbiBXZyh2KXt6Zz12fXZhciBhZjtmdW5jdGlvbiBlUCh2KXtpZihhZilyZXR1cm4gYWY7bGV0IGw9bmV3IHYuRW1pdHRlcjtyZXR1cm4gYWY9e29uKGIsVCl7cmV0dXJuIGwub24oYixUKX0sb25jZShiLFQpe3JldHVybiBsLm9uY2UoYixUKX0sb2ZmKGIsVCl7cmV0dXJuIGwub2ZmKGIsVCl9LGVtaXQoYiwuLi5UKXtyZXR1cm4gbC5lbWl0KGIsLi4uVCl9fSxhZn1mdW5jdGlvbiB0UCh2KXtyZXR1cm4obCxiLFQpPT57bGV0e252dWU6a309YixDPW9mKHYsYik7Yi5WdWU9QyxMY1tsXT17aW5zdGFuY2VJZDpsLGNvbmZpZzprLmNvbmZpZyxkb2N1bWVudDprLmRvY3VtZW50LGRhdGE6VH07bGV0e2NyZWF0ZUFwcDpkfT1DO0MuY3JlYXRlVnVlQXBwPUMuY3JlYXRlQXBwPShtLFIpPT4oYi5fX3VuaUNvbmZpZy5zdHlsZXM9bS5zdHlsZXN8fFtdLGQobSxSKS51c2UoblAsbCxiKSksQy5jcmVhdGVQYWdlQXBwPShtLFIpPT57WEkobSxiKTtsZXQgV2U9Ui4kc3RvcmU7ZGVsZXRlIFIuJHN0b3JlO2xldCBQdD1kKG0sUik7cmV0dXJuIFdlJiZQdC51c2UoV2UpLFB0LnVzZShpUCxDLGwsYil9fX12YXIgblA9e2luc3RhbGwodixsLGIpe0V1KGIpLmluaXRBcHAodiksclAodixsLGIpfX07ZnVuY3Rpb24gclAodixsLGIpe2xldHttb3VudDpUfT12LGs9TGNbbF07cmV0dXJuIHYubW91bnQ9Qz0+e2xldCBkPUM9PT0iI2FwcCIsbT1rLmFwcD1UKEdnKGsuZG9jdW1lbnQse2lzUm9vdDpkfSkpO3JldHVybiBkJiZiLl9fcmVnaXN0ZXJBcHAobSksbX0sdn12YXIgaVA9e2luc3RhbGwodixsLGIsVCl7bGV0e3dlZXg6ayxwbHVzOkMsQnJvYWRjYXN0Q2hhbm5lbDpkLFZ1ZVNoYXJlZDptLFVuaVNoYXJlZDpSLGdldEN1cnJlbnRQYWdlczpXZSxzZXRUaW1lb3V0OlB0LGNsZWFyVGltZW91dDpRdH09VDt2LmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzLiRyZXF1aXJlTmF0aXZlUGx1Z2luPWsucmVxdWlyZU1vZHVsZTtsZXQgTz1aSSh7dW5pOnpnLFZ1ZTpsLHdlZXg6ayxwbHVzOkMsQnJvYWRjYXN0Q2hhbm5lbDpkLFVuaVZpZXdKU0JyaWRnZTplUChSKSxWdWVTaGFyZWQ6bSxVbmlTaGFyZWQ6UixnZXRDdXJyZW50UGFnZXM6V2Usc2V0VGltZW91dDpQdCxjbGVhclRpbWVvdXQ6UXR9KTtPYmplY3Qua2V5cyhPKS5mb3JFYWNoKGllPT57di5jb21wb25lbnQobC5oeXBoZW5hdGUoaWUpLE9baWVdKX0pLEV1KFQpLmluaXRBcHAodiksb1AodixiLFQpfX07ZnVuY3Rpb24gb1AodixsLHtudnVlOmJ9KXtsZXR7Y29uZmlnOntjb21waWxlck9wdGlvbnM6VH0sbW91bnQ6a309djtULmlzQ3VzdG9tRWxlbWVudD1kPT4hIWIuc3VwcG9ydHMoYEBjb21wb25lbnQvJHtkfWApO2xldCBDPUxjW2xdO3JldHVybiB2Lm1vdW50PWQ9PntsZXQgbT1kPT09IiNyb290IixSPUMuYXBwPWsoR2coQy5kb2N1bWVudCx7aXNSb290Om19KSk7aWYobSl0cnl7Yi5kb2N1bWVudC50YXNrQ2VudGVyLnNlbmQoImRvbSIse2FjdGlvbjoiY3JlYXRlRmluaXNoIn0sW10pfWNhdGNoKFdlKXt9cmV0dXJuIFJ9LHZ9ZnVuY3Rpb24gR2codix7aXNSb290Omx9KXtpZihsKXJldHVybiB2LmRvY3VtZW50RWxlbWVudDtsZXQgYj12LmNyZWF0ZUNvbW1lbnQoInJvb3QiKTtyZXR1cm4gdi5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoYiksYn1mdW5jdGlvbiBZZyh2KXtsZXQgbD1MY1t2XTtpZihsJiZsLmFwcCYmbC5kb2N1bWVudCl7dHJ5e2wuYXBwLiQuYXBwQ29udGV4dC5hcHAudW5tb3VudCgpLGwuZG9jdW1lbnQuZGVzdHJveSgpfWNhdGNoKGIpe31kZWxldGUgbC5kb2N1bWVudCxkZWxldGUgbC5hcHB9ZGVsZXRlIExjW3ZdfWZ1bmN0aW9uIHFnKHYpe2xldCBsPUxjW3ZdO2lmKCFsfHwhbC5hcHApcmV0dXJuIG5ldyBFcnJvcihgcmVmcmVzaEluc3RhbmNlOiBpbnN0YW5jZSAke3Z9IG5vdCBmb3VuZCFgKTtsLmRvY3VtZW50LnRhc2tDZW50ZXIuc2VuZCgiZG9tIix7YWN0aW9uOiJyZWZyZXNoRmluaXNoIn0sW10pfWZ1bmN0aW9uIGFQKHYsbCl7bGV0e1VuaVNoYXJlZDpiLFZ1ZVNoYXJlZDpULFZ1ZVJlYWN0aXZpdHk6a309djt2YXIgQz1mdW5jdGlvbihkLG0sUixXZSl7InVzZSBzdHJpY3QiO3ZhciBQdD1bXTtmdW5jdGlvbiBRdChvKXtQdC5wdXNoKG8pfWZ1bmN0aW9uIE8oKXtQdC5wb3AoKX1mdW5jdGlvbiBpZShvKXtSLnBhdXNlVHJhY2tpbmcoKTtmb3IodmFyIGM9UHQubGVuZ3RoP1B0W1B0Lmxlbmd0aC0xXS5jb21wb25lbnQ6bnVsbCxoPWMmJmMuYXBwQ29udGV4dC5jb25maWcud2FybkhhbmRsZXIsXz1UbigpLEk9YXJndW1lbnRzLmxlbmd0aCxBPW5ldyBBcnJheShJPjE/SS0xOjApLHg9MTt4PEk7eCsrKUFbeC0xXT1hcmd1bWVudHNbeF07aWYoaClIdChoLGMsMTEsW28rQS5qb2luKCIiKSxjJiZjLnByb3h5LF8ubWFwKEg9Pnt2YXJ7dm5vZGU6dGV9PUg7cmV0dXJuImF0IDwiLmNvbmNhdChTYShjLHRlLnR5cGUpLCI+Iil9KS5qb2luKGAKYCksX10pO2Vsc2V7dmFyIHo9WyJbVnVlIHdhcm5dOiAiLmNvbmNhdChvKSwuLi5BXTtfLmxlbmd0aCYmei5wdXNoKGAKYCwuLi5xbihfKSksY29uc29sZS53YXJuKC4uLnopfVIucmVzZXRUcmFja2luZygpfWZ1bmN0aW9uIFRuKCl7dmFyIG89UHRbUHQubGVuZ3RoLTFdO2lmKCFvKXJldHVybltdO2Zvcih2YXIgYz1bXTtvOyl7dmFyIGg9Y1swXTtoJiZoLnZub2RlPT09bz9oLnJlY3Vyc2VDb3VudCsrOmMucHVzaCh7dm5vZGU6byxyZWN1cnNlQ291bnQ6MH0pO3ZhciBfPW8uY29tcG9uZW50JiZvLmNvbXBvbmVudC5wYXJlbnQ7bz1fJiZfLnZub2RlfXJldHVybiBjfWZ1bmN0aW9uIHFuKG8pe3ZhciBjPVtdO3JldHVybiBvLmZvckVhY2goKGgsXyk9PntjLnB1c2goLi4uXz09PTA/W106W2AKYF0sLi4ubXQoaCkpfSksY31mdW5jdGlvbiBtdChvKXt2YXJ7dm5vZGU6YyxyZWN1cnNlQ291bnQ6aH09byxfPWg+MD8iLi4uICgiLmNvbmNhdChoLCIgcmVjdXJzaXZlIGNhbGxzKSIpOiIiLEk9Yy5jb21wb25lbnQ/Yy5jb21wb25lbnQucGFyZW50PT1udWxsOiExLEE9IiBhdCA8Ii5jb25jYXQoU2EoYy5jb21wb25lbnQsYy50eXBlLEkpKSx4PSI+IitfO3JldHVybiBjLnByb3BzP1tBLC4uLkooYy5wcm9wcykseF06W0EreF19ZnVuY3Rpb24gSihvKXt2YXIgYz1bXSxoPU9iamVjdC5rZXlzKG8pO3JldHVybiBoLnNsaWNlKDAsMykuZm9yRWFjaChfPT57Yy5wdXNoKC4uLnJlKF8sb1tfXSkpfSksaC5sZW5ndGg+MyYmYy5wdXNoKCIgLi4uIiksY31mdW5jdGlvbiByZShvLGMsaCl7cmV0dXJuIG0uaXNTdHJpbmcoYyk/KGM9SlNPTi5zdHJpbmdpZnkoYyksaD9jOlsiIi5jb25jYXQobywiPSIpLmNvbmNhdChjKV0pOnR5cGVvZiBjPT0ibnVtYmVyInx8dHlwZW9mIGM9PSJib29sZWFuInx8Yz09bnVsbD9oP2M6WyIiLmNvbmNhdChvLCI9IikuY29uY2F0KGMpXTpSLmlzUmVmKGMpPyhjPXJlKG8sUi50b1JhdyhjLnZhbHVlKSwhMCksaD9jOlsiIi5jb25jYXQobywiPVJlZjwiKSxjLCI+Il0pOm0uaXNGdW5jdGlvbihjKT9bIiIuY29uY2F0KG8sIj1mbiIpLmNvbmNhdChjLm5hbWU/IjwiLmNvbmNhdChjLm5hbWUsIj4iKToiIildOihjPVIudG9SYXcoYyksaD9jOlsiIi5jb25jYXQobywiPSIpLGNdKX1mdW5jdGlvbiBMbihvLGMpe28hPT12b2lkIDAmJih0eXBlb2YgbyE9Im51bWJlciI/aWUoIiIuY29uY2F0KGMsIiBpcyBub3QgYSB2YWxpZCBudW1iZXIgLSAiKSsiZ290ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KG8pLCIuIikpOmlzTmFOKG8pJiZpZSgiIi5jb25jYXQoYywiIGlzIE5hTiAtICIpKyJ0aGUgZHVyYXRpb24gZXhwcmVzc2lvbiBtaWdodCBiZSBpbmNvcnJlY3QuIikpfXZhciBjbj17c3A6InNlcnZlclByZWZldGNoIGhvb2siLGJjOiJiZWZvcmVDcmVhdGUgaG9vayIsYzoiY3JlYXRlZCBob29rIixibToiYmVmb3JlTW91bnQgaG9vayIsbToibW91bnRlZCBob29rIixidToiYmVmb3JlVXBkYXRlIGhvb2siLHU6InVwZGF0ZWQiLGJ1bToiYmVmb3JlVW5tb3VudCBob29rIix1bToidW5tb3VudGVkIGhvb2siLGE6ImFjdGl2YXRlZCBob29rIixkYToiZGVhY3RpdmF0ZWQgaG9vayIsZWM6ImVycm9yQ2FwdHVyZWQgaG9vayIscnRjOiJyZW5kZXJUcmFja2VkIGhvb2siLHJ0ZzoicmVuZGVyVHJpZ2dlcmVkIGhvb2siLFswXToic2V0dXAgZnVuY3Rpb24iLFsxXToicmVuZGVyIGZ1bmN0aW9uIixbMl06IndhdGNoZXIgZ2V0dGVyIixbM106IndhdGNoZXIgY2FsbGJhY2siLFs0XToid2F0Y2hlciBjbGVhbnVwIGZ1bmN0aW9uIixbNV06Im5hdGl2ZSBldmVudCBoYW5kbGVyIixbNl06ImNvbXBvbmVudCBldmVudCBoYW5kbGVyIixbN106InZub2RlIGhvb2siLFs4XToiZGlyZWN0aXZlIGhvb2siLFs5XToidHJhbnNpdGlvbiBob29rIixbMTBdOiJhcHAgZXJyb3JIYW5kbGVyIixbMTFdOiJhcHAgd2FybkhhbmRsZXIiLFsxMl06InJlZiBmdW5jdGlvbiIsWzEzXToiYXN5bmMgY29tcG9uZW50IGxvYWRlciIsWzE0XToic2NoZWR1bGVyIGZsdXNoLiBUaGlzIGlzIGxpa2VseSBhIFZ1ZSBpbnRlcm5hbHMgYnVnLiBQbGVhc2Ugb3BlbiBhbiBpc3N1ZSBhdCBodHRwczovL25ldy1pc3N1ZS52dWVqcy5vcmcvP3JlcG89dnVlanMvY29yZSJ9O2Z1bmN0aW9uIEh0KG8sYyxoLF8pe3ZhciBJO3RyeXtJPV8/byguLi5fKTpvKCl9Y2F0Y2goQSl7UnIoQSxjLGgpfXJldHVybiBJfWZ1bmN0aW9uIEluKG8sYyxoLF8pe2lmKG0uaXNGdW5jdGlvbihvKSl7dmFyIEk9SHQobyxjLGgsXyk7cmV0dXJuIEkmJm0uaXNQcm9taXNlKEkpJiZJLmNhdGNoKHo9PntScih6LGMsaCl9KSxJfWZvcih2YXIgQT1bXSx4PTA7eDxvLmxlbmd0aDt4KyspQS5wdXNoKEluKG9beF0sYyxoLF8pKTtyZXR1cm4gQX1mdW5jdGlvbiBScihvLGMsaCl7dmFyIF89YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiEwLEk9Yz9jLnZub2RlOm51bGw7aWYoYyl7Zm9yKHZhciBBPWMucGFyZW50LHg9Yy5wcm94eSx6PWNuW2hdfHxoO0E7KXt2YXIgSD1BLmVjO2lmKEgpe2Zvcih2YXIgdGU9MDt0ZTxILmxlbmd0aDt0ZSsrKWlmKEhbdGVdKG8seCx6KT09PSExKXJldHVybn1BPUEucGFyZW50fXZhciBQZT1jLmFwcENvbnRleHQuY29uZmlnLmVycm9ySGFuZGxlcjtpZihQZSl7SHQoUGUsbnVsbCwxMCxbbyx4LHpdKTtyZXR1cm59fUhyKG8saCxJLF8pfWZ1bmN0aW9uIEhyKG8sYyxoKXt2YXIgXz1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITA7e3ZhciBJPWNuW2NdfHxjO2lmKGgmJlF0KGgpLGllKCJVbmhhbmRsZWQgZXJyb3IiLmNvbmNhdChJPyIgZHVyaW5nIGV4ZWN1dGlvbiBvZiAiLmNvbmNhdChJKToiIikpLGgmJk8oKSxfKXRocm93IG87Y29uc29sZS5lcnJvcihvKX19dmFyIHJyPSExLG5uPSExLGp0PVtdLGduPTAsUm49W10seG49bnVsbCxtcj0wLEtlPVByb21pc2UucmVzb2x2ZSgpLGR0PW51bGwsd3Q9MTAwO2Z1bmN0aW9uIHJuKG8pe3ZhciBjPWR0fHxLZTtyZXR1cm4gbz9jLnRoZW4odGhpcz9vLmJpbmQodGhpcyk6byk6Y31mdW5jdGlvbiBObihvKXtmb3IodmFyIGM9Z24rMSxoPWp0Lmxlbmd0aDtjPGg7KXt2YXIgXz1jK2g+Pj4xLEk9anIoanRbX10pO0k8bz9jPV8rMTpoPV99cmV0dXJuIGN9ZnVuY3Rpb24gSnQobyl7KCFqdC5sZW5ndGh8fCFqdC5pbmNsdWRlcyhvLHJyJiZvLmFsbG93UmVjdXJzZT9nbisxOmduKSkmJihvLmlkPT1udWxsP2p0LnB1c2gobyk6anQuc3BsaWNlKE5uKG8uaWQpLDAsbyksRm4oKSl9ZnVuY3Rpb24gRm4oKXshcnImJiFubiYmKG5uPSEwLGR0PUtlLnRoZW4ocGEpKX1mdW5jdGlvbiBpcihvKXt2YXIgYz1qdC5pbmRleE9mKG8pO2M+Z24mJmp0LnNwbGljZShjLDEpfWZ1bmN0aW9uIHhpKG8pe20uaXNBcnJheShvKT9Sbi5wdXNoKC4uLm8pOigheG58fCF4bi5pbmNsdWRlcyhvLG8uYWxsb3dSZWN1cnNlP21yKzE6bXIpKSYmUm4ucHVzaChvKSxGbigpfWZ1bmN0aW9uIEJpKG8pe3ZhciBjPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTpycj9nbisxOjA7Zm9yKG89b3x8bmV3IE1hcDtjPGp0Lmxlbmd0aDtjKyspe3ZhciBoPWp0W2NdO2lmKGgmJmgucHJlKXtpZihKbyhvLGgpKWNvbnRpbnVlO2p0LnNwbGljZShjLDEpLGMtLSxoKCl9fX1mdW5jdGlvbiBqbihvKXtpZihSbi5sZW5ndGgpe3ZhciBjPVsuLi5uZXcgU2V0KFJuKV07aWYoUm4ubGVuZ3RoPTAseG4pe3huLnB1c2goLi4uYyk7cmV0dXJufWZvcih4bj1jLG89b3x8bmV3IE1hcCx4bi5zb3J0KChoLF8pPT5qcihoKS1qcihfKSksbXI9MDttcjx4bi5sZW5ndGg7bXIrKylKbyhvLHhuW21yXSl8fHhuW21yXSgpO3huPW51bGwsbXI9MH19dmFyIGpyPW89Pm8uaWQ9PW51bGw/MS8wOm8uaWQsTWk9KG8sYyk9Pnt2YXIgaD1qcihvKS1qcihjKTtpZihoPT09MCl7aWYoby5wcmUmJiFjLnByZSlyZXR1cm4tMTtpZihjLnByZSYmIW8ucHJlKXJldHVybiAxfXJldHVybiBofTtmdW5jdGlvbiBwYShvKXtubj0hMSxycj0hMCxvPW98fG5ldyBNYXAsanQuc29ydChNaSk7dmFyIGM9Xz0+Sm8obyxfKTt0cnl7Zm9yKGduPTA7Z248anQubGVuZ3RoO2duKyspe3ZhciBoPWp0W2duXTtpZihoJiZoLmFjdGl2ZSE9PSExKXtpZihjKGgpKWNvbnRpbnVlO0h0KGgsbnVsbCwxNCl9fX1maW5hbGx5e2duPTAsanQubGVuZ3RoPTAsam4obykscnI9ITEsZHQ9bnVsbCwoanQubGVuZ3RofHxSbi5sZW5ndGgpJiZwYShvKX19ZnVuY3Rpb24gSm8obyxjKXtpZighby5oYXMoYykpby5zZXQoYywxKTtlbHNle3ZhciBoPW8uZ2V0KGMpO2lmKGg+d3Qpe3ZhciBfPWMub3duZXJJbnN0YW5jZSxJPV8mJm5zKF8udHlwZSk7cmV0dXJuIGllKCJNYXhpbXVtIHJlY3Vyc2l2ZSB1cGRhdGVzIGV4Y2VlZGVkIi5jb25jYXQoST8iIGluIGNvbXBvbmVudCA8Ii5jb25jYXQoSSwiPiIpOiIiLCIuICIpKyJUaGlzIG1lYW5zIHlvdSBoYXZlIGEgcmVhY3RpdmUgZWZmZWN0IHRoYXQgaXMgbXV0YXRpbmcgaXRzIG93biBkZXBlbmRlbmNpZXMgYW5kIHRodXMgcmVjdXJzaXZlbHkgdHJpZ2dlcmluZyBpdHNlbGYuIFBvc3NpYmxlIHNvdXJjZXMgaW5jbHVkZSBjb21wb25lbnQgdGVtcGxhdGUsIHJlbmRlciBmdW5jdGlvbiwgdXBkYXRlZCBob29rIG9yIHdhdGNoZXIgc291cmNlIGZ1bmN0aW9uLiIpLCEwfWVsc2Ugby5zZXQoYyxoKzEpfX12YXIgeHI9ITEsQnI9bmV3IFNldDttLmdldEdsb2JhbFRoaXMoKS5fX1ZVRV9ITVJfUlVOVElNRV9fPXtjcmVhdGVSZWNvcmQ6Qm8oWm8pLHJlcmVuZGVyOkJvKHBvKSxyZWxvYWQ6Qm8oZ28pfTt2YXIgTXI9bmV3IE1hcDtmdW5jdGlvbiBmcihvKXt2YXIgYz1vLnR5cGUuX19obXJJZCxoPU1yLmdldChjKTtofHwoWm8oYyxvLnR5cGUpLGg9TXIuZ2V0KGMpKSxoLmluc3RhbmNlcy5hZGQobyl9ZnVuY3Rpb24gZ2Eobyl7TXIuZ2V0KG8udHlwZS5fX2htcklkKS5pbnN0YW5jZXMuZGVsZXRlKG8pfWZ1bmN0aW9uIFpvKG8sYyl7cmV0dXJuIE1yLmhhcyhvKT8hMTooTXIuc2V0KG8se2luaXRpYWxEZWY6aG8oYyksaW5zdGFuY2VzOm5ldyBTZXR9KSwhMCl9ZnVuY3Rpb24gaG8obyl7cmV0dXJuIGtzKG8pP28uX192Y2NPcHRzOm99ZnVuY3Rpb24gcG8obyxjKXt2YXIgaD1Nci5nZXQobyk7IWh8fChoLmluaXRpYWxEZWYucmVuZGVyPWMsWy4uLmguaW5zdGFuY2VzXS5mb3JFYWNoKF89PntjJiYoXy5yZW5kZXI9YyxobyhfLnR5cGUpLnJlbmRlcj1jKSxfLnJlbmRlckNhY2hlPVtdLHhyPSEwLF8udXBkYXRlKCkseHI9ITF9KSl9ZnVuY3Rpb24gZ28obyxjKXt2YXIgaD1Nci5nZXQobyk7aWYoISFoKXtjPWhvKGMpLHZhKGguaW5pdGlhbERlZixjKTt2YXIgXz1bLi4uaC5pbnN0YW5jZXNdO2Zvcih2YXIgSSBvZiBfKXt2YXIgQT1obyhJLnR5cGUpO0JyLmhhcyhBKXx8KEEhPT1oLmluaXRpYWxEZWYmJnZhKEEsYyksQnIuYWRkKEEpKSxJLmFwcENvbnRleHQub3B0aW9uc0NhY2hlLmRlbGV0ZShJLnR5cGUpLEkuY2VSZWxvYWQ/KEJyLmFkZChBKSxJLmNlUmVsb2FkKGMuc3R5bGVzKSxCci5kZWxldGUoQSkpOkkucGFyZW50P0p0KEkucGFyZW50LnVwZGF0ZSk6SS5hcHBDb250ZXh0LnJlbG9hZD9JLmFwcENvbnRleHQucmVsb2FkKCk6dHlwZW9mIHdpbmRvdyE9InVuZGVmaW5lZCI/d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOmNvbnNvbGUud2FybigiW0hNUl0gUm9vdCBvciBtYW51YWxseSBtb3VudGVkIGluc3RhbmNlIG1vZGlmaWVkLiBGdWxsIHJlbG9hZCByZXF1aXJlZC4iKX14aSgoKT0+e2Zvcih2YXIgeCBvZiBfKUJyLmRlbGV0ZShobyh4LnR5cGUpKX0pfX1mdW5jdGlvbiB2YShvLGMpe20uZXh0ZW5kKG8sYyk7Zm9yKHZhciBoIGluIG8paCE9PSJfX2ZpbGUiJiYhKGggaW4gYykmJmRlbGV0ZSBvW2hdfWZ1bmN0aW9uIEJvKG8pe3JldHVybihjLGgpPT57dHJ5e3JldHVybiBvKGMsaCl9Y2F0Y2goXyl7Y29uc29sZS5lcnJvcihfKSxjb25zb2xlLndhcm4oIltITVJdIFNvbWV0aGluZyB3ZW50IHdyb25nIGR1cmluZyBWdWUgY29tcG9uZW50IGhvdC1yZWxvYWQuIEZ1bGwgcmVsb2FkIHJlcXVpcmVkLiIpfX19ZC5kZXZ0b29scz12b2lkIDA7dmFyIEtuPVtdLF9yPSExO2Z1bmN0aW9uIGRyKG8pe2Zvcih2YXIgYz1hcmd1bWVudHMubGVuZ3RoLGg9bmV3IEFycmF5KGM+MT9jLTE6MCksXz0xO188YztfKyspaFtfLTFdPWFyZ3VtZW50c1tfXTtkLmRldnRvb2xzP2QuZGV2dG9vbHMuZW1pdChvLC4uLmgpOl9yfHxLbi5wdXNoKHtldmVudDpvLGFyZ3M6aH0pfWZ1bmN0aW9uIERuKG8sYyl7dmFyIGgsXztpZihkLmRldnRvb2xzPW8sZC5kZXZ0b29scylkLmRldnRvb2xzLmVuYWJsZWQ9ITAsS24uZm9yRWFjaChBPT57dmFye2V2ZW50OngsYXJnczp6fT1BO3JldHVybiBkLmRldnRvb2xzLmVtaXQoeCwuLi56KX0pLEtuPVtdO2Vsc2UgaWYodHlwZW9mIHdpbmRvdyE9InVuZGVmaW5lZCImJndpbmRvdy5IVE1MRWxlbWVudCYmISgoXz0oaD13aW5kb3cubmF2aWdhdG9yKT09PW51bGx8fGg9PT12b2lkIDA/dm9pZCAwOmgudXNlckFnZW50KT09PW51bGx8fF89PT12b2lkIDA/dm9pZCAwOl8uaW5jbHVkZXMoImpzZG9tIikpKXt2YXIgST1jLl9fVlVFX0RFVlRPT0xTX0hPT0tfUkVQTEFZX189Yy5fX1ZVRV9ERVZUT09MU19IT09LX1JFUExBWV9ffHxbXTtJLnB1c2goQT0+e0RuKEEsYyl9KSxzZXRUaW1lb3V0KCgpPT57ZC5kZXZ0b29sc3x8KGMuX19WVUVfREVWVE9PTFNfSE9PS19SRVBMQVlfXz1udWxsLF9yPSEwLEtuPVtdKX0sM2UzKX1lbHNlIF9yPSEwLEtuPVtdfWZ1bmN0aW9uIFhpKG8sYyl7ZHIoImFwcDppbml0IixvLGMse0ZyYWdtZW50Onl0LFRleHQ6a3QsQ29tbWVudDpMdCxTdGF0aWM6ZW59KX1mdW5jdGlvbiBYbyhvKXtkcigiYXBwOnVubW91bnQiLG8pfXZhciBNbz1UcigiY29tcG9uZW50OmFkZGVkIiksb2k9VHIoImNvbXBvbmVudDp1cGRhdGVkIiksYWk9VHIoImNvbXBvbmVudDpyZW1vdmVkIiksUWk9bz0+e2QuZGV2dG9vbHMmJnR5cGVvZiBkLmRldnRvb2xzLmNsZWFudXBCdWZmZXI9PSJmdW5jdGlvbiImJiFkLmRldnRvb2xzLmNsZWFudXBCdWZmZXIobykmJmFpKG8pfTtmdW5jdGlvbiBUcihvKXtyZXR1cm4gYz0+e2RyKG8sYy5hcHBDb250ZXh0LmFwcCxjLnVpZCxjLnBhcmVudD9jLnBhcmVudC51aWQ6dm9pZCAwLGMpfX12YXIga249bW8oInBlcmY6c3RhcnQiKSx2bz1tbygicGVyZjplbmQiKTtmdW5jdGlvbiBtbyhvKXtyZXR1cm4oYyxoLF8pPT57ZHIobyxjLmFwcENvbnRleHQuYXBwLGMudWlkLGMsaCxfKX19ZnVuY3Rpb24gRG8obyxjLGgpe2RyKCJjb21wb25lbnQ6ZW1pdCIsby5hcHBDb250ZXh0LmFwcCxvLGMsaCl9ZnVuY3Rpb24gX28obyxjKXtpZighby5pc1VubW91bnRlZCl7Zm9yKHZhciBoPW8udm5vZGUucHJvcHN8fG0uRU1QVFlfT0JKLF89YXJndW1lbnRzLmxlbmd0aCxJPW5ldyBBcnJheShfPjI/Xy0yOjApLEE9MjtBPF87QSsrKUlbQS0yXT1hcmd1bWVudHNbQV07e3ZhcntlbWl0c09wdGlvbnM6eCxwcm9wc09wdGlvbnM6W3pdfT1vO2lmKHgpaWYoIShjIGluIHgpKSghenx8IShtLnRvSGFuZGxlcktleShjKWluIHopKSYmaWUoJ0NvbXBvbmVudCBlbWl0dGVkIGV2ZW50ICInLmNvbmNhdChjLCciIGJ1dCBpdCBpcyBuZWl0aGVyIGRlY2xhcmVkIGluICcpKyd0aGUgZW1pdHMgb3B0aW9uIG5vciBhcyBhbiAiJy5jb25jYXQobS50b0hhbmRsZXJLZXkoYyksJyIgcHJvcC4nKSk7ZWxzZXt2YXIgSD14W2NdO2lmKG0uaXNGdW5jdGlvbihIKSl7dmFyIHRlPUgoLi4uSSk7dGV8fGllKCdJbnZhbGlkIGV2ZW50IGFyZ3VtZW50czogZXZlbnQgdmFsaWRhdGlvbiBmYWlsZWQgZm9yIGV2ZW50ICInLmNvbmNhdChjLCciLicpKX19fXZhciBQZT1JLGRlPWMuc3RhcnRzV2l0aCgidXBkYXRlOiIpLGZlPWRlJiZjLnNsaWNlKDcpO2lmKGZlJiZmZSBpbiBoKXt2YXIgVWU9IiIuY29uY2F0KGZlPT09Im1vZGVsVmFsdWUiPyJtb2RlbCI6ZmUsIk1vZGlmaWVycyIpLHtudW1iZXI6SmUsdHJpbTpndH09aFtVZV18fG0uRU1QVFlfT0JKO2d0JiYoUGU9SS5tYXAodHQ9Pm0uaXNTdHJpbmcodHQpP3R0LnRyaW0oKTp0dCkpLEplJiYoUGU9SS5tYXAobS5sb29zZVRvTnVtYmVyKSl9RG8obyxjLFBlKTt7dmFyIGJ0PWMudG9Mb3dlckNhc2UoKTtidCE9PWMmJmhbbS50b0hhbmRsZXJLZXkoYnQpXSYmaWUoJ0V2ZW50ICInLmNvbmNhdChidCwnIiBpcyBlbWl0dGVkIGluIGNvbXBvbmVudCAnKSsiIi5jb25jYXQoU2EobyxvLnR5cGUpLCcgYnV0IHRoZSBoYW5kbGVyIGlzIHJlZ2lzdGVyZWQgZm9yICInKS5jb25jYXQoYywnIi4gJykrIk5vdGUgdGhhdCBIVE1MIGF0dHJpYnV0ZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmUgYW5kIHlvdSBjYW5ub3QgdXNlIHYtb24gdG8gbGlzdGVuIHRvIGNhbWVsQ2FzZSBldmVudHMgd2hlbiB1c2luZyBpbi1ET00gdGVtcGxhdGVzLiAiKydZb3Ugc2hvdWxkIHByb2JhYmx5IHVzZSAiJy5jb25jYXQobS5oeXBoZW5hdGUoYyksJyIgaW5zdGVhZCBvZiAiJykuY29uY2F0KGMsJyIuJykpfXZhciBrZSxtZT1oW2tlPW0udG9IYW5kbGVyS2V5KGMpXXx8aFtrZT1tLnRvSGFuZGxlcktleShtLmNhbWVsaXplKGMpKV07IW1lJiZkZSYmKG1lPWhba2U9bS50b0hhbmRsZXJLZXkobS5oeXBoZW5hdGUoYykpXSksbWUmJkluKG1lLG8sNixQZSk7dmFyIE1lPWhba2UrIk9uY2UiXTtpZihNZSl7aWYoIW8uZW1pdHRlZClvLmVtaXR0ZWQ9e307ZWxzZSBpZihvLmVtaXR0ZWRba2VdKXJldHVybjtvLmVtaXR0ZWRba2VdPSEwLEluKE1lLG8sNixQZSl9fX1mdW5jdGlvbiBMbyhvLGMpe3ZhciBoPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTohMSxfPWMuZW1pdHNDYWNoZSxJPV8uZ2V0KG8pO2lmKEkhPT12b2lkIDApcmV0dXJuIEk7dmFyIEE9by5lbWl0cyx4PXt9LHo9ITE7aWYoIW0uaXNGdW5jdGlvbihvKSl7dmFyIEg9dGU9Pnt2YXIgUGU9TG8odGUsYywhMCk7UGUmJih6PSEwLG0uZXh0ZW5kKHgsUGUpKX07IWgmJmMubWl4aW5zLmxlbmd0aCYmYy5taXhpbnMuZm9yRWFjaChIKSxvLmV4dGVuZHMmJkgoby5leHRlbmRzKSxvLm1peGlucyYmby5taXhpbnMuZm9yRWFjaChIKX1yZXR1cm4hQSYmIXo/KG0uaXNPYmplY3QobykmJl8uc2V0KG8sbnVsbCksbnVsbCk6KG0uaXNBcnJheShBKT9BLmZvckVhY2godGU9PnhbdGVdPW51bGwpOm0uZXh0ZW5kKHgsQSksbS5pc09iamVjdChvKSYmXy5zZXQobyx4KSx4KX1mdW5jdGlvbiBzaShvLGMpe3JldHVybiFvfHwhbS5pc09uKGMpPyExOihjPWMuc2xpY2UoMikucmVwbGFjZSgvT25jZSQvLCIiKSxtLmhhc093bihvLGNbMF0udG9Mb3dlckNhc2UoKStjLnNsaWNlKDEpKXx8bS5oYXNPd24obyxtLmh5cGhlbmF0ZShjKSl8fG0uaGFzT3duKG8sYykpfXZhciB5bj1udWxsLEVuPW51bGw7ZnVuY3Rpb24gbGkobyl7dmFyIGM9eW47cmV0dXJuIHluPW8sRW49byYmby50eXBlLl9fc2NvcGVJZHx8bnVsbCxjfWZ1bmN0aW9uIEZvKG8pe0VuPW99ZnVuY3Rpb24gcWEoKXtFbj1udWxsfXZhciBKbj1vPT5vcjtmdW5jdGlvbiBvcihvKXt2YXIgYz1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06eW47aWYoIWN8fG8uX24pcmV0dXJuIG87dmFyIGg9ZnVuY3Rpb24oKXtoLl9kJiZ3YSgtMSk7dmFyIF89bGkoYyksSTt0cnl7ST1vKC4uLmFyZ3VtZW50cyl9ZmluYWxseXtsaShfKSxoLl9kJiZ3YSgxKX1yZXR1cm4gb2koYyksSX07cmV0dXJuIGguX249ITAsaC5fYz0hMCxoLl9kPSEwLGh9dmFyIGNpPSExO2Z1bmN0aW9uIEJ0KCl7Y2k9ITB9ZnVuY3Rpb24geGUobyl7dmFye3R5cGU6Yyx2bm9kZTpoLHByb3h5Ol8sd2l0aFByb3h5OkkscHJvcHM6QSxwcm9wc09wdGlvbnM6W3hdLHNsb3RzOnosYXR0cnM6SCxlbWl0OnRlLHJlbmRlcjpQZSxyZW5kZXJDYWNoZTpkZSxkYXRhOmZlLHNldHVwU3RhdGU6VWUsY3R4OkplLGluaGVyaXRBdHRyczpndH09byxidCxrZSxtZT1saShvKTtjaT0hMTt0cnl7aWYoaC5zaGFwZUZsYWcmNCl7dmFyIE1lPUl8fF87YnQ9R2koUGUuY2FsbChNZSxNZSxkZSxBLFVlLGZlLEplKSksa2U9SH1lbHNle3ZhciB0dD1jO0g9PT1BJiZCdCgpLGJ0PUdpKHR0Lmxlbmd0aD4xP3R0KEEse2dldCBhdHRycygpe3JldHVybiBCdCgpLEh9LHNsb3RzOnosZW1pdDp0ZX0pOnR0KEEsbnVsbCkpLGtlPWMucHJvcHM/SDpWbyhIKX19Y2F0Y2goTil7TnIubGVuZ3RoPTAsUnIoTixvLDEpLGJ0PUduKEx0KX12YXIgcWU9YnQsb3Q9dm9pZCAwO2lmKGJ0LnBhdGNoRmxhZz4wJiZidC5wYXRjaEZsYWcmMjA0OCYmKFtxZSxvdF09Ym8oYnQpKSxrZSYmZ3QhPT0hMSl7dmFyIEl0PU9iamVjdC5rZXlzKGtlKSx7c2hhcGVGbGFnOmF0fT1xZTtpZihJdC5sZW5ndGgpe2lmKGF0JigxfDYpKXgmJkl0LnNvbWUobS5pc01vZGVsTGlzdGVuZXIpJiYoa2U9bWEoa2UseCkpLHFlPXppKHFlLGtlKTtlbHNlIGlmKCFjaSYmcWUudHlwZSE9PUx0KXtmb3IodmFyIGk9T2JqZWN0LmtleXMoSCksYT1bXSxmPVtdLHA9MCxTPWkubGVuZ3RoO3A8UztwKyspe3ZhciB3PWlbcF07bS5pc09uKHcpP20uaXNNb2RlbExpc3RlbmVyKHcpfHxhLnB1c2god1syXS50b0xvd2VyQ2FzZSgpK3cuc2xpY2UoMykpOmYucHVzaCh3KX1mLmxlbmd0aCYmaWUoIkV4dHJhbmVvdXMgbm9uLXByb3BzIGF0dHJpYnV0ZXMgKCIrIiIuY29uY2F0KGYuam9pbigiLCAiKSwiKSAiKSsid2VyZSBwYXNzZWQgdG8gY29tcG9uZW50IGJ1dCBjb3VsZCBub3QgYmUgYXV0b21hdGljYWxseSBpbmhlcml0ZWQgYmVjYXVzZSBjb21wb25lbnQgcmVuZGVycyBmcmFnbWVudCBvciB0ZXh0IHJvb3Qgbm9kZXMuIiksYS5sZW5ndGgmJmllKCJFeHRyYW5lb3VzIG5vbi1lbWl0cyBldmVudCBsaXN0ZW5lcnMgKCIrIiIuY29uY2F0KGEuam9pbigiLCAiKSwiKSAiKSsnd2VyZSBwYXNzZWQgdG8gY29tcG9uZW50IGJ1dCBjb3VsZCBub3QgYmUgYXV0b21hdGljYWxseSBpbmhlcml0ZWQgYmVjYXVzZSBjb21wb25lbnQgcmVuZGVycyBmcmFnbWVudCBvciB0ZXh0IHJvb3Qgbm9kZXMuIElmIHRoZSBsaXN0ZW5lciBpcyBpbnRlbmRlZCB0byBiZSBhIGNvbXBvbmVudCBjdXN0b20gZXZlbnQgbGlzdGVuZXIgb25seSwgZGVjbGFyZSBpdCB1c2luZyB0aGUgImVtaXRzIiBvcHRpb24uJyl9fX1yZXR1cm4gaC5kaXJzJiYoUW8ocWUpfHxpZSgiUnVudGltZSBkaXJlY3RpdmUgdXNlZCBvbiBjb21wb25lbnQgd2l0aCBub24tZWxlbWVudCByb290IG5vZGUuIFRoZSBkaXJlY3RpdmVzIHdpbGwgbm90IGZ1bmN0aW9uIGFzIGludGVuZGVkLiIpLHFlPXppKHFlKSxxZS5kaXJzPXFlLmRpcnM/cWUuZGlycy5jb25jYXQoaC5kaXJzKTpoLmRpcnMpLGgudHJhbnNpdGlvbiYmKFFvKHFlKXx8aWUoIkNvbXBvbmVudCBpbnNpZGUgPFRyYW5zaXRpb24+IHJlbmRlcnMgbm9uLWVsZW1lbnQgcm9vdCBub2RlIHRoYXQgY2Fubm90IGJlIGFuaW1hdGVkLiIpLHFlLnRyYW5zaXRpb249aC50cmFuc2l0aW9uKSxvdD9vdChxZSk6YnQ9cWUsbGkobWUpLGJ0fXZhciBibz1vPT57dmFyIGM9by5jaGlsZHJlbixoPW8uZHluYW1pY0NoaWxkcmVuLF89ZW8oYyk7aWYoIV8pcmV0dXJuW28sdm9pZCAwXTt2YXIgST1jLmluZGV4T2YoXyksQT1oP2guaW5kZXhPZihfKTotMSx4PXo9PntjW0ldPXosaCYmKEE+LTE/aFtBXT16OnoucGF0Y2hGbGFnPjAmJihvLmR5bmFtaWNDaGlsZHJlbj1bLi4uaCx6XSkpfTtyZXR1cm5bR2koXykseF19O2Z1bmN0aW9uIGVvKG8pe2Zvcih2YXIgYyxoPTA7aDxvLmxlbmd0aDtoKyspe3ZhciBfPW9baF07aWYob2EoXykpe2lmKF8udHlwZSE9PUx0fHxfLmNoaWxkcmVuPT09InYtaWYiKXtpZihjKXJldHVybjtjPV99fWVsc2UgcmV0dXJufXJldHVybiBjfXZhciBWbz1vPT57dmFyIGM7Zm9yKHZhciBoIGluIG8pKGg9PT0iY2xhc3MifHxoPT09InN0eWxlInx8bS5pc09uKGgpKSYmKChjfHwoYz17fSkpW2hdPW9baF0pO3JldHVybiBjfSxtYT0obyxjKT0+e3ZhciBoPXt9O2Zvcih2YXIgXyBpbiBvKSghbS5pc01vZGVsTGlzdGVuZXIoXyl8fCEoXy5zbGljZSg5KWluIGMpKSYmKGhbX109b1tfXSk7cmV0dXJuIGh9LFFvPW89Pm8uc2hhcGVGbGFnJig2fDEpfHxvLnR5cGU9PT1MdDtmdW5jdGlvbiBEaShvLGMsaCl7dmFye3Byb3BzOl8sY2hpbGRyZW46SSxjb21wb25lbnQ6QX09byx7cHJvcHM6eCxjaGlsZHJlbjp6LHBhdGNoRmxhZzpIfT1jLHRlPUEuZW1pdHNPcHRpb25zO2lmKChJfHx6KSYmeHJ8fGMuZGlyc3x8Yy50cmFuc2l0aW9uKXJldHVybiEwO2lmKGgmJkg+PTApe2lmKEgmMTAyNClyZXR1cm4hMDtpZihIJjE2KXJldHVybiBfP3lvKF8seCx0ZSk6ISF4O2lmKEgmOClmb3IodmFyIFBlPWMuZHluYW1pY1Byb3BzLGRlPTA7ZGU8UGUubGVuZ3RoO2RlKyspe3ZhciBmZT1QZVtkZV07aWYoeFtmZV0hPT1fW2ZlXSYmIXNpKHRlLGZlKSlyZXR1cm4hMH19ZWxzZSByZXR1cm4oSXx8eikmJighenx8IXouJHN0YWJsZSk/ITA6Xz09PXg/ITE6Xz94P3lvKF8seCx0ZSk6ITA6ISF4O3JldHVybiExfWZ1bmN0aW9uIHlvKG8sYyxoKXt2YXIgXz1PYmplY3Qua2V5cyhjKTtpZihfLmxlbmd0aCE9PU9iamVjdC5rZXlzKG8pLmxlbmd0aClyZXR1cm4hMDtmb3IodmFyIEk9MDtJPF8ubGVuZ3RoO0krKyl7dmFyIEE9X1tJXTtpZihjW0FdIT09b1tBXSYmIXNpKGgsQSkpcmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gSXIobyxjKXtmb3IodmFye3Zub2RlOmgscGFyZW50Ol99PW87XyYmXy5zdWJUcmVlPT09aDspKGg9Xy52bm9kZSkuZWw9YyxfPV8ucGFyZW50fXZhciBFaT1vPT5vLl9faXNTdXNwZW5zZSxUYT17bmFtZToiU3VzcGVuc2UiLF9faXNTdXNwZW5zZTohMCxwcm9jZXNzKG8sYyxoLF8sSSxBLHgseixILHRlKXtvPT1udWxsP3VpKGMsaCxfLEksQSx4LHosSCx0ZSk6d24obyxjLGgsXyxJLHgseixILHRlKX0saHlkcmF0ZTpocixjcmVhdGU6WnIsbm9ybWFsaXplOkthfSxvbj1UYTtmdW5jdGlvbiBFbyhvLGMpe3ZhciBoPW8ucHJvcHMmJm8ucHJvcHNbY107bS5pc0Z1bmN0aW9uKGgpJiZoKCl9ZnVuY3Rpb24gdWkobyxjLGgsXyxJLEEseCx6LEgpe3ZhcntwOnRlLG86e2NyZWF0ZUVsZW1lbnQ6UGV9fT1ILGRlPVBlKCJkaXYiKSxmZT1vLnN1c3BlbnNlPVpyKG8sSSxfLGMsZGUsaCxBLHgseixIKTt0ZShudWxsLGZlLnBlbmRpbmdCcmFuY2g9by5zc0NvbnRlbnQsZGUsbnVsbCxfLGZlLEEseCksZmUuZGVwcz4wPyhFbyhvLCJvblBlbmRpbmciKSxFbyhvLCJvbkZhbGxiYWNrIiksdGUobnVsbCxvLnNzRmFsbGJhY2ssYyxoLF8sbnVsbCxBLHgpLHRvKGZlLG8uc3NGYWxsYmFjaykpOmZlLnJlc29sdmUoKX1mdW5jdGlvbiB3bihvLGMsaCxfLEksQSx4LHosSCl7dmFye3A6dGUsdW06UGUsbzp7Y3JlYXRlRWxlbWVudDpkZX19PUgsZmU9Yy5zdXNwZW5zZT1vLnN1c3BlbnNlO2ZlLnZub2RlPWMsYy5lbD1vLmVsO3ZhciBVZT1jLnNzQ29udGVudCxKZT1jLnNzRmFsbGJhY2sse2FjdGl2ZUJyYW5jaDpndCxwZW5kaW5nQnJhbmNoOmJ0LGlzSW5GYWxsYmFjazprZSxpc0h5ZHJhdGluZzptZX09ZmU7aWYoYnQpZmUucGVuZGluZ0JyYW5jaD1VZSx3cihVZSxidCk/KHRlKGJ0LFVlLGZlLmhpZGRlbkNvbnRhaW5lcixudWxsLEksZmUsQSx4LHopLGZlLmRlcHM8PTA/ZmUucmVzb2x2ZSgpOmtlJiYodGUoZ3QsSmUsaCxfLEksbnVsbCxBLHgseiksdG8oZmUsSmUpKSk6KGZlLnBlbmRpbmdJZCsrLG1lPyhmZS5pc0h5ZHJhdGluZz0hMSxmZS5hY3RpdmVCcmFuY2g9YnQpOlBlKGJ0LEksZmUpLGZlLmRlcHM9MCxmZS5lZmZlY3RzLmxlbmd0aD0wLGZlLmhpZGRlbkNvbnRhaW5lcj1kZSgiZGl2Iiksa2U/KHRlKG51bGwsVWUsZmUuaGlkZGVuQ29udGFpbmVyLG51bGwsSSxmZSxBLHgseiksZmUuZGVwczw9MD9mZS5yZXNvbHZlKCk6KHRlKGd0LEplLGgsXyxJLG51bGwsQSx4LHopLHRvKGZlLEplKSkpOmd0JiZ3cihVZSxndCk/KHRlKGd0LFVlLGgsXyxJLGZlLEEseCx6KSxmZS5yZXNvbHZlKCEwKSk6KHRlKG51bGwsVWUsZmUuaGlkZGVuQ29udGFpbmVyLG51bGwsSSxmZSxBLHgseiksZmUuZGVwczw9MCYmZmUucmVzb2x2ZSgpKSk7ZWxzZSBpZihndCYmd3IoVWUsZ3QpKXRlKGd0LFVlLGgsXyxJLGZlLEEseCx6KSx0byhmZSxVZSk7ZWxzZSBpZihFbyhjLCJvblBlbmRpbmciKSxmZS5wZW5kaW5nQnJhbmNoPVVlLGZlLnBlbmRpbmdJZCsrLHRlKG51bGwsVWUsZmUuaGlkZGVuQ29udGFpbmVyLG51bGwsSSxmZSxBLHgseiksZmUuZGVwczw9MClmZS5yZXNvbHZlKCk7ZWxzZXt2YXJ7dGltZW91dDpNZSxwZW5kaW5nSWQ6dHR9PWZlO01lPjA/c2V0VGltZW91dCgoKT0+e2ZlLnBlbmRpbmdJZD09PXR0JiZmZS5mYWxsYmFjayhKZSl9LE1lKTpNZT09PTAmJmZlLmZhbGxiYWNrKEplKX19dmFyIGZpPSExO2Z1bmN0aW9uIFpyKG8sYyxoLF8sSSxBLHgseixILHRlKXt2YXIgUGU9YXJndW1lbnRzLmxlbmd0aD4xMCYmYXJndW1lbnRzWzEwXSE9PXZvaWQgMD9hcmd1bWVudHNbMTBdOiExO2ZpfHwoZmk9ITAsY29uc29sZVtjb25zb2xlLmluZm8/ImluZm8iOiJsb2ciXSgiPFN1c3BlbnNlPiBpcyBhbiBleHBlcmltZW50YWwgZmVhdHVyZSBhbmQgaXRzIEFQSSB3aWxsIGxpa2VseSBjaGFuZ2UuIikpO3ZhcntwOmRlLG06ZmUsdW06VWUsbjpKZSxvOntwYXJlbnROb2RlOmd0LHJlbW92ZTpidH19PXRlLGtlPW8ucHJvcHM/bS50b051bWJlcihvLnByb3BzLnRpbWVvdXQpOnZvaWQgMDtMbihrZSwiU3VzcGVuc2UgdGltZW91dCIpO3ZhciBtZT17dm5vZGU6byxwYXJlbnQ6YyxwYXJlbnRDb21wb25lbnQ6aCxpc1NWRzp4LGNvbnRhaW5lcjpfLGhpZGRlbkNvbnRhaW5lcjpJLGFuY2hvcjpBLGRlcHM6MCxwZW5kaW5nSWQ6MCx0aW1lb3V0OnR5cGVvZiBrZT09Im51bWJlciI/a2U6LTEsYWN0aXZlQnJhbmNoOm51bGwscGVuZGluZ0JyYW5jaDpudWxsLGlzSW5GYWxsYmFjazohMCxpc0h5ZHJhdGluZzpQZSxpc1VubW91bnRlZDohMSxlZmZlY3RzOltdLHJlc29sdmUoKXt2YXIgTWU9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT12b2lkIDA/YXJndW1lbnRzWzBdOiExO3tpZighTWUmJiFtZS5wZW5kaW5nQnJhbmNoKXRocm93IG5ldyBFcnJvcigic3VzcGVuc2UucmVzb2x2ZSgpIGlzIGNhbGxlZCB3aXRob3V0IGEgcGVuZGluZyBicmFuY2guIik7aWYobWUuaXNVbm1vdW50ZWQpdGhyb3cgbmV3IEVycm9yKCJzdXNwZW5zZS5yZXNvbHZlKCkgaXMgY2FsbGVkIG9uIGFuIGFscmVhZHkgdW5tb3VudGVkIHN1c3BlbnNlIGJvdW5kYXJ5LiIpfXZhcnt2bm9kZTp0dCxhY3RpdmVCcmFuY2g6cWUscGVuZGluZ0JyYW5jaDpvdCxwZW5kaW5nSWQ6SXQsZWZmZWN0czphdCxwYXJlbnRDb21wb25lbnQ6aSxjb250YWluZXI6YX09bWU7aWYobWUuaXNIeWRyYXRpbmcpbWUuaXNIeWRyYXRpbmc9ITE7ZWxzZSBpZighTWUpe3ZhciBmPXFlJiZvdC50cmFuc2l0aW9uJiZvdC50cmFuc2l0aW9uLm1vZGU9PT0ib3V0LWluIjtmJiYocWUudHJhbnNpdGlvbi5hZnRlckxlYXZlPSgpPT57SXQ9PT1tZS5wZW5kaW5nSWQmJmZlKG90LGEscCwwKX0pO3ZhcnthbmNob3I6cH09bWU7cWUmJihwPUplKHFlKSxVZShxZSxpLG1lLCEwKSksZnx8ZmUob3QsYSxwLDApfXRvKG1lLG90KSxtZS5wZW5kaW5nQnJhbmNoPW51bGwsbWUuaXNJbkZhbGxiYWNrPSExO2Zvcih2YXIgUz1tZS5wYXJlbnQsdz0hMTtTOyl7aWYoUy5wZW5kaW5nQnJhbmNoKXtTLmVmZmVjdHMucHVzaCguLi5hdCksdz0hMDticmVha31TPVMucGFyZW50fXd8fHhpKGF0KSxtZS5lZmZlY3RzPVtdLEVvKHR0LCJvblJlc29sdmUiKX0sZmFsbGJhY2soTWUpe2lmKCEhbWUucGVuZGluZ0JyYW5jaCl7dmFye3Zub2RlOnR0LGFjdGl2ZUJyYW5jaDpxZSxwYXJlbnRDb21wb25lbnQ6b3QsY29udGFpbmVyOkl0LGlzU1ZHOmF0fT1tZTtFbyh0dCwib25GYWxsYmFjayIpO3ZhciBpPUplKHFlKSxhPSgpPT57IW1lLmlzSW5GYWxsYmFja3x8KGRlKG51bGwsTWUsSXQsaSxvdCxudWxsLGF0LHosSCksdG8obWUsTWUpKX0sZj1NZS50cmFuc2l0aW9uJiZNZS50cmFuc2l0aW9uLm1vZGU9PT0ib3V0LWluIjtmJiYocWUudHJhbnNpdGlvbi5hZnRlckxlYXZlPWEpLG1lLmlzSW5GYWxsYmFjaz0hMCxVZShxZSxvdCxudWxsLCEwKSxmfHxhKCl9fSxtb3ZlKE1lLHR0LHFlKXttZS5hY3RpdmVCcmFuY2gmJmZlKG1lLmFjdGl2ZUJyYW5jaCxNZSx0dCxxZSksbWUuY29udGFpbmVyPU1lfSxuZXh0KCl7cmV0dXJuIG1lLmFjdGl2ZUJyYW5jaCYmSmUobWUuYWN0aXZlQnJhbmNoKX0scmVnaXN0ZXJEZXAoTWUsdHQpe3ZhciBxZT0hIW1lLnBlbmRpbmdCcmFuY2g7cWUmJm1lLmRlcHMrKzt2YXIgb3Q9TWUudm5vZGUuZWw7TWUuYXN5bmNEZXAuY2F0Y2goSXQ9PntScihJdCxNZSwwKX0pLnRoZW4oSXQ9PntpZighKE1lLmlzVW5tb3VudGVkfHxtZS5pc1VubW91bnRlZHx8bWUucGVuZGluZ0lkIT09TWUuc3VzcGVuc2VJZCkpe01lLmFzeW5jUmVzb2x2ZWQ9ITA7dmFye3Zub2RlOmF0fT1NZTtRdChhdCksZGwoTWUsSXQsITEpLG90JiYoYXQuZWw9b3QpO3ZhciBpPSFvdCYmTWUuc3ViVHJlZS5lbDt0dChNZSxhdCxndChvdHx8TWUuc3ViVHJlZS5lbCksb3Q/bnVsbDpKZShNZS5zdWJUcmVlKSxtZSx4LEgpLGkmJmJ0KGkpLElyKE1lLGF0LmVsKSxPKCkscWUmJi0tbWUuZGVwcz09PTAmJm1lLnJlc29sdmUoKX19KX0sdW5tb3VudChNZSx0dCl7bWUuaXNVbm1vdW50ZWQ9ITAsbWUuYWN0aXZlQnJhbmNoJiZVZShtZS5hY3RpdmVCcmFuY2gsaCxNZSx0dCksbWUucGVuZGluZ0JyYW5jaCYmVWUobWUucGVuZGluZ0JyYW5jaCxoLE1lLHR0KX19O3JldHVybiBtZX1mdW5jdGlvbiBocihvLGMsaCxfLEksQSx4LHosSCl7dmFyIHRlPWMuc3VzcGVuc2U9WnIoYyxfLGgsby5wYXJlbnROb2RlLGwuY3JlYXRlRWxlbWVudCgiZGl2IiksbnVsbCxJLEEseCx6LCEwKSxQZT1IKG8sdGUucGVuZGluZ0JyYW5jaD1jLnNzQ29udGVudCxoLHRlLEEseCk7cmV0dXJuIHRlLmRlcHM9PT0wJiZ0ZS5yZXNvbHZlKCksUGV9ZnVuY3Rpb24gS2Eobyl7dmFye3NoYXBlRmxhZzpjLGNoaWxkcmVuOmh9PW8sXz1jJjMyO28uc3NDb250ZW50PUlhKF8/aC5kZWZhdWx0OmgpLG8uc3NGYWxsYmFjaz1fP0lhKGguZmFsbGJhY2spOkduKEx0KX1mdW5jdGlvbiBJYShvKXt2YXIgYztpZihtLmlzRnVuY3Rpb24obykpe3ZhciBoPUFpJiZvLl9jO2gmJihvLl9kPSExLGdyKCkpLG89bygpLGgmJihvLl9kPSEwLGM9V24sWGEoKSl9aWYobS5pc0FycmF5KG8pKXt2YXIgXz1lbyhvKTtffHxpZSgiPFN1c3BlbnNlPiBzbG90cyBleHBlY3QgYSBzaW5nbGUgcm9vdCBub2RlLiIpLG89X31yZXR1cm4gbz1HaShvKSxjJiYhby5keW5hbWljQ2hpbGRyZW4mJihvLmR5bmFtaWNDaGlsZHJlbj1jLmZpbHRlcihJPT5JIT09bykpLG99ZnVuY3Rpb24gZWEobyxjKXtjJiZjLnBlbmRpbmdCcmFuY2g/bS5pc0FycmF5KG8pP2MuZWZmZWN0cy5wdXNoKC4uLm8pOmMuZWZmZWN0cy5wdXNoKG8pOnhpKG8pfWZ1bmN0aW9uIHRvKG8sYyl7by5hY3RpdmVCcmFuY2g9Yzt2YXJ7dm5vZGU6aCxwYXJlbnRDb21wb25lbnQ6X309byxJPWguZWw9Yy5lbDtfJiZfLnN1YlRyZWU9PT1oJiYoXy52bm9kZS5lbD1JLElyKF8sSSkpfWZ1bmN0aW9uIFpuKG8sYyl7aWYoIUJuKWllKCJwcm92aWRlKCkgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgc2V0dXAoKS4iKTtlbHNle3ZhciBoPUJuLnByb3ZpZGVzLF89Qm4ucGFyZW50JiZCbi5wYXJlbnQucHJvdmlkZXM7Xz09PWgmJihoPUJuLnByb3ZpZGVzPU9iamVjdC5jcmVhdGUoXykpLGhbb109YyxCbi50eXBlLm1wVHlwZT09PSJhcHAiJiZCbi5hcHBDb250ZXh0LmFwcC5wcm92aWRlKG8sYyl9fWZ1bmN0aW9uIGFyKG8sYyl7dmFyIGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLF89Qm58fHluO2lmKF8pe3ZhciBJPV8ucGFyZW50PT1udWxsP18udm5vZGUuYXBwQ29udGV4dCYmXy52bm9kZS5hcHBDb250ZXh0LnByb3ZpZGVzOl8ucGFyZW50LnByb3ZpZGVzO2lmKEkmJm8gaW4gSSlyZXR1cm4gSVtvXTtpZihhcmd1bWVudHMubGVuZ3RoPjEpcmV0dXJuIGgmJm0uaXNGdW5jdGlvbihjKT9jLmNhbGwoXy5wcm94eSk6YztpZSgnaW5qZWN0aW9uICInLmNvbmNhdChTdHJpbmcobyksJyIgbm90IGZvdW5kLicpKX1lbHNlIGllKCJpbmplY3QoKSBjYW4gb25seSBiZSB1c2VkIGluc2lkZSBzZXR1cCgpIG9yIGZ1bmN0aW9uYWwgY29tcG9uZW50cy4iKX1mdW5jdGlvbiBWbihvLGMpe3JldHVybiBoaShvLG51bGwsYyl9ZnVuY3Rpb24gWHIobyxjKXtyZXR1cm4gaGkobyxudWxsLE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxjKSx7Zmx1c2g6InBvc3QifSkpfWZ1bmN0aW9uIGRpKG8sYyl7cmV0dXJuIGhpKG8sbnVsbCxPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sYykse2ZsdXNoOiJzeW5jIn0pKX12YXIgdGE9e307ZnVuY3Rpb24gd2kobyxjLGgpe3JldHVybiBtLmlzRnVuY3Rpb24oYyl8fGllKCJgd2F0Y2goZm4sIG9wdGlvbnM/KWAgc2lnbmF0dXJlIGhhcyBiZWVuIG1vdmVkIHRvIGEgc2VwYXJhdGUgQVBJLiBVc2UgYHdhdGNoRWZmZWN0KGZuLCBvcHRpb25zPylgIGluc3RlYWQuIGB3YXRjaGAgbm93IG9ubHkgc3VwcG9ydHMgYHdhdGNoKHNvdXJjZSwgY2IsIG9wdGlvbnM/KSBzaWduYXR1cmUuIiksaGkobyxjLGgpfWZ1bmN0aW9uIGhpKG8sYyl7dmFye2ltbWVkaWF0ZTpoLGRlZXA6XyxmbHVzaDpJLG9uVHJhY2s6QSxvblRyaWdnZXI6eH09YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOm0uRU1QVFlfT0JKO2N8fChoIT09dm9pZCAwJiZpZSgnd2F0Y2goKSAiaW1tZWRpYXRlIiBvcHRpb24gaXMgb25seSByZXNwZWN0ZWQgd2hlbiB1c2luZyB0aGUgd2F0Y2goc291cmNlLCBjYWxsYmFjaywgb3B0aW9ucz8pIHNpZ25hdHVyZS4nKSxfIT09dm9pZCAwJiZpZSgnd2F0Y2goKSAiZGVlcCIgb3B0aW9uIGlzIG9ubHkgcmVzcGVjdGVkIHdoZW4gdXNpbmcgdGhlIHdhdGNoKHNvdXJjZSwgY2FsbGJhY2ssIG9wdGlvbnM/KSBzaWduYXR1cmUuJykpO3ZhciB6PW90PT57aWUoIkludmFsaWQgd2F0Y2ggc291cmNlOiAiLG90LCJBIHdhdGNoIHNvdXJjZSBjYW4gb25seSBiZSBhIGdldHRlci9lZmZlY3QgZnVuY3Rpb24sIGEgcmVmLCBhIHJlYWN0aXZlIG9iamVjdCwgb3IgYW4gYXJyYXkgb2YgdGhlc2UgdHlwZXMuIil9LEg9Ui5nZXRDdXJyZW50U2NvcGUoKT09PShCbj09bnVsbD92b2lkIDA6Qm4uc2NvcGUpP0JuOm51bGwsdGUsUGU9ITEsZGU9ITE7aWYoUi5pc1JlZihvKT8odGU9KCk9Pm8udmFsdWUsUGU9Ui5pc1NoYWxsb3cobykpOlIuaXNSZWFjdGl2ZShvKT8odGU9KCk9Pm8sXz0hMCk6bS5pc0FycmF5KG8pPyhkZT0hMCxQZT1vLnNvbWUob3Q9PlIuaXNSZWFjdGl2ZShvdCl8fFIuaXNTaGFsbG93KG90KSksdGU9KCk9Pm8ubWFwKG90PT57aWYoUi5pc1JlZihvdCkpcmV0dXJuIG90LnZhbHVlO2lmKFIuaXNSZWFjdGl2ZShvdCkpcmV0dXJuIFNpKG90KTtpZihtLmlzRnVuY3Rpb24ob3QpKXJldHVybiBIdChvdCxILDIpO3oob3QpfSkpOm0uaXNGdW5jdGlvbihvKT9jP3RlPSgpPT5IdChvLEgsMik6dGU9KCk9PntpZighKEgmJkguaXNVbm1vdW50ZWQpKXJldHVybiBVZSYmVWUoKSxJbihvLEgsMyxbSmVdKX06KHRlPW0uTk9PUCx6KG8pKSxjJiZfKXt2YXIgZmU9dGU7dGU9KCk9PlNpKGZlKCkpfXZhciBVZSxKZT1vdD0+e1VlPXR0Lm9uU3RvcD0oKT0+e0h0KG90LEgsNCl9fSxndDtpZihkLmlzSW5TU1JDb21wb25lbnRTZXR1cClpZihKZT1tLk5PT1AsYz9oJiZJbihjLEgsMyxbdGUoKSxkZT9bXTp2b2lkIDAsSmVdKTp0ZSgpLEk9PT0ic3luYyIpe3ZhciBidD12bCgpO2d0PWJ0Ll9fd2F0Y2hlckhhbmRsZXN8fChidC5fX3dhdGNoZXJIYW5kbGVzPVtdKX1lbHNlIHJldHVybiBtLk5PT1A7dmFyIGtlPWRlP25ldyBBcnJheShvLmxlbmd0aCkuZmlsbCh0YSk6dGEsbWU9KCk9PntpZighIXR0LmFjdGl2ZSlpZihjKXt2YXIgb3Q9dHQucnVuKCk7KF98fFBlfHwoZGU/b3Quc29tZSgoSXQsYXQpPT5tLmhhc0NoYW5nZWQoSXQsa2VbYXRdKSk6bS5oYXNDaGFuZ2VkKG90LGtlKSkpJiYoVWUmJlVlKCksSW4oYyxILDMsW290LGtlPT09dGE/dm9pZCAwOmRlJiZrZVswXT09PXRhP1tdOmtlLEplXSksa2U9b3QpfWVsc2UgdHQucnVuKCl9O21lLmFsbG93UmVjdXJzZT0hIWM7dmFyIE1lO0k9PT0ic3luYyI/TWU9bWU6ST09PSJwb3N0Ij9NZT0oKT0+cHIobWUsSCYmSC5zdXNwZW5zZSk6KG1lLnByZT0hMCxIJiYobWUuaWQ9SC51aWQpLE1lPSgpPT5KdChtZSkpO3ZhciB0dD1uZXcgUi5SZWFjdGl2ZUVmZmVjdCh0ZSxNZSk7dHQub25UcmFjaz1BLHR0Lm9uVHJpZ2dlcj14LGM/aD9tZSgpOmtlPXR0LnJ1bigpOkk9PT0icG9zdCI/cHIodHQucnVuLmJpbmQodHQpLEgmJkguc3VzcGVuc2UpOnR0LnJ1bigpO3ZhciBxZT0oKT0+e3R0LnN0b3AoKSxIJiZILnNjb3BlJiZtLnJlbW92ZShILnNjb3BlLmVmZmVjdHMsdHQpfTtyZXR1cm4gZ3QmJmd0LnB1c2gocWUpLHFlfWZ1bmN0aW9uIHdvKG8sYyxoKXt2YXIgXz10aGlzLnByb3h5LEk9bS5pc1N0cmluZyhvKT9vLmluY2x1ZGVzKCIuIik/X2EoXyxvKTooKT0+X1tvXTpvLmJpbmQoXyxfKSxBO20uaXNGdW5jdGlvbihjKT9BPWM6KEE9Yy5oYW5kbGVyLGg9Yyk7dmFyIHg9Qm47dmkodGhpcyk7dmFyIHo9aGkoSSxBLmJpbmQoXyksaCk7cmV0dXJuIHg/dmkoeCk6bWkoKSx6fWZ1bmN0aW9uIF9hKG8sYyl7dmFyIGg9Yy5zcGxpdCgiLiIpO3JldHVybigpPT57Zm9yKHZhciBfPW8sST0wO0k8aC5sZW5ndGgmJl87SSsrKV89X1toW0ldXTtyZXR1cm4gX319ZnVuY3Rpb24gU2kobyxjKXtpZighbS5pc09iamVjdChvKXx8by5fX3Zfc2tpcHx8KGM9Y3x8bmV3IFNldCxjLmhhcyhvKSkpcmV0dXJuIG87aWYoYy5hZGQobyksUi5pc1JlZihvKSlTaShvLnZhbHVlLGMpO2Vsc2UgaWYobS5pc0FycmF5KG8pKWZvcih2YXIgaD0wO2g8by5sZW5ndGg7aCsrKVNpKG9baF0sYyk7ZWxzZSBpZihtLmlzU2V0KG8pfHxtLmlzTWFwKG8pKW8uZm9yRWFjaChJPT57U2koSSxjKX0pO2Vsc2UgaWYobS5pc1BsYWluT2JqZWN0KG8pKWZvcih2YXIgXyBpbiBvKVNpKG9bX10sYyk7cmV0dXJuIG99ZnVuY3Rpb24gTGkoKXt2YXIgbz17aXNNb3VudGVkOiExLGlzTGVhdmluZzohMSxpc1VubW91bnRpbmc6ITEsbGVhdmluZ1ZOb2RlczpuZXcgTWFwfTtyZXR1cm4gaW8oKCk9PntvLmlzTW91bnRlZD0hMH0pLFFuKCgpPT57by5pc1VubW91bnRpbmc9ITB9KSxvfXZhciBzcj1bRnVuY3Rpb24sQXJyYXldLERyPXttb2RlOlN0cmluZyxhcHBlYXI6Qm9vbGVhbixwZXJzaXN0ZWQ6Qm9vbGVhbixvbkJlZm9yZUVudGVyOnNyLG9uRW50ZXI6c3Isb25BZnRlckVudGVyOnNyLG9uRW50ZXJDYW5jZWxsZWQ6c3Isb25CZWZvcmVMZWF2ZTpzcixvbkxlYXZlOnNyLG9uQWZ0ZXJMZWF2ZTpzcixvbkxlYXZlQ2FuY2VsbGVkOnNyLG9uQmVmb3JlQXBwZWFyOnNyLG9uQXBwZWFyOnNyLG9uQWZ0ZXJBcHBlYXI6c3Isb25BcHBlYXJDYW5jZWxsZWQ6c3J9LG5vPXtuYW1lOiJCYXNlVHJhbnNpdGlvbiIscHJvcHM6RHIsc2V0dXAobyxjKXt2YXJ7c2xvdHM6aH09YyxfPW1uKCksST1MaSgpLEE7cmV0dXJuKCk9Pnt2YXIgeD1oLmRlZmF1bHQmJlooaC5kZWZhdWx0KCksITApO2lmKCEoIXh8fCF4Lmxlbmd0aCkpe3ZhciB6PXhbMF07aWYoeC5sZW5ndGg+MSl7dmFyIEg9ITE7Zm9yKHZhciB0ZSBvZiB4KWlmKHRlLnR5cGUhPT1MdCl7aWYoSCl7aWUoIjx0cmFuc2l0aW9uPiBjYW4gb25seSBiZSB1c2VkIG9uIGEgc2luZ2xlIGVsZW1lbnQgb3IgY29tcG9uZW50LiBVc2UgPHRyYW5zaXRpb24tZ3JvdXA+IGZvciBsaXN0cy4iKTticmVha316PXRlLEg9ITB9fXZhciBQZT1SLnRvUmF3KG8pLHttb2RlOmRlfT1QZTtpZihkZSYmZGUhPT0iaW4tb3V0IiYmZGUhPT0ib3V0LWluIiYmZGUhPT0iZGVmYXVsdCImJmllKCJpbnZhbGlkIDx0cmFuc2l0aW9uPiBtb2RlOiAiLmNvbmNhdChkZSkpLEkuaXNMZWF2aW5nKXJldHVybiBwaSh6KTt2YXIgZmU9VW8oeik7aWYoIWZlKXJldHVybiBwaSh6KTt2YXIgVWU9Q2koZmUsUGUsSSxfKTtNKGZlLFVlKTt2YXIgSmU9Xy5zdWJUcmVlLGd0PUplJiZVbyhKZSksYnQ9ITEse2dldFRyYW5zaXRpb25LZXk6a2V9PWZlLnR5cGU7aWYoa2Upe3ZhciBtZT1rZSgpO0E9PT12b2lkIDA/QT1tZTptZSE9PUEmJihBPW1lLGJ0PSEwKX1pZihndCYmZ3QudHlwZSE9PUx0JiYoIXdyKGZlLGd0KXx8YnQpKXt2YXIgTWU9Q2koZ3QsUGUsSSxfKTtpZihNKGd0LE1lKSxkZT09PSJvdXQtaW4iKXJldHVybiBJLmlzTGVhdmluZz0hMCxNZS5hZnRlckxlYXZlPSgpPT57SS5pc0xlYXZpbmc9ITEsXy51cGRhdGUuYWN0aXZlIT09ITEmJl8udXBkYXRlKCl9LHBpKHopO2RlPT09ImluLW91dCImJmZlLnR5cGUhPT1MdCYmKE1lLmRlbGF5TGVhdmU9KHR0LHFlLG90KT0+e3ZhciBJdD1TbyhJLGd0KTtJdFtTdHJpbmcoZ3Qua2V5KV09Z3QsdHQuX2xlYXZlQ2I9KCk9PntxZSgpLHR0Ll9sZWF2ZUNiPXZvaWQgMCxkZWxldGUgVWUuZGVsYXllZExlYXZlfSxVZS5kZWxheWVkTGVhdmU9b3R9KX1yZXR1cm4gen19fX0sJG89bm87ZnVuY3Rpb24gU28obyxjKXt2YXJ7bGVhdmluZ1ZOb2RlczpofT1vLF89aC5nZXQoYy50eXBlKTtyZXR1cm4gX3x8KF89T2JqZWN0LmNyZWF0ZShudWxsKSxoLnNldChjLnR5cGUsXykpLF99ZnVuY3Rpb24gQ2kobyxjLGgsXyl7dmFye2FwcGVhcjpJLG1vZGU6QSxwZXJzaXN0ZWQ6eD0hMSxvbkJlZm9yZUVudGVyOnosb25FbnRlcjpILG9uQWZ0ZXJFbnRlcjp0ZSxvbkVudGVyQ2FuY2VsbGVkOlBlLG9uQmVmb3JlTGVhdmU6ZGUsb25MZWF2ZTpmZSxvbkFmdGVyTGVhdmU6VWUsb25MZWF2ZUNhbmNlbGxlZDpKZSxvbkJlZm9yZUFwcGVhcjpndCxvbkFwcGVhcjpidCxvbkFmdGVyQXBwZWFyOmtlLG9uQXBwZWFyQ2FuY2VsbGVkOm1lfT1jLE1lPVN0cmluZyhvLmtleSksdHQ9U28oaCxvKSxxZT0oYXQsaSk9PnthdCYmSW4oYXQsXyw5LGkpfSxvdD0oYXQsaSk9Pnt2YXIgYT1pWzFdO3FlKGF0LGkpLG0uaXNBcnJheShhdCk/YXQuZXZlcnkoZj0+Zi5sZW5ndGg8PTEpJiZhKCk6YXQubGVuZ3RoPD0xJiZhKCl9LEl0PXttb2RlOkEscGVyc2lzdGVkOngsYmVmb3JlRW50ZXIoYXQpe3ZhciBpPXo7aWYoIWguaXNNb3VudGVkKWlmKEkpaT1ndHx8ejtlbHNlIHJldHVybjthdC5fbGVhdmVDYiYmYXQuX2xlYXZlQ2IoITApO3ZhciBhPXR0W01lXTthJiZ3cihvLGEpJiZhLmVsLl9sZWF2ZUNiJiZhLmVsLl9sZWF2ZUNiKCkscWUoaSxbYXRdKX0sZW50ZXIoYXQpe3ZhciBpPUgsYT10ZSxmPVBlO2lmKCFoLmlzTW91bnRlZClpZihJKWk9YnR8fEgsYT1rZXx8dGUsZj1tZXx8UGU7ZWxzZSByZXR1cm47dmFyIHA9ITEsUz1hdC5fZW50ZXJDYj13PT57cHx8KHA9ITAsdz9xZShmLFthdF0pOnFlKGEsW2F0XSksSXQuZGVsYXllZExlYXZlJiZJdC5kZWxheWVkTGVhdmUoKSxhdC5fZW50ZXJDYj12b2lkIDApfTtpP290KGksW2F0LFNdKTpTKCl9LGxlYXZlKGF0LGkpe3ZhciBhPVN0cmluZyhvLmtleSk7aWYoYXQuX2VudGVyQ2ImJmF0Ll9lbnRlckNiKCEwKSxoLmlzVW5tb3VudGluZylyZXR1cm4gaSgpO3FlKGRlLFthdF0pO3ZhciBmPSExLHA9YXQuX2xlYXZlQ2I9Uz0+e2Z8fChmPSEwLGkoKSxTP3FlKEplLFthdF0pOnFlKFVlLFthdF0pLGF0Ll9sZWF2ZUNiPXZvaWQgMCx0dFthXT09PW8mJmRlbGV0ZSB0dFthXSl9O3R0W2FdPW8sZmU/b3QoZmUsW2F0LHBdKTpwKCl9LGNsb25lKGF0KXtyZXR1cm4gQ2koYXQsYyxoLF8pfX07cmV0dXJuIEl0fWZ1bmN0aW9uIHBpKG8pe2lmKEsobykpcmV0dXJuIG89emkobyksby5jaGlsZHJlbj1udWxsLG99ZnVuY3Rpb24gVW8obyl7cmV0dXJuIEsobyk/by5jaGlsZHJlbj9vLmNoaWxkcmVuWzBdOnZvaWQgMDpvfWZ1bmN0aW9uIE0obyxjKXtvLnNoYXBlRmxhZyY2JiZvLmNvbXBvbmVudD9NKG8uY29tcG9uZW50LnN1YlRyZWUsYyk6by5zaGFwZUZsYWcmMTI4PyhvLnNzQ29udGVudC50cmFuc2l0aW9uPWMuY2xvbmUoby5zc0NvbnRlbnQpLG8uc3NGYWxsYmFjay50cmFuc2l0aW9uPWMuY2xvbmUoby5zc0ZhbGxiYWNrKSk6by50cmFuc2l0aW9uPWN9ZnVuY3Rpb24gWihvKXtmb3IodmFyIGM9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOiExLGg9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDAsXz1bXSxJPTAsQT0wO0E8by5sZW5ndGg7QSsrKXt2YXIgeD1vW0FdLHo9aD09bnVsbD94LmtleTpTdHJpbmcoaCkrU3RyaW5nKHgua2V5IT1udWxsP3gua2V5OkEpO3gudHlwZT09PXl0Pyh4LnBhdGNoRmxhZyYxMjgmJkkrKyxfPV8uY29uY2F0KFooeC5jaGlsZHJlbixjLHopKSk6KGN8fHgudHlwZSE9PUx0KSYmXy5wdXNoKHohPW51bGw/emkoeCx7a2V5Onp9KTp4KX1pZihJPjEpZm9yKHZhciBIPTA7SDxfLmxlbmd0aDtIKyspX1tIXS5wYXRjaEZsYWc9LTI7cmV0dXJuIF99ZnVuY3Rpb24gdmUobyl7cmV0dXJuIG0uaXNGdW5jdGlvbihvKT97c2V0dXA6byxuYW1lOm8ubmFtZX06b312YXIgY2U9bz0+ISFvLnR5cGUuX19hc3luY0xvYWRlcjtmdW5jdGlvbiBoZShvKXttLmlzRnVuY3Rpb24obykmJihvPXtsb2FkZXI6b30pO3Zhcntsb2FkZXI6Yyxsb2FkaW5nQ29tcG9uZW50OmgsZXJyb3JDb21wb25lbnQ6XyxkZWxheTpJPTIwMCx0aW1lb3V0OkEsc3VzcGVuc2libGU6eD0hMCxvbkVycm9yOnp9PW8sSD1udWxsLHRlLFBlPTAsZGU9KCk9PihQZSsrLEg9bnVsbCxmZSgpKSxmZT0oKT0+e3ZhciBVZTtyZXR1cm4gSHx8KFVlPUg9YygpLmNhdGNoKEplPT57aWYoSmU9SmUgaW5zdGFuY2VvZiBFcnJvcj9KZTpuZXcgRXJyb3IoU3RyaW5nKEplKSkseilyZXR1cm4gbmV3IFByb21pc2UoKGd0LGJ0KT0+e3ZhciBrZT0oKT0+Z3QoZGUoKSksbWU9KCk9PmJ0KEplKTt6KEplLGtlLG1lLFBlKzEpfSk7dGhyb3cgSmV9KS50aGVuKEplPT57aWYoVWUhPT1IJiZIKXJldHVybiBIO2lmKEplfHxpZSgiQXN5bmMgY29tcG9uZW50IGxvYWRlciByZXNvbHZlZCB0byB1bmRlZmluZWQuIElmIHlvdSBhcmUgdXNpbmcgcmV0cnkoKSwgbWFrZSBzdXJlIHRvIHJldHVybiBpdHMgcmV0dXJuIHZhbHVlLiIpLEplJiYoSmUuX19lc01vZHVsZXx8SmVbU3ltYm9sLnRvU3RyaW5nVGFnXT09PSJNb2R1bGUiKSYmKEplPUplLmRlZmF1bHQpLEplJiYhbS5pc09iamVjdChKZSkmJiFtLmlzRnVuY3Rpb24oSmUpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBhc3luYyBjb21wb25lbnQgbG9hZCByZXN1bHQ6ICIuY29uY2F0KEplKSk7cmV0dXJuIHRlPUplLEplfSkpfTtyZXR1cm4gdmUoe25hbWU6IkFzeW5jQ29tcG9uZW50V3JhcHBlciIsX19hc3luY0xvYWRlcjpmZSxnZXQgX19hc3luY1Jlc29sdmVkKCl7cmV0dXJuIHRlfSxzZXR1cCgpe3ZhciBVZT1CbjtpZih0ZSlyZXR1cm4oKT0+U3QodGUsVWUpO3ZhciBKZT1tZT0+e0g9bnVsbCxScihtZSxVZSwxMywhXyl9O2lmKHgmJlVlLnN1c3BlbnNlfHxkLmlzSW5TU1JDb21wb25lbnRTZXR1cClyZXR1cm4gZmUoKS50aGVuKG1lPT4oKT0+U3QobWUsVWUpKS5jYXRjaChtZT0+KEplKG1lKSwoKT0+Xz9HbihfLHtlcnJvcjptZX0pOm51bGwpKTt2YXIgZ3Q9Ui5yZWYoITEpLGJ0PVIucmVmKCksa2U9Ui5yZWYoISFJKTtyZXR1cm4gSSYmc2V0VGltZW91dCgoKT0+e2tlLnZhbHVlPSExfSxJKSxBIT1udWxsJiZzZXRUaW1lb3V0KCgpPT57aWYoIWd0LnZhbHVlJiYhYnQudmFsdWUpe3ZhciBtZT1uZXcgRXJyb3IoIkFzeW5jIGNvbXBvbmVudCB0aW1lZCBvdXQgYWZ0ZXIgIi5jb25jYXQoQSwibXMuIikpO0plKG1lKSxidC52YWx1ZT1tZX19LEEpLGZlKCkudGhlbigoKT0+e2d0LnZhbHVlPSEwLFVlLnBhcmVudCYmSyhVZS5wYXJlbnQudm5vZGUpJiZKdChVZS5wYXJlbnQudXBkYXRlKX0pLmNhdGNoKG1lPT57SmUobWUpLGJ0LnZhbHVlPW1lfSksKCk9PntpZihndC52YWx1ZSYmdGUpcmV0dXJuIFN0KHRlLFVlKTtpZihidC52YWx1ZSYmXylyZXR1cm4gR24oXyx7ZXJyb3I6YnQudmFsdWV9KTtpZihoJiYha2UudmFsdWUpcmV0dXJuIEduKGgpfX19KX1mdW5jdGlvbiBTdChvLGMpe3ZhcntyZWY6aCxwcm9wczpfLGNoaWxkcmVuOkksY2U6QX09Yy52bm9kZSx4PUduKG8sXyxJKTtyZXR1cm4geC5yZWY9aCx4LmNlPUEsZGVsZXRlIGMudm5vZGUuY2UseH12YXIgSz1vPT5vLnR5cGUuX19pc0tlZXBBbGl2ZSxZPXtuYW1lOiJLZWVwQWxpdmUiLF9faXNLZWVwQWxpdmU6ITAscHJvcHM6e2luY2x1ZGU6W1N0cmluZyxSZWdFeHAsQXJyYXldLGV4Y2x1ZGU6W1N0cmluZyxSZWdFeHAsQXJyYXldLG1heDpbU3RyaW5nLE51bWJlcl19LHNldHVwKG8sYyl7dmFye3Nsb3RzOmh9PWMsXz1tbigpLEk9Xy5jdHg7aWYoIUkucmVuZGVyZXIpcmV0dXJuKCk9Pnt2YXIgTWU9aC5kZWZhdWx0JiZoLmRlZmF1bHQoKTtyZXR1cm4gTWUmJk1lLmxlbmd0aD09PTE/TWVbMF06TWV9O3ZhciBBPW5ldyBNYXAseD1uZXcgU2V0LHo9bnVsbDtfLl9fdl9jYWNoZT1BO3ZhciBIPV8uc3VzcGVuc2Use3JlbmRlcmVyOntwOnRlLG06UGUsdW06ZGUsbzp7Y3JlYXRlRWxlbWVudDpmZX19fT1JLFVlPWZlKCJkaXYiKTtJLmFjdGl2YXRlPShNZSx0dCxxZSxvdCxJdCk9Pnt2YXIgYXQ9TWUuY29tcG9uZW50O1BlKE1lLHR0LHFlLDAsSCksdGUoYXQudm5vZGUsTWUsdHQscWUsYXQsSCxvdCxNZS5zbG90U2NvcGVJZHMsSXQpLHByKCgpPT57YXQuaXNEZWFjdGl2YXRlZD0hMSxhdC5hJiZtLmludm9rZUFycmF5Rm5zKGF0LmEpO3ZhciBpPU1lLnByb3BzJiZNZS5wcm9wcy5vblZub2RlTW91bnRlZDtpJiYkcihpLGF0LnBhcmVudCxNZSl9LEgpLE1vKGF0KX0sSS5kZWFjdGl2YXRlPU1lPT57dmFyIHR0PU1lLmNvbXBvbmVudDtQZShNZSxVZSxudWxsLDEsSCkscHIoKCk9Pnt0dC5kYSYmbS5pbnZva2VBcnJheUZucyh0dC5kYSk7dmFyIHFlPU1lLnByb3BzJiZNZS5wcm9wcy5vblZub2RlVW5tb3VudGVkO3FlJiYkcihxZSx0dC5wYXJlbnQsTWUpLHR0LmlzRGVhY3RpdmF0ZWQ9ITB9LEgpLE1vKHR0KX07ZnVuY3Rpb24gSmUoTWUpe1FyKE1lKSxkZShNZSxfLEgsITApfWZ1bmN0aW9uIGd0KE1lKXtBLmZvckVhY2goKHR0LHFlKT0+e3ZhciBvdD1ucyh0dC50eXBlKTtvdCYmKCFNZXx8IU1lKG90KSkmJmJ0KHFlKX0pfWZ1bmN0aW9uIGJ0KE1lKXt2YXIgdHQ9QS5nZXQoTWUpOyF6fHwhd3IodHQseik/SmUodHQpOnomJlFyKHopLEEuZGVsZXRlKE1lKSx4LmRlbGV0ZShNZSl9d2koKCk9PltvLmluY2x1ZGUsby5leGNsdWRlXSxNZT0+e3Zhclt0dCxxZV09TWU7dHQmJmd0KG90PT5CZSh0dCxvdCkpLHFlJiZndChvdD0+IUJlKHFlLG90KSl9LHtmbHVzaDoicG9zdCIsZGVlcDohMH0pO3ZhciBrZT1udWxsLG1lPSgpPT57a2UhPW51bGwmJkEuc2V0KGtlLExyKF8uc3ViVHJlZSkpfTtyZXR1cm4gaW8obWUpLG5hKG1lKSxRbigoKT0+e0EuZm9yRWFjaChNZT0+e3ZhcntzdWJUcmVlOnR0LHN1c3BlbnNlOnFlfT1fLG90PUxyKHR0KTtpZihNZS50eXBlPT09b3QudHlwZSYmTWUua2V5PT09b3Qua2V5KXtRcihvdCk7dmFyIEl0PW90LmNvbXBvbmVudC5kYTtJdCYmcHIoSXQscWUpO3JldHVybn1KZShNZSl9KX0pLCgpPT57aWYoa2U9bnVsbCwhaC5kZWZhdWx0KXJldHVybiBudWxsO3ZhciBNZT1oLmRlZmF1bHQoKSx0dD1NZVswXTtpZihNZS5sZW5ndGg+MSlyZXR1cm4gaWUoIktlZXBBbGl2ZSBzaG91bGQgY29udGFpbiBleGFjdGx5IG9uZSBjb21wb25lbnQgY2hpbGQuIiksej1udWxsLE1lO2lmKCFvYSh0dCl8fCEodHQuc2hhcGVGbGFnJjQpJiYhKHR0LnNoYXBlRmxhZyYxMjgpKXJldHVybiB6PW51bGwsdHQ7dmFyIHFlPUxyKHR0KSxvdD1xZS50eXBlLEl0PW5zKGNlKHFlKT9xZS50eXBlLl9fYXN5bmNSZXNvbHZlZHx8e306b3QpLHtpbmNsdWRlOmF0LGV4Y2x1ZGU6aSxtYXg6YX09bztpZihhdCYmKCFJdHx8IUJlKGF0LEl0KSl8fGkmJkl0JiZCZShpLEl0KSlyZXR1cm4gej1xZSx0dDt2YXIgZj1xZS5rZXk9PW51bGw/b3Q6cWUua2V5LHA9QS5nZXQoZik7cmV0dXJuIHFlLmVsJiYocWU9emkocWUpLHR0LnNoYXBlRmxhZyYxMjgmJih0dC5zc0NvbnRlbnQ9cWUpKSxrZT1mLHA/KHFlLmVsPXAuZWwscWUuY29tcG9uZW50PXAuY29tcG9uZW50LHFlLnRyYW5zaXRpb24mJk0ocWUscWUudHJhbnNpdGlvbikscWUuc2hhcGVGbGFnfD01MTIseC5kZWxldGUoZikseC5hZGQoZikpOih4LmFkZChmKSxhJiZ4LnNpemU+cGFyc2VJbnQoYSwxMCkmJmJ0KHgudmFsdWVzKCkubmV4dCgpLnZhbHVlKSkscWUuc2hhcGVGbGFnfD0yNTYsej1xZSxFaSh0dC50eXBlKT90dDpxZX19fSx1ZT1ZO2Z1bmN0aW9uIEJlKG8sYyl7cmV0dXJuIG0uaXNBcnJheShvKT9vLnNvbWUoaD0+QmUoaCxjKSk6bS5pc1N0cmluZyhvKT9vLnNwbGl0KCIsIikuaW5jbHVkZXMoYyk6bS5pc1JlZ0V4cChvKT9vLnRlc3QoYyk6ITF9ZnVuY3Rpb24gbHQobyxjKXtTbihvLCJhIixjKX1mdW5jdGlvbiB6dChvLGMpe1NuKG8sImRhIixjKX1mdW5jdGlvbiBTbihvLGMpe3ZhciBoPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTpCbixfPW8uX193ZGN8fChvLl9fd2RjPSgpPT57Zm9yKHZhciBBPWg7QTspe2lmKEEuaXNEZWFjdGl2YXRlZClyZXR1cm47QT1BLnBhcmVudH1yZXR1cm4gbygpfSk7aWYocm8oYyxfLGgpLGgpZm9yKHZhciBJPWgucGFyZW50O0kmJkkucGFyZW50OylLKEkucGFyZW50LnZub2RlKSYmWG4oXyxjLGgsSSksST1JLnBhcmVudH1mdW5jdGlvbiBYbihvLGMsaCxfKXt2YXIgST1ybyhjLG8sXywhMCk7RnIoKCk9PnttLnJlbW92ZShfW2NdLEkpfSxoKX1mdW5jdGlvbiBRcihvKXtvLnNoYXBlRmxhZyY9fjI1NixvLnNoYXBlRmxhZyY9fjUxMn1mdW5jdGlvbiBMcihvKXtyZXR1cm4gby5zaGFwZUZsYWcmMTI4P28uc3NDb250ZW50Om99ZnVuY3Rpb24gcm8obyxjKXt2YXIgaD1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06Qm4sXz1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITE7aWYoaCl7aWYoV2UuaXNSb290SG9vayhvKSYmaCE9PWgucm9vdCYmKGg9aC5yb290LFdlLmlzUm9vdEltbWVkaWF0ZUhvb2sobykpKXt2YXIgST1oLnByb3h5O0luKGMuYmluZChJKSxoLG8sV2UuT05fTE9BRD09PW8/W0kuJHBhZ2Uub3B0aW9uc106W10pfXZhciBBPWhbb118fChoW29dPVtdKSx4PWMuX193ZWh8fChjLl9fd2VoPWZ1bmN0aW9uKCl7aWYoIWguaXNVbm1vdW50ZWQpe1IucGF1c2VUcmFja2luZygpLHZpKGgpO2Zvcih2YXIgSD1hcmd1bWVudHMubGVuZ3RoLHRlPW5ldyBBcnJheShIKSxQZT0wO1BlPEg7UGUrKyl0ZVtQZV09YXJndW1lbnRzW1BlXTt2YXIgZGU9SW4oYyxoLG8sdGUpO3JldHVybiBtaSgpLFIucmVzZXRUcmFja2luZygpLGRlfX0pO3JldHVybiBfP0EudW5zaGlmdCh4KTpBLnB1c2goeCkseH1lbHNle3ZhciB6PW0udG9IYW5kbGVyS2V5KChjbltvXXx8by5yZXBsYWNlKC9eb24vLCIiKSkucmVwbGFjZSgvIGhvb2skLywiIikpO2llKCIiLmNvbmNhdCh6LCIgaXMgY2FsbGVkIHdoZW4gdGhlcmUgaXMgbm8gYWN0aXZlIGNvbXBvbmVudCBpbnN0YW5jZSB0byBiZSAiKSsiYXNzb2NpYXRlZCB3aXRoLiBMaWZlY3ljbGUgaW5qZWN0aW9uIEFQSXMgY2FuIG9ubHkgYmUgdXNlZCBkdXJpbmcgZXhlY3V0aW9uIG9mIHNldHVwKCkuIElmIHlvdSBhcmUgdXNpbmcgYXN5bmMgc2V0dXAoKSwgbWFrZSBzdXJlIHRvIHJlZ2lzdGVyIGxpZmVjeWNsZSBob29rcyBiZWZvcmUgdGhlIGZpcnN0IGF3YWl0IHN0YXRlbWVudC4iKX19dmFyIGJyPW89PmZ1bmN0aW9uKGMpe3ZhciBoPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTpCbjtyZXR1cm4oIWQuaXNJblNTUkNvbXBvbmVudFNldHVwfHxvPT09InNwIikmJnJvKG8sZnVuY3Rpb24oKXtyZXR1cm4gYyguLi5hcmd1bWVudHMpfSxoKX0sZ2k9YnIoImJtIiksaW89YnIoIm0iKSxvbz1icigiYnUiKSxuYT1icigidSIpLFFuPWJyKCJidW0iKSxGcj1icigidW0iKSxQYT1icigic3AiKSxOYT1icigicnRnIiksenI9YnIoInJ0YyIpO2Z1bmN0aW9uIFZzKG8pe3ZhciBjPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTpCbjtybygiZWMiLG8sYyl9ZnVuY3Rpb24gJHMobyl7bS5pc0J1aWx0SW5EaXJlY3RpdmUobykmJmllKCJEbyBub3QgdXNlIGJ1aWx0LWluIGRpcmVjdGl2ZSBpZHMgYXMgY3VzdG9tIGRpcmVjdGl2ZSBpZDogIitvKX1mdW5jdGlvbiBpbChvLGMpe3ZhciBoPXluO2lmKGg9PT1udWxsKXJldHVybiBpZSgid2l0aERpcmVjdGl2ZXMgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgcmVuZGVyIGZ1bmN0aW9ucy4iKSxvO2Zvcih2YXIgXz1QcyhoKXx8aC5wcm94eSxJPW8uZGlyc3x8KG8uZGlycz1bXSksQT0wO0E8Yy5sZW5ndGg7QSsrKXt2YXJbeCx6LEgsdGU9bS5FTVBUWV9PQkpdPWNbQV07eCYmKG0uaXNGdW5jdGlvbih4KSYmKHg9e21vdW50ZWQ6eCx1cGRhdGVkOnh9KSx4LmRlZXAmJlNpKHopLEkucHVzaCh7ZGlyOngsaW5zdGFuY2U6Xyx2YWx1ZTp6LG9sZFZhbHVlOnZvaWQgMCxhcmc6SCxtb2RpZmllcnM6dGV9KSl9cmV0dXJuIG99ZnVuY3Rpb24gQ28obyxjLGgsXyl7Zm9yKHZhciBJPW8uZGlycyxBPWMmJmMuZGlycyx4PTA7eDxJLmxlbmd0aDt4Kyspe3ZhciB6PUlbeF07QSYmKHoub2xkVmFsdWU9QVt4XS52YWx1ZSk7dmFyIEg9ei5kaXJbX107SCYmKFIucGF1c2VUcmFja2luZygpLEluKEgsaCw4LFtvLmVsLHosbyxjXSksUi5yZXNldFRyYWNraW5nKCkpfX12YXIgT2k9ImNvbXBvbmVudHMiLGthPSJkaXJlY3RpdmVzIjtmdW5jdGlvbiBObChvLGMpe3JldHVybiBhbyhPaSxvLCEwLGMpfHxvfXZhciBQbj1TeW1ib2woKTtmdW5jdGlvbiBvbChvKXtyZXR1cm4gbS5pc1N0cmluZyhvKT9hbyhPaSxvLCExKXx8bzpvfHxQbn1mdW5jdGlvbiB2cyhvKXtyZXR1cm4gYW8oa2Esbyl9ZnVuY3Rpb24gYW8obyxjKXt2YXIgaD1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06ITAsXz1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITEsST15bnx8Qm47aWYoSSl7dmFyIEE9SS50eXBlO2lmKG89PT1PaSl7dmFyIHg9bnMoQSwhMSk7aWYoeCYmKHg9PT1jfHx4PT09bS5jYW1lbGl6ZShjKXx8eD09PW0uY2FwaXRhbGl6ZShtLmNhbWVsaXplKGMpKSkpcmV0dXJuIEF9dmFyIHo9SmEoSVtvXXx8QVtvXSxjKXx8SmEoSS5hcHBDb250ZXh0W29dLGMpO2lmKCF6JiZfKXJldHVybiBBO2lmKGgmJiF6KXt2YXIgSD1vPT09T2k/YApJZiB0aGlzIGlzIGEgbmF0aXZlIGN1c3RvbSBlbGVtZW50LCBtYWtlIHN1cmUgdG8gZXhjbHVkZSBpdCBmcm9tIGNvbXBvbmVudCByZXNvbHV0aW9uIHZpYSBjb21waWxlck9wdGlvbnMuaXNDdXN0b21FbGVtZW50LmA6IiI7aWUoIkZhaWxlZCB0byByZXNvbHZlICIuY29uY2F0KG8uc2xpY2UoMCwtMSksIjogIikuY29uY2F0KGMpLmNvbmNhdChIKSl9cmV0dXJuIHp9ZWxzZSBpZSgicmVzb2x2ZSIuY29uY2F0KG0uY2FwaXRhbGl6ZShvLnNsaWNlKDAsLTEpKSwiICIpKyJjYW4gb25seSBiZSB1c2VkIGluIHJlbmRlcigpIG9yIHNldHVwKCkuIil9ZnVuY3Rpb24gSmEobyxjKXtyZXR1cm4gbyYmKG9bY118fG9bbS5jYW1lbGl6ZShjKV18fG9bbS5jYXBpdGFsaXplKG0uY2FtZWxpemUoYykpXSl9ZnVuY3Rpb24gYWwobyxjLGgsXyl7dmFyIEksQT1oJiZoW19dO2lmKG0uaXNBcnJheShvKXx8bS5pc1N0cmluZyhvKSl7ST1uZXcgQXJyYXkoby5sZW5ndGgpO2Zvcih2YXIgeD0wLHo9by5sZW5ndGg7eDx6O3grKylJW3hdPWMob1t4XSx4LHZvaWQgMCxBJiZBW3hdKX1lbHNlIGlmKHR5cGVvZiBvPT0ibnVtYmVyIil7TnVtYmVyLmlzSW50ZWdlcihvKXx8aWUoIlRoZSB2LWZvciByYW5nZSBleHBlY3QgYW4gaW50ZWdlciB2YWx1ZSBidXQgZ290ICIuY29uY2F0KG8sIi4iKSksST1uZXcgQXJyYXkobyk7Zm9yKHZhciBIPTA7SDxvO0grKylJW0hdPWMoSCsxLEgsdm9pZCAwLEEmJkFbSF0pfWVsc2UgaWYobS5pc09iamVjdChvKSlpZihvW1N5bWJvbC5pdGVyYXRvcl0pST1BcnJheS5mcm9tKG8sKFVlLEplKT0+YyhVZSxKZSx2b2lkIDAsQSYmQVtKZV0pKTtlbHNle3ZhciB0ZT1PYmplY3Qua2V5cyhvKTtJPW5ldyBBcnJheSh0ZS5sZW5ndGgpO2Zvcih2YXIgUGU9MCxkZT10ZS5sZW5ndGg7UGU8ZGU7UGUrKyl7dmFyIGZlPXRlW1BlXTtJW1BlXT1jKG9bZmVdLGZlLFBlLEEmJkFbUGVdKX19ZWxzZSBJPVtdO3JldHVybiBoJiYoaFtfXT1JKSxJfWZ1bmN0aW9uIFJhKG8sYyl7Zm9yKHZhciBoPWZ1bmN0aW9uKEkpe3ZhciBBPWNbSV07aWYobS5pc0FycmF5KEEpKWZvcih2YXIgeD0wO3g8QS5sZW5ndGg7eCsrKW9bQVt4XS5uYW1lXT1BW3hdLmZuO2Vsc2UgQSYmKG9bQS5uYW1lXT1BLmtleT9mdW5jdGlvbigpe3ZhciB6PUEuZm4oLi4uYXJndW1lbnRzKTtyZXR1cm4geiYmKHoua2V5PUEua2V5KSx6fTpBLmZuKX0sXz0wO188Yy5sZW5ndGg7XysrKWgoXyk7cmV0dXJuIG99ZnVuY3Rpb24gc2wobyxjKXt2YXIgaD1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06e30sXz1hcmd1bWVudHMubGVuZ3RoPjM/YXJndW1lbnRzWzNdOnZvaWQgMCxJPWFyZ3VtZW50cy5sZW5ndGg+ND9hcmd1bWVudHNbNF06dm9pZCAwO2lmKHluLmlzQ0V8fHluLnBhcmVudCYmY2UoeW4ucGFyZW50KSYmeW4ucGFyZW50LmlzQ0UpcmV0dXJuIGMhPT0iZGVmYXVsdCImJihoLm5hbWU9YyksR24oInNsb3QiLGgsXyYmXygpKTt2YXIgQT1vW2NdO0EmJkEubGVuZ3RoPjEmJihpZSgiU1NSLW9wdGltaXplZCBzbG90IGZ1bmN0aW9uIGRldGVjdGVkIGluIGEgbm9uLVNTUi1vcHRpbWl6ZWQgcmVuZGVyIGZ1bmN0aW9uLiBZb3UgbmVlZCB0byBtYXJrIHRoaXMgY29tcG9uZW50IHdpdGggJGR5bmFtaWMtc2xvdHMgaW4gdGhlIHBhcmVudCB0ZW1wbGF0ZS4iKSxBPSgpPT5bXSksQSYmQS5fYyYmKEEuX2Q9ITEpLGdyKCk7dmFyIHg9QSYmcmEoQShoKSksej1SbCh5dCx7a2V5Omgua2V5fHx4JiZ4LmtleXx8Il8iLmNvbmNhdChjKX0seHx8KF8/XygpOltdKSx4JiZvLl89PT0xPzY0Oi0yKTtyZXR1cm4hSSYmei5zY29wZUlkJiYoei5zbG90U2NvcGVJZHM9W3ouc2NvcGVJZCsiLXMiXSksQSYmQS5fYyYmKEEuX2Q9ITApLHp9ZnVuY3Rpb24gcmEobyl7cmV0dXJuIG8uc29tZShjPT5vYShjKT8hKGMudHlwZT09PUx0fHxjLnR5cGU9PT15dCYmIXJhKGMuY2hpbGRyZW4pKTohMCk/bzpudWxsfWZ1bmN0aW9uIFVzKG8sYyl7dmFyIGg9e307aWYoIW0uaXNPYmplY3QobykpcmV0dXJuIGllKCJ2LW9uIHdpdGggbm8gYXJndW1lbnQgZXhwZWN0cyBhbiBvYmplY3QgdmFsdWUuIiksaDtmb3IodmFyIF8gaW4gbyloW2MmJi9bQS1aXS8udGVzdChfKT8ib246Ii5jb25jYXQoXyk6bS50b0hhbmRsZXJLZXkoXyldPW9bX107cmV0dXJuIGh9dmFyIG1zPW89Pm8/VWEobyk/UHMobyl8fG8ucHJveHk6bXMoby5wYXJlbnQpOm51bGwseXI9bS5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSx7JDpvPT5vLCRlbDpvPT5vLnZub2RlLmVsLCRkYXRhOm89Pm8uZGF0YSwkcHJvcHM6bz0+Ui5zaGFsbG93UmVhZG9ubHkoby5wcm9wcyksJGF0dHJzOm89PlIuc2hhbGxvd1JlYWRvbmx5KG8uYXR0cnMpLCRzbG90czpvPT5SLnNoYWxsb3dSZWFkb25seShvLnNsb3RzKSwkcmVmczpvPT5SLnNoYWxsb3dSZWFkb25seShvLnJlZnMpLCRwYXJlbnQ6bz0+bXMoby5wYXJlbnQpLCRyb290Om89Pm1zKG8ucm9vdCksJGVtaXQ6bz0+by5lbWl0LCRvcHRpb25zOm89PkcobyksJGZvcmNlVXBkYXRlOm89Pm8uZnx8KG8uZj0oKT0+SnQoby51cGRhdGUpKSwkbmV4dFRpY2s6bz0+by5ufHwoby5uPXJuLmJpbmQoby5wcm94eSkpLCR3YXRjaDpvPT53by5iaW5kKG8pfSksc289bz0+bz09PSJfInx8bz09PSIkIixiYT0obyxjKT0+byE9PW0uRU1QVFlfT0JKJiYhby5fX2lzU2NyaXB0U2V0dXAmJm0uaGFzT3duKG8sYyksT289e2dldChvLGMpe3ZhcntfOmh9PW8se2N0eDpfLHNldHVwU3RhdGU6SSxkYXRhOkEscHJvcHM6eCxhY2Nlc3NDYWNoZTp6LHR5cGU6SCxhcHBDb250ZXh0OnRlfT1oO2lmKGM9PT0iX19pc1Z1ZSIpcmV0dXJuITA7dmFyIFBlO2lmKGNbMF0hPT0iJCIpe3ZhciBkZT16W2NdO2lmKGRlIT09dm9pZCAwKXN3aXRjaChkZSl7Y2FzZSAxOnJldHVybiBJW2NdO2Nhc2UgMjpyZXR1cm4gQVtjXTtjYXNlIDQ6cmV0dXJuIF9bY107Y2FzZSAzOnJldHVybiB4W2NdfWVsc2V7aWYoYmEoSSxjKSlyZXR1cm4geltjXT0xLElbY107aWYoQSE9PW0uRU1QVFlfT0JKJiZtLmhhc093bihBLGMpKXJldHVybiB6W2NdPTIsQVtjXTtpZigoUGU9aC5wcm9wc09wdGlvbnNbMF0pJiZtLmhhc093bihQZSxjKSlyZXR1cm4geltjXT0zLHhbY107aWYoXyE9PW0uRU1QVFlfT0JKJiZtLmhhc093bihfLGMpKXJldHVybiB6W2NdPTQsX1tjXTtfcyYmKHpbY109MCl9fXZhciBmZT15cltjXSxVZSxKZTtpZihmZSlyZXR1cm4gYz09PSIkYXR0cnMiJiYoUi50cmFjayhoLCJnZXQiLGMpLEJ0KCkpLGZlKGgpO2lmKChVZT1ILl9fY3NzTW9kdWxlcykmJihVZT1VZVtjXSkpcmV0dXJuIFVlO2lmKF8hPT1tLkVNUFRZX09CSiYmbS5oYXNPd24oXyxjKSlyZXR1cm4geltjXT00LF9bY107aWYoSmU9dGUuY29uZmlnLmdsb2JhbFByb3BlcnRpZXMsbS5oYXNPd24oSmUsYykpcmV0dXJuIEplW2NdO3luJiYoIW0uaXNTdHJpbmcoYyl8fGMuaW5kZXhPZigiX192IikhPT0wKSYmKEEhPT1tLkVNUFRZX09CSiYmc28oY1swXSkmJm0uaGFzT3duKEEsYyk/aWUoIlByb3BlcnR5ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KGMpLCIgbXVzdCBiZSBhY2Nlc3NlZCB2aWEgJGRhdGEgYmVjYXVzZSBpdCBzdGFydHMgd2l0aCBhIHJlc2VydmVkICIpKydjaGFyYWN0ZXIgKCIkIiBvciAiXyIpIGFuZCBpcyBub3QgcHJveGllZCBvbiB0aGUgcmVuZGVyIGNvbnRleHQuJyk6aD09PXluJiZpZSgiUHJvcGVydHkgIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoYyksIiB3YXMgYWNjZXNzZWQgZHVyaW5nIHJlbmRlciAiKSsiYnV0IGlzIG5vdCBkZWZpbmVkIG9uIGluc3RhbmNlLiIpKX0sc2V0KG8sYyxoKXt2YXJ7X309byx7ZGF0YTpJLHNldHVwU3RhdGU6QSxjdHg6eH09XztyZXR1cm4gYmEoQSxjKT8oQVtjXT1oLCEwKTpBLl9faXNTY3JpcHRTZXR1cCYmbS5oYXNPd24oQSxjKT8oaWUoJ0Nhbm5vdCBtdXRhdGUgPHNjcmlwdCBzZXR1cD4gYmluZGluZyAiJy5jb25jYXQoYywnIiBmcm9tIE9wdGlvbnMgQVBJLicpKSwhMSk6SSE9PW0uRU1QVFlfT0JKJiZtLmhhc093bihJLGMpPyhJW2NdPWgsITApOm0uaGFzT3duKF8ucHJvcHMsYyk/KGllKCdBdHRlbXB0aW5nIHRvIG11dGF0ZSBwcm9wICInLmNvbmNhdChjLCciLiBQcm9wcyBhcmUgcmVhZG9ubHkuJykpLCExKTpjWzBdPT09IiQiJiZjLnNsaWNlKDEpaW4gXz8oaWUoJ0F0dGVtcHRpbmcgdG8gbXV0YXRlIHB1YmxpYyBwcm9wZXJ0eSAiJy5jb25jYXQoYywnIi4gJykrIlByb3BlcnRpZXMgc3RhcnRpbmcgd2l0aCAkIGFyZSByZXNlcnZlZCBhbmQgcmVhZG9ubHkuIiksITEpOihjIGluIF8uYXBwQ29udGV4dC5jb25maWcuZ2xvYmFsUHJvcGVydGllcz9PYmplY3QuZGVmaW5lUHJvcGVydHkoeCxjLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx2YWx1ZTpofSk6eFtjXT1oLCEwKX0saGFzKG8sYyl7dmFye186e2RhdGE6aCxzZXR1cFN0YXRlOl8sYWNjZXNzQ2FjaGU6SSxjdHg6QSxhcHBDb250ZXh0OngscHJvcHNPcHRpb25zOnp9fT1vLEg7cmV0dXJuISFJW2NdfHxoIT09bS5FTVBUWV9PQkomJm0uaGFzT3duKGgsYyl8fGJhKF8sYyl8fChIPXpbMF0pJiZtLmhhc093bihILGMpfHxtLmhhc093bihBLGMpfHxtLmhhc093bih5cixjKXx8bS5oYXNPd24oeC5jb25maWcuZ2xvYmFsUHJvcGVydGllcyxjKX0sZGVmaW5lUHJvcGVydHkobyxjLGgpe3JldHVybiBoLmdldCE9bnVsbD9vLl8uYWNjZXNzQ2FjaGVbY109MDptLmhhc093bihoLCJ2YWx1ZSIpJiZ0aGlzLnNldChvLGMsaC52YWx1ZSxudWxsKSxSZWZsZWN0LmRlZmluZVByb3BlcnR5KG8sYyxoKX19O09vLm93bktleXM9bz0+KGllKCJBdm9pZCBhcHAgbG9naWMgdGhhdCByZWxpZXMgb24gZW51bWVyYXRpbmcga2V5cyBvbiBhIGNvbXBvbmVudCBpbnN0YW5jZS4gVGhlIGtleXMgd2lsbCBiZSBlbXB0eSBpbiBwcm9kdWN0aW9uIG1vZGUgdG8gYXZvaWQgcGVyZm9ybWFuY2Ugb3ZlcmhlYWQuIiksUmVmbGVjdC5vd25LZXlzKG8pKTt2YXIgeGE9bS5leHRlbmQoe30sT28se2dldChvLGMpe2lmKGMhPT1TeW1ib2wudW5zY29wYWJsZXMpcmV0dXJuIE9vLmdldChvLGMsbyl9LGhhcyhvLGMpe3ZhciBoPWNbMF0hPT0iXyImJiFtLmlzR2xvYmFsbHlXaGl0ZWxpc3RlZChjKTtyZXR1cm4haCYmT28uaGFzKG8sYykmJmllKCJQcm9wZXJ0eSAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShjKSwiIHNob3VsZCBub3Qgc3RhcnQgd2l0aCBfIHdoaWNoIGlzIGEgcmVzZXJ2ZWQgcHJlZml4IGZvciBWdWUgaW50ZXJuYWxzLiIpKSxofX0pO2Z1bmN0aW9uIGtsKG8pe3ZhciBjPXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoYywiXyIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDooKT0+b30pLE9iamVjdC5rZXlzKHlyKS5mb3JFYWNoKGg9PntPYmplY3QuZGVmaW5lUHJvcGVydHkoYyxoLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6KCk9PnlyW2hdKG8pLHNldDptLk5PT1B9KX0pLGN9ZnVuY3Rpb24gSHMobyl7dmFye2N0eDpjLHByb3BzT3B0aW9uczpbaF19PW87aCYmT2JqZWN0LmtleXMoaCkuZm9yRWFjaChfPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KGMsXyx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OigpPT5vLnByb3BzW19dLHNldDptLk5PT1B9KX0pfWZ1bmN0aW9uIEJhKG8pe3ZhcntjdHg6YyxzZXR1cFN0YXRlOmh9PW87T2JqZWN0LmtleXMoUi50b1JhdyhoKSkuZm9yRWFjaChfPT57aWYoIWguX19pc1NjcmlwdFNldHVwKXtpZihzbyhfWzBdKSl7aWUoInNldHVwKCkgcmV0dXJuIHByb3BlcnR5ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KF8pLCcgc2hvdWxkIG5vdCBzdGFydCB3aXRoICIkIiBvciAiXyIgJykrIndoaWNoIGFyZSByZXNlcnZlZCBwcmVmaXhlcyBmb3IgVnVlIGludGVybmFscy4iKTtyZXR1cm59T2JqZWN0LmRlZmluZVByb3BlcnR5KGMsXyx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OigpPT5oW19dLHNldDptLk5PT1B9KX19KX1mdW5jdGlvbiBsbCgpe3ZhciBvPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuKGMsaCk9PntvW2hdP2llKCIiLmNvbmNhdChjLCcgcHJvcGVydHkgIicpLmNvbmNhdChoLCciIGlzIGFscmVhZHkgZGVmaW5lZCBpbiAnKS5jb25jYXQob1toXSwiLiIpKTpvW2hdPWN9fXZhciBfcz0hMDtmdW5jdGlvbiBicyhvKXt2YXIgYz1HKG8pLGg9by5wcm94eSxfPW8uY3R4O19zPSExLGMuYmVmb3JlQ3JlYXRlJiZ5KGMuYmVmb3JlQ3JlYXRlLG8sImJjIik7dmFye2RhdGE6SSxjb21wdXRlZDpBLG1ldGhvZHM6eCx3YXRjaDp6LHByb3ZpZGU6SCxpbmplY3Q6dGUsY3JlYXRlZDpQZSxiZWZvcmVNb3VudDpkZSxtb3VudGVkOmZlLGJlZm9yZVVwZGF0ZTpVZSx1cGRhdGVkOkplLGFjdGl2YXRlZDpndCxkZWFjdGl2YXRlZDpidCxiZWZvcmVEZXN0cm95OmtlLGJlZm9yZVVubW91bnQ6bWUsZGVzdHJveWVkOk1lLHVubW91bnRlZDp0dCxyZW5kZXI6cWUscmVuZGVyVHJhY2tlZDpvdCxyZW5kZXJUcmlnZ2VyZWQ6SXQsZXJyb3JDYXB0dXJlZDphdCxzZXJ2ZXJQcmVmZXRjaDppLGV4cG9zZTphLGluaGVyaXRBdHRyczpmLGNvbXBvbmVudHM6cCxkaXJlY3RpdmVzOlMsZmlsdGVyczp3fT1jLE49bGwoKTt7dmFyW1ZdPW8ucHJvcHNPcHRpb25zO2lmKFYpZm9yKHZhciBGIGluIFYpTigiUHJvcHMiLEYpfWlmKHRlJiZvYyh0ZSxfLE4sby5hcHBDb250ZXh0LmNvbmZpZy51bndyYXBJbmplY3RlZFJlZikseClmb3IodmFyIHEgaW4geCl7dmFyIF9lPXhbcV07bS5pc0Z1bmN0aW9uKF9lKT8oT2JqZWN0LmRlZmluZVByb3BlcnR5KF8scSx7dmFsdWU6X2UuYmluZChoKSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx3cml0YWJsZTohMH0pLE4oIk1ldGhvZHMiLHEpKTppZSgnTWV0aG9kICInLmNvbmNhdChxLCciIGhhcyB0eXBlICInKS5jb25jYXQodHlwZW9mIF9lLCciIGluIHRoZSBjb21wb25lbnQgZGVmaW5pdGlvbi4gJykrIkRpZCB5b3UgcmVmZXJlbmNlIHRoZSBmdW5jdGlvbiBjb3JyZWN0bHk/Iil9aWYoSSYmZnVuY3Rpb24oKXttLmlzRnVuY3Rpb24oSSl8fGllKCJUaGUgZGF0YSBvcHRpb24gbXVzdCBiZSBhIGZ1bmN0aW9uLiBQbGFpbiBvYmplY3QgdXNhZ2UgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4iKTt2YXIgbGU9SS5jYWxsKGgsaCk7aWYobS5pc1Byb21pc2UobGUpJiZpZSgiZGF0YSgpIHJldHVybmVkIGEgUHJvbWlzZSAtIG5vdGUgZGF0YSgpIGNhbm5vdCBiZSBhc3luYzsgSWYgeW91IGludGVuZCB0byBwZXJmb3JtIGRhdGEgZmV0Y2hpbmcgYmVmb3JlIGNvbXBvbmVudCByZW5kZXJzLCB1c2UgYXN5bmMgc2V0dXAoKSArIDxTdXNwZW5zZT4uIiksIW0uaXNPYmplY3QobGUpKWllKCJkYXRhKCkgc2hvdWxkIHJldHVybiBhbiBvYmplY3QuIik7ZWxzZXtvLmRhdGE9Ui5yZWFjdGl2ZShsZSk7e3ZhciBFZT1mdW5jdGlvbihGZSl7TigiRGF0YSIsRmUpLHNvKEZlWzBdKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KF8sRmUse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLGdldDooKT0+bGVbRmVdLHNldDptLk5PT1B9KX07Zm9yKHZhciBMZSBpbiBsZSlFZShMZSl9fX0oKSxfcz0hMCxBKXt2YXIgc2U9ZnVuY3Rpb24obGUpe3ZhciBFZT1BW2xlXSxMZT1tLmlzRnVuY3Rpb24oRWUpP0VlLmJpbmQoaCxoKTptLmlzRnVuY3Rpb24oRWUuZ2V0KT9FZS5nZXQuYmluZChoLGgpOm0uTk9PUDtMZT09PW0uTk9PUCYmaWUoJ0NvbXB1dGVkIHByb3BlcnR5ICInLmNvbmNhdChsZSwnIiBoYXMgbm8gZ2V0dGVyLicpKTt2YXIgRmU9IW0uaXNGdW5jdGlvbihFZSkmJm0uaXNGdW5jdGlvbihFZS5zZXQpP0VlLnNldC5iaW5kKGgpOigpPT57aWUoJ1dyaXRlIG9wZXJhdGlvbiBmYWlsZWQ6IGNvbXB1dGVkIHByb3BlcnR5ICInLmNvbmNhdChsZSwnIiBpcyByZWFkb25seS4nKSl9LHJ0PURsKHtnZXQ6TGUsc2V0OkZlfSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KF8sbGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDooKT0+cnQudmFsdWUsc2V0Ok90PT5ydC52YWx1ZT1PdH0pLE4oIkNvbXB1dGVkIixsZSl9O2Zvcih2YXIgbmUgaW4gQSlzZShuZSl9aWYoeilmb3IodmFyIE9lIGluIHopRCh6W09lXSxfLGgsT2UpO2lmKEgpe3ZhciBEZT1tLmlzRnVuY3Rpb24oSCk/SC5jYWxsKGgpOkg7UmVmbGVjdC5vd25LZXlzKERlKS5mb3JFYWNoKGxlPT57Wm4obGUsRGVbbGVdKX0pfVBlJiZ5KFBlLG8sImMiKTtmdW5jdGlvbiBaZShsZSxFZSl7bS5pc0FycmF5KEVlKT9FZS5mb3JFYWNoKExlPT5sZShMZS5iaW5kKGgpKSk6RWUmJmxlKEVlLmJpbmQoaCkpfWlmKFplKGdpLGRlKSxaZShpbyxmZSksWmUob28sVWUpLFplKG5hLEplKSxaZShsdCxndCksWmUoenQsYnQpLFplKFZzLGF0KSxaZSh6cixvdCksWmUoTmEsSXQpLFplKFFuLG1lKSxaZShGcix0dCksWmUoUGEsaSksbS5pc0FycmF5KGEpKWlmKGEubGVuZ3RoKXt2YXIgZnQ9by5leHBvc2VkfHwoby5leHBvc2VkPXt9KTthLmZvckVhY2gobGU9PntPYmplY3QuZGVmaW5lUHJvcGVydHkoZnQsbGUse2dldDooKT0+aFtsZV0sc2V0OkVlPT5oW2xlXT1FZX0pfSl9ZWxzZSBvLmV4cG9zZWR8fChvLmV4cG9zZWQ9e30pO3FlJiZvLnJlbmRlcj09PW0uTk9PUCYmKG8ucmVuZGVyPXFlKSxmIT1udWxsJiYoby5pbmhlcml0QXR0cnM9ZikscCYmKG8uY29tcG9uZW50cz1wKSxTJiYoby5kaXJlY3RpdmVzPVMpO3ZhciBUZT1vLmFwcENvbnRleHQuY29uZmlnLmdsb2JhbFByb3BlcnRpZXMuJGFwcGx5T3B0aW9ucztUZSYmVGUoYyxvLGgpfWZ1bmN0aW9uIG9jKG8sYyl7dmFyIGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOm0uTk9PUCxfPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTohMTttLmlzQXJyYXkobykmJihvPUNlKG8pKTt2YXIgST1mdW5jdGlvbih4KXt2YXIgej1vW3hdLEg9dm9pZCAwO20uaXNPYmplY3Qoeik/ImRlZmF1bHQiaW4gej9IPWFyKHouZnJvbXx8eCx6LmRlZmF1bHQsITApOkg9YXIoei5mcm9tfHx4KTpIPWFyKHopLFIuaXNSZWYoSCk/Xz9PYmplY3QuZGVmaW5lUHJvcGVydHkoYyx4LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PkgudmFsdWUsc2V0OnRlPT5ILnZhbHVlPXRlfSk6KGllKCdpbmplY3RlZCBwcm9wZXJ0eSAiJy5jb25jYXQoeCwnIiBpcyBhIHJlZiBhbmQgd2lsbCBiZSBhdXRvLXVud3JhcHBlZCAnKSsiYW5kIG5vIGxvbmdlciBuZWVkcyBgLnZhbHVlYCBpbiB0aGUgbmV4dCBtaW5vciByZWxlYXNlLiBUbyBvcHQtaW4gdG8gdGhlIG5ldyBiZWhhdmlvciBub3csIHNldCBgYXBwLmNvbmZpZy51bndyYXBJbmplY3RlZFJlZiA9IHRydWVgICh0aGlzIGNvbmZpZyBpcyB0ZW1wb3JhcnkgYW5kIHdpbGwgbm90IGJlIG5lZWRlZCBpbiB0aGUgZnV0dXJlLikiKSxjW3hdPUgpOmNbeF09SCxoKCJJbmplY3QiLHgpfTtmb3IodmFyIEEgaW4gbylJKEEpfWZ1bmN0aW9uIHkobyxjLGgpe0luKG0uaXNBcnJheShvKT9vLm1hcChfPT5fLmJpbmQoYy5wcm94eSkpOm8uYmluZChjLnByb3h5KSxjLGgpfWZ1bmN0aW9uIEQobyxjLGgsXyl7dmFyIEk9Xy5pbmNsdWRlcygiLiIpP19hKGgsXyk6KCk9PmhbX107aWYobS5pc1N0cmluZyhvKSl7dmFyIEE9Y1tvXTttLmlzRnVuY3Rpb24oQSk/d2koSSxBKTppZSgnSW52YWxpZCB3YXRjaCBoYW5kbGVyIHNwZWNpZmllZCBieSBrZXkgIicuY29uY2F0KG8sJyInKSxBKX1lbHNlIGlmKG0uaXNGdW5jdGlvbihvKSl3aShJLG8uYmluZChoKSk7ZWxzZSBpZihtLmlzT2JqZWN0KG8pKWlmKG0uaXNBcnJheShvKSlvLmZvckVhY2goej0+RCh6LGMsaCxfKSk7ZWxzZXt2YXIgeD1tLmlzRnVuY3Rpb24oby5oYW5kbGVyKT9vLmhhbmRsZXIuYmluZChoKTpjW28uaGFuZGxlcl07bS5pc0Z1bmN0aW9uKHgpP3dpKEkseCxvKTppZSgnSW52YWxpZCB3YXRjaCBoYW5kbGVyIHNwZWNpZmllZCBieSBrZXkgIicuY29uY2F0KG8uaGFuZGxlciwnIicpLHgpfWVsc2UgaWUoJ0ludmFsaWQgd2F0Y2ggb3B0aW9uOiAiJy5jb25jYXQoXywnIicpLG8pfWZ1bmN0aW9uIEcobyl7dmFyIGM9by50eXBlLHttaXhpbnM6aCxleHRlbmRzOl99PWMse21peGluczpJLG9wdGlvbnNDYWNoZTpBLGNvbmZpZzp7b3B0aW9uTWVyZ2VTdHJhdGVnaWVzOnh9fT1vLmFwcENvbnRleHQsej1BLmdldChjKSxIO3JldHVybiB6P0g9ejohSS5sZW5ndGgmJiFoJiYhXz9IPWM6KEg9e30sSS5sZW5ndGgmJkkuZm9yRWFjaCh0ZT0+VShILHRlLHgsITApKSxVKEgsYyx4KSksbS5pc09iamVjdChjKSYmQS5zZXQoYyxIKSxIfWZ1bmN0aW9uIFUobyxjLGgpe3ZhciBfPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTohMSx7bWl4aW5zOkksZXh0ZW5kczpBfT1jO0EmJlUobyxBLGgsITApLEkmJkkuZm9yRWFjaChIPT5VKG8sSCxoLCEwKSk7Zm9yKHZhciB4IGluIGMpaWYoXyYmeD09PSJleHBvc2UiKWllKCciZXhwb3NlIiBvcHRpb24gaXMgaWdub3JlZCB3aGVuIGRlY2xhcmVkIGluIG1peGlucyBvciBleHRlbmRzLiBJdCBzaG91bGQgb25seSBiZSBkZWNsYXJlZCBpbiB0aGUgYmFzZSBjb21wb25lbnQgaXRzZWxmLicpO2Vsc2V7dmFyIHo9UVt4XXx8aCYmaFt4XTtvW3hdPXo/eihvW3hdLGNbeF0pOmNbeF19cmV0dXJuIG99dmFyIFE9e2RhdGE6ZWUscHJvcHM6SWUsZW1pdHM6SWUsbWV0aG9kczpJZSxjb21wdXRlZDpJZSxiZWZvcmVDcmVhdGU6U2UsY3JlYXRlZDpTZSxiZWZvcmVNb3VudDpTZSxtb3VudGVkOlNlLGJlZm9yZVVwZGF0ZTpTZSx1cGRhdGVkOlNlLGJlZm9yZURlc3Ryb3k6U2UsYmVmb3JlVW5tb3VudDpTZSxkZXN0cm95ZWQ6U2UsdW5tb3VudGVkOlNlLGFjdGl2YXRlZDpTZSxkZWFjdGl2YXRlZDpTZSxlcnJvckNhcHR1cmVkOlNlLHNlcnZlclByZWZldGNoOlNlLGNvbXBvbmVudHM6SWUsZGlyZWN0aXZlczpJZSx3YXRjaDpiZSxwcm92aWRlOmVlLGluamVjdDpwZX07ZnVuY3Rpb24gZWUobyxjKXtyZXR1cm4gYz9vP2Z1bmN0aW9uKCl7cmV0dXJuIG0uZXh0ZW5kKG0uaXNGdW5jdGlvbihvKT9vLmNhbGwodGhpcyx0aGlzKTpvLG0uaXNGdW5jdGlvbihjKT9jLmNhbGwodGhpcyx0aGlzKTpjKX06YzpvfWZ1bmN0aW9uIHBlKG8sYyl7cmV0dXJuIEllKENlKG8pLENlKGMpKX1mdW5jdGlvbiBDZShvKXtpZihtLmlzQXJyYXkobykpe2Zvcih2YXIgYz17fSxoPTA7aDxvLmxlbmd0aDtoKyspY1tvW2hdXT1vW2hdO3JldHVybiBjfXJldHVybiBvfWZ1bmN0aW9uIFNlKG8sYyl7cmV0dXJuIG8/Wy4uLm5ldyBTZXQoW10uY29uY2F0KG8sYykpXTpjfWZ1bmN0aW9uIEllKG8sYyl7cmV0dXJuIG8/bS5leHRlbmQobS5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSxvKSxjKTpjfWZ1bmN0aW9uIGJlKG8sYyl7aWYoIW8pcmV0dXJuIGM7aWYoIWMpcmV0dXJuIG87dmFyIGg9bS5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSxvKTtmb3IodmFyIF8gaW4gYyloW19dPVNlKG9bX10sY1tfXSk7cmV0dXJuIGh9ZnVuY3Rpb24gSGUobyxjLGgpe3ZhciBfPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTohMSxJPXt9LEE9e307bS5kZWYoQSxPcywxKSxvLnByb3BzRGVmYXVsdHM9T2JqZWN0LmNyZWF0ZShudWxsKSxXdChvLGMsSSxBKTtmb3IodmFyIHggaW4gby5wcm9wc09wdGlvbnNbMF0peCBpbiBJfHwoSVt4XT12b2lkIDApO0t0KGN8fHt9LEksbyksaD9vLnByb3BzPV8/STpSLnNoYWxsb3dSZWFjdGl2ZShJKTpvLnR5cGUucHJvcHM/by5wcm9wcz1JOm8ucHJvcHM9QSxvLmF0dHJzPUF9ZnVuY3Rpb24gX3Qobyl7Zm9yKDtvOyl7aWYoby50eXBlLl9faG1ySWQpcmV0dXJuITA7bz1vLnBhcmVudH19ZnVuY3Rpb24gTnQobyxjLGgsXyl7dmFye3Byb3BzOkksYXR0cnM6QSx2bm9kZTp7cGF0Y2hGbGFnOnh9fT1vLHo9Ui50b1JhdyhJKSxbSF09by5wcm9wc09wdGlvbnMsdGU9ITE7aWYoIV90KG8pJiYoX3x8eD4wKSYmISh4JjE2KSl7aWYoeCY4KWZvcih2YXIgUGU9by52bm9kZS5keW5hbWljUHJvcHMsZGU9MDtkZTxQZS5sZW5ndGg7ZGUrKyl7dmFyIGZlPVBlW2RlXTtpZighc2koby5lbWl0c09wdGlvbnMsZmUpKXt2YXIgVWU9Y1tmZV07aWYoSClpZihtLmhhc093bihBLGZlKSlVZSE9PUFbZmVdJiYoQVtmZV09VWUsdGU9ITApO2Vsc2V7dmFyIEplPW0uY2FtZWxpemUoZmUpO0lbSmVdPUV0KEgseixKZSxVZSxvLCExKX1lbHNlIFVlIT09QVtmZV0mJihBW2ZlXT1VZSx0ZT0hMCl9fX1lbHNle1d0KG8sYyxJLEEpJiYodGU9ITApO3ZhciBndDtmb3IodmFyIGJ0IGluIHopKCFjfHwhbS5oYXNPd24oYyxidCkmJigoZ3Q9bS5oeXBoZW5hdGUoYnQpKT09PWJ0fHwhbS5oYXNPd24oYyxndCkpKSYmKEg/aCYmKGhbYnRdIT09dm9pZCAwfHxoW2d0XSE9PXZvaWQgMCkmJihJW2J0XT1FdChILHosYnQsdm9pZCAwLG8sITApKTpkZWxldGUgSVtidF0pO2lmKEEhPT16KWZvcih2YXIga2UgaW4gQSkoIWN8fCFtLmhhc093bihjLGtlKSYmITApJiYoZGVsZXRlIEFba2VdLHRlPSEwKX10ZSYmUi50cmlnZ2VyKG8sInNldCIsIiRhdHRycyIpLEt0KGN8fHt9LEksbyl9ZnVuY3Rpb24gV3QobyxjLGgsXyl7dmFyW0ksQV09by5wcm9wc09wdGlvbnMseD0hMSx6O2lmKGMpe2Zvcih2YXIgSCBpbiBjKWlmKCFtLmlzUmVzZXJ2ZWRQcm9wKEgpKXt2YXIgdGU9Y1tIXSxQZT12b2lkIDA7SSYmbS5oYXNPd24oSSxQZT1tLmNhbWVsaXplKEgpKT8hQXx8IUEuaW5jbHVkZXMoUGUpP2hbUGVdPXRlOih6fHwoej17fSkpW1BlXT10ZTpzaShvLmVtaXRzT3B0aW9ucyxIKXx8KCEoSCBpbiBfKXx8dGUhPT1fW0hdKSYmKF9bSF09dGUseD0hMCl9fWlmKEEpZm9yKHZhciBkZT1SLnRvUmF3KGgpLGZlPXp8fG0uRU1QVFlfT0JKLFVlPTA7VWU8QS5sZW5ndGg7VWUrKyl7dmFyIEplPUFbVWVdO2hbSmVdPUV0KEksZGUsSmUsZmVbSmVdLG8sIW0uaGFzT3duKGZlLEplKSl9cmV0dXJuIHh9ZnVuY3Rpb24gRXQobyxjLGgsXyxJLEEpe3ZhciB4PW9baF07aWYoeCE9bnVsbCl7dmFyIHo9bS5oYXNPd24oeCwiZGVmYXVsdCIpO2lmKHomJl89PT12b2lkIDApe3ZhciBIPXguZGVmYXVsdDtpZih4LnR5cGUhPT1GdW5jdGlvbiYmbS5pc0Z1bmN0aW9uKEgpKXt2YXJ7cHJvcHNEZWZhdWx0czp0ZX09STtoIGluIHRlP189dGVbaF06KHZpKEkpLF89dGVbaF09SC5jYWxsKG51bGwsYyksbWkoKSl9ZWxzZSBfPUh9eFswXSYmKEEmJiF6P189ITE6eFsxXSYmKF89PT0iInx8Xz09PW0uaHlwaGVuYXRlKGgpKSYmKF89ITApKX1yZXR1cm4gX31mdW5jdGlvbiBodChvLGMpe3ZhciBoPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTohMSxfPWMucHJvcHNDYWNoZSxJPV8uZ2V0KG8pO2lmKEkpcmV0dXJuIEk7dmFyIEE9by5wcm9wcyx4PXt9LHo9W10sSD0hMTtpZighbS5pc0Z1bmN0aW9uKG8pKXt2YXIgdGU9TWU9PntIPSEwO3Zhclt0dCxxZV09aHQoTWUsYywhMCk7bS5leHRlbmQoeCx0dCkscWUmJnoucHVzaCguLi5xZSl9OyFoJiZjLm1peGlucy5sZW5ndGgmJmMubWl4aW5zLmZvckVhY2godGUpLG8uZXh0ZW5kcyYmdGUoby5leHRlbmRzKSxvLm1peGlucyYmby5taXhpbnMuZm9yRWFjaCh0ZSl9aWYoIUEmJiFIKXJldHVybiBtLmlzT2JqZWN0KG8pJiZfLnNldChvLG0uRU1QVFlfQVJSKSxtLkVNUFRZX0FSUjtpZihtLmlzQXJyYXkoQSkpZm9yKHZhciBQZT0wO1BlPEEubGVuZ3RoO1BlKyspe20uaXNTdHJpbmcoQVtQZV0pfHxpZSgicHJvcHMgbXVzdCBiZSBzdHJpbmdzIHdoZW4gdXNpbmcgYXJyYXkgc3ludGF4LiIsQVtQZV0pO3ZhciBkZT1tLmNhbWVsaXplKEFbUGVdKTt1dChkZSkmJih4W2RlXT1tLkVNUFRZX09CSil9ZWxzZSBpZihBKXttLmlzT2JqZWN0KEEpfHxpZSgiaW52YWxpZCBwcm9wcyBvcHRpb25zIixBKTtmb3IodmFyIGZlIGluIEEpe3ZhciBVZT1tLmNhbWVsaXplKGZlKTtpZih1dChVZSkpe3ZhciBKZT1BW2ZlXSxndD14W1VlXT1tLmlzQXJyYXkoSmUpfHxtLmlzRnVuY3Rpb24oSmUpP3t0eXBlOkplfTpPYmplY3QuYXNzaWduKHt9LEplKTtpZihndCl7dmFyIGJ0PUN0KEJvb2xlYW4sZ3QudHlwZSksa2U9Q3QoU3RyaW5nLGd0LnR5cGUpO2d0WzBdPWJ0Pi0xLGd0WzFdPWtlPDB8fGJ0PGtlLChidD4tMXx8bS5oYXNPd24oZ3QsImRlZmF1bHQiKSkmJnoucHVzaChVZSl9fX19dmFyIG1lPVt4LHpdO3JldHVybiBtLmlzT2JqZWN0KG8pJiZfLnNldChvLG1lKSxtZX1mdW5jdGlvbiB1dChvKXtyZXR1cm4gb1swXSE9PSIkIj8hMDooaWUoJ0ludmFsaWQgcHJvcCBuYW1lOiAiJy5jb25jYXQobywnIiBpcyBhIHJlc2VydmVkIHByb3BlcnR5LicpKSwhMSl9ZnVuY3Rpb24gaG4obyl7dmFyIGM9byYmby50b1N0cmluZygpLm1hdGNoKC9eXHMqKGZ1bmN0aW9ufGNsYXNzKSAoXHcrKS8pO3JldHVybiBjP2NbMl06bz09PW51bGw/Im51bGwiOiIifWZ1bmN0aW9uIENuKG8sYyl7cmV0dXJuIGhuKG8pPT09aG4oYyl9ZnVuY3Rpb24gQ3QobyxjKXtyZXR1cm4gbS5pc0FycmF5KGMpP2MuZmluZEluZGV4KGg9PkNuKGgsbykpOm0uaXNGdW5jdGlvbihjKSYmQ24oYyxvKT8wOi0xfWZ1bmN0aW9uIEt0KG8sYyxoKXt2YXIgXz1SLnRvUmF3KGMpLEk9aC5wcm9wc09wdGlvbnNbMF07Zm9yKHZhciBBIGluIEkpe3ZhciB4PUlbQV07eCE9bnVsbCYmbHIoQSxfW0FdLHgsIW0uaGFzT3duKG8sQSkmJiFtLmhhc093bihvLG0uaHlwaGVuYXRlKEEpKSl9fWZ1bmN0aW9uIGxyKG8sYyxoLF8pe3Zhcnt0eXBlOkkscmVxdWlyZWQ6QSx2YWxpZGF0b3I6eH09aDtpZihBJiZfKXtpZSgnTWlzc2luZyByZXF1aXJlZCBwcm9wOiAiJytvKyciJyk7cmV0dXJufWlmKCEoYz09bnVsbCYmIWgucmVxdWlyZWQpKXtpZihJIT1udWxsJiZJIT09ITApe2Zvcih2YXIgej0hMSxIPW0uaXNBcnJheShJKT9JOltJXSx0ZT1bXSxQZT0wO1BlPEgubGVuZ3RoJiYhejtQZSsrKXt2YXJ7dmFsaWQ6ZGUsZXhwZWN0ZWRUeXBlOmZlfT1HdChjLEhbUGVdKTt0ZS5wdXNoKGZlfHwiIiksej1kZX1pZigheil7aWUoWXQobyxjLHRlKSk7cmV0dXJufX14JiYheChjKSYmaWUoJ0ludmFsaWQgcHJvcDogY3VzdG9tIHZhbGlkYXRvciBjaGVjayBmYWlsZWQgZm9yIHByb3AgIicrbysnIi4nKX19dmFyIGNyPW0ubWFrZU1hcCgiU3RyaW5nLE51bWJlcixCb29sZWFuLEZ1bmN0aW9uLFN5bWJvbCxCaWdJbnQiKTtmdW5jdGlvbiBHdChvLGMpe3ZhciBoLF89aG4oYyk7aWYoY3IoXykpe3ZhciBJPXR5cGVvZiBvO2g9ST09PV8udG9Mb3dlckNhc2UoKSwhaCYmST09PSJvYmplY3QiJiYoaD1vIGluc3RhbmNlb2YgYyl9ZWxzZSBfPT09Ik9iamVjdCI/aD1tLmlzT2JqZWN0KG8pOl89PT0iQXJyYXkiP2g9bS5pc0FycmF5KG8pOl89PT0ibnVsbCI/aD1vPT09bnVsbDpoPW8gaW5zdGFuY2VvZiBjO3JldHVybnt2YWxpZDpoLGV4cGVjdGVkVHlwZTpffX1mdW5jdGlvbiBZdChvLGMsaCl7dmFyIF89J0ludmFsaWQgcHJvcDogdHlwZSBjaGVjayBmYWlsZWQgZm9yIHByb3AgIicuY29uY2F0KG8sJyIuJykrIiBFeHBlY3RlZCAiLmNvbmNhdChoLm1hcChtLmNhcGl0YWxpemUpLmpvaW4oIiB8ICIpKSxJPWhbMF0sQT1tLnRvUmF3VHlwZShjKSx4PWVyKGMsSSksej1lcihjLEEpO3JldHVybiBoLmxlbmd0aD09PTEmJnlhKEkpJiYheXMoSSxBKSYmKF8rPSIgd2l0aCB2YWx1ZSAiLmNvbmNhdCh4KSksXys9IiwgZ290ICIuY29uY2F0KEEsIiAiKSx5YShBKSYmKF8rPSJ3aXRoIHZhbHVlICIuY29uY2F0KHosIi4iKSksX31mdW5jdGlvbiBlcihvLGMpe3JldHVybiBjPT09IlN0cmluZyI/JyInLmNvbmNhdChvLCciJyk6Yz09PSJOdW1iZXIiPyIiLmNvbmNhdChOdW1iZXIobykpOiIiLmNvbmNhdChvKX1mdW5jdGlvbiB5YShvKXt2YXIgYz1bInN0cmluZyIsIm51bWJlciIsImJvb2xlYW4iXTtyZXR1cm4gYy5zb21lKGg9Pm8udG9Mb3dlckNhc2UoKT09PWgpfWZ1bmN0aW9uIHlzKCl7Zm9yKHZhciBvPWFyZ3VtZW50cy5sZW5ndGgsYz1uZXcgQXJyYXkobyksaD0wO2g8bztoKyspY1toXT1hcmd1bWVudHNbaF07cmV0dXJuIGMuc29tZShfPT5fLnRvTG93ZXJDYXNlKCk9PT0iYm9vbGVhbiIpfXZhciBFcz1vPT5vWzBdPT09Il8ifHxvPT09IiRzdGFibGUiLGxvPW89Pm0uaXNBcnJheShvKT9vLm1hcChHaSk6W0dpKG8pXSxNYT0obyxjLGgpPT57aWYoYy5fbilyZXR1cm4gYzt2YXIgXz1vcihmdW5jdGlvbigpe3JldHVybiBCbiYmaWUoJ1Nsb3QgIicuY29uY2F0KG8sJyIgaW52b2tlZCBvdXRzaWRlIG9mIHRoZSByZW5kZXIgZnVuY3Rpb246ICcpKyJ0aGlzIHdpbGwgbm90IHRyYWNrIGRlcGVuZGVuY2llcyB1c2VkIGluIHRoZSBzbG90LiBJbnZva2UgdGhlIHNsb3QgZnVuY3Rpb24gaW5zaWRlIHRoZSByZW5kZXIgZnVuY3Rpb24gaW5zdGVhZC4iKSxsbyhjKC4uLmFyZ3VtZW50cykpfSxoKTtyZXR1cm4gXy5fYz0hMSxffSxEYT0obyxjLGgpPT57dmFyIF89by5fY3R4O2Zvcih2YXIgSSBpbiBvKWlmKCFFcyhJKSl7dmFyIEE9b1tJXTttLmlzRnVuY3Rpb24oQSk/Y1tJXT1NYShJLEEsXyk6QSE9bnVsbCYmZnVuY3Rpb24oKXtpZSgnTm9uLWZ1bmN0aW9uIHZhbHVlIGVuY291bnRlcmVkIGZvciBzbG90ICInLmNvbmNhdChJLCciLiAnKSsiUHJlZmVyIGZ1bmN0aW9uIHNsb3RzIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UuIik7dmFyIHg9bG8oQSk7Y1tJXT0oKT0+eH0oKX19LEZpPShvLGMpPT57SyhvLnZub2RlKXx8aWUoIk5vbi1mdW5jdGlvbiB2YWx1ZSBlbmNvdW50ZXJlZCBmb3IgZGVmYXVsdCBzbG90LiBQcmVmZXIgZnVuY3Rpb24gc2xvdHMgZm9yIGJldHRlciBwZXJmb3JtYW5jZS4iKTt2YXIgaD1sbyhjKTtvLnNsb3RzLmRlZmF1bHQ9KCk9Pmh9LExhPShvLGMpPT57aWYoby52bm9kZS5zaGFwZUZsYWcmMzIpe3ZhciBoPWMuXztoPyhvLnNsb3RzPVIudG9SYXcoYyksbS5kZWYoYywiXyIsaCkpOkRhKGMsby5zbG90cz17fSl9ZWxzZSBvLnNsb3RzPXt9LGMmJkZpKG8sYyk7bS5kZWYoby5zbG90cyxPcywxKX0sem49KG8sYyxoKT0+e3Zhcnt2bm9kZTpfLHNsb3RzOkl9PW8sQT0hMCx4PW0uRU1QVFlfT0JKO2lmKF8uc2hhcGVGbGFnJjMyKXt2YXIgej1jLl87ej94cj9tLmV4dGVuZChJLGMpOmgmJno9PT0xP0E9ITE6KG0uZXh0ZW5kKEksYyksIWgmJno9PT0xJiZkZWxldGUgSS5fKTooQT0hYy4kc3RhYmxlLERhKGMsSSkpLHg9Y31lbHNlIGMmJihGaShvLGMpLHg9e2RlZmF1bHQ6MX0pO2lmKEEpZm9yKHZhciBIIGluIEkpIUVzKEgpJiYhKEggaW4geCkmJmRlbGV0ZSBJW0hdfTtmdW5jdGlvbiBIbygpe3JldHVybnthcHA6bnVsbCxjb25maWc6e2lzTmF0aXZlVGFnOm0uTk8scGVyZm9ybWFuY2U6ITEsZ2xvYmFsUHJvcGVydGllczp7fSxvcHRpb25NZXJnZVN0cmF0ZWdpZXM6e30sZXJyb3JIYW5kbGVyOnZvaWQgMCx3YXJuSGFuZGxlcjp2b2lkIDAsY29tcGlsZXJPcHRpb25zOnt9fSxtaXhpbnM6W10sY29tcG9uZW50czp7fSxkaXJlY3RpdmVzOnt9LHByb3ZpZGVzOk9iamVjdC5jcmVhdGUobnVsbCksb3B0aW9uc0NhY2hlOm5ldyBXZWFrTWFwLHByb3BzQ2FjaGU6bmV3IFdlYWtNYXAsZW1pdHNDYWNoZTpuZXcgV2Vha01hcH19dmFyIGpzPTA7ZnVuY3Rpb24gY2wobyxjKXtyZXR1cm4gZnVuY3Rpb24oXyl7dmFyIEk9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOm51bGw7bS5pc0Z1bmN0aW9uKF8pfHwoXz1PYmplY3QuYXNzaWduKHt9LF8pKSxJIT1udWxsJiYhbS5pc09iamVjdChJKSYmKGllKCJyb290IHByb3BzIHBhc3NlZCB0byBhcHAubW91bnQoKSBtdXN0IGJlIGFuIG9iamVjdC4iKSxJPW51bGwpO3ZhciBBPUhvKCkseD1uZXcgU2V0LHo9ITEsSD1BLmFwcD17X3VpZDpqcysrLF9jb21wb25lbnQ6XyxfcHJvcHM6SSxfY29udGFpbmVyOm51bGwsX2NvbnRleHQ6QSxfaW5zdGFuY2U6bnVsbCx2ZXJzaW9uOnFvLGdldCBjb25maWcoKXtyZXR1cm4gQS5jb25maWd9LHNldCBjb25maWcodGUpe2llKCJhcHAuY29uZmlnIGNhbm5vdCBiZSByZXBsYWNlZC4gTW9kaWZ5IGluZGl2aWR1YWwgb3B0aW9ucyBpbnN0ZWFkLiIpfSx1c2UodGUpe2Zvcih2YXIgUGU9YXJndW1lbnRzLmxlbmd0aCxkZT1uZXcgQXJyYXkoUGU+MT9QZS0xOjApLGZlPTE7ZmU8UGU7ZmUrKylkZVtmZS0xXT1hcmd1bWVudHNbZmVdO3JldHVybiB4Lmhhcyh0ZSk/aWUoIlBsdWdpbiBoYXMgYWxyZWFkeSBiZWVuIGFwcGxpZWQgdG8gdGFyZ2V0IGFwcC4iKTp0ZSYmbS5pc0Z1bmN0aW9uKHRlLmluc3RhbGwpPyh4LmFkZCh0ZSksdGUuaW5zdGFsbChILC4uLmRlKSk6bS5pc0Z1bmN0aW9uKHRlKT8oeC5hZGQodGUpLHRlKEgsLi4uZGUpKTppZSgnQSBwbHVnaW4gbXVzdCBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhbiBvYmplY3Qgd2l0aCBhbiAiaW5zdGFsbCIgZnVuY3Rpb24uJyksSH0sbWl4aW4odGUpe3JldHVybiBBLm1peGlucy5pbmNsdWRlcyh0ZSk/aWUoIk1peGluIGhhcyBhbHJlYWR5IGJlZW4gYXBwbGllZCB0byB0YXJnZXQgYXBwIisodGUubmFtZT8iOiAiLmNvbmNhdCh0ZS5uYW1lKToiIikpOkEubWl4aW5zLnB1c2godGUpLEh9LGNvbXBvbmVudCh0ZSxQZSl7cmV0dXJuIGZsKHRlLEEuY29uZmlnKSxQZT8oQS5jb21wb25lbnRzW3RlXSYmaWUoJ0NvbXBvbmVudCAiJy5jb25jYXQodGUsJyIgaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkIGluIHRhcmdldCBhcHAuJykpLEEuY29tcG9uZW50c1t0ZV09UGUsSCk6QS5jb21wb25lbnRzW3RlXX0sZGlyZWN0aXZlKHRlLFBlKXtyZXR1cm4gJHModGUpLFBlPyhBLmRpcmVjdGl2ZXNbdGVdJiZpZSgnRGlyZWN0aXZlICInLmNvbmNhdCh0ZSwnIiBoYXMgYWxyZWFkeSBiZWVuIHJlZ2lzdGVyZWQgaW4gdGFyZ2V0IGFwcC4nKSksQS5kaXJlY3RpdmVzW3RlXT1QZSxIKTpBLmRpcmVjdGl2ZXNbdGVdfSxtb3VudCh0ZSxQZSxkZSl7aWYoeilpZSgiQXBwIGhhcyBhbHJlYWR5IGJlZW4gbW91bnRlZC5cbklmIHlvdSB3YW50IHRvIHJlbW91bnQgdGhlIHNhbWUgYXBwLCBtb3ZlIHlvdXIgYXBwIGNyZWF0aW9uIGxvZ2ljIGludG8gYSBmYWN0b3J5IGZ1bmN0aW9uIGFuZCBjcmVhdGUgZnJlc2ggYXBwIGluc3RhbmNlcyBmb3IgZWFjaCBtb3VudCAtIGUuZy4gYGNvbnN0IGNyZWF0ZU15QXBwID0gKCkgPT4gY3JlYXRlQXBwKEFwcClgIik7ZWxzZXt0ZS5fX3Z1ZV9hcHBfXyYmaWUoIlRoZXJlIGlzIGFscmVhZHkgYW4gYXBwIGluc3RhbmNlIG1vdW50ZWQgb24gdGhlIGhvc3QgY29udGFpbmVyLlxuIElmIHlvdSB3YW50IHRvIG1vdW50IGFub3RoZXIgYXBwIG9uIHRoZSBzYW1lIGhvc3QgY29udGFpbmVyLCB5b3UgbmVlZCB0byB1bm1vdW50IHRoZSBwcmV2aW91cyBhcHAgYnkgY2FsbGluZyBgYXBwLnVubW91bnQoKWAgZmlyc3QuIik7dmFyIGZlPUduKF8sSSk7cmV0dXJuIGZlLmFwcENvbnRleHQ9QSxBLnJlbG9hZD0oKT0+e28oemkoZmUpLHRlLGRlKX0sUGUmJmM/YyhmZSx0ZSk6byhmZSx0ZSxkZSksej0hMCxILl9jb250YWluZXI9dGUsdGUuX192dWVfYXBwX189SCxILl9pbnN0YW5jZT1mZS5jb21wb25lbnQsWGkoSCxxbyksUHMoZmUuY29tcG9uZW50KXx8ZmUuY29tcG9uZW50LnByb3h5fX0sdW5tb3VudCgpe3o/KG8obnVsbCxILl9jb250YWluZXIpLEguX2luc3RhbmNlPW51bGwsWG8oSCksZGVsZXRlIEguX2NvbnRhaW5lci5fX3Z1ZV9hcHBfXyk6aWUoIkNhbm5vdCB1bm1vdW50IGFuIGFwcCB0aGF0IGlzIG5vdCBtb3VudGVkLiIpfSxwcm92aWRlKHRlLFBlKXtyZXR1cm4gdGUgaW4gQS5wcm92aWRlcyYmaWUoJ0FwcCBhbHJlYWR5IHByb3ZpZGVzIHByb3BlcnR5IHdpdGgga2V5ICInLmNvbmNhdChTdHJpbmcodGUpLCciLiAnKSsiSXQgd2lsbCBiZSBvdmVyd3JpdHRlbiB3aXRoIHRoZSBuZXcgdmFsdWUuIiksQS5wcm92aWRlc1t0ZV09UGUsSH19O3JldHVybiBIfX1mdW5jdGlvbiBqbyhvLGMsaCxfKXt2YXIgST1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06ITE7aWYobS5pc0FycmF5KG8pKXtvLmZvckVhY2goKGd0LGJ0KT0+am8oZ3QsYyYmKG0uaXNBcnJheShjKT9jW2J0XTpjKSxoLF8sSSkpO3JldHVybn1pZighKGNlKF8pJiYhSSkpe3ZhciBBPV8uc2hhcGVGbGFnJjQ/UHMoXy5jb21wb25lbnQpfHxfLmNvbXBvbmVudC5wcm94eTpfLmVsLHg9ST9udWxsOkEse2k6eixyOkh9PW87aWYoIXope2llKCJNaXNzaW5nIHJlZiBvd25lciBjb250ZXh0LiByZWYgY2Fubm90IGJlIHVzZWQgb24gaG9pc3RlZCB2bm9kZXMuIEEgdm5vZGUgd2l0aCByZWYgbXVzdCBiZSBjcmVhdGVkIGluc2lkZSB0aGUgcmVuZGVyIGZ1bmN0aW9uLiIpO3JldHVybn12YXIgdGU9YyYmYy5yLFBlPXoucmVmcz09PW0uRU1QVFlfT0JKP3oucmVmcz17fTp6LnJlZnMsZGU9ei5zZXR1cFN0YXRlO2lmKHRlIT1udWxsJiZ0ZSE9PUgmJihtLmlzU3RyaW5nKHRlKT8oUGVbdGVdPW51bGwsbS5oYXNPd24oZGUsdGUpJiYoZGVbdGVdPW51bGwpKTpSLmlzUmVmKHRlKSYmKHRlLnZhbHVlPW51bGwpKSxtLmlzRnVuY3Rpb24oSCkpSHQoSCx6LDEyLFt4LFBlXSk7ZWxzZXt2YXIgZmU9bS5pc1N0cmluZyhIKSxVZT1SLmlzUmVmKEgpO2lmKGZlfHxVZSl7dmFyIEplPSgpPT57aWYoby5mKXt2YXIgZ3Q9ZmU/bS5oYXNPd24oZGUsSCk/ZGVbSF06UGVbSF06SC52YWx1ZTtJP20uaXNBcnJheShndCkmJm0ucmVtb3ZlKGd0LEEpOm0uaXNBcnJheShndCk/Z3QuaW5jbHVkZXMoQSl8fGd0LnB1c2goQSk6ZmU/KFBlW0hdPVtBXSxtLmhhc093bihkZSxIKSYmKGRlW0hdPVBlW0hdKSk6KEgudmFsdWU9W0FdLG8uayYmKFBlW28ua109SC52YWx1ZSkpfWVsc2UgZmU/KFBlW0hdPXgsbS5oYXNPd24oZGUsSCkmJihkZVtIXT14KSk6VWU/KEgudmFsdWU9eCxvLmsmJihQZVtvLmtdPXgpKTppZSgiSW52YWxpZCB0ZW1wbGF0ZSByZWYgdHlwZToiLEgsIigiLmNvbmNhdCh0eXBlb2YgSCwiKSIpKX07eD8oSmUuaWQ9LTEscHIoSmUsaCkpOkplKCl9ZWxzZSBpZSgiSW52YWxpZCB0ZW1wbGF0ZSByZWYgdHlwZToiLEgsIigiLmNvbmNhdCh0eXBlb2YgSCwiKSIpKX19fXZhciBlaT0hMSwkbj1vPT4vc3ZnLy50ZXN0KG8ubmFtZXNwYWNlVVJJKSYmby50YWdOYW1lIT09ImZvcmVpZ25PYmplY3QiLFZyPW89Pm8ubm9kZVR5cGU9PT04O2Z1bmN0aW9uIFZpKG8pe3ZhcnttdDpjLHA6aCxvOntwYXRjaFByb3A6XyxjcmVhdGVUZXh0OkksbmV4dFNpYmxpbmc6QSxwYXJlbnROb2RlOngscmVtb3ZlOnosaW5zZXJ0OkgsY3JlYXRlQ29tbWVudDp0ZX19PW8sUGU9KGtlLG1lKT0+e2lmKCFtZS5oYXNDaGlsZE5vZGVzKCkpe2llKCJBdHRlbXB0aW5nIHRvIGh5ZHJhdGUgZXhpc3RpbmcgbWFya3VwIGJ1dCBjb250YWluZXIgaXMgZW1wdHkuIFBlcmZvcm1pbmcgZnVsbCBtb3VudCBpbnN0ZWFkLiIpLGgobnVsbCxrZSxtZSksam4oKSxtZS5fdm5vZGU9a2U7cmV0dXJufWVpPSExLGRlKG1lLmZpcnN0Q2hpbGQsa2UsbnVsbCxudWxsLG51bGwpLGpuKCksbWUuX3Zub2RlPWtlLGVpJiZjb25zb2xlLmVycm9yKCJIeWRyYXRpb24gY29tcGxldGVkIGJ1dCBjb250YWlucyBtaXNtYXRjaGVzLiIpfSxkZT1mdW5jdGlvbihrZSxtZSxNZSx0dCxxZSl7dmFyIG90PWFyZ3VtZW50cy5sZW5ndGg+NSYmYXJndW1lbnRzWzVdIT09dm9pZCAwP2FyZ3VtZW50c1s1XTohMSxJdD1WcihrZSkmJmtlLmRhdGE9PT0iWyIsYXQ9KCk9Pmd0KGtlLG1lLE1lLHR0LHFlLEl0KSx7dHlwZTppLHJlZjphLHNoYXBlRmxhZzpmLHBhdGNoRmxhZzpwfT1tZSxTPWtlLm5vZGVUeXBlO21lLmVsPWtlLHA9PT0tMiYmKG90PSExLG1lLmR5bmFtaWNDaGlsZHJlbj1udWxsKTt2YXIgdz1udWxsO3N3aXRjaChpKXtjYXNlIGt0OlMhPT0zP21lLmNoaWxkcmVuPT09IiI/KEgobWUuZWw9SSgiIikseChrZSksa2UpLHc9a2UpOnc9YXQoKTooa2UuZGF0YSE9PW1lLmNoaWxkcmVuJiYoZWk9ITAsaWUoIkh5ZHJhdGlvbiB0ZXh0IG1pc21hdGNoOiIrYAotIENsaWVudDogYC5jb25jYXQoSlNPTi5zdHJpbmdpZnkoa2UuZGF0YSkpK2AKLSBTZXJ2ZXI6IGAuY29uY2F0KEpTT04uc3RyaW5naWZ5KG1lLmNoaWxkcmVuKSkpLGtlLmRhdGE9bWUuY2hpbGRyZW4pLHc9QShrZSkpO2JyZWFrO2Nhc2UgTHQ6UyE9PTh8fEl0P3c9YXQoKTp3PUEoa2UpO2JyZWFrO2Nhc2UgZW46aWYoSXQmJihrZT1BKGtlKSxTPWtlLm5vZGVUeXBlKSxTPT09MXx8Uz09PTMpe3c9a2U7Zm9yKHZhciBOPSFtZS5jaGlsZHJlbi5sZW5ndGgsVj0wO1Y8bWUuc3RhdGljQ291bnQ7VisrKU4mJihtZS5jaGlsZHJlbis9dy5ub2RlVHlwZT09PTE/dy5vdXRlckhUTUw6dy5kYXRhKSxWPT09bWUuc3RhdGljQ291bnQtMSYmKG1lLmFuY2hvcj13KSx3PUEodyk7cmV0dXJuIEl0P0Eodyk6d31lbHNlIGF0KCk7YnJlYWs7Y2FzZSB5dDpJdD93PUplKGtlLG1lLE1lLHR0LHFlLG90KTp3PWF0KCk7YnJlYWs7ZGVmYXVsdDppZihmJjEpUyE9PTF8fG1lLnR5cGUudG9Mb3dlckNhc2UoKSE9PWtlLnRhZ05hbWUudG9Mb3dlckNhc2UoKT93PWF0KCk6dz1mZShrZSxtZSxNZSx0dCxxZSxvdCk7ZWxzZSBpZihmJjYpe21lLnNsb3RTY29wZUlkcz1xZTt2YXIgRj14KGtlKTtpZihjKG1lLEYsbnVsbCxNZSx0dCwkbihGKSxvdCksdz1JdD9idChrZSk6QShrZSksdyYmVnIodykmJncuZGF0YT09PSJ0ZWxlcG9ydCBlbmQiJiYodz1BKHcpKSxjZShtZSkpe3ZhciBxO0l0PyhxPUduKHl0KSxxLmFuY2hvcj13P3cucHJldmlvdXNTaWJsaW5nOkYubGFzdENoaWxkKTpxPWtlLm5vZGVUeXBlPT09Mz9UcygiIik6R24oImRpdiIpLHEuZWw9a2UsbWUuY29tcG9uZW50LnN1YlRyZWU9cX19ZWxzZSBmJjY0P1MhPT04P3c9YXQoKTp3PW1lLnR5cGUuaHlkcmF0ZShrZSxtZSxNZSx0dCxxZSxvdCxvLFVlKTpmJjEyOD93PW1lLnR5cGUuaHlkcmF0ZShrZSxtZSxNZSx0dCwkbih4KGtlKSkscWUsb3QsbyxkZSk6aWUoIkludmFsaWQgSG9zdFZOb2RlIHR5cGU6IixpLCIoIi5jb25jYXQodHlwZW9mIGksIikiKSl9cmV0dXJuIGEhPW51bGwmJmpvKGEsbnVsbCx0dCxtZSksd30sZmU9KGtlLG1lLE1lLHR0LHFlLG90KT0+e290PW90fHwhIW1lLmR5bmFtaWNDaGlsZHJlbjt2YXJ7dHlwZTpJdCxwcm9wczphdCxwYXRjaEZsYWc6aSxzaGFwZUZsYWc6YSxkaXJzOmZ9PW1lLHA9SXQ9PT0iaW5wdXQiJiZmfHxJdD09PSJvcHRpb24iO3tpZihmJiZDbyhtZSxudWxsLE1lLCJjcmVhdGVkIiksYXQpaWYocHx8IW90fHxpJigxNnwzMikpZm9yKHZhciBTIGluIGF0KShwJiZTLmVuZHNXaXRoKCJ2YWx1ZSIpfHxtLmlzT24oUykmJiFtLmlzUmVzZXJ2ZWRQcm9wKFMpKSYmXyhrZSxTLG51bGwsYXRbU10sITEsdm9pZCAwLE1lKTtlbHNlIGF0Lm9uQ2xpY2smJl8oa2UsIm9uQ2xpY2siLG51bGwsYXQub25DbGljaywhMSx2b2lkIDAsTWUpO3ZhciB3O2lmKCh3PWF0JiZhdC5vblZub2RlQmVmb3JlTW91bnQpJiYkcih3LE1lLG1lKSxmJiZDbyhtZSxudWxsLE1lLCJiZWZvcmVNb3VudCIpLCgodz1hdCYmYXQub25Wbm9kZU1vdW50ZWQpfHxmKSYmZWEoKCk9Pnt3JiYkcih3LE1lLG1lKSxmJiZDbyhtZSxudWxsLE1lLCJtb3VudGVkIil9LHR0KSxhJjE2JiYhKGF0JiYoYXQuaW5uZXJIVE1MfHxhdC50ZXh0Q29udGVudCkpKWZvcih2YXIgTj1VZShrZS5maXJzdENoaWxkLG1lLGtlLE1lLHR0LHFlLG90KSxWPSExO047KXtlaT0hMCxWfHwoaWUoIkh5ZHJhdGlvbiBjaGlsZHJlbiBtaXNtYXRjaCBpbiA8Ii5jb25jYXQobWUudHlwZSwiPjogIikrInNlcnZlciByZW5kZXJlZCBlbGVtZW50IGNvbnRhaW5zIG1vcmUgY2hpbGQgbm9kZXMgdGhhbiBjbGllbnQgdmRvbS4iKSxWPSEwKTt2YXIgRj1OO049Ti5uZXh0U2libGluZyx6KEYpfWVsc2UgYSY4JiZrZS50ZXh0Q29udGVudCE9PW1lLmNoaWxkcmVuJiYoZWk9ITAsaWUoIkh5ZHJhdGlvbiB0ZXh0IGNvbnRlbnQgbWlzbWF0Y2ggaW4gPCIuY29uY2F0KG1lLnR5cGUsYD46CmApKyItIENsaWVudDogIi5jb25jYXQoa2UudGV4dENvbnRlbnQsYApgKSsiLSBTZXJ2ZXI6ICIuY29uY2F0KG1lLmNoaWxkcmVuKSksa2UudGV4dENvbnRlbnQ9bWUuY2hpbGRyZW4pfXJldHVybiBrZS5uZXh0U2libGluZ30sVWU9KGtlLG1lLE1lLHR0LHFlLG90LEl0KT0+e0l0PUl0fHwhIW1lLmR5bmFtaWNDaGlsZHJlbjtmb3IodmFyIGF0PW1lLmNoaWxkcmVuLGk9YXQubGVuZ3RoLGE9ITEsZj0wO2Y8aTtmKyspe3ZhciBwPUl0P2F0W2ZdOmF0W2ZdPUdpKGF0W2ZdKTtpZihrZSlrZT1kZShrZSxwLHR0LHFlLG90LEl0KTtlbHNle2lmKHAudHlwZT09PWt0JiYhcC5jaGlsZHJlbiljb250aW51ZTtlaT0hMCxhfHwoaWUoIkh5ZHJhdGlvbiBjaGlsZHJlbiBtaXNtYXRjaCBpbiA8Ii5jb25jYXQoTWUudGFnTmFtZS50b0xvd2VyQ2FzZSgpLCI+OiAiKSsic2VydmVyIHJlbmRlcmVkIGVsZW1lbnQgY29udGFpbnMgZmV3ZXIgY2hpbGQgbm9kZXMgdGhhbiBjbGllbnQgdmRvbS4iKSxhPSEwKSxoKG51bGwscCxNZSxudWxsLHR0LHFlLCRuKE1lKSxvdCl9fXJldHVybiBrZX0sSmU9KGtlLG1lLE1lLHR0LHFlLG90KT0+e3ZhcntzbG90U2NvcGVJZHM6SXR9PW1lO0l0JiYocWU9cWU/cWUuY29uY2F0KEl0KTpJdCk7dmFyIGF0PXgoa2UpLGk9VWUoQShrZSksbWUsYXQsTWUsdHQscWUsb3QpO3JldHVybiBpJiZWcihpKSYmaS5kYXRhPT09Il0iP0EobWUuYW5jaG9yPWkpOihlaT0hMCxIKG1lLmFuY2hvcj10ZSgiXSIpLGF0LGkpLGkpfSxndD0oa2UsbWUsTWUsdHQscWUsb3QpPT57aWYoZWk9ITAsaWUoYEh5ZHJhdGlvbiBub2RlIG1pc21hdGNoOgotIENsaWVudCB2bm9kZTpgLG1lLnR5cGUsYAotIFNlcnZlciByZW5kZXJlZCBET006YCxrZSxrZS5ub2RlVHlwZT09PTM/Iih0ZXh0KSI6VnIoa2UpJiZrZS5kYXRhPT09IlsiPyIoc3RhcnQgb2YgZnJhZ21lbnQpIjoiIiksbWUuZWw9bnVsbCxvdClmb3IodmFyIEl0PWJ0KGtlKTs7KXt2YXIgYXQ9QShrZSk7aWYoYXQmJmF0IT09SXQpeihhdCk7ZWxzZSBicmVha312YXIgaT1BKGtlKSxhPXgoa2UpO3JldHVybiB6KGtlKSxoKG51bGwsbWUsYSxpLE1lLHR0LCRuKGEpLHFlKSxpfSxidD1rZT0+e2Zvcih2YXIgbWU9MDtrZTspaWYoa2U9QShrZSksa2UmJlZyKGtlKSYmKGtlLmRhdGE9PT0iWyImJm1lKyssa2UuZGF0YT09PSJdIikpe2lmKG1lPT09MClyZXR1cm4gQShrZSk7bWUtLX1yZXR1cm4ga2V9O3JldHVybltQZSxkZV19dmFyIHpvLCRpO2Z1bmN0aW9uIFdyKG8sYyl7by5hcHBDb250ZXh0LmNvbmZpZy5wZXJmb3JtYW5jZSYmVWkoKSYmJGkubWFyaygidnVlLSIuY29uY2F0KGMsIi0iKS5jb25jYXQoby51aWQpKSxrbihvLGMsVWkoKT8kaS5ub3coKTpEYXRlLm5vdygpKX1mdW5jdGlvbiBFcihvLGMpe2lmKG8uYXBwQ29udGV4dC5jb25maWcucGVyZm9ybWFuY2UmJlVpKCkpe3ZhciBoPSJ2dWUtIi5jb25jYXQoYywiLSIpLmNvbmNhdChvLnVpZCksXz1oKyI6ZW5kIjskaS5tYXJrKF8pLCRpLm1lYXN1cmUoIjwiLmNvbmNhdChTYShvLG8udHlwZSksIj4gIikuY29uY2F0KGMpLGgsXyksJGkuY2xlYXJNYXJrcyhoKSwkaS5jbGVhck1hcmtzKF8pfXZvKG8sYyxVaSgpPyRpLm5vdygpOkRhdGUubm93KCkpfWZ1bmN0aW9uIFVpKCl7cmV0dXJuIHpvIT09dm9pZCAwfHwodHlwZW9mIHdpbmRvdyE9InVuZGVmaW5lZCImJndpbmRvdy5wZXJmb3JtYW5jZT8oem89ITAsJGk9d2luZG93LnBlcmZvcm1hbmNlKTp6bz0hMSksem99ZnVuY3Rpb24gd3MoKXt2YXIgbz1bXTtpZihvLmxlbmd0aCl7dmFyIGM9by5sZW5ndGg+MTtjb25zb2xlLndhcm4oIkZlYXR1cmUgZmxhZyIuY29uY2F0KGM/InMiOiIiLCIgIikuY29uY2F0KG8uam9pbigiLCAiKSwiICIpLmNvbmNhdChjPyJhcmUiOiJpcyIsIiBub3QgZXhwbGljaXRseSBkZWZpbmVkLiBZb3UgYXJlIHJ1bm5pbmcgdGhlIGVzbS1idW5kbGVyIGJ1aWxkIG9mIFZ1ZSwgIikrYHdoaWNoIGV4cGVjdHMgdGhlc2UgY29tcGlsZS10aW1lIGZlYXR1cmUgZmxhZ3MgdG8gYmUgZ2xvYmFsbHkgaW5qZWN0ZWQgdmlhIHRoZSBidW5kbGVyIGNvbmZpZyBpbiBvcmRlciB0byBnZXQgYmV0dGVyIHRyZWUtc2hha2luZyBpbiB0aGUgcHJvZHVjdGlvbiBidW5kbGUuCgpGb3IgbW9yZSBkZXRhaWxzLCBzZWUgaHR0cHM6Ly9saW5rLnZ1ZWpzLm9yZy9mZWF0dXJlLWZsYWdzLmApfX12YXIgcHI9ZWE7ZnVuY3Rpb24gUHIobyl7cmV0dXJuIEhpKG8pfWZ1bmN0aW9uIEZhKG8pe3JldHVybiBIaShvLFZpKX1mdW5jdGlvbiBIaShvLGMpe3dzKCk7dmFyIGg9bS5nZXRHbG9iYWxUaGlzKCk7aC5fX1ZVRV9fPSEwLERuKGguX19WVUVfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyxoKTt2YXJ7aW5zZXJ0Ol8scmVtb3ZlOkkscGF0Y2hQcm9wOkEsZm9yY2VQYXRjaFByb3A6eCxjcmVhdGVFbGVtZW50OnosY3JlYXRlVGV4dDpILGNyZWF0ZUNvbW1lbnQ6dGUsc2V0VGV4dDpQZSxzZXRFbGVtZW50VGV4dDpkZSxwYXJlbnROb2RlOmZlLG5leHRTaWJsaW5nOlVlLHNldFNjb3BlSWQ6SmU9bS5OT09QLGluc2VydFN0YXRpY0NvbnRlbnQ6Z3R9PW8sYnQ9ZnVuY3Rpb24oQixqLG9lKXt2YXIgeWU9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOm51bGwsYWU9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOm51bGwsZ2U9YXJndW1lbnRzLmxlbmd0aD41JiZhcmd1bWVudHNbNV0hPT12b2lkIDA/YXJndW1lbnRzWzVdOm51bGwsUWU9YXJndW1lbnRzLmxlbmd0aD42JiZhcmd1bWVudHNbNl0hPT12b2lkIDA/YXJndW1lbnRzWzZdOiExLEdlPWFyZ3VtZW50cy5sZW5ndGg+NyYmYXJndW1lbnRzWzddIT09dm9pZCAwP2FyZ3VtZW50c1s3XTpudWxsLGV0PWFyZ3VtZW50cy5sZW5ndGg+OCYmYXJndW1lbnRzWzhdIT09dm9pZCAwP2FyZ3VtZW50c1s4XTp4cj8hMTohIWouZHluYW1pY0NoaWxkcmVuO2lmKEIhPT1qKXtCJiYhd3IoQixqKSYmKHllPUxlKEIpLFplKEIsYWUsZ2UsITApLEI9bnVsbCksai5wYXRjaEZsYWc9PT0tMiYmKGV0PSExLGouZHluYW1pY0NoaWxkcmVuPW51bGwpO3Zhcnt0eXBlOlZlLHJlZjpNdCxzaGFwZUZsYWc6eHR9PWo7c3dpdGNoKFZlKXtjYXNlIGt0OmtlKEIsaixvZSx5ZSk7YnJlYWs7Y2FzZSBMdDptZShCLGosb2UseWUpO2JyZWFrO2Nhc2UgZW46Qj09bnVsbD9NZShqLG9lLHllLFFlKTp0dChCLGosb2UsUWUpO2JyZWFrO2Nhc2UgeXQ6dyhCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpO2JyZWFrO2RlZmF1bHQ6eHQmMT9JdChCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpOnh0JjY/TihCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpOnh0JjY0fHx4dCYxMjg/VmUucHJvY2VzcyhCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQscnQpOmllKCJJbnZhbGlkIFZOb2RlIHR5cGU6IixWZSwiKCIuY29uY2F0KHR5cGVvZiBWZSwiKSIpKX1NdCE9bnVsbCYmYWUmJmpvKE10LEImJkIucmVmLGdlLGp8fEIsIWopfX0sa2U9KEIsaixvZSx5ZSk9PntpZihCPT1udWxsKV8oai5lbD1IKGouY2hpbGRyZW4pLG9lLHllKTtlbHNle3ZhciBhZT1qLmVsPUIuZWw7ai5jaGlsZHJlbiE9PUIuY2hpbGRyZW4mJlBlKGFlLGouY2hpbGRyZW4pfX0sbWU9KEIsaixvZSx5ZSk9PntCPT1udWxsP18oai5lbD10ZShqLmNoaWxkcmVufHwiIiksb2UseWUpOmouZWw9Qi5lbH0sTWU9KEIsaixvZSx5ZSk9PntbQi5lbCxCLmFuY2hvcl09Z3QoQi5jaGlsZHJlbixqLG9lLHllLEIuZWwsQi5hbmNob3IpfSx0dD0oQixqLG9lLHllKT0+e2lmKGouY2hpbGRyZW4hPT1CLmNoaWxkcmVuKXt2YXIgYWU9VWUoQi5hbmNob3IpO290KEIpLFtqLmVsLGouYW5jaG9yXT1ndChqLmNoaWxkcmVuLG9lLGFlLHllKX1lbHNlIGouZWw9Qi5lbCxqLmFuY2hvcj1CLmFuY2hvcn0scWU9KEIsaixvZSk9Pntmb3IodmFye2VsOnllLGFuY2hvcjphZX09QixnZTt5ZSYmeWUhPT1hZTspZ2U9VWUoeWUpLF8oeWUsaixvZSkseWU9Z2U7XyhhZSxqLG9lKX0sb3Q9Qj0+e2Zvcih2YXJ7ZWw6aixhbmNob3I6b2V9PUIseWU7aiYmaiE9PW9lOyl5ZT1VZShqKSxJKGopLGo9eWU7SShvZSl9LEl0PShCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpPT57UWU9UWV8fGoudHlwZT09PSJzdmciLEI9PW51bGw/YXQoaixvZSx5ZSxhZSxnZSxRZSxHZSxldCk6ZihCLGosYWUsZ2UsUWUsR2UsZXQpfSxhdD0oQixqLG9lLHllLGFlLGdlLFFlLEdlKT0+e3ZhciBldCxWZSx7dHlwZTpNdCxwcm9wczp4dCxzaGFwZUZsYWc6RnQsdHJhbnNpdGlvbjp1bixkaXJzOllufT1CO2lmKGV0PUIuZWw9eihCLnR5cGUsZ2UseHQmJnh0LmlzLHh0KSxGdCY4P2RlKGV0LEIuY2hpbGRyZW4pOkZ0JjE2JiZhKEIuY2hpbGRyZW4sZXQsbnVsbCx5ZSxhZSxnZSYmTXQhPT0iZm9yZWlnbk9iamVjdCIsUWUsR2UpLFluJiZDbyhCLG51bGwseWUsImNyZWF0ZWQiKSxpKGV0LEIsQi5zY29wZUlkLFFlLHllKSx4dCl7Zm9yKHZhciBxdCBpbiB4dClxdCE9PSJ2YWx1ZSImJiFtLmlzUmVzZXJ2ZWRQcm9wKHF0KSYmQShldCxxdCxudWxsLHh0W3F0XSxnZSxCLmNoaWxkcmVuLHllLGFlLEVlLEIuaG9zdEluc3RhbmNlKTsidmFsdWUiaW4geHQmJkEoZXQsInZhbHVlIixudWxsLHh0LnZhbHVlLCExLFtdLHllLG51bGwsdm9pZCAwLEIuaG9zdEluc3RhbmNlKSwoVmU9eHQub25Wbm9kZUJlZm9yZU1vdW50KSYmJHIoVmUseWUsQil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV0LCJfX3Zub2RlIix7dmFsdWU6QixlbnVtZXJhYmxlOiExfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGV0LCJfX3Z1ZVBhcmVudENvbXBvbmVudCIse3ZhbHVlOnllLGVudW1lcmFibGU6ITF9KSxZbiYmQ28oQixudWxsLHllLCJiZWZvcmVNb3VudCIpO3ZhciB2bj0oIWFlfHxhZSYmIWFlLnBlbmRpbmdCcmFuY2gpJiZ1biYmIXVuLnBlcnNpc3RlZDt2biYmdW4uYmVmb3JlRW50ZXIoZXQpLF8oZXQsaixvZSksKChWZT14dCYmeHQub25Wbm9kZU1vdW50ZWQpfHx2bnx8WW4pJiZwcigoKT0+e1ZlJiYkcihWZSx5ZSxCKSx2biYmdW4uZW50ZXIoZXQpLFluJiZDbyhCLG51bGwseWUsIm1vdW50ZWQiKX0sYWUpfSxpPShCLGosb2UseWUsYWUpPT57aWYob2UmJkplKEIsb2UpLHllKWZvcih2YXIgZ2U9MDtnZTx5ZS5sZW5ndGg7Z2UrKylKZShCLHllW2dlXSk7aWYoYWUpe3ZhciBRZT1hZS5zdWJUcmVlO2lmKFFlLnBhdGNoRmxhZz4wJiZRZS5wYXRjaEZsYWcmMjA0OCYmKFFlPWVvKFFlLmNoaWxkcmVuKXx8UWUpLGo9PT1RZSl7dmFyIEdlPWFlLnZub2RlO2koQixHZSxHZS5zY29wZUlkLEdlLnNsb3RTY29wZUlkcyxhZS5wYXJlbnQpfX19LGE9ZnVuY3Rpb24oQixqLG9lLHllLGFlLGdlLFFlLEdlKXtmb3IodmFyIGV0PWFyZ3VtZW50cy5sZW5ndGg+OCYmYXJndW1lbnRzWzhdIT09dm9pZCAwP2FyZ3VtZW50c1s4XTowLFZlPWV0O1ZlPEIubGVuZ3RoO1ZlKyspe3ZhciBNdD1CW1ZlXT1HZT9TcihCW1ZlXSk6R2koQltWZV0pO2J0KG51bGwsTXQsaixvZSx5ZSxhZSxnZSxRZSxHZSl9fSxmPShCLGosb2UseWUsYWUsZ2UsUWUpPT57dmFyIEdlPWouZWw9Qi5lbCx7cGF0Y2hGbGFnOmV0LGR5bmFtaWNDaGlsZHJlbjpWZSxkaXJzOk10fT1qO2V0fD1CLnBhdGNoRmxhZyYxNjt2YXIgeHQ9Qi5wcm9wc3x8bS5FTVBUWV9PQkosRnQ9ai5wcm9wc3x8bS5FTVBUWV9PQkosdW47b2UmJkFvKG9lLCExKSwodW49RnQub25Wbm9kZUJlZm9yZVVwZGF0ZSkmJiRyKHVuLG9lLGosQiksTXQmJkNvKGosQixvZSwiYmVmb3JlVXBkYXRlIiksb2UmJkFvKG9lLCEwKSx4ciYmKGV0PTAsUWU9ITEsVmU9bnVsbCk7dmFyIFluPWFlJiZqLnR5cGUhPT0iZm9yZWlnbk9iamVjdCI7aWYoVmU/KHAoQi5keW5hbWljQ2hpbGRyZW4sVmUsR2Usb2UseWUsWW4sZ2UpLG9lJiZvZS50eXBlLl9faG1ySWQmJmppKEIsaikpOlFlfHxzZShCLGosR2UsbnVsbCxvZSx5ZSxZbixnZSwhMSksZXQ+MCl7aWYoZXQmMTYpUyhHZSxqLHh0LEZ0LG9lLHllLGFlKTtlbHNlIGlmKGV0JjImJnh0LmNsYXNzIT09RnQuY2xhc3MmJkEoR2UsImNsYXNzIixudWxsLEZ0LmNsYXNzLGFlLFtdLG9lLG51bGwsdm9pZCAwLGouaG9zdEluc3RhbmNlKSxldCY0JiZBKEdlLCJzdHlsZSIseHQuc3R5bGUsRnQuc3R5bGUsYWUsW10sb2UsbnVsbCx2b2lkIDAsai5ob3N0SW5zdGFuY2UpLGV0JjgpZm9yKHZhciBxdD1qLmR5bmFtaWNQcm9wcyx2bj0wO3ZuPHF0Lmxlbmd0aDt2bisrKXt2YXIgX2k9cXRbdm5dLGFuPXh0W19pXSxPbj1GdFtfaV07KE9uIT09YW58fF9pPT09InZhbHVlInx8eCYmeChHZSxfaSkpJiZBKEdlLF9pLGFuLE9uLGFlLEIuY2hpbGRyZW4sb2UseWUsRWUsai5ob3N0SW5zdGFuY2UpfWV0JjEmJkIuY2hpbGRyZW4hPT1qLmNoaWxkcmVuJiZkZShHZSxqLmNoaWxkcmVuKX1lbHNlIVFlJiZWZT09bnVsbCYmUyhHZSxqLHh0LEZ0LG9lLHllLGFlKTsoKHVuPUZ0Lm9uVm5vZGVVcGRhdGVkKXx8TXQpJiZwcigoKT0+e3VuJiYkcih1bixvZSxqLEIpLE10JiZDbyhqLEIsb2UsInVwZGF0ZWQiKX0seWUpfSxwPShCLGosb2UseWUsYWUsZ2UsUWUpPT57Zm9yKHZhciBHZT0wO0dlPGoubGVuZ3RoO0dlKyspe3ZhciBldD1CW0dlXSxWZT1qW0dlXSxNdD1ldC5lbCYmKGV0LnR5cGU9PT15dHx8IXdyKGV0LFZlKXx8ZXQuc2hhcGVGbGFnJig2fDY0KSk/ZmUoZXQuZWwpOm9lO2J0KGV0LFZlLE10LG51bGwseWUsYWUsZ2UsUWUsITApfX0sUz0oQixqLG9lLHllLGFlLGdlLFFlKT0+e2lmKG9lIT09eWUpe2lmKG9lIT09bS5FTVBUWV9PQkopZm9yKHZhciBHZSBpbiBvZSkhbS5pc1Jlc2VydmVkUHJvcChHZSkmJiEoR2UgaW4geWUpJiZBKEIsR2Usb2VbR2VdLG51bGwsUWUsai5jaGlsZHJlbixhZSxnZSxFZSxqLmhvc3RJbnN0YW5jZSk7Zm9yKHZhciBldCBpbiB5ZSlpZighbS5pc1Jlc2VydmVkUHJvcChldCkpe3ZhciBWZT15ZVtldF0sTXQ9b2VbZXRdOyhWZSE9PU10JiZldCE9PSJ2YWx1ZSJ8fHgmJngoQixldCkpJiZBKEIsZXQsTXQsVmUsUWUsai5jaGlsZHJlbixhZSxnZSxFZSxqLmhvc3RJbnN0YW5jZSl9InZhbHVlImluIHllJiZBKEIsInZhbHVlIixvZS52YWx1ZSx5ZS52YWx1ZSwhMSxbXSxhZSxudWxsLHZvaWQgMCxqLmhvc3RJbnN0YW5jZSl9fSx3PShCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpPT57dmFyIFZlPWouZWw9Qj9CLmVsOkgoIiIpLE10PWouYW5jaG9yPUI/Qi5hbmNob3I6SCgiIikse3BhdGNoRmxhZzp4dCxkeW5hbWljQ2hpbGRyZW46RnQsc2xvdFNjb3BlSWRzOnVufT1qOyh4cnx8eHQmMjA0OCkmJih4dD0wLGV0PSExLEZ0PW51bGwpLHVuJiYoR2U9R2U/R2UuY29uY2F0KHVuKTp1biksQj09bnVsbD8oXyhWZSxvZSx5ZSksXyhNdCxvZSx5ZSksYShqLmNoaWxkcmVuLG9lLE10LGFlLGdlLFFlLEdlLGV0KSk6eHQ+MCYmeHQmNjQmJkZ0JiZCLmR5bmFtaWNDaGlsZHJlbj8ocChCLmR5bmFtaWNDaGlsZHJlbixGdCxvZSxhZSxnZSxRZSxHZSksYWUmJmFlLnR5cGUuX19obXJJZD9qaShCLGopOihqLmtleSE9bnVsbHx8YWUmJmo9PT1hZS5zdWJUcmVlKSYmamkoQixqLCEwKSk6c2UoQixqLG9lLE10LGFlLGdlLFFlLEdlLGV0KX0sTj0oQixqLG9lLHllLGFlLGdlLFFlLEdlLGV0KT0+e2ouc2xvdFNjb3BlSWRzPUdlLEI9PW51bGw/ai5zaGFwZUZsYWcmNTEyP2FlLmN0eC5hY3RpdmF0ZShqLG9lLHllLFFlLGV0KTpWKGosb2UseWUsYWUsZ2UsUWUsZXQpOkYoQixqLGV0KX0sVj0oQixqLG9lLHllLGFlLGdlLFFlKT0+e3ZhciBHZT1CLmNvbXBvbmVudD11bChCLHllLGFlKTtpZihHZS50eXBlLl9faG1ySWQmJmZyKEdlKSxRdChCKSxXcihHZSwibW91bnQiKSxLKEIpJiYoR2UuY3R4LnJlbmRlcmVyPXJ0KSxXcihHZSwiaW5pdCIpLFRpKEdlKSxFcihHZSwiaW5pdCIpLEdlLmFzeW5jRGVwKXtpZihhZSYmYWUucmVnaXN0ZXJEZXAoR2UscSksIUIuZWwpe3ZhciBldD1HZS5zdWJUcmVlPUduKEx0KTttZShudWxsLGV0LGosb2UpfXJldHVybn1xKEdlLEIsaixvZSxhZSxnZSxRZSksTygpLEVyKEdlLCJtb3VudCIpfSxGPShCLGosb2UpPT57dmFyIHllPWouY29tcG9uZW50PUIuY29tcG9uZW50O2lmKERpKEIsaixvZSkpaWYoeWUuYXN5bmNEZXAmJiF5ZS5hc3luY1Jlc29sdmVkKXtRdChqKSxfZSh5ZSxqLG9lKSxPKCk7cmV0dXJufWVsc2UgeWUubmV4dD1qLGlyKHllLnVwZGF0ZSkseWUudXBkYXRlKCk7ZWxzZSBqLmVsPUIuZWwseWUudm5vZGU9an0scT0oQixqLG9lLHllLGFlLGdlLFFlKT0+e3ZhciBHZT0oKT0+e2lmKEIuaXNNb3VudGVkKXt2YXJ7bmV4dDpwbixidTpxaSx1OmJpLHBhcmVudDpxcix2bm9kZTp1YX09QixXPXBuLFg7UXQocG58fEIudm5vZGUpLEFvKEIsITEpLHBuPyhwbi5lbD11YS5lbCxfZShCLHBuLFFlKSk6cG49dWEscWkmJm0uaW52b2tlQXJyYXlGbnMocWkpLChYPXBuLnByb3BzJiZwbi5wcm9wcy5vblZub2RlQmVmb3JlVXBkYXRlKSYmJHIoWCxxcixwbix1YSksQW8oQiwhMCksV3IoQiwicmVuZGVyIik7dmFyIHdlPXhlKEIpO0VyKEIsInJlbmRlciIpO3ZhciAkZT1CLnN1YlRyZWU7Qi5zdWJUcmVlPXdlLFdyKEIsInBhdGNoIiksYnQoJGUsd2UsZmUoJGUuZWwpLExlKCRlKSxCLGFlLGdlKSxFcihCLCJwYXRjaCIpLHBuLmVsPXdlLmVsLFc9PT1udWxsJiZJcihCLHdlLmVsKSxiaSYmcHIoYmksYWUpLChYPXBuLnByb3BzJiZwbi5wcm9wcy5vblZub2RlVXBkYXRlZCkmJnByKCgpPT4kcihYLHFyLHBuLHVhKSxhZSksb2koQiksTygpfWVsc2V7dmFyIE10LHtlbDp4dCxwcm9wczpGdH09aix7Ym06dW4sbTpZbixwYXJlbnQ6cXR9PUIsdm49Y2Uoaik7aWYoQW8oQiwhMSksdW4mJm0uaW52b2tlQXJyYXlGbnModW4pLCF2biYmKE10PUZ0JiZGdC5vblZub2RlQmVmb3JlTW91bnQpJiYkcihNdCxxdCxqKSxBbyhCLCEwKSx4dCYmWGUpe3ZhciBfaT0oKT0+e1dyKEIsInJlbmRlciIpLEIuc3ViVHJlZT14ZShCKSxFcihCLCJyZW5kZXIiKSxXcihCLCJoeWRyYXRlIiksWGUoeHQsQi5zdWJUcmVlLEIsYWUsbnVsbCksRXIoQiwiaHlkcmF0ZSIpfTt2bj9qLnR5cGUuX19hc3luY0xvYWRlcigpLnRoZW4oKCk9PiFCLmlzVW5tb3VudGVkJiZfaSgpKTpfaSgpfWVsc2V7V3IoQiwicmVuZGVyIik7dmFyIGFuPUIuc3ViVHJlZT14ZShCKTtFcihCLCJyZW5kZXIiKSxXcihCLCJwYXRjaCIpLGJ0KG51bGwsYW4sb2UseWUsQixhZSxnZSksRXIoQiwicGF0Y2giKSxqLmVsPWFuLmVsfWlmKFluJiZwcihZbixhZSksIXZuJiYoTXQ9RnQmJkZ0Lm9uVm5vZGVNb3VudGVkKSl7dmFyIE9uPWo7cHIoKCk9PiRyKE10LHF0LE9uKSxhZSl9KGouc2hhcGVGbGFnJjI1Nnx8cXQmJmNlKHF0LnZub2RlKSYmcXQudm5vZGUuc2hhcGVGbGFnJjI1NikmJkIuYSYmcHIoQi5hLGFlKSxCLmlzTW91bnRlZD0hMCxNbyhCKSxqPW9lPXllPW51bGx9fSxldD1CLmVmZmVjdD1uZXcgUi5SZWFjdGl2ZUVmZmVjdChHZSwoKT0+SnQoVmUpLEIuc2NvcGUpLFZlPUIudXBkYXRlPSgpPT5ldC5ydW4oKTtWZS5pZD1CLnVpZCxBbyhCLCEwKSxldC5vblRyYWNrPUIucnRjP010PT5tLmludm9rZUFycmF5Rm5zKEIucnRjLE10KTp2b2lkIDAsZXQub25UcmlnZ2VyPUIucnRnP010PT5tLmludm9rZUFycmF5Rm5zKEIucnRnLE10KTp2b2lkIDAsVmUub3duZXJJbnN0YW5jZT1CLFZlKCl9LF9lPShCLGosb2UpPT57ai5jb21wb25lbnQ9Qjt2YXIgeWU9Qi52bm9kZS5wcm9wcztCLnZub2RlPWosQi5uZXh0PW51bGwsTnQoQixqLnByb3BzLHllLG9lKSx6bihCLGouY2hpbGRyZW4sb2UpLFIucGF1c2VUcmFja2luZygpLEJpKCksUi5yZXNldFRyYWNraW5nKCl9LHNlPWZ1bmN0aW9uKEIsaixvZSx5ZSxhZSxnZSxRZSxHZSl7dmFyIGV0PWFyZ3VtZW50cy5sZW5ndGg+OCYmYXJndW1lbnRzWzhdIT09dm9pZCAwP2FyZ3VtZW50c1s4XTohMSxWZT1CJiZCLmNoaWxkcmVuLE10PUI/Qi5zaGFwZUZsYWc6MCx4dD1qLmNoaWxkcmVuLHtwYXRjaEZsYWc6RnQsc2hhcGVGbGFnOnVufT1qO2lmKEZ0PjApe2lmKEZ0JjEyOCl7T2UoVmUseHQsb2UseWUsYWUsZ2UsUWUsR2UsZXQpO3JldHVybn1lbHNlIGlmKEZ0JjI1Nil7bmUoVmUseHQsb2UseWUsYWUsZ2UsUWUsR2UsZXQpO3JldHVybn19dW4mOD8oTXQmMTYmJkVlKFZlLGFlLGdlKSx4dCE9PVZlJiZkZShvZSx4dCkpOk10JjE2P3VuJjE2P09lKFZlLHh0LG9lLHllLGFlLGdlLFFlLEdlLGV0KTpFZShWZSxhZSxnZSwhMCk6KE10JjgmJmRlKG9lLCIiKSx1biYxNiYmYSh4dCxvZSx5ZSxhZSxnZSxRZSxHZSxldCkpfSxuZT0oQixqLG9lLHllLGFlLGdlLFFlLEdlLGV0KT0+e0I9Qnx8bS5FTVBUWV9BUlIsaj1qfHxtLkVNUFRZX0FSUjt2YXIgVmU9Qi5sZW5ndGgsTXQ9ai5sZW5ndGgseHQ9TWF0aC5taW4oVmUsTXQpLEZ0O2ZvcihGdD0wO0Z0PHh0O0Z0Kyspe3ZhciB1bj1qW0Z0XT1ldD9TcihqW0Z0XSk6R2koaltGdF0pO2J0KEJbRnRdLHVuLG9lLG51bGwsYWUsZ2UsUWUsR2UsZXQpfVZlPk10P0VlKEIsYWUsZ2UsITAsITEseHQpOmEoaixvZSx5ZSxhZSxnZSxRZSxHZSxldCx4dCl9LE9lPShCLGosb2UseWUsYWUsZ2UsUWUsR2UsZXQpPT57Zm9yKHZhciBWZT0wLE10PWoubGVuZ3RoLHh0PUIubGVuZ3RoLTEsRnQ9TXQtMTtWZTw9eHQmJlZlPD1GdDspe3ZhciB1bj1CW1ZlXSxZbj1qW1ZlXT1ldD9TcihqW1ZlXSk6R2koaltWZV0pO2lmKHdyKHVuLFluKSlidCh1bixZbixvZSxudWxsLGFlLGdlLFFlLEdlLGV0KTtlbHNlIGJyZWFrO1ZlKyt9Zm9yKDtWZTw9eHQmJlZlPD1GdDspe3ZhciBxdD1CW3h0XSx2bj1qW0Z0XT1ldD9TcihqW0Z0XSk6R2koaltGdF0pO2lmKHdyKHF0LHZuKSlidChxdCx2bixvZSxudWxsLGFlLGdlLFFlLEdlLGV0KTtlbHNlIGJyZWFrO3h0LS0sRnQtLX1pZihWZT54dCl7aWYoVmU8PUZ0KWZvcih2YXIgX2k9RnQrMSxhbj1faTxNdD9qW19pXS5lbDp5ZTtWZTw9RnQ7KWJ0KG51bGwsaltWZV09ZXQ/U3IoaltWZV0pOkdpKGpbVmVdKSxvZSxhbixhZSxnZSxRZSxHZSxldCksVmUrK31lbHNlIGlmKFZlPkZ0KWZvcig7VmU8PXh0OylaZShCW1ZlXSxhZSxnZSwhMCksVmUrKztlbHNle3ZhciBPbj1WZSxwbj1WZSxxaT1uZXcgTWFwO2ZvcihWZT1wbjtWZTw9RnQ7VmUrKyl7dmFyIGJpPWpbVmVdPWV0P1NyKGpbVmVdKTpHaShqW1ZlXSk7Ymkua2V5IT1udWxsJiYocWkuaGFzKGJpLmtleSkmJmllKCJEdXBsaWNhdGUga2V5cyBmb3VuZCBkdXJpbmcgdXBkYXRlOiIsSlNPTi5zdHJpbmdpZnkoYmkua2V5KSwiTWFrZSBzdXJlIGtleXMgYXJlIHVuaXF1ZS4iKSxxaS5zZXQoYmkua2V5LFZlKSl9dmFyIHFyLHVhPTAsVz1GdC1wbisxLFg9ITEsd2U9MCwkZT1uZXcgQXJyYXkoVyk7Zm9yKFZlPTA7VmU8VztWZSsrKSRlW1ZlXT0wO2ZvcihWZT1PbjtWZTw9eHQ7VmUrKyl7dmFyIGplPUJbVmVdO2lmKHVhPj1XKXtaZShqZSxhZSxnZSwhMCk7Y29udGludWV9dmFyIG50PXZvaWQgMDtpZihqZS5rZXkhPW51bGwpbnQ9cWkuZ2V0KGplLmtleSk7ZWxzZSBmb3IocXI9cG47cXI8PUZ0O3FyKyspaWYoJGVbcXItcG5dPT09MCYmd3IoamUsaltxcl0pKXtudD1xcjticmVha31udD09PXZvaWQgMD9aZShqZSxhZSxnZSwhMCk6KCRlW250LXBuXT1WZSsxLG50Pj13ZT93ZT1udDpYPSEwLGJ0KGplLGpbbnRdLG9lLG51bGwsYWUsZ2UsUWUsR2UsZXQpLHVhKyspfXZhciB2dD1YP0VhKCRlKTptLkVNUFRZX0FSUjtmb3IocXI9dnQubGVuZ3RoLTEsVmU9Vy0xO1ZlPj0wO1ZlLS0pe3ZhciBpdD1wbitWZSxjdD1qW2l0XSxZZT1pdCsxPE10P2pbaXQrMV0uZWw6eWU7JGVbVmVdPT09MD9idChudWxsLGN0LG9lLFllLGFlLGdlLFFlLEdlLGV0KTpYJiYocXI8MHx8VmUhPT12dFtxcl0/RGUoY3Qsb2UsWWUsMik6cXItLSl9fX0sRGU9ZnVuY3Rpb24oQixqLG9lLHllKXt2YXIgYWU9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOm51bGwse2VsOmdlLHR5cGU6UWUsdHJhbnNpdGlvbjpHZSxjaGlsZHJlbjpldCxzaGFwZUZsYWc6VmV9PUI7aWYoVmUmNil7RGUoQi5jb21wb25lbnQuc3ViVHJlZSxqLG9lLHllKTtyZXR1cm59aWYoVmUmMTI4KXtCLnN1c3BlbnNlLm1vdmUoaixvZSx5ZSk7cmV0dXJufWlmKFZlJjY0KXtRZS5tb3ZlKEIsaixvZSxydCk7cmV0dXJufWlmKFFlPT09eXQpe18oZ2UsaixvZSk7Zm9yKHZhciBNdD0wO010PGV0Lmxlbmd0aDtNdCsrKURlKGV0W010XSxqLG9lLHllKTtfKEIuYW5jaG9yLGosb2UpO3JldHVybn1pZihRZT09PWVuKXtxZShCLGosb2UpO3JldHVybn12YXIgeHQ9eWUhPT0yJiZWZSYxJiZHZTtpZih4dClpZih5ZT09PTApR2UuYmVmb3JlRW50ZXIoZ2UpLF8oZ2UsaixvZSkscHIoKCk9PkdlLmVudGVyKGdlKSxhZSk7ZWxzZXt2YXJ7bGVhdmU6RnQsZGVsYXlMZWF2ZTp1bixhZnRlckxlYXZlOllufT1HZSxxdD0oKT0+XyhnZSxqLG9lKSx2bj0oKT0+e0Z0KGdlLCgpPT57cXQoKSxZbiYmWW4oKX0pfTt1bj91bihnZSxxdCx2bik6dm4oKX1lbHNlIF8oZ2UsaixvZSl9LFplPWZ1bmN0aW9uKEIsaixvZSl7dmFyIHllPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTohMSxhZT1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06ITEse3R5cGU6Z2UscHJvcHM6UWUscmVmOkdlLGNoaWxkcmVuOmV0LGR5bmFtaWNDaGlsZHJlbjpWZSxzaGFwZUZsYWc6TXQscGF0Y2hGbGFnOnh0LGRpcnM6RnR9PUI7aWYoR2UhPW51bGwmJmpvKEdlLG51bGwsb2UsQiwhMCksTXQmMjU2KXtqLmN0eC5kZWFjdGl2YXRlKEIpO3JldHVybn12YXIgdW49TXQmMSYmRnQsWW49IWNlKEIpLHF0O2lmKFluJiYocXQ9UWUmJlFlLm9uVm5vZGVCZWZvcmVVbm1vdW50KSYmJHIocXQsaixCKSxNdCY2KWxlKEIuY29tcG9uZW50LG9lLHllKTtlbHNle2lmKE10JjEyOCl7Qi5zdXNwZW5zZS51bm1vdW50KG9lLHllKTtyZXR1cm59dW4mJkNvKEIsbnVsbCxqLCJiZWZvcmVVbm1vdW50IiksTXQmNjQ/Qi50eXBlLnJlbW92ZShCLGosb2UsYWUscnQseWUpOlZlJiYoZ2UhPT15dHx8eHQ+MCYmeHQmNjQpP0VlKFZlLGosb2UsITEsITApOihnZT09PXl0JiZ4dCYoMTI4fDI1Nil8fCFhZSYmTXQmMTYpJiZFZShldCxqLG9lKSx5ZSYmZnQoQil9KFluJiYocXQ9UWUmJlFlLm9uVm5vZGVVbm1vdW50ZWQpfHx1bikmJnByKCgpPT57cXQmJiRyKHF0LGosQiksdW4mJkNvKEIsbnVsbCxqLCJ1bm1vdW50ZWQiKX0sb2UpfSxmdD1CPT57dmFye3R5cGU6aixlbDpvZSxhbmNob3I6eWUsdHJhbnNpdGlvbjphZX09QjtpZihqPT09eXQpe0IucGF0Y2hGbGFnPjAmJkIucGF0Y2hGbGFnJjIwNDgmJmFlJiYhYWUucGVyc2lzdGVkP0IuY2hpbGRyZW4uZm9yRWFjaChWZT0+e1ZlLnR5cGU9PT1MdD9JKFZlLmVsKTpmdChWZSl9KTpUZShvZSx5ZSk7cmV0dXJufWlmKGo9PT1lbil7b3QoQik7cmV0dXJufXZhciBnZT0oKT0+e0kob2UpLGFlJiYhYWUucGVyc2lzdGVkJiZhZS5hZnRlckxlYXZlJiZhZS5hZnRlckxlYXZlKCl9O2lmKEIuc2hhcGVGbGFnJjEmJmFlJiYhYWUucGVyc2lzdGVkKXt2YXJ7bGVhdmU6UWUsZGVsYXlMZWF2ZTpHZX09YWUsZXQ9KCk9PlFlKG9lLGdlKTtHZT9HZShCLmVsLGdlLGV0KTpldCgpfWVsc2UgZ2UoKX0sVGU9KEIsaik9Pntmb3IodmFyIG9lO0IhPT1qOylvZT1VZShCKSxJKEIpLEI9b2U7SShqKX0sbGU9KEIsaixvZSk9PntCLnR5cGUuX19obXJJZCYmZ2EoQik7dmFye2J1bTp5ZSxzY29wZTphZSx1cGRhdGU6Z2Usc3ViVHJlZTpRZSx1bTpHZX09Qjt5ZSYmbS5pbnZva2VBcnJheUZucyh5ZSksYWUuc3RvcCgpLGdlJiYoZ2UuYWN0aXZlPSExLFplKFFlLEIsaixvZSkpLEdlJiZwcihHZSxqKSxwcigoKT0+e0IuaXNVbm1vdW50ZWQ9ITB9LGopLGomJmoucGVuZGluZ0JyYW5jaCYmIWouaXNVbm1vdW50ZWQmJkIuYXN5bmNEZXAmJiFCLmFzeW5jUmVzb2x2ZWQmJkIuc3VzcGVuc2VJZD09PWoucGVuZGluZ0lkJiYoai5kZXBzLS0sai5kZXBzPT09MCYmai5yZXNvbHZlKCkpLFFpKEIpfSxFZT1mdW5jdGlvbihCLGosb2Upe2Zvcih2YXIgeWU9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiExLGFlPWFyZ3VtZW50cy5sZW5ndGg+NCYmYXJndW1lbnRzWzRdIT09dm9pZCAwP2FyZ3VtZW50c1s0XTohMSxnZT1hcmd1bWVudHMubGVuZ3RoPjUmJmFyZ3VtZW50c1s1XSE9PXZvaWQgMD9hcmd1bWVudHNbNV06MCxRZT1nZTtRZTxCLmxlbmd0aDtRZSsrKVplKEJbUWVdLGosb2UseWUsYWUpfSxMZT1CPT5CLnNoYXBlRmxhZyY2P0xlKEIuY29tcG9uZW50LnN1YlRyZWUpOkIuc2hhcGVGbGFnJjEyOD9CLnN1c3BlbnNlLm5leHQoKTpVZShCLmFuY2hvcnx8Qi5lbCksRmU9KEIsaixvZSk9PntCPT1udWxsP2ouX3Zub2RlJiZaZShqLl92bm9kZSxudWxsLG51bGwsITApOmJ0KGouX3Zub2RlfHxudWxsLEIsaixudWxsLG51bGwsbnVsbCxvZSksQmkoKSxqbigpLGouX3Zub2RlPUJ9LHJ0PXtwOmJ0LHVtOlplLG06RGUscjpmdCxtdDpWLG1jOmEscGM6c2UscGJjOnAsbjpMZSxvfSxPdCxYZTtyZXR1cm4gYyYmKFtPdCxYZV09YyhydCkpLHtyZW5kZXI6RmUsaHlkcmF0ZTpPdCxjcmVhdGVBcHA6Y2woRmUsT3QpfX1mdW5jdGlvbiBBbyhvLGMpe3ZhcntlZmZlY3Q6aCx1cGRhdGU6X309bztoLmFsbG93UmVjdXJzZT1fLmFsbG93UmVjdXJzZT1jfWZ1bmN0aW9uIGppKG8sYyl7dmFyIGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLF89by5jaGlsZHJlbixJPWMuY2hpbGRyZW47aWYobS5pc0FycmF5KF8pJiZtLmlzQXJyYXkoSSkpZm9yKHZhciBBPTA7QTxfLmxlbmd0aDtBKyspe3ZhciB4PV9bQV0sej1JW0FdO3ouc2hhcGVGbGFnJjEmJiF6LmR5bmFtaWNDaGlsZHJlbiYmKCh6LnBhdGNoRmxhZzw9MHx8ei5wYXRjaEZsYWc9PT0zMikmJih6PUlbQV09U3IoSVtBXSksei5lbD14LmVsKSxofHxqaSh4LHopKSx6LnR5cGU9PT1rdCYmKHouZWw9eC5lbCksei50eXBlPT09THQmJiF6LmVsJiYoei5lbD14LmVsKX19ZnVuY3Rpb24gRWEobyl7dmFyIGM9by5zbGljZSgpLGg9WzBdLF8sSSxBLHgseixIPW8ubGVuZ3RoO2ZvcihfPTA7XzxIO18rKyl7dmFyIHRlPW9bX107aWYodGUhPT0wKXtpZihJPWhbaC5sZW5ndGgtMV0sb1tJXTx0ZSl7Y1tfXT1JLGgucHVzaChfKTtjb250aW51ZX1mb3IoQT0wLHg9aC5sZW5ndGgtMTtBPHg7KXo9QSt4Pj4xLG9baFt6XV08dGU/QT16KzE6eD16O3RlPG9baFtBXV0mJihBPjAmJihjW19dPWhbQS0xXSksaFtBXT1fKX19Zm9yKEE9aC5sZW5ndGgseD1oW0EtMV07QS0tID4wOyloW0FdPXgseD1jW3hdO3JldHVybiBofXZhciBpYT1vPT5vLl9faXNUZWxlcG9ydCxjbz1vPT5vJiYoby5kaXNhYmxlZHx8by5kaXNhYmxlZD09PSIiKSxUbz1vPT50eXBlb2YgU1ZHRWxlbWVudCE9InVuZGVmaW5lZCImJm8gaW5zdGFuY2VvZiBTVkdFbGVtZW50LFdvPShvLGMpPT57dmFyIGg9byYmby50bztpZihtLmlzU3RyaW5nKGgpKWlmKGMpe3ZhciBfPWMoaCk7cmV0dXJuIF98fGllKCdGYWlsZWQgdG8gbG9jYXRlIFRlbGVwb3J0IHRhcmdldCB3aXRoIHNlbGVjdG9yICInLmNvbmNhdChoLCciLiAnKSsiTm90ZSB0aGUgdGFyZ2V0IGVsZW1lbnQgbXVzdCBleGlzdCBiZWZvcmUgdGhlIGNvbXBvbmVudCBpcyBtb3VudGVkIC0gaS5lLiB0aGUgdGFyZ2V0IGNhbm5vdCBiZSByZW5kZXJlZCBieSB0aGUgY29tcG9uZW50IGl0c2VsZiwgYW5kIGlkZWFsbHkgc2hvdWxkIGJlIG91dHNpZGUgb2YgdGhlIGVudGlyZSBWdWUgY29tcG9uZW50IHRyZWUuIiksX31lbHNlIHJldHVybiBpZSgiQ3VycmVudCByZW5kZXJlciBkb2VzIG5vdCBzdXBwb3J0IHN0cmluZyB0YXJnZXQgZm9yIFRlbGVwb3J0cy4gKG1pc3NpbmcgcXVlcnlTZWxlY3RvciByZW5kZXJlciBvcHRpb24pIiksbnVsbDtlbHNlIHJldHVybiFoJiYhY28obykmJmllKCJJbnZhbGlkIFRlbGVwb3J0IHRhcmdldDogIi5jb25jYXQoaCkpLGh9LFNzPXtfX2lzVGVsZXBvcnQ6ITAscHJvY2VzcyhvLGMsaCxfLEksQSx4LHosSCx0ZSl7dmFye21jOlBlLHBjOmRlLHBiYzpmZSxvOntpbnNlcnQ6VWUscXVlcnlTZWxlY3RvcjpKZSxjcmVhdGVUZXh0Omd0LGNyZWF0ZUNvbW1lbnQ6YnR9fT10ZSxrZT1jbyhjLnByb3BzKSx7c2hhcGVGbGFnOm1lLGNoaWxkcmVuOk1lLGR5bmFtaWNDaGlsZHJlbjp0dH09YztpZih4ciYmKEg9ITEsdHQ9bnVsbCksbz09bnVsbCl7dmFyIHFlPWMuZWw9YnQoInRlbGVwb3J0IHN0YXJ0Iiksb3Q9Yy5hbmNob3I9YnQoInRlbGVwb3J0IGVuZCIpO1VlKHFlLGgsXyksVWUob3QsaCxfKTt2YXIgSXQ9Yy50YXJnZXQ9V28oYy5wcm9wcyxKZSksYXQ9Yy50YXJnZXRBbmNob3I9Z3QoIiIpO0l0PyhVZShhdCxJdCkseD14fHxUbyhJdCkpOmtlfHxpZSgiSW52YWxpZCBUZWxlcG9ydCB0YXJnZXQgb24gbW91bnQ6IixJdCwiKCIuY29uY2F0KHR5cGVvZiBJdCwiKSIpKTt2YXIgaT0oRixxKT0+e21lJjE2JiZQZShNZSxGLHEsSSxBLHgseixIKX07a2U/aShoLG90KTpJdCYmaShJdCxhdCl9ZWxzZXtjLmVsPW8uZWw7dmFyIGE9Yy5hbmNob3I9by5hbmNob3IsZj1jLnRhcmdldD1vLnRhcmdldCxwPWMudGFyZ2V0QW5jaG9yPW8udGFyZ2V0QW5jaG9yLFM9Y28oby5wcm9wcyksdz1TP2g6ZixOPVM/YTpwO2lmKHg9eHx8VG8oZiksdHQ/KGZlKG8uZHluYW1pY0NoaWxkcmVuLHR0LHcsSSxBLHgseiksamkobyxjLCEwKSk6SHx8ZGUobyxjLHcsTixJLEEseCx6LCExKSxrZSlTfHxaYShjLGgsYSx0ZSwxKTtlbHNlIGlmKChjLnByb3BzJiZjLnByb3BzLnRvKSE9PShvLnByb3BzJiZvLnByb3BzLnRvKSl7dmFyIFY9Yy50YXJnZXQ9V28oYy5wcm9wcyxKZSk7Vj9aYShjLFYsbnVsbCx0ZSwwKTppZSgiSW52YWxpZCBUZWxlcG9ydCB0YXJnZXQgb24gdXBkYXRlOiIsZiwiKCIuY29uY2F0KHR5cGVvZiBmLCIpIikpfWVsc2UgUyYmWmEoYyxmLHAsdGUsMSl9VHQoYyl9LHJlbW92ZShvLGMsaCxfLEksQSl7dmFye3VtOngsbzp7cmVtb3ZlOnp9fT1JLHtzaGFwZUZsYWc6SCxjaGlsZHJlbjp0ZSxhbmNob3I6UGUsdGFyZ2V0QW5jaG9yOmRlLHRhcmdldDpmZSxwcm9wczpVZX09bztpZihmZSYmeihkZSksKEF8fCFjbyhVZSkpJiYoeihQZSksSCYxNikpZm9yKHZhciBKZT0wO0plPHRlLmxlbmd0aDtKZSsrKXt2YXIgZ3Q9dGVbSmVdO3goZ3QsYyxoLCEwLCEhZ3QuZHluYW1pY0NoaWxkcmVuKX19LG1vdmU6WmEsaHlkcmF0ZTp6c307ZnVuY3Rpb24gWmEobyxjLGgsXyl7dmFye286e2luc2VydDpJfSxtOkF9PV8seD1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06Mjt4PT09MCYmSShvLnRhcmdldEFuY2hvcixjLGgpO3ZhcntlbDp6LGFuY2hvcjpILHNoYXBlRmxhZzp0ZSxjaGlsZHJlbjpQZSxwcm9wczpkZX09byxmZT14PT09MjtpZihmZSYmSSh6LGMsaCksKCFmZXx8Y28oZGUpKSYmdGUmMTYpZm9yKHZhciBVZT0wO1VlPFBlLmxlbmd0aDtVZSsrKUEoUGVbVWVdLGMsaCwyKTtmZSYmSShILGMsaCl9ZnVuY3Rpb24genMobyxjLGgsXyxJLEEseCx6KXt2YXJ7bzp7bmV4dFNpYmxpbmc6SCxwYXJlbnROb2RlOnRlLHF1ZXJ5U2VsZWN0b3I6UGV9fT14LGRlPWMudGFyZ2V0PVdvKGMucHJvcHMsUGUpO2lmKGRlKXt2YXIgZmU9ZGUuX2xwYXx8ZGUuZmlyc3RDaGlsZDtpZihjLnNoYXBlRmxhZyYxNilpZihjbyhjLnByb3BzKSljLmFuY2hvcj16KEgobyksYyx0ZShvKSxoLF8sSSxBKSxjLnRhcmdldEFuY2hvcj1mZTtlbHNle2MuYW5jaG9yPUgobyk7Zm9yKHZhciBVZT1mZTtVZTspaWYoVWU9SChVZSksVWUmJlVlLm5vZGVUeXBlPT09OCYmVWUuZGF0YT09PSJ0ZWxlcG9ydCBhbmNob3IiKXtjLnRhcmdldEFuY2hvcj1VZSxkZS5fbHBhPWMudGFyZ2V0QW5jaG9yJiZIKGMudGFyZ2V0QW5jaG9yKTticmVha316KGZlLGMsZGUsaCxfLEksQSl9VHQoYyl9cmV0dXJuIGMuYW5jaG9yJiZIKGMuYW5jaG9yKX12YXIgemU9U3M7ZnVuY3Rpb24gVHQobyl7dmFyIGM9by5jdHg7aWYoYyYmYy51dCl7Zm9yKHZhciBoPW8uY2hpbGRyZW5bMF0uZWw7aCE9PW8udGFyZ2V0QW5jaG9yOyloLm5vZGVUeXBlPT09MSYmaC5zZXRBdHRyaWJ1dGUoImRhdGEtdi1vd25lciIsYy51aWQpLGg9aC5uZXh0U2libGluZztjLnV0KCl9fXZhciB5dD1TeW1ib2woIkZyYWdtZW50Iiksa3Q9U3ltYm9sKCJUZXh0IiksTHQ9U3ltYm9sKCJDb21tZW50IiksZW49U3ltYm9sKCJTdGF0aWMiKSxOcj1bXSxXbj1udWxsO2Z1bmN0aW9uIGdyKCl7dmFyIG89YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT12b2lkIDA/YXJndW1lbnRzWzBdOiExO05yLnB1c2goV249bz9udWxsOltdKX1mdW5jdGlvbiBYYSgpe05yLnBvcCgpLFduPU5yW05yLmxlbmd0aC0xXXx8bnVsbH12YXIgQWk9MTtmdW5jdGlvbiB3YShvKXtBaSs9b31mdW5jdGlvbiBXcyhvKXtyZXR1cm4gby5keW5hbWljQ2hpbGRyZW49QWk+MD9Xbnx8bS5FTVBUWV9BUlI6bnVsbCxYYSgpLEFpPjAmJlduJiZXbi5wdXNoKG8pLG99ZnVuY3Rpb24gYWMobyxjLGgsXyxJLEEpe3JldHVybiBXcyhWYShvLGMsaCxfLEksQSwhMCkpfWZ1bmN0aW9uIFJsKG8sYyxoLF8sSSl7cmV0dXJuIFdzKEduKG8sYyxoLF8sSSwhMCkpfWZ1bmN0aW9uIG9hKG8pe3JldHVybiBvP28uX192X2lzVk5vZGU9PT0hMDohMX1mdW5jdGlvbiB3cihvLGMpe3JldHVybiBjLnNoYXBlRmxhZyY2JiZCci5oYXMoYy50eXBlKT8oby5zaGFwZUZsYWcmPX4yNTYsYy5zaGFwZUZsYWcmPX41MTIsITEpOm8udHlwZT09PWMudHlwZSYmby5rZXk9PT1jLmtleX12YXIgdGk7ZnVuY3Rpb24gUWEobyl7dGk9b312YXIgQ3M9ZnVuY3Rpb24oKXtmb3IodmFyIG89YXJndW1lbnRzLmxlbmd0aCxjPW5ldyBBcnJheShvKSxoPTA7aDxvO2grKyljW2hdPWFyZ3VtZW50c1toXTtyZXR1cm4gVW4oLi4udGk/dGkoYyx5bik6Yyl9LE9zPSJfX3ZJbnRlcm5hbCIsQXM9bz0+e3ZhcntrZXk6Y309bztyZXR1cm4gYyE9bnVsbD9jOm51bGx9LEdvPW89Pnt2YXJ7cmVmOmMscmVmX2tleTpoLHJlZl9mb3I6X309bztyZXR1cm4gYyE9bnVsbD9tLmlzU3RyaW5nKGMpfHxSLmlzUmVmKGMpfHxtLmlzRnVuY3Rpb24oYyk/e2k6eW4scjpjLGs6aCxmOiEhX306YzpudWxsfTtmdW5jdGlvbiBWYShvKXt2YXIgYz1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06bnVsbCxoPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTpudWxsLF89YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOjAsST1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06bnVsbCxBPWFyZ3VtZW50cy5sZW5ndGg+NSYmYXJndW1lbnRzWzVdIT09dm9pZCAwP2FyZ3VtZW50c1s1XTpvPT09eXQ/MDoxLHg9YXJndW1lbnRzLmxlbmd0aD42JiZhcmd1bWVudHNbNl0hPT12b2lkIDA/YXJndW1lbnRzWzZdOiExLHo9YXJndW1lbnRzLmxlbmd0aD43JiZhcmd1bWVudHNbN10hPT12b2lkIDA/YXJndW1lbnRzWzddOiExLEg9e19fdl9pc1ZOb2RlOiEwLF9fdl9za2lwOiEwLHR5cGU6byxwcm9wczpjLGtleTpjJiZBcyhjKSxyZWY6YyYmR28oYyksc2NvcGVJZDpFbixzbG90U2NvcGVJZHM6bnVsbCxjaGlsZHJlbjpoLGNvbXBvbmVudDpudWxsLHN1c3BlbnNlOm51bGwsc3NDb250ZW50Om51bGwsc3NGYWxsYmFjazpudWxsLGRpcnM6bnVsbCx0cmFuc2l0aW9uOm51bGwsZWw6bnVsbCxhbmNob3I6bnVsbCx0YXJnZXQ6bnVsbCx0YXJnZXRBbmNob3I6bnVsbCxzdGF0aWNDb3VudDowLHNoYXBlRmxhZzpBLHBhdGNoRmxhZzpfLGR5bmFtaWNQcm9wczpJLGR5bmFtaWNDaGlsZHJlbjpudWxsLGFwcENvbnRleHQ6bnVsbCxob3N0SW5zdGFuY2U6eW4sY3R4OnlufTtyZXR1cm4gej8oR3IoSCxoKSxBJjEyOCYmby5ub3JtYWxpemUoSCkpOmgmJihILnNoYXBlRmxhZ3w9bS5pc1N0cmluZyhoKT84OjE2KSxILmtleSE9PUgua2V5JiZpZSgiVk5vZGUgY3JlYXRlZCB3aXRoIGludmFsaWQga2V5IChOYU4pLiBWTm9kZSB0eXBlOiIsSC50eXBlKSxBaT4wJiYheCYmV24mJihILnBhdGNoRmxhZz4wfHxBJjYpJiZILnBhdGNoRmxhZyE9PTMyJiZXbi5wdXNoKEgpLEh9dmFyIEduPUNzO2Z1bmN0aW9uIFVuKG8pe3ZhciBjPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTpudWxsLGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOm51bGwsXz1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106MCxJPWFyZ3VtZW50cy5sZW5ndGg+NCYmYXJndW1lbnRzWzRdIT09dm9pZCAwP2FyZ3VtZW50c1s0XTpudWxsLEE9YXJndW1lbnRzLmxlbmd0aD41JiZhcmd1bWVudHNbNV0hPT12b2lkIDA/YXJndW1lbnRzWzVdOiExO2lmKCghb3x8bz09PVBuKSYmKG98fGllKCJJbnZhbGlkIHZub2RlIHR5cGUgd2hlbiBjcmVhdGluZyB2bm9kZTogIi5jb25jYXQobywiLiIpKSxvPUx0KSxvYShvKSl7dmFyIHg9emkobyxjLCEwKTtyZXR1cm4gaCYmR3IoeCxoKSxBaT4wJiYhQSYmV24mJih4LnNoYXBlRmxhZyY2P1duW1duLmluZGV4T2YobyldPXg6V24ucHVzaCh4KSkseC5wYXRjaEZsYWd8PS0yLHh9aWYoa3MobykmJihvPW8uX192Y2NPcHRzKSxjKXtjPXhsKGMpO3ZhcntjbGFzczp6LHN0eWxlOkh9PWM7eiYmIW0uaXNTdHJpbmcoeikmJihjLmNsYXNzPW0ubm9ybWFsaXplQ2xhc3MoeikpLG0uaXNPYmplY3QoSCkmJihSLmlzUHJveHkoSCkmJiFtLmlzQXJyYXkoSCkmJihIPW0uZXh0ZW5kKHt9LEgpKSxjLnN0eWxlPW0ubm9ybWFsaXplU3R5bGUoSCkpfXZhciB0ZT1tLmlzU3RyaW5nKG8pPzE6RWkobyk/MTI4OmlhKG8pPzY0Om0uaXNPYmplY3Qobyk/NDptLmlzRnVuY3Rpb24obyk/MjowO3JldHVybiB0ZSY0JiZSLmlzUHJveHkobykmJihvPVIudG9SYXcobyksaWUoIlZ1ZSByZWNlaXZlZCBhIENvbXBvbmVudCB3aGljaCB3YXMgbWFkZSBhIHJlYWN0aXZlIG9iamVjdC4gVGhpcyBjYW4gbGVhZCB0byB1bm5lY2Vzc2FyeSBwZXJmb3JtYW5jZSBvdmVyaGVhZCwgYW5kIHNob3VsZCBiZSBhdm9pZGVkIGJ5IG1hcmtpbmcgdGhlIGNvbXBvbmVudCB3aXRoIGBtYXJrUmF3YCBvciB1c2luZyBgc2hhbGxvd1JlZmAgaW5zdGVhZCBvZiBgcmVmYC4iLGAKQ29tcG9uZW50IHRoYXQgd2FzIG1hZGUgcmVhY3RpdmU6IGAsbykpLFZhKG8sYyxoLF8sSSx0ZSxBLCEwKX1mdW5jdGlvbiB4bChvKXtyZXR1cm4gbz9SLmlzUHJveHkobyl8fE9zIGluIG8/bS5leHRlbmQoe30sbyk6bzpudWxsfWZ1bmN0aW9uIHppKG8sYyl7dmFyIGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLHtwcm9wczpfLHJlZjpJLHBhdGNoRmxhZzpBLGNoaWxkcmVuOnh9PW8sej1jPyRhKF98fHt9LGMpOl8sSD17X192X2lzVk5vZGU6ITAsX192X3NraXA6ITAsdHlwZTpvLnR5cGUscHJvcHM6eixrZXk6eiYmQXMoeikscmVmOmMmJmMucmVmP2gmJkk/bS5pc0FycmF5KEkpP0kuY29uY2F0KEdvKGMpKTpbSSxHbyhjKV06R28oYyk6SSxzY29wZUlkOm8uc2NvcGVJZCxzbG90U2NvcGVJZHM6by5zbG90U2NvcGVJZHMsY2hpbGRyZW46QT09PS0xJiZtLmlzQXJyYXkoeCk/eC5tYXAoV2kpOngsdGFyZ2V0Om8udGFyZ2V0LHRhcmdldEFuY2hvcjpvLnRhcmdldEFuY2hvcixzdGF0aWNDb3VudDpvLnN0YXRpY0NvdW50LHNoYXBlRmxhZzpvLnNoYXBlRmxhZyxwYXRjaEZsYWc6YyYmby50eXBlIT09eXQ/QT09PS0xPzE2OkF8MTY6QSxkeW5hbWljUHJvcHM6by5keW5hbWljUHJvcHMsZHluYW1pY0NoaWxkcmVuOm8uZHluYW1pY0NoaWxkcmVuLGFwcENvbnRleHQ6by5hcHBDb250ZXh0LGhvc3RJbnN0YW5jZTpvLmhvc3RJbnN0YW5jZSxkaXJzOm8uZGlycyx0cmFuc2l0aW9uOm8udHJhbnNpdGlvbixjb21wb25lbnQ6by5jb21wb25lbnQsc3VzcGVuc2U6by5zdXNwZW5zZSxzc0NvbnRlbnQ6by5zc0NvbnRlbnQmJnppKG8uc3NDb250ZW50KSxzc0ZhbGxiYWNrOm8uc3NGYWxsYmFjayYmemkoby5zc0ZhbGxiYWNrKSxlbDpvLmVsLGFuY2hvcjpvLmFuY2hvcixjdHg6by5jdHgsY2U6by5jZX07cmV0dXJuIEh9ZnVuY3Rpb24gV2kobyl7dmFyIGM9emkobyk7cmV0dXJuIG0uaXNBcnJheShvLmNoaWxkcmVuKSYmKGMuY2hpbGRyZW49by5jaGlsZHJlbi5tYXAoV2kpKSxjfWZ1bmN0aW9uIFRzKCl7dmFyIG89YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT12b2lkIDA/YXJndW1lbnRzWzBdOiIgIixjPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTowO3JldHVybiBHbihrdCxudWxsLG8sYyl9ZnVuY3Rpb24gSXMobyxjKXt2YXIgaD1HbihlbixudWxsLG8pO3JldHVybiBoLnN0YXRpY0NvdW50PWMsaH1mdW5jdGlvbiBqYygpe3ZhciBvPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dm9pZCAwP2FyZ3VtZW50c1swXToiIixjPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTohMTtyZXR1cm4gYz8oZ3IoKSxSbChMdCxudWxsLG8pKTpHbihMdCxudWxsLG8pfWZ1bmN0aW9uIEdpKG8pe3JldHVybiBvPT1udWxsfHx0eXBlb2Ygbz09ImJvb2xlYW4iP0duKEx0KTptLmlzQXJyYXkobyk/R24oeXQsbnVsbCxvLnNsaWNlKCkpOnR5cGVvZiBvPT0ib2JqZWN0Ij9TcihvKTpHbihrdCxudWxsLFN0cmluZyhvKSl9ZnVuY3Rpb24gU3Iobyl7cmV0dXJuIG8uZWw9PT1udWxsJiZvLnBhdGNoRmxhZyE9PS0xfHxvLm1lbW8/bzp6aShvKX1mdW5jdGlvbiBHcihvLGMpe3ZhciBoPTAse3NoYXBlRmxhZzpffT1vO2lmKGM9PW51bGwpYz1udWxsO2Vsc2UgaWYobS5pc0FycmF5KGMpKWg9MTY7ZWxzZSBpZih0eXBlb2YgYz09Im9iamVjdCIpaWYoXyYoMXw2NCkpe3ZhciBJPWMuZGVmYXVsdDtJJiYoSS5fYyYmKEkuX2Q9ITEpLEdyKG8sSSgpKSxJLl9jJiYoSS5fZD0hMCkpO3JldHVybn1lbHNle2g9MzI7dmFyIEE9Yy5fOyFBJiYhKE9zIGluIGMpP2MuX2N0eD15bjpBPT09MyYmeW4mJih5bi5zbG90cy5fPT09MT9jLl89MTooYy5fPTIsby5wYXRjaEZsYWd8PTEwMjQpKX1lbHNlIG0uaXNGdW5jdGlvbihjKT8oYz17ZGVmYXVsdDpjLF9jdHg6eW59LGg9MzIpOihjPVN0cmluZyhjKSxfJjY0PyhoPTE2LGM9W1RzKGMpXSk6aD04KTtvLmNoaWxkcmVuPWMsby5zaGFwZUZsYWd8PWh9ZnVuY3Rpb24gJGEoKXtmb3IodmFyIG89e30sYz0wO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspe3ZhciBoPWM8MHx8YXJndW1lbnRzLmxlbmd0aDw9Yz92b2lkIDA6YXJndW1lbnRzW2NdO2Zvcih2YXIgXyBpbiBoKWlmKF89PT0iY2xhc3MiKW8uY2xhc3MhPT1oLmNsYXNzJiYoby5jbGFzcz1tLm5vcm1hbGl6ZUNsYXNzKFtvLmNsYXNzLGguY2xhc3NdKSk7ZWxzZSBpZihfPT09InN0eWxlIilvLnN0eWxlPW0ubm9ybWFsaXplU3R5bGUoW28uc3R5bGUsaC5zdHlsZV0pO2Vsc2UgaWYobS5pc09uKF8pKXt2YXIgST1vW19dLEE9aFtfXTtBJiZJIT09QSYmIShtLmlzQXJyYXkoSSkmJkkuaW5jbHVkZXMoQSkpJiYob1tfXT1JP1tdLmNvbmNhdChJLEEpOkEpfWVsc2UgXyE9PSIiJiYob1tfXT1oW19dKX1yZXR1cm4gb31mdW5jdGlvbiAkcihvLGMsaCl7dmFyIF89YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOm51bGw7SW4obyxjLDcsW2gsX10pfXZhciBZcj1IbygpLEJsPTA7ZnVuY3Rpb24gdWwobyxjLGgpe3ZhciBfPW8udHlwZSxJPShjP2MuYXBwQ29udGV4dDpvLmFwcENvbnRleHQpfHxZcixBPXt1aWQ6QmwrKyx2bm9kZTpvLHR5cGU6XyxwYXJlbnQ6YyxhcHBDb250ZXh0Okkscm9vdDpudWxsLG5leHQ6bnVsbCxzdWJUcmVlOm51bGwsZWZmZWN0Om51bGwsdXBkYXRlOm51bGwsc2NvcGU6bmV3IFIuRWZmZWN0U2NvcGUoITApLHJlbmRlcjpudWxsLHByb3h5Om51bGwsZXhwb3NlZDpudWxsLGV4cG9zZVByb3h5Om51bGwsd2l0aFByb3h5Om51bGwscHJvdmlkZXM6Yz9jLnByb3ZpZGVzOk9iamVjdC5jcmVhdGUoSS5wcm92aWRlcyksYWNjZXNzQ2FjaGU6bnVsbCxyZW5kZXJDYWNoZTpbXSxjb21wb25lbnRzOm51bGwsZGlyZWN0aXZlczpudWxsLHByb3BzT3B0aW9uczpodChfLEkpLGVtaXRzT3B0aW9uczpMbyhfLEkpLGVtaXQ6bnVsbCxlbWl0dGVkOm51bGwscHJvcHNEZWZhdWx0czptLkVNUFRZX09CSixpbmhlcml0QXR0cnM6Xy5pbmhlcml0QXR0cnMsY3R4Om0uRU1QVFlfT0JKLGRhdGE6bS5FTVBUWV9PQkoscHJvcHM6bS5FTVBUWV9PQkosYXR0cnM6bS5FTVBUWV9PQkosc2xvdHM6bS5FTVBUWV9PQkoscmVmczptLkVNUFRZX09CSixzZXR1cFN0YXRlOm0uRU1QVFlfT0JKLHNldHVwQ29udGV4dDpudWxsLHN1c3BlbnNlOmgsc3VzcGVuc2VJZDpoP2gucGVuZGluZ0lkOjAsYXN5bmNEZXA6bnVsbCxhc3luY1Jlc29sdmVkOiExLGlzTW91bnRlZDohMSxpc1VubW91bnRlZDohMSxpc0RlYWN0aXZhdGVkOiExLGJjOm51bGwsYzpudWxsLGJtOm51bGwsbTpudWxsLGJ1Om51bGwsdTpudWxsLHVtOm51bGwsYnVtOm51bGwsZGE6bnVsbCxhOm51bGwscnRnOm51bGwscnRjOm51bGwsZWM6bnVsbCxzcDpudWxsfTtyZXR1cm4gQS5jdHg9a2woQSksQS5yb290PWM/Yy5yb290OkEsQS5lbWl0PV9vLmJpbmQobnVsbCxBKSxvLmNlJiZvLmNlKEEpLEF9dmFyIEJuPW51bGwsbW49KCk9PkJufHx5bix2aT1vPT57Qm49byxvLnNjb3BlLm9uKCl9LG1pPSgpPT57Qm4mJkJuLnNjb3BlLm9mZigpLEJuPW51bGx9LGFhPW0ubWFrZU1hcCgic2xvdCxjb21wb25lbnQiKTtmdW5jdGlvbiBmbChvLGMpe3ZhciBoPWMuaXNOYXRpdmVUYWd8fG0uTk87KGFhKG8pfHxoKG8pKSYmaWUoIkRvIG5vdCB1c2UgYnVpbHQtaW4gb3IgcmVzZXJ2ZWQgSFRNTCBlbGVtZW50cyBhcyBjb21wb25lbnQgaWQ6ICIrbyl9ZnVuY3Rpb24gVWEobyl7cmV0dXJuIG8udm5vZGUuc2hhcGVGbGFnJjR9ZC5pc0luU1NSQ29tcG9uZW50U2V0dXA9ITE7ZnVuY3Rpb24gVGkobyl7dmFyIGM9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOiExO2QuaXNJblNTUkNvbXBvbmVudFNldHVwPWM7dmFye3Byb3BzOmgsY2hpbGRyZW46X309by52bm9kZSxJPVVhKG8pO0hlKG8saCxJLGMpLExhKG8sXyk7dmFyIEE9ST9ZbyhvLGMpOnZvaWQgMDtyZXR1cm4gZC5pc0luU1NSQ29tcG9uZW50U2V0dXA9ITEsQX1mdW5jdGlvbiBZbyhvLGMpe3ZhciBoLF89by50eXBlO3tpZihfLm5hbWUmJmZsKF8ubmFtZSxvLmFwcENvbnRleHQuY29uZmlnKSxfLmNvbXBvbmVudHMpZm9yKHZhciBJPU9iamVjdC5rZXlzKF8uY29tcG9uZW50cyksQT0wO0E8SS5sZW5ndGg7QSsrKWZsKElbQV0sby5hcHBDb250ZXh0LmNvbmZpZyk7aWYoXy5kaXJlY3RpdmVzKWZvcih2YXIgeD1PYmplY3Qua2V5cyhfLmRpcmVjdGl2ZXMpLHo9MDt6PHgubGVuZ3RoO3orKykkcyh4W3pdKTtfLmNvbXBpbGVyT3B0aW9ucyYmc2MoKSYmaWUoJyJjb21waWxlck9wdGlvbnMiIGlzIG9ubHkgc3VwcG9ydGVkIHdoZW4gdXNpbmcgYSBidWlsZCBvZiBWdWUgdGhhdCBpbmNsdWRlcyB0aGUgcnVudGltZSBjb21waWxlci4gU2luY2UgeW91IGFyZSB1c2luZyBhIHJ1bnRpbWUtb25seSBidWlsZCwgdGhlIG9wdGlvbnMgc2hvdWxkIGJlIHBhc3NlZCB2aWEgeW91ciBidWlsZCB0b29sIGNvbmZpZyBpbnN0ZWFkLicpfW8uYWNjZXNzQ2FjaGU9T2JqZWN0LmNyZWF0ZShudWxsKSxvLnByb3h5PVIubWFya1JhdyhuZXcgUHJveHkoby5jdHgsT28pKSxIcyhvKTt2YXJ7c2V0dXA6SH09XztpZihIKXt2YXIgdGU9by5zZXR1cENvbnRleHQ9SC5sZW5ndGg+MT9sYyhvKTpudWxsO3ZpKG8pLFIucGF1c2VUcmFja2luZygpO3ZhciBQZT1IdChILG8sMCxbUi5zaGFsbG93UmVhZG9ubHkoby5wcm9wcyksdGVdKTtpZihSLnJlc2V0VHJhY2tpbmcoKSxtaSgpLG0uaXNQcm9taXNlKFBlKSl7aWYoUGUudGhlbihtaSxtaSksYylyZXR1cm4gUGUudGhlbihmZT0+e2RsKG8sZmUsYyl9KS5jYXRjaChmZT0+e1JyKGZlLG8sMCl9KTtpZihvLmFzeW5jRGVwPVBlLCFvLnN1c3BlbnNlKXt2YXIgZGU9KGg9Xy5uYW1lKSE9PW51bGwmJmghPT12b2lkIDA/aDoiQW5vbnltb3VzIjtpZSgiQ29tcG9uZW50IDwiLmNvbmNhdChkZSwiPjogc2V0dXAgZnVuY3Rpb24gcmV0dXJuZWQgYSBwcm9taXNlLCBidXQgbm8gIikrIjxTdXNwZW5zZT4gYm91bmRhcnkgd2FzIGZvdW5kIGluIHRoZSBwYXJlbnQgY29tcG9uZW50IHRyZWUuIEEgY29tcG9uZW50IHdpdGggYXN5bmMgc2V0dXAoKSBtdXN0IGJlIG5lc3RlZCBpbiBhIDxTdXNwZW5zZT4gaW4gb3JkZXIgdG8gYmUgcmVuZGVyZWQuIil9fWVsc2UgZGwobyxQZSxjKX1lbHNlIHBsKG8sYyl9ZnVuY3Rpb24gZGwobyxjLGgpe20uaXNGdW5jdGlvbihjKT9vLnR5cGUuX19zc3JJbmxpbmVSZW5kZXI/by5zc3JSZW5kZXI9YzpvLnJlbmRlcj1jOm0uaXNPYmplY3QoYyk/KG9hKGMpJiZpZSgic2V0dXAoKSBzaG91bGQgbm90IHJldHVybiBWTm9kZXMgZGlyZWN0bHkgLSByZXR1cm4gYSByZW5kZXIgZnVuY3Rpb24gaW5zdGVhZC4iKSxvLmRldnRvb2xzUmF3U2V0dXBTdGF0ZT1jLG8uc2V0dXBTdGF0ZT1SLnByb3h5UmVmcyhjKSxCYShvKSk6YyE9PXZvaWQgMCYmaWUoInNldHVwKCkgc2hvdWxkIHJldHVybiBhbiBvYmplY3QuIFJlY2VpdmVkOiAiLmNvbmNhdChjPT09bnVsbD8ibnVsbCI6dHlwZW9mIGMpKSxwbChvLGgpfXZhciBlcyx0cztmdW5jdGlvbiBobChvKXtlcz1vLHRzPWM9PntjLnJlbmRlci5fcmMmJihjLndpdGhQcm94eT1uZXcgUHJveHkoYy5jdHgseGEpKX19dmFyIHNjPSgpPT4hZXM7ZnVuY3Rpb24gcGwobyxjLGgpe3ZhciBfPW8udHlwZTtpZighby5yZW5kZXIpe2lmKCFjJiZlcyYmIV8ucmVuZGVyKXt2YXIgST1fLnRlbXBsYXRlfHxHKG8pLnRlbXBsYXRlO2lmKEkpe1dyKG8sImNvbXBpbGUiKTt2YXJ7aXNDdXN0b21FbGVtZW50OkEsY29tcGlsZXJPcHRpb25zOnh9PW8uYXBwQ29udGV4dC5jb25maWcse2RlbGltaXRlcnM6eixjb21waWxlck9wdGlvbnM6SH09Xyx0ZT1tLmV4dGVuZChtLmV4dGVuZCh7aXNDdXN0b21FbGVtZW50OkEsZGVsaW1pdGVyczp6fSx4KSxIKTtfLnJlbmRlcj1lcyhJLHRlKSxFcihvLCJjb21waWxlIil9fW8ucmVuZGVyPV8ucmVuZGVyfHxtLk5PT1AsdHMmJnRzKG8pfXZpKG8pLFIucGF1c2VUcmFja2luZygpLGJzKG8pLFIucmVzZXRUcmFja2luZygpLG1pKCksIV8ucmVuZGVyJiZvLnJlbmRlcj09PW0uTk9PUCYmIWMmJighZXMmJl8udGVtcGxhdGU/aWUoJ0NvbXBvbmVudCBwcm92aWRlZCB0ZW1wbGF0ZSBvcHRpb24gYnV0IHJ1bnRpbWUgY29tcGlsYXRpb24gaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJ1aWxkIG9mIFZ1ZS4gQ29uZmlndXJlIHlvdXIgYnVuZGxlciB0byBhbGlhcyAidnVlIiB0byAidnVlL2Rpc3QvdnVlLmVzbS1idW5kbGVyLmpzIi4nKTppZSgiQ29tcG9uZW50IGlzIG1pc3NpbmcgdGVtcGxhdGUgb3IgcmVuZGVyIGZ1bmN0aW9uLiIpKX1mdW5jdGlvbiBNbChvKXtyZXR1cm4gbmV3IFByb3h5KG8uYXR0cnMse2dldChjLGgpe3JldHVybiBCdCgpLFIudHJhY2sobywiZ2V0IiwiJGF0dHJzIiksY1toXX0sc2V0KCl7cmV0dXJuIGllKCJzZXR1cENvbnRleHQuYXR0cnMgaXMgcmVhZG9ubHkuIiksITF9LGRlbGV0ZVByb3BlcnR5KCl7cmV0dXJuIGllKCJzZXR1cENvbnRleHQuYXR0cnMgaXMgcmVhZG9ubHkuIiksITF9fSl9ZnVuY3Rpb24gbGMobyl7dmFyIGM9Xz0+e2lmKG8uZXhwb3NlZCYmaWUoImV4cG9zZSgpIHNob3VsZCBiZSBjYWxsZWQgb25seSBvbmNlIHBlciBzZXR1cCgpLiIpLF8hPW51bGwpe3ZhciBJPXR5cGVvZiBfO0k9PT0ib2JqZWN0IiYmKG0uaXNBcnJheShfKT9JPSJhcnJheSI6Ui5pc1JlZihfKSYmKEk9InJlZiIpKSxJIT09Im9iamVjdCImJmllKCJleHBvc2UoKSBzaG91bGQgYmUgcGFzc2VkIGEgcGxhaW4gb2JqZWN0LCByZWNlaXZlZCAiLmNvbmNhdChJLCIuIikpfW8uZXhwb3NlZD1ffHx7fX0saDtyZXR1cm4gT2JqZWN0LmZyZWV6ZSh7Z2V0IGF0dHJzKCl7cmV0dXJuIGh8fChoPU1sKG8pKX0sZ2V0IHNsb3RzKCl7cmV0dXJuIFIuc2hhbGxvd1JlYWRvbmx5KG8uc2xvdHMpfSxnZXQgZW1pdCgpe3JldHVybiBmdW5jdGlvbihfKXtmb3IodmFyIEk9YXJndW1lbnRzLmxlbmd0aCxBPW5ldyBBcnJheShJPjE/SS0xOjApLHg9MTt4PEk7eCsrKUFbeC0xXT1hcmd1bWVudHNbeF07cmV0dXJuIG8uZW1pdChfLC4uLkEpfX0sZXhwb3NlOmN9KX1mdW5jdGlvbiBQcyhvKXtpZihvLmV4cG9zZWQpcmV0dXJuIG8uZXhwb3NlUHJveHl8fChvLmV4cG9zZVByb3h5PW5ldyBQcm94eShSLnByb3h5UmVmcyhSLm1hcmtSYXcoby5leHBvc2VkKSkse2dldChjLGgpe2lmKGggaW4gYylyZXR1cm4gY1toXTtpZihoIGluIHlyKXJldHVybiB5cltoXShvKX0saGFzKGMsaCl7cmV0dXJuIGggaW4gY3x8aCBpbiB5cn19KSl9dmFyIE5zPS8oPzpefFstX10pKFx3KS9nLGNjPW89Pm8ucmVwbGFjZShOcyxjPT5jLnRvVXBwZXJDYXNlKCkpLnJlcGxhY2UoL1stX10vZywiIik7ZnVuY3Rpb24gbnMobyl7dmFyIGM9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOiEwO3JldHVybiBtLmlzRnVuY3Rpb24obyk/by5kaXNwbGF5TmFtZXx8by5uYW1lOm8ubmFtZXx8YyYmby5fX25hbWV9ZnVuY3Rpb24gU2EobyxjKXt2YXIgaD1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06ITEsXz1ucyhjKTtpZighXyYmYy5fX2ZpbGUpe3ZhciBJPWMuX19maWxlLm1hdGNoKC8oW14vXFxdKylcLlx3KyQvKTtJJiYoXz1JWzFdKX1pZighXyYmbyYmby5wYXJlbnQpe3ZhciBBPXg9Pntmb3IodmFyIHogaW4geClpZih4W3pdPT09YylyZXR1cm4gen07Xz1BKG8uY29tcG9uZW50c3x8by5wYXJlbnQudHlwZS5jb21wb25lbnRzKXx8QShvLmFwcENvbnRleHQuY29tcG9uZW50cyl9cmV0dXJuIF8/Y2MoXyk6aD8iQXBwIjoiQW5vbnltb3VzIn1mdW5jdGlvbiBrcyhvKXtyZXR1cm4gbS5pc0Z1bmN0aW9uKG8pJiYiX192Y2NPcHRzImluIG99dmFyIERsPShvLGMpPT5SLmNvbXB1dGVkKG8sYyxkLmlzSW5TU1JDb21wb25lbnRTZXR1cCksR3M9bz0+aWUoIiIuY29uY2F0KG8sIigpIGlzIGEgY29tcGlsZXItaGludCBoZWxwZXIgdGhhdCBpcyBvbmx5IHVzYWJsZSBpbnNpZGUgIikrIjxzY3JpcHQgc2V0dXA+IG9mIGEgc2luZ2xlIGZpbGUgY29tcG9uZW50LiBJdHMgYXJndW1lbnRzIHNob3VsZCBiZSBjb21waWxlZCBhd2F5IGFuZCBwYXNzaW5nIGl0IGF0IHJ1bnRpbWUgaGFzIG5vIGVmZmVjdC4iKTtmdW5jdGlvbiBnbCgpe3JldHVybiBHcygiZGVmaW5lUHJvcHMiKSxudWxsfWZ1bmN0aW9uIHVjKCl7cmV0dXJuIEdzKCJkZWZpbmVFbWl0cyIpLG51bGx9ZnVuY3Rpb24gemMobyl7R3MoImRlZmluZUV4cG9zZSIpfWZ1bmN0aW9uIGZjKG8sYyl7cmV0dXJuIEdzKCJ3aXRoRGVmYXVsdHMiKSxudWxsfWZ1bmN0aW9uIFdjKCl7cmV0dXJuIGRjKCkuc2xvdHN9ZnVuY3Rpb24gR2MoKXtyZXR1cm4gZGMoKS5hdHRyc31mdW5jdGlvbiBkYygpe3ZhciBvPW1uKCk7cmV0dXJuIG98fGllKCJ1c2VDb250ZXh0KCkgY2FsbGVkIHdpdGhvdXQgYWN0aXZlIGluc3RhbmNlLiIpLG8uc2V0dXBDb250ZXh0fHwoby5zZXR1cENvbnRleHQ9bGMobykpfWZ1bmN0aW9uIGhjKG8sYyl7dmFyIGg9bS5pc0FycmF5KG8pP28ucmVkdWNlKChBLHgpPT4oQVt4XT17fSxBKSx7fSk6bztmb3IodmFyIF8gaW4gYyl7dmFyIEk9aFtfXTtJP20uaXNBcnJheShJKXx8bS5pc0Z1bmN0aW9uKEkpP2hbX109e3R5cGU6SSxkZWZhdWx0OmNbX119OkkuZGVmYXVsdD1jW19dOkk9PT1udWxsP2hbX109e2RlZmF1bHQ6Y1tfXX06aWUoJ3Byb3BzIGRlZmF1bHQga2V5ICInLmNvbmNhdChfLCciIGhhcyBubyBjb3JyZXNwb25kaW5nIGRlY2xhcmF0aW9uLicpKX1yZXR1cm4gaH1mdW5jdGlvbiBwYyhvLGMpe3ZhciBoPXt9LF89ZnVuY3Rpb24oQSl7Yy5pbmNsdWRlcyhBKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGgsQSx7ZW51bWVyYWJsZTohMCxnZXQ6KCk9Pm9bQV19KX07Zm9yKHZhciBJIGluIG8pXyhJKTtyZXR1cm4gaH1mdW5jdGlvbiBZYyhvKXt2YXIgYz1tbigpO2N8fGllKCJ3aXRoQXN5bmNDb250ZXh0IGNhbGxlZCB3aXRob3V0IGFjdGl2ZSBjdXJyZW50IGluc3RhbmNlLiBUaGlzIGlzIGxpa2VseSBhIGJ1Zy4iKTt2YXIgaD1vKCk7cmV0dXJuIG1pKCksbS5pc1Byb21pc2UoaCkmJihoPWguY2F0Y2goXz0+e3Rocm93IHZpKGMpLF99KSksW2gsKCk9PnZpKGMpXX1mdW5jdGlvbiBxYyhvLGMsaCl7dmFyIF89YXJndW1lbnRzLmxlbmd0aDtyZXR1cm4gXz09PTI/bS5pc09iamVjdChjKSYmIW0uaXNBcnJheShjKT9vYShjKT9HbihvLG51bGwsW2NdKTpHbihvLGMpOkduKG8sbnVsbCxjKTooXz4zP2g9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpOl89PT0zJiZvYShoKSYmKGg9W2hdKSxHbihvLGMsaCkpfXZhciBMbD1TeW1ib2woInNzckNvbnRleHQiKSx2bD0oKT0+e3t2YXIgbz1hcihMbCk7cmV0dXJuIG98fGllKCJTZXJ2ZXIgcmVuZGVyaW5nIGNvbnRleHQgbm90IHByb3ZpZGVkLiBNYWtlIHN1cmUgdG8gb25seSBjYWxsIHVzZVNTUkNvbnRleHQoKSBjb25kaXRpb25hbGx5IGluIHRoZSBzZXJ2ZXIgYnVpbGQuIiksb319O2Z1bmN0aW9uIFJzKG8pe3JldHVybiEhKG8mJm8uX192X2lzU2hhbGxvdyl9ZnVuY3Rpb24gbmkoKXtpZih0eXBlb2Ygd2luZG93PT0idW5kZWZpbmVkIilyZXR1cm47dmFyIG89e3N0eWxlOiJjb2xvcjojM2JhNzc2In0sYz17c3R5bGU6ImNvbG9yOiMwYjFiYzkifSxoPXtzdHlsZToiY29sb3I6I2I2MmUyNCJ9LF89e3N0eWxlOiJjb2xvcjojOWQyODhjIn0sST17aGVhZGVyKGRlKXtyZXR1cm4gbS5pc09iamVjdChkZSk/ZGUuX19pc1Z1ZT9bImRpdiIsbywiVnVlSW5zdGFuY2UiXTpSLmlzUmVmKGRlKT9bImRpdiIse30sWyJzcGFuIixvLFBlKGRlKV0sIjwiLHooZGUudmFsdWUpLCI+Il06Ui5pc1JlYWN0aXZlKGRlKT9bImRpdiIse30sWyJzcGFuIixvLFJzKGRlKT8iU2hhbGxvd1JlYWN0aXZlIjoiUmVhY3RpdmUiXSwiPCIseihkZSksIj4iLmNvbmNhdChSLmlzUmVhZG9ubHkoZGUpPyIgKHJlYWRvbmx5KSI6IiIpXTpSLmlzUmVhZG9ubHkoZGUpP1siZGl2Iix7fSxbInNwYW4iLG8sUnMoZGUpPyJTaGFsbG93UmVhZG9ubHkiOiJSZWFkb25seSJdLCI8Iix6KGRlKSwiPiJdOm51bGw6bnVsbH0saGFzQm9keShkZSl7cmV0dXJuIGRlJiZkZS5fX2lzVnVlfSxib2R5KGRlKXtpZihkZSYmZGUuX19pc1Z1ZSlyZXR1cm5bImRpdiIse30sLi4uQShkZS4kKV19fTtmdW5jdGlvbiBBKGRlKXt2YXIgZmU9W107ZGUudHlwZS5wcm9wcyYmZGUucHJvcHMmJmZlLnB1c2goeCgicHJvcHMiLFIudG9SYXcoZGUucHJvcHMpKSksZGUuc2V0dXBTdGF0ZSE9PW0uRU1QVFlfT0JKJiZmZS5wdXNoKHgoInNldHVwIixkZS5zZXR1cFN0YXRlKSksZGUuZGF0YSE9PW0uRU1QVFlfT0JKJiZmZS5wdXNoKHgoImRhdGEiLFIudG9SYXcoZGUuZGF0YSkpKTt2YXIgVWU9SChkZSwiY29tcHV0ZWQiKTtVZSYmZmUucHVzaCh4KCJjb21wdXRlZCIsVWUpKTt2YXIgSmU9SChkZSwiaW5qZWN0Iik7cmV0dXJuIEplJiZmZS5wdXNoKHgoImluamVjdGVkIixKZSkpLGZlLnB1c2goWyJkaXYiLHt9LFsic3BhbiIse3N0eWxlOl8uc3R5bGUrIjtvcGFjaXR5OjAuNjYifSwiJCAoaW50ZXJuYWwpOiAiXSxbIm9iamVjdCIse29iamVjdDpkZX1dXSksZmV9ZnVuY3Rpb24geChkZSxmZSl7cmV0dXJuIGZlPW0uZXh0ZW5kKHt9LGZlKSxPYmplY3Qua2V5cyhmZSkubGVuZ3RoP1siZGl2Iix7c3R5bGU6ImxpbmUtaGVpZ2h0OjEuMjVlbTttYXJnaW4tYm90dG9tOjAuNmVtIn0sWyJkaXYiLHtzdHlsZToiY29sb3I6IzQ3NjU4MiJ9LGRlXSxbImRpdiIse3N0eWxlOiJwYWRkaW5nLWxlZnQ6MS4yNWVtIn0sLi4uT2JqZWN0LmtleXMoZmUpLm1hcChVZT0+WyJkaXYiLHt9LFsic3BhbiIsXyxVZSsiOiAiXSx6KGZlW1VlXSwhMSldKV1dOlsic3BhbiIse31dfWZ1bmN0aW9uIHooZGUpe3ZhciBmZT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06ITA7cmV0dXJuIHR5cGVvZiBkZT09Im51bWJlciI/WyJzcGFuIixjLGRlXTp0eXBlb2YgZGU9PSJzdHJpbmciP1sic3BhbiIsaCxKU09OLnN0cmluZ2lmeShkZSldOnR5cGVvZiBkZT09ImJvb2xlYW4iP1sic3BhbiIsXyxkZV06bS5pc09iamVjdChkZSk/WyJvYmplY3QiLHtvYmplY3Q6ZmU/Ui50b1JhdyhkZSk6ZGV9XTpbInNwYW4iLGgsU3RyaW5nKGRlKV19ZnVuY3Rpb24gSChkZSxmZSl7dmFyIFVlPWRlLnR5cGU7aWYoIW0uaXNGdW5jdGlvbihVZSkpe3ZhciBKZT17fTtmb3IodmFyIGd0IGluIGRlLmN0eCl0ZShVZSxndCxmZSkmJihKZVtndF09ZGUuY3R4W2d0XSk7cmV0dXJuIEplfX1mdW5jdGlvbiB0ZShkZSxmZSxVZSl7dmFyIEplPWRlW1VlXTtpZihtLmlzQXJyYXkoSmUpJiZKZS5pbmNsdWRlcyhmZSl8fG0uaXNPYmplY3QoSmUpJiZmZSBpbiBKZXx8ZGUuZXh0ZW5kcyYmdGUoZGUuZXh0ZW5kcyxmZSxVZSl8fGRlLm1peGlucyYmZGUubWl4aW5zLnNvbWUoZ3Q9PnRlKGd0LGZlLFVlKSkpcmV0dXJuITB9ZnVuY3Rpb24gUGUoZGUpe3JldHVybiBScyhkZSk/IlNoYWxsb3dSZWYiOmRlLmVmZmVjdD8iQ29tcHV0ZWRSZWYiOiJSZWYifXdpbmRvdy5kZXZ0b29sc0Zvcm1hdHRlcnM/d2luZG93LmRldnRvb2xzRm9ybWF0dGVycy5wdXNoKEkpOndpbmRvdy5kZXZ0b29sc0Zvcm1hdHRlcnM9W0ldfWZ1bmN0aW9uIElvKG8sYyxoLF8pe3ZhciBJPWhbX107aWYoSSYmRmwoSSxvKSlyZXR1cm4gSTt2YXIgQT1jKCk7cmV0dXJuIEEubWVtbz1vLnNsaWNlKCksaFtfXT1BfWZ1bmN0aW9uIEZsKG8sYyl7dmFyIGg9by5tZW1vO2lmKGgubGVuZ3RoIT1jLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIF89MDtfPGgubGVuZ3RoO18rKylpZihtLmhhc0NoYW5nZWQoaFtfXSxjW19dKSlyZXR1cm4hMTtyZXR1cm4gQWk+MCYmV24mJlduLnB1c2gobyksITB9dmFyIHFvPSIzLjIuNDciLG1sPW51bGwscnM9bnVsbCxLYz17aW5zZXJ0OihvLGMsaCk9Pmg/Yy5pbnNlcnRCZWZvcmUobyxoKTpjLmFwcGVuZENoaWxkKG8pLHJlbW92ZTpvPT57dmFyIGM9by5wYXJlbnROb2RlO2MmJmMucmVtb3ZlQ2hpbGQobyl9LGNyZWF0ZUVsZW1lbnQ6bz0+bC5jcmVhdGVFbGVtZW50KG8pLGNyZWF0ZVRleHQ6bz0+bC5jcmVhdGVUZXh0KG8pLGNyZWF0ZUNvbW1lbnQ6bz0+bC5jcmVhdGVDb21tZW50KG8pLHNldFRleHQ6KG8sYyk9PntvLnNldEF0dHIoInZhbHVlIixjKX0sc2V0RWxlbWVudFRleHQ6KG8sYyk9PntvLnNldEF0dHIoInZhbHVlIixjKX0scGFyZW50Tm9kZTpvPT5vLnBhcmVudE5vZGUsbmV4dFNpYmxpbmc6bz0+by5uZXh0U2libGluZ307ZnVuY3Rpb24gWXMobyl7cmV0dXJuIE9iamVjdC5rZXlzKG8pfWZ1bmN0aW9uIHNhKG8pe3ZhciBjPXt9O3JldHVybiBtLmlzQXJyYXkobykmJm8uZm9yRWFjaChoPT57WXMoaCkuZm9yRWFjaChfPT57dmFyIEk9aFtfXSxBPWNbX118fChjW19dPXt9KTtZcyhJKS5mb3JFYWNoKHg9Pnt2YXIgej1JW3hdLEg9QVt4XXx8KEFbeF09e30pO1lzKHopLmZvckVhY2godGU9Pnt0ZVswXT09PSIhIj8oSFt0ZV09elt0ZV0sZGVsZXRlIEhbdGUuc2xpY2UoMSldKTptLmhhc093bihILCIhIit0ZSl8fChIW3RlXT16W3RlXSl9KX0pfSl9KSxjfWZ1bmN0aW9uIHFzKG8sYyl7dmFyIGg9YyYmYy5jbGFzc0xpc3Q7cmV0dXJuIGgmJmguaW5jbHVkZXMobyl9dmFyIEtvPS9bK34+IF0kLyxLcz0icGFyZW50Tm9kZSIsWWk9InByZXZpb3VzU2libGluZyI7ZnVuY3Rpb24gZ2MobyxjKXtmb3IodmFyIGg9by5zcGxpdCgiLiIpLF89aC5sZW5ndGgtMTtfPjA7Xy0tKXt2YXIgST1oW19dLEE9SVtJLmxlbmd0aC0xXSx4PUkucmVwbGFjZShLbywiIik7aWYoQT09PSJ+Inx8QT09PSIgIil7Zm9yKHZhciB6PUE9PT0ifiI/WWk6S3M7YyYmKGM9Y1t6XSwhcXMoeCxjKSk7KTtpZighYylyZXR1cm4hMX1lbHNlIGlmKEE9PT0iPiI/Yz1jJiZjW0tzXTpBPT09IisiJiYoYz1jJiZjW1lpXSksIXFzKHgsYykpcmV0dXJuITF9cmV0dXJuITB9dmFyIFZsPTFlMztmdW5jdGlvbiBKYyhvLGMsaCl7dmFye3N0eWxlczpfLHdlaWdodHM6SX09bztZcyhjKS5mb3JFYWNoKEE9PntpZighKEEmJmgmJiFnYyhBLGgpKSl7dmFyIHg9QS5zcGxpdCgiLiIpLmxlbmd0aCx6PWNbQV07WXMoeikuZm9yRWFjaChIPT57dmFyIHRlPXpbSF0sUGU9SFswXT09PSIhIjtQZSYmKEg9SC5zbGljZSgxKSk7dmFyIGRlPUlbSF18fDAsZmU9eCsoUGU/Vmw6MCk7ZmU+PWRlJiYoSVtIXT1mZSxfW0hdPXRlKX0pfX0pfWZ1bmN0aW9uIHZjKG8sYyl7dmFyIGg9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOm51bGwsXz17c3R5bGVzOnt9LHdlaWdodHM6e319O3JldHVybiBvLmZvckVhY2goST0+e3ZhciBBPWNbSV07QSYmSmMoXyxBLGgpfSksXy5zdHlsZXN9ZnVuY3Rpb24gSnMobyl7cmV0dXJuIHZjKG8uY2xhc3NMaXN0LG8uc3R5bGVTaGVldCxvKX1mdW5jdGlvbiBtYyhvLGMpe3ZhciBoPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTpudWxsO3JldHVybiB2YyhvLF9jKGMpLGgpfWZ1bmN0aW9uIF9jKG8pe3Zhcnt0eXBlOmMsYXBwQ29udGV4dDpofT1vLF89YztpZighXy5fX3N0eWxlcylpZihoJiZtLmlzQXJyYXkoaC5wcm92aWRlcy5fX2dsb2JhbFN0eWxlcykmJihoLnByb3ZpZGVzLl9fZ2xvYmFsU3R5bGVzPXNhKGgucHJvdmlkZXMuX19nbG9iYWxTdHlsZXMpKSxfLm1wVHlwZT09PSJwYWdlIiYmaClfLl9fc3R5bGVzPWgucHJvdmlkZXMuX19nbG9iYWxTdHlsZXM7ZWxzZXt2YXIgST1bXTtoJiZJLnB1c2goaC5wcm92aWRlcy5fX2dsb2JhbFN0eWxlcyksbS5pc0FycmF5KF8uc3R5bGVzKSYmXy5zdHlsZXMuZm9yRWFjaChBPT5JLnB1c2goQSkpLF8uX19zdHlsZXM9c2EoSSl9cmV0dXJuIF8uX19zdHlsZXN9ZnVuY3Rpb24gYmMobyxjLGgpe3ZhciBfPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTpudWxsO18mJihbYyxoXT1IYShvLGMsaCxfKSksby5zZXRBdHRyKGMsaCl9dmFyICRsPSJob3ZlckNsYXNzIixacz0icGxhY2Vob2xkZXJDbGFzcyIseWM9InBsYWNlaG9sZGVyU3R5bGUiLFpjPSJpbmRpY2F0b3JDbGFzcyIsWGM9ImluZGljYXRvclN0eWxlIixRYz0ibWFza0NsYXNzIixVbD0ibWFza1N0eWxlIixfbD17dmlldzp7Y2xhc3M6WyRsXSxzdHlsZTpbXX0sYnV0dG9uOntjbGFzczpbJGxdLHN0eWxlOltdfSxuYXZpZ2F0b3I6e2NsYXNzOlskbF0sc3R5bGU6W119LCJ1LWlucHV0Ijp7Y2xhc3M6W1pzXSxzdHlsZTpbeWNdfSwidS10ZXh0YXJlYSI6e2NsYXNzOltac10sc3R5bGU6W3ljXX0sInBpY2tlci12aWV3Ijp7Y2xhc3M6W1pjLFFjXSxzdHlsZTpbWGMsVWxdfX07ZnVuY3Rpb24gSGEobyxjLGgsXyl7aWYoIWgpcmV0dXJuW2MsaF07dmFyIEk9X2xbby50eXBlXTtpZihJKXt2YXIgQT1tLmNhbWVsaXplKGMpO2lmKEkuY2xhc3MuaW5kZXhPZihBKT4tMSlyZXR1cm5bQSxtYyhbaF0sXyxvKV07aWYoSS5zdHlsZS5pbmRleE9mKGMpPi0xKXJldHVybiBtLmlzU3RyaW5nKGgpP1tBLG0ucGFyc2VTdHJpbmdTdHlsZShoKV06W0EsbS5ub3JtYWxpemVTdHlsZShoKV19cmV0dXJuW2MsaF19ZnVuY3Rpb24gWHMobyxjLGgpe3ZhciBfPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTpudWxsO2lmKCEhXyl7dmFyIEk9aD9oLnNwbGl0KCIgIik6W107by5zZXRDbGFzc0xpc3QoSSksby5zZXRTdHlsZVNoZWV0KF9jKF8pKX19ZnVuY3Rpb24gSGwobyxjLGgsXyl7by5hZGRFdmVudChjLGgpfWZ1bmN0aW9uIEVjKG8sYyl7by5yZW1vdmVFdmVudChjKX1mdW5jdGlvbiBkbihvLGMsaCxfKXt2YXIgST1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06bnVsbCxBPW8uX3ZlaXx8KG8uX3ZlaT17fSkseD1BW2NdO2lmKF8mJngpeC52YWx1ZT1fO2Vsc2V7dmFyW3osSF09d2MoYyk7aWYoXyl7dmFyIHRlPUFbY109YmwoXyxJKTtIbChvLHosdGUpfWVsc2UgeCYmKEVjKG8seiksQVtjXT12b2lkIDApfX12YXIgSWk9Lyg/Ok9uY2V8UGFzc2l2ZXxDYXB0dXJlKSQvO2Z1bmN0aW9uIFBvKG8pe3JldHVybiBvPT09Im9uLXBvc3QtbWVzc2FnZSI/Im9uUG9zdE1lc3NhZ2UiOm99ZnVuY3Rpb24gd2Mobyl7dmFyIGM7aWYoSWkudGVzdChvKSl7Yz17fTtmb3IodmFyIGg7aD1vLm1hdGNoKElpKTspbz1vLnNsaWNlKDAsby5sZW5ndGgtaFswXS5sZW5ndGgpLGNbaFswXS50b0xvd2VyQ2FzZSgpXT0hMH12YXIgXz1vWzJdPT09IjoiP28uc2xpY2UoMyk6by5zbGljZSgyKTtyZXR1cm5bUG8obS5oeXBoZW5hdGUoXykpLGNdfWZ1bmN0aW9uIGJsKG8sYyl7dmFyIGg9ST0+e0luKGgudmFsdWUsYyw1LFtJXSl9O2gudmFsdWU9bzt2YXIgXz1uZXcgU2V0O3JldHVybiBtLmlzQXJyYXkoaC52YWx1ZSk/aC52YWx1ZS5mb3JFYWNoKEk9PntJLm1vZGlmaWVycyYmSS5tb2RpZmllcnMuZm9yRWFjaChBPT57Xy5hZGQoQSl9KX0pOihoLnZhbHVlLm1vZGlmaWVycyYmaC52YWx1ZS5tb2RpZmllcnMuZm9yRWFjaChJPT57Xy5hZGQoSSl9KSxRcyhoLGMpKSxoLm1vZGlmaWVycz1bLi4uX10saH1mdW5jdGlvbiBRcyhvLGMpe2lmKCEhYyl7dmFyeyR3eHNNb2R1bGVzOmh9PWM7aWYoISFoKXt2YXIgXz1vLnZhbHVlLnRvU3RyaW5nKCk7IWguZmluZChJPT5fLmluZGV4T2YoIi4iK0krIi4iKT4tMSl8fChvLnd4c0V2ZW50PW8udmFsdWUoKSl9fX1mdW5jdGlvbiB5bChvLGMsaCl7aWYoISFoKXttLmlzU3RyaW5nKGgpJiYoaD1tLnBhcnNlU3RyaW5nU3R5bGUoaCkpO3ZhciBfPXt9LEk9YyYmIW0uaXNTdHJpbmcoYyk7aWYoSSl7Zm9yKHZhciBBIGluIGMpaFtBXT09bnVsbCYmKF9bbS5jYW1lbGl6ZShBKV09IiIpO2Zvcih2YXIgeCBpbiBoKXt2YXIgej1oW3hdO3ohPT1jW3hdJiYoX1ttLmNhbWVsaXplKHgpXT16KX19ZWxzZSBmb3IodmFyIEggaW4gaClfW20uY2FtZWxpemUoSCldPWhbSF07by5zZXRTdHlsZXMoXyl9fXZhciBObz1bInUtaW5wdXQiLCJ1LXRleHRhcmVhIl0sbGE9ZnVuY3Rpb24obyxjLGgsXyl7dmFyIEk9YXJndW1lbnRzLmxlbmd0aD42P2FyZ3VtZW50c1s2XTp2b2lkIDAsQT1hcmd1bWVudHMubGVuZ3RoPjk/YXJndW1lbnRzWzldOnZvaWQgMDtjPT09ImNsYXNzIj9YcyhvLGgsXyxBfHxJKTpjPT09InN0eWxlIj95bChvLGgsXyk6bS5pc09uKGMpP20uaXNNb2RlbExpc3RlbmVyKGMpfHxkbihvLGMsaCxfLEkpOmM9PT0ibW9kZWxWYWx1ZSImJk5vLmluY2x1ZGVzKG8udHlwZSk/by5zZXRBdHRycyh7bW9kZWxWYWx1ZTpfLHZhbHVlOl99KTpiYyhvLGMsXyxJKX07ZnVuY3Rpb24gamEoKXt2YXIgbz1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXZvaWQgMD9hcmd1bWVudHNbMF06IiRzdHlsZSI7e3ZhciBjPW1uKCk7aWYoIWMpcmV0dXJuIGllKCJ1c2VDc3NNb2R1bGUgbXVzdCBiZSBjYWxsZWQgaW5zaWRlIHNldHVwKCkiKSxtLkVNUFRZX09CSjt2YXIgaD1jLnR5cGUuX19jc3NNb2R1bGVzO2lmKCFoKXJldHVybiBpZSgiQ3VycmVudCBpbnN0YW5jZSBkb2VzIG5vdCBoYXZlIENTUyBtb2R1bGVzIGluamVjdGVkLiIpLG0uRU1QVFlfT0JKO3ZhciBfPWhbb107cmV0dXJuIF98fChpZSgnQ3VycmVudCBpbnN0YW5jZSBkb2VzIG5vdCBoYXZlIENTUyBtb2R1bGUgbmFtZWQgIicuY29uY2F0KG8sJyIuJykpLG0uRU1QVFlfT0JKKX19ZnVuY3Rpb24gZWwobyl7dmFyIGM9bW4oKTtpZighYyl7aWUoInVzZUNzc1ZhcnMgaXMgY2FsbGVkIHdpdGhvdXQgY3VycmVudCBhY3RpdmUgY29tcG9uZW50IGluc3RhbmNlLiIpO3JldHVybn12YXIgaD0oKT0+dnIoYy5zdWJUcmVlLG8oYy5wcm94eSkpO2lvKCgpPT5WbihoLHtmbHVzaDoicG9zdCJ9KSksbmEoaCl9ZnVuY3Rpb24gdnIobyxjKXtpZihvLnNoYXBlRmxhZyYxMjgpe3ZhciBoPW8uc3VzcGVuc2U7bz1oLmFjdGl2ZUJyYW5jaCxoLnBlbmRpbmdCcmFuY2gmJiFoLmlzSHlkcmF0aW5nJiZoLmVmZmVjdHMucHVzaCgoKT0+e3ZyKGguYWN0aXZlQnJhbmNoLGMpfSl9Zm9yKDtvLmNvbXBvbmVudDspbz1vLmNvbXBvbmVudC5zdWJUcmVlO2lmKG8uc2hhcGVGbGFnJjEmJm8uZWwpe3ZhciBfPW8uZWwuc3R5bGU7Zm9yKHZhciBJIGluIGMpXy5zZXRQcm9wZXJ0eSgiLS0iLmNvbmNhdChJKSxjW0ldKX1lbHNlIG8udHlwZT09PXl0JiZvLmNoaWxkcmVuLmZvckVhY2goQT0+dnIoQSxjKSl9dmFyIHhzPVsiY3RybCIsInNoaWZ0IiwiYWx0IiwibWV0YSJdLHphPXtzdG9wOm89Pm8uc3RvcFByb3BhZ2F0aW9uKCkscHJldmVudDpvPT5vLnByZXZlbnREZWZhdWx0KCksc2VsZjpvPT5vLnRhcmdldCE9PW8uY3VycmVudFRhcmdldCxjdHJsOm89PiFvLmN0cmxLZXksc2hpZnQ6bz0+IW8uc2hpZnRLZXksYWx0Om89PiFvLmFsdEtleSxtZXRhOm89PiFvLm1ldGFLZXksbGVmdDpvPT4iYnV0dG9uImluIG8mJm8uYnV0dG9uIT09MCxtaWRkbGU6bz0+ImJ1dHRvbiJpbiBvJiZvLmJ1dHRvbiE9PTEscmlnaHQ6bz0+ImJ1dHRvbiJpbiBvJiZvLmJ1dHRvbiE9PTIsZXhhY3Q6KG8sYyk9PnhzLnNvbWUoaD0+b1siIi5jb25jYXQoaCwiS2V5IildJiYhYy5pbmNsdWRlcyhoKSl9LGlzPShvLGMpPT5mdW5jdGlvbihoKXtmb3IodmFyIF89MDtfPGMubGVuZ3RoO18rKyl7dmFyIEk9emFbY1tfXV07aWYoSSYmSShoLGMpKXJldHVybn1mb3IodmFyIEE9YXJndW1lbnRzLmxlbmd0aCx4PW5ldyBBcnJheShBPjE/QS0xOjApLHo9MTt6PEE7eisrKXhbei0xXT1hcmd1bWVudHNbel07cmV0dXJuIG8oaCwuLi54KX0sU2M9KG8sYyk9Pmg9PntpZigia2V5ImluIGgpe3ZhciBfPW0uaHlwaGVuYXRlKGgua2V5KTtpZihjLnNvbWUoST0+ST09PV8pKXJldHVybiBvKGgpfX0sQ2E9bS5leHRlbmQoe3BhdGNoUHJvcDpsYX0sS2MpLEVsO2Z1bmN0aW9uIGNhKCl7cmV0dXJuIEVsfHwoRWw9UHIoQ2EpKX12YXIgV2E9ZnVuY3Rpb24oKXtjYSgpLnJlbmRlciguLi5hcmd1bWVudHMpfSxyaT1mdW5jdGlvbigpe3ZhciBvPWNhKCkuY3JlYXRlQXBwKC4uLmFyZ3VtZW50cykse21vdW50OmN9PW87cmV0dXJuIG8ubW91bnQ9aD0+YyhoKSxvfTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsImNhbWVsaXplIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5jYW1lbGl6ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiY2FwaXRhbGl6ZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uY2FwaXRhbGl6ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiaHlwaGVuYXRlIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5oeXBoZW5hdGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsIm5vcm1hbGl6ZUNsYXNzIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5ub3JtYWxpemVDbGFzc319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwibm9ybWFsaXplUHJvcHMiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBtLm5vcm1hbGl6ZVByb3BzfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJub3JtYWxpemVTdHlsZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0ubm9ybWFsaXplU3R5bGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsInRvRGlzcGxheVN0cmluZyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0udG9EaXNwbGF5U3RyaW5nfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJ0b0hhbmRsZXJLZXkiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBtLnRvSGFuZGxlcktleX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiRWZmZWN0U2NvcGUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLkVmZmVjdFNjb3BlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJSZWFjdGl2ZUVmZmVjdCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuUmVhY3RpdmVFZmZlY3R9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsImN1c3RvbVJlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuY3VzdG9tUmVmfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJlZmZlY3QiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLmVmZmVjdH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiZWZmZWN0U2NvcGUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLmVmZmVjdFNjb3BlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJnZXRDdXJyZW50U2NvcGUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLmdldEN1cnJlbnRTY29wZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiaXNQcm94eSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuaXNQcm94eX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiaXNSZWFjdGl2ZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuaXNSZWFjdGl2ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiaXNSZWFkb25seSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuaXNSZWFkb25seX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwiaXNSZWYiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLmlzUmVmfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJpc1NoYWxsb3ciLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLmlzU2hhbGxvd319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwibWFya1JhdyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIubWFya1Jhd319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwib25TY29wZURpc3Bvc2UiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLm9uU2NvcGVEaXNwb3NlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJwcm94eVJlZnMiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnByb3h5UmVmc319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwicmVhY3RpdmUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnJlYWN0aXZlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJyZWFkb25seSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIucmVhZG9ubHl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsInJlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIucmVmfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJzaGFsbG93UmVhY3RpdmUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnNoYWxsb3dSZWFjdGl2ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwic2hhbGxvd1JlYWRvbmx5Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUi5zaGFsbG93UmVhZG9ubHl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsInNoYWxsb3dSZWYiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnNoYWxsb3dSZWZ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsInN0b3AiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnN0b3B9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsInRvUmF3Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUi50b1Jhd319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwidG9SZWYiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnRvUmVmfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJ0b1JlZnMiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnRvUmVmc319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwidHJpZ2dlclJlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIudHJpZ2dlclJlZn19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZCwidW5yZWYiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLnVucmVmfX0pLGQuQmFzZVRyYW5zaXRpb249JG8sZC5CYXNlVHJhbnNpdGlvblByb3BzVmFsaWRhdG9ycz1EcixkLkNvbW1lbnQ9THQsZC5GcmFnbWVudD15dCxkLktlZXBBbGl2ZT11ZSxkLlN0YXRpYz1lbixkLlN1c3BlbnNlPW9uLGQuVGVsZXBvcnQ9emUsZC5UZXh0PWt0LGQuYXNzZXJ0TnVtYmVyPUxuLGQuY2FsbFdpdGhBc3luY0Vycm9ySGFuZGxpbmc9SW4sZC5jYWxsV2l0aEVycm9ySGFuZGxpbmc9SHQsZC5jbG9uZVZOb2RlPXppLGQuY29tcGF0VXRpbHM9cnMsZC5jb21wdXRlZD1EbCxkLmNyZWF0ZUFwcD1yaSxkLmNyZWF0ZUJsb2NrPVJsLGQuY3JlYXRlQ29tbWVudFZOb2RlPWpjLGQuY3JlYXRlRWxlbWVudEJsb2NrPWFjLGQuY3JlYXRlRWxlbWVudFZOb2RlPVZhLGQuY3JlYXRlSHlkcmF0aW9uUmVuZGVyZXI9RmEsZC5jcmVhdGVQcm9wc1Jlc3RQcm94eT1wYyxkLmNyZWF0ZVJlbmRlcmVyPVByLGQuY3JlYXRlU2xvdHM9UmEsZC5jcmVhdGVTdGF0aWNWTm9kZT1JcyxkLmNyZWF0ZVRleHRWTm9kZT1UcyxkLmNyZWF0ZVZOb2RlPUduLGQuZGVmaW5lQXN5bmNDb21wb25lbnQ9aGUsZC5kZWZpbmVDb21wb25lbnQ9dmUsZC5kZWZpbmVFbWl0cz11YyxkLmRlZmluZUV4cG9zZT16YyxkLmRlZmluZVByb3BzPWdsLGQuZ2V0Q3VycmVudEluc3RhbmNlPW1uLGQuZ2V0VHJhbnNpdGlvblJhd0NoaWxkcmVuPVosZC5ndWFyZFJlYWN0aXZlUHJvcHM9eGwsZC5oPXFjLGQuaGFuZGxlRXJyb3I9UnIsZC5pbml0Q3VzdG9tRm9ybWF0dGVyPW5pLGQuaW5qZWN0PWFyLGQuaW5qZWN0SG9vaz1ybyxkLmlzTWVtb1NhbWU9RmwsZC5pc1J1bnRpbWVPbmx5PXNjLGQuaXNWTm9kZT1vYSxkLm1lcmdlRGVmYXVsdHM9aGMsZC5tZXJnZVByb3BzPSRhLGQubmV4dFRpY2s9cm4sZC5vbkFjdGl2YXRlZD1sdCxkLm9uQmVmb3JlTW91bnQ9Z2ksZC5vbkJlZm9yZVVubW91bnQ9UW4sZC5vbkJlZm9yZVVwZGF0ZT1vbyxkLm9uRGVhY3RpdmF0ZWQ9enQsZC5vbkVycm9yQ2FwdHVyZWQ9VnMsZC5vbk1vdW50ZWQ9aW8sZC5vblJlbmRlclRyYWNrZWQ9enIsZC5vblJlbmRlclRyaWdnZXJlZD1OYSxkLm9uU2VydmVyUHJlZmV0Y2g9UGEsZC5vblVubW91bnRlZD1GcixkLm9uVXBkYXRlZD1uYSxkLm9wZW5CbG9jaz1ncixkLnBhcnNlQ2xhc3NMaXN0PW1jLGQucGFyc2VDbGFzc1N0eWxlcz1KcyxkLnBvcFNjb3BlSWQ9cWEsZC5wcm92aWRlPVpuLGQucHVzaFNjb3BlSWQ9Rm8sZC5xdWV1ZVBvc3RGbHVzaENiPXhpLGQucmVnaXN0ZXJSdW50aW1lQ29tcGlsZXI9aGwsZC5yZW5kZXI9V2EsZC5yZW5kZXJMaXN0PWFsLGQucmVuZGVyU2xvdD1zbCxkLnJlc29sdmVDb21wb25lbnQ9TmwsZC5yZXNvbHZlRGlyZWN0aXZlPXZzLGQucmVzb2x2ZUR5bmFtaWNDb21wb25lbnQ9b2wsZC5yZXNvbHZlRmlsdGVyPW1sLGQucmVzb2x2ZVRyYW5zaXRpb25Ib29rcz1DaSxkLnNldEJsb2NrVHJhY2tpbmc9d2EsZC5zZXREZXZ0b29sc0hvb2s9RG4sZC5zZXRUcmFuc2l0aW9uSG9va3M9TSxkLnNzckNvbnRleHRLZXk9TGwsZC50b0hhbmRsZXJzPVVzLGQudHJhbnNmb3JtVk5vZGVBcmdzPVFhLGQudXNlQXR0cnM9R2MsZC51c2VDc3NNb2R1bGU9amEsZC51c2VDc3NTdHlsZXM9c2EsZC51c2VDc3NWYXJzPWVsLGQudXNlU1NSQ29udGV4dD12bCxkLnVzZVNsb3RzPVdjLGQudXNlVHJhbnNpdGlvblN0YXRlPUxpLGQudmVyc2lvbj1xbyxkLndhcm49aWUsZC53YXRjaD13aSxkLndhdGNoRWZmZWN0PVZuLGQud2F0Y2hQb3N0RWZmZWN0PVhyLGQud2F0Y2hTeW5jRWZmZWN0PWRpLGQud2l0aEFzeW5jQ29udGV4dD1ZYyxkLndpdGhDdHg9b3IsZC53aXRoRGVmYXVsdHM9ZmMsZC53aXRoRGlyZWN0aXZlcz1pbCxkLndpdGhLZXlzPVNjLGQud2l0aE1lbW89SW8sZC53aXRoTW9kaWZpZXJzPWlzLGQud2l0aFNjb3BlSWQ9Sm4sT2JqZWN0LmRlZmluZVByb3BlcnR5KGQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGR9KHt9LFQsayxiKTtyZXR1cm4gQy5fX1RZUEVfXz0ibnZ1ZSIsQ312YXIgS2c9dFAoYVApO3ZhciB3dT17fTtKSSh3dSx7RU1QVFlfQVJSOigpPT55UCxFTVBUWV9PQko6KCk9PmJQLE5POigpPT53UCxOT09QOigpPT5FUCxjYW1lbGl6ZTooKT0+RFAsY2FwaXRhbGl6ZTooKT0+bGYsZGVmOigpPT5VUCxleHRlbmQ6KCk9PmtpLGdldEdsb2JhbFRoaXM6KCk9PnpQLGhhc0NoYW5nZWQ6KCk9PlZQLGhhc093bjooKT0+WmwsaHlwaGVuYXRlOigpPT5sZCxpbnZva2VBcnJheUZuczooKT0+JFAsaXNBcnJheTooKT0+WmksaXNCdWlsdEluRGlyZWN0aXZlOigpPT5CUCxpc0Z1bmN0aW9uOigpPT5Ibixpc0dsb2JhbGx5V2hpdGVsaXN0ZWQ6KCk9PmNQLGlzSFRNTFRhZzooKT0+dlAsaXNJbnRlZ2VyS2V5OigpPT5SUCxpc01hcDooKT0+WGcsaXNNb2RlbExpc3RlbmVyOigpPT5PUCxpc09iamVjdDooKT0+VmMsaXNPbjooKT0+Q1AsaXNQbGFpbk9iamVjdDooKT0+JGMsaXNQcm9taXNlOigpPT5OUCxpc1JlZ0V4cDooKT0+SVAsaXNSZXNlcnZlZFByb3A6KCk9PnhQLGlzU1ZHVGFnOigpPT5tUCxpc1NldDooKT0+UWcsaXNTdHJpbmc6KCk9PlJpLGlzU3ltYm9sOigpPT5QUCxsb29zZVRvTnVtYmVyOigpPT5IUCxtYWtlTWFwOigpPT5GYyxub3JtYWxpemVDbGFzczooKT0+c2Qsbm9ybWFsaXplUHJvcHM6KCk9PmhQLG5vcm1hbGl6ZVN0eWxlOigpPT5hZCxwYXJzZVN0cmluZ1N0eWxlOigpPT5KZyxyZW1vdmU6KCk9PkFQLHRvRGlzcGxheVN0cmluZzooKT0+X1AsdG9IYW5kbGVyS2V5OigpPT5GUCx0b051bWJlcjooKT0+alAsdG9SYXdUeXBlOigpPT5rUCx0b1R5cGVTdHJpbmc6KCk9PkxzfSk7ZnVuY3Rpb24gRmModixsKXtsZXQgYj1PYmplY3QuY3JlYXRlKG51bGwpLFQ9di5zcGxpdCgiLCIpO2ZvcihsZXQgaz0wO2s8VC5sZW5ndGg7aysrKWJbVFtrXV09ITA7cmV0dXJuIGw/az0+ISFiW2sudG9Mb3dlckNhc2UoKV06az0+ISFiW2tdfXZhciBsUD0iSW5maW5pdHksdW5kZWZpbmVkLE5hTixpc0Zpbml0ZSxpc05hTixwYXJzZUZsb2F0LHBhcnNlSW50LGRlY29kZVVSSSxkZWNvZGVVUklDb21wb25lbnQsZW5jb2RlVVJJLGVuY29kZVVSSUNvbXBvbmVudCxNYXRoLE51bWJlcixEYXRlLEFycmF5LE9iamVjdCxCb29sZWFuLFN0cmluZyxSZWdFeHAsTWFwLFNldCxKU09OLEludGwsQmlnSW50IixjUD1GYyhsUCk7ZnVuY3Rpb24gYWQodil7aWYoWmkodikpe2xldCBsPXt9O2ZvcihsZXQgYj0wO2I8di5sZW5ndGg7YisrKXtsZXQgVD12W2JdLGs9UmkoVCk/SmcoVCk6YWQoVCk7aWYoaylmb3IobGV0IEMgaW4gaylsW0NdPWtbQ119cmV0dXJuIGx9ZWxzZXtpZihSaSh2KSlyZXR1cm4gdjtpZihWYyh2KSlyZXR1cm4gdn19dmFyIHVQPS87KD8hW14oXSpcKSkvZyxmUD0vOihbXl0rKS8sZFA9L1wvXCouKj9cKlwvL2dzO2Z1bmN0aW9uIEpnKHYpe2xldCBsPXt9O3JldHVybiB2LnJlcGxhY2UoZFAsIiIpLnNwbGl0KHVQKS5mb3JFYWNoKGI9PntpZihiKXtsZXQgVD1iLnNwbGl0KGZQKTtULmxlbmd0aD4xJiYobFtUWzBdLnRyaW0oKV09VFsxXS50cmltKCkpfX0pLGx9ZnVuY3Rpb24gc2Qodil7bGV0IGw9IiI7aWYoUmkodikpbD12O2Vsc2UgaWYoWmkodikpZm9yKGxldCBiPTA7Yjx2Lmxlbmd0aDtiKyspe2xldCBUPXNkKHZbYl0pO1QmJihsKz1UKyIgIil9ZWxzZSBpZihWYyh2KSlmb3IobGV0IGIgaW4gdil2W2JdJiYobCs9YisiICIpO3JldHVybiBsLnRyaW0oKX1mdW5jdGlvbiBoUCh2KXtpZighdilyZXR1cm4gbnVsbDtsZXR7Y2xhc3M6bCxzdHlsZTpifT12O3JldHVybiBsJiYhUmkobCkmJih2LmNsYXNzPXNkKGwpKSxiJiYodi5zdHlsZT1hZChiKSksdn12YXIgcFA9Imh0bWwsYm9keSxiYXNlLGhlYWQsbGluayxtZXRhLHN0eWxlLHRpdGxlLGFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLGhncm91cCxoMSxoMixoMyxoNCxoNSxoNixuYXYsc2VjdGlvbixkaXYsZGQsZGwsZHQsZmlnY2FwdGlvbixmaWd1cmUscGljdHVyZSxocixpbWcsbGksbWFpbixvbCxwLHByZSx1bCxhLGIsYWJicixiZGksYmRvLGJyLGNpdGUsY29kZSxkYXRhLGRmbixlbSxpLGtiZCxtYXJrLHEscnAscnQscnVieSxzLHNhbXAsc21hbGwsc3BhbixzdHJvbmcsc3ViLHN1cCx0aW1lLHUsdmFyLHdicixhcmVhLGF1ZGlvLG1hcCx0cmFjayx2aWRlbyxlbWJlZCxvYmplY3QscGFyYW0sc291cmNlLGNhbnZhcyxzY3JpcHQsbm9zY3JpcHQsZGVsLGlucyxjYXB0aW9uLGNvbCxjb2xncm91cCx0YWJsZSx0aGVhZCx0Ym9keSx0ZCx0aCx0cixidXR0b24sZGF0YWxpc3QsZmllbGRzZXQsZm9ybSxpbnB1dCxsYWJlbCxsZWdlbmQsbWV0ZXIsb3B0Z3JvdXAsb3B0aW9uLG91dHB1dCxwcm9ncmVzcyxzZWxlY3QsdGV4dGFyZWEsZGV0YWlscyxkaWFsb2csbWVudSxzdW1tYXJ5LHRlbXBsYXRlLGJsb2NrcXVvdGUsaWZyYW1lLHRmb290IixnUD0ic3ZnLGFuaW1hdGUsYW5pbWF0ZU1vdGlvbixhbmltYXRlVHJhbnNmb3JtLGNpcmNsZSxjbGlwUGF0aCxjb2xvci1wcm9maWxlLGRlZnMsZGVzYyxkaXNjYXJkLGVsbGlwc2UsZmVCbGVuZCxmZUNvbG9yTWF0cml4LGZlQ29tcG9uZW50VHJhbnNmZXIsZmVDb21wb3NpdGUsZmVDb252b2x2ZU1hdHJpeCxmZURpZmZ1c2VMaWdodGluZyxmZURpc3BsYWNlbWVudE1hcCxmZURpc3RhbnRMaWdodCxmZURyb3BTaGFkb3csZmVGbG9vZCxmZUZ1bmNBLGZlRnVuY0IsZmVGdW5jRyxmZUZ1bmNSLGZlR2F1c3NpYW5CbHVyLGZlSW1hZ2UsZmVNZXJnZSxmZU1lcmdlTm9kZSxmZU1vcnBob2xvZ3ksZmVPZmZzZXQsZmVQb2ludExpZ2h0LGZlU3BlY3VsYXJMaWdodGluZyxmZVNwb3RMaWdodCxmZVRpbGUsZmVUdXJidWxlbmNlLGZpbHRlcixmb3JlaWduT2JqZWN0LGcsaGF0Y2gsaGF0Y2hwYXRoLGltYWdlLGxpbmUsbGluZWFyR3JhZGllbnQsbWFya2VyLG1hc2ssbWVzaCxtZXNoZ3JhZGllbnQsbWVzaHBhdGNoLG1lc2hyb3csbWV0YWRhdGEsbXBhdGgscGF0aCxwYXR0ZXJuLHBvbHlnb24scG9seWxpbmUscmFkaWFsR3JhZGllbnQscmVjdCxzZXQsc29saWRjb2xvcixzdG9wLHN3aXRjaCxzeW1ib2wsdGV4dCx0ZXh0UGF0aCx0aXRsZSx0c3Bhbix1bmtub3duLHVzZSx2aWV3Iix2UD1GYyhwUCksbVA9RmMoZ1ApLF9QPXY9PlJpKHYpP3Y6dj09bnVsbD8iIjpaaSh2KXx8VmModikmJih2LnRvU3RyaW5nPT09ZXZ8fCFIbih2LnRvU3RyaW5nKSk/SlNPTi5zdHJpbmdpZnkodixaZywyKTpTdHJpbmcodiksWmc9KHYsbCk9PmwmJmwuX192X2lzUmVmP1pnKHYsbC52YWx1ZSk6WGcobCk/e1tgTWFwKCR7bC5zaXplfSlgXTpbLi4ubC5lbnRyaWVzKCldLnJlZHVjZSgoYixbVCxrXSk9PihiW2Ake1R9ID0+YF09ayxiKSx7fSl9OlFnKGwpP3tbYFNldCgke2wuc2l6ZX0pYF06Wy4uLmwudmFsdWVzKCldfTpWYyhsKSYmIVppKGwpJiYhJGMobCk/U3RyaW5nKGwpOmwsYlA9e30seVA9W10sRVA9KCk9Pnt9LHdQPSgpPT4hMSxTUD0vXm9uW15hLXpdLyxDUD12PT5TUC50ZXN0KHYpLE9QPXY9PnYuc3RhcnRzV2l0aCgib25VcGRhdGU6Iiksa2k9T2JqZWN0LmFzc2lnbixBUD0odixsKT0+e2xldCBiPXYuaW5kZXhPZihsKTtiPi0xJiZ2LnNwbGljZShiLDEpfSxUUD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFpsPSh2LGwpPT5UUC5jYWxsKHYsbCksWmk9QXJyYXkuaXNBcnJheSxYZz12PT5Mcyh2KT09PSJbb2JqZWN0IE1hcF0iLFFnPXY9PkxzKHYpPT09IltvYmplY3QgU2V0XSIsSVA9dj0+THModik9PT0iW29iamVjdCBSZWdFeHBdIixIbj12PT50eXBlb2Ygdj09ImZ1bmN0aW9uIixSaT12PT50eXBlb2Ygdj09InN0cmluZyIsUFA9dj0+dHlwZW9mIHY9PSJzeW1ib2wiLFZjPXY9PnYhPT1udWxsJiZ0eXBlb2Ygdj09Im9iamVjdCIsTlA9dj0+VmModikmJkhuKHYudGhlbikmJkhuKHYuY2F0Y2gpLGV2PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsTHM9dj0+ZXYuY2FsbCh2KSxrUD12PT5Mcyh2KS5zbGljZSg4LC0xKSwkYz12PT5Mcyh2KT09PSJbb2JqZWN0IE9iamVjdF0iLFJQPXY9PlJpKHYpJiZ2IT09Ik5hTiImJnZbMF0hPT0iLSImJiIiK3BhcnNlSW50KHYsMTApPT09dix4UD1GYygiLGtleSxyZWYscmVmX2ZvcixyZWZfa2V5LG9uVm5vZGVCZWZvcmVNb3VudCxvblZub2RlTW91bnRlZCxvblZub2RlQmVmb3JlVXBkYXRlLG9uVm5vZGVVcGRhdGVkLG9uVm5vZGVCZWZvcmVVbm1vdW50LG9uVm5vZGVVbm1vdW50ZWQiKSxCUD1GYygiYmluZCxjbG9hayxlbHNlLWlmLGVsc2UsZm9yLGh0bWwsaWYsbW9kZWwsb24sb25jZSxwcmUsc2hvdyxzbG90LHRleHQsbWVtbyIpLHNmPXY9PntsZXQgbD1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBiPT5sW2JdfHwobFtiXT12KGIpKX0sTVA9Ly0oXHcpL2csRFA9c2Yodj0+di5yZXBsYWNlKE1QLChsLGIpPT5iP2IudG9VcHBlckNhc2UoKToiIikpLExQPS9cQihbQS1aXSkvZyxsZD1zZih2PT52LnJlcGxhY2UoTFAsIi0kMSIpLnRvTG93ZXJDYXNlKCkpLGxmPXNmKHY9PnYuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdi5zbGljZSgxKSksRlA9c2Yodj0+dj9gb24ke2xmKHYpfWA6IiIpLFZQPSh2LGwpPT4hT2JqZWN0LmlzKHYsbCksJFA9KHYsbCk9Pntmb3IobGV0IGI9MDtiPHYubGVuZ3RoO2IrKyl2W2JdKGwpfSxVUD0odixsLGIpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHYsbCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6Yn0pfSxIUD12PT57bGV0IGw9cGFyc2VGbG9hdCh2KTtyZXR1cm4gaXNOYU4obCk/djpsfSxqUD12PT57bGV0IGw9Umkodik/TnVtYmVyKHYpOk5hTjtyZXR1cm4gaXNOYU4obCk/djpsfSx0dix6UD0oKT0+dHZ8fCh0dj10eXBlb2YgZ2xvYmFsVGhpcyE9InVuZGVmaW5lZCI/Z2xvYmFsVGhpczp0eXBlb2Ygc2VsZiE9InVuZGVmaW5lZCI/c2VsZjp0eXBlb2Ygd2luZG93IT0idW5kZWZpbmVkIj93aW5kb3c6dHlwZW9mIGdsb2JhbCE9InVuZGVmaW5lZCI/Z2xvYmFsOnt9KTtmdW5jdGlvbiBudih2KXt2YXIgbD1mdW5jdGlvbihiLFQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBrKE0sLi4uWil7Y29uc29sZS53YXJuKGBbVnVlIHdhcm5dICR7TX1gLC4uLlopfWxldCBDO2NsYXNzIGR7Y29uc3RydWN0b3IoWj0hMSl7dGhpcy5kZXRhY2hlZD1aLHRoaXMuX2FjdGl2ZT0hMCx0aGlzLmVmZmVjdHM9W10sdGhpcy5jbGVhbnVwcz1bXSx0aGlzLnBhcmVudD1DLCFaJiZDJiYodGhpcy5pbmRleD0oQy5zY29wZXN8fChDLnNjb3Blcz1bXSkpLnB1c2godGhpcyktMSl9Z2V0IGFjdGl2ZSgpe3JldHVybiB0aGlzLl9hY3RpdmV9cnVuKFope2lmKHRoaXMuX2FjdGl2ZSl7bGV0IHZlPUM7dHJ5e3JldHVybiBDPXRoaXMsWigpfWZpbmFsbHl7Qz12ZX19fW9uKCl7Qz10aGlzfW9mZigpe0M9dGhpcy5wYXJlbnR9c3RvcChaKXtpZih0aGlzLl9hY3RpdmUpe2xldCB2ZSxjZTtmb3IodmU9MCxjZT10aGlzLmVmZmVjdHMubGVuZ3RoO3ZlPGNlO3ZlKyspdGhpcy5lZmZlY3RzW3ZlXS5zdG9wKCk7Zm9yKHZlPTAsY2U9dGhpcy5jbGVhbnVwcy5sZW5ndGg7dmU8Y2U7dmUrKyl0aGlzLmNsZWFudXBzW3ZlXSgpO2lmKHRoaXMuc2NvcGVzKWZvcih2ZT0wLGNlPXRoaXMuc2NvcGVzLmxlbmd0aDt2ZTxjZTt2ZSsrKXRoaXMuc2NvcGVzW3ZlXS5zdG9wKCEwKTtpZighdGhpcy5kZXRhY2hlZCYmdGhpcy5wYXJlbnQmJiFaKXtsZXQgaGU9dGhpcy5wYXJlbnQuc2NvcGVzLnBvcCgpO2hlJiZoZSE9PXRoaXMmJih0aGlzLnBhcmVudC5zY29wZXNbdGhpcy5pbmRleF09aGUsaGUuaW5kZXg9dGhpcy5pbmRleCl9dGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXMuX2FjdGl2ZT0hMX19fWZ1bmN0aW9uIG0oTSl7cmV0dXJuIG5ldyBkKE0pfWZ1bmN0aW9uIFIoTSxaPUMpe1omJlouYWN0aXZlJiZaLmVmZmVjdHMucHVzaChNKX1mdW5jdGlvbiBXZSgpe3JldHVybiBDfWZ1bmN0aW9uIFB0KE0pe0MmJkMuY2xlYW51cHMucHVzaChNKX1sZXQgUXQ9TT0+e2xldCBaPW5ldyBTZXQoTSk7cmV0dXJuIFoudz0wLFoubj0wLFp9LE89TT0+KE0udyZyZSk+MCxpZT1NPT4oTS5uJnJlKT4wLFRuPSh7ZGVwczpNfSk9PntpZihNLmxlbmd0aClmb3IobGV0IFo9MDtaPE0ubGVuZ3RoO1orKylNW1pdLnd8PXJlfSxxbj1NPT57bGV0e2RlcHM6Wn09TTtpZihaLmxlbmd0aCl7bGV0IHZlPTA7Zm9yKGxldCBjZT0wO2NlPFoubGVuZ3RoO2NlKyspe2xldCBoZT1aW2NlXTtPKGhlKSYmIWllKGhlKT9oZS5kZWxldGUoTSk6Wlt2ZSsrXT1oZSxoZS53Jj1+cmUsaGUubiY9fnJlfVoubGVuZ3RoPXZlfX0sbXQ9bmV3IFdlYWtNYXAsSj0wLHJlPTEsTG49MzAsY24sSHQ9U3ltYm9sKCIiKSxJbj1TeW1ib2woIiIpO2NsYXNzIFJye2NvbnN0cnVjdG9yKFosdmU9bnVsbCxjZSl7dGhpcy5mbj1aLHRoaXMuc2NoZWR1bGVyPXZlLHRoaXMuYWN0aXZlPSEwLHRoaXMuZGVwcz1bXSx0aGlzLnBhcmVudD12b2lkIDAsUih0aGlzLGNlKX1ydW4oKXtpZighdGhpcy5hY3RpdmUpcmV0dXJuIHRoaXMuZm4oKTtsZXQgWj1jbix2ZT1qdDtmb3IoO1o7KXtpZihaPT09dGhpcylyZXR1cm47Wj1aLnBhcmVudH10cnl7cmV0dXJuIHRoaXMucGFyZW50PWNuLGNuPXRoaXMsanQ9ITAscmU9MTw8KytKLEo8PUxuP1RuKHRoaXMpOkhyKHRoaXMpLHRoaXMuZm4oKX1maW5hbGx5e0o8PUxuJiZxbih0aGlzKSxyZT0xPDwtLUosY249dGhpcy5wYXJlbnQsanQ9dmUsdGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXMuZGVmZXJTdG9wJiZ0aGlzLnN0b3AoKX19c3RvcCgpe2NuPT09dGhpcz90aGlzLmRlZmVyU3RvcD0hMDp0aGlzLmFjdGl2ZSYmKEhyKHRoaXMpLHRoaXMub25TdG9wJiZ0aGlzLm9uU3RvcCgpLHRoaXMuYWN0aXZlPSExKX19ZnVuY3Rpb24gSHIoTSl7bGV0e2RlcHM6Wn09TTtpZihaLmxlbmd0aCl7Zm9yKGxldCB2ZT0wO3ZlPFoubGVuZ3RoO3ZlKyspWlt2ZV0uZGVsZXRlKE0pO1oubGVuZ3RoPTB9fWZ1bmN0aW9uIHJyKE0sWil7TS5lZmZlY3QmJihNPU0uZWZmZWN0LmZuKTtsZXQgdmU9bmV3IFJyKE0pO1omJihULmV4dGVuZCh2ZSxaKSxaLnNjb3BlJiZSKHZlLFouc2NvcGUpKSwoIVp8fCFaLmxhenkpJiZ2ZS5ydW4oKTtsZXQgY2U9dmUucnVuLmJpbmQodmUpO3JldHVybiBjZS5lZmZlY3Q9dmUsY2V9ZnVuY3Rpb24gbm4oTSl7TS5lZmZlY3Quc3RvcCgpfWxldCBqdD0hMCxnbj1bXTtmdW5jdGlvbiBSbigpe2duLnB1c2goanQpLGp0PSExfWZ1bmN0aW9uIHhuKCl7Z24ucHVzaChqdCksanQ9ITB9ZnVuY3Rpb24gbXIoKXtsZXQgTT1nbi5wb3AoKTtqdD1NPT09dm9pZCAwPyEwOk19ZnVuY3Rpb24gS2UoTSxaLHZlKXtpZihqdCYmY24pe2xldCBjZT1tdC5nZXQoTSk7Y2V8fG10LnNldChNLGNlPW5ldyBNYXApO2xldCBoZT1jZS5nZXQodmUpO2hlfHxjZS5zZXQodmUsaGU9UXQoKSksZHQoaGUsdm9pZCAwKX19ZnVuY3Rpb24gZHQoTSxaKXtsZXQgdmU9ITE7Sjw9TG4/aWUoTSl8fChNLm58PXJlLHZlPSFPKE0pKTp2ZT0hTS5oYXMoY24pLHZlJiYoTS5hZGQoY24pLGNuLmRlcHMucHVzaChNKSl9ZnVuY3Rpb24gd3QoTSxaLHZlLGNlLGhlLFN0KXtsZXQgSz1tdC5nZXQoTSk7aWYoIUspcmV0dXJuO2xldCBZPVtdO2lmKFo9PT0iY2xlYXIiKVk9Wy4uLksudmFsdWVzKCldO2Vsc2UgaWYodmU9PT0ibGVuZ3RoIiYmVC5pc0FycmF5KE0pKXtsZXQgQmU9TnVtYmVyKGNlKTtLLmZvckVhY2goKGx0LHp0KT0+eyh6dD09PSJsZW5ndGgifHx6dD49QmUpJiZZLnB1c2gobHQpfSl9ZWxzZSBzd2l0Y2godmUhPT12b2lkIDAmJlkucHVzaChLLmdldCh2ZSkpLFope2Nhc2UiYWRkIjpULmlzQXJyYXkoTSk/VC5pc0ludGVnZXJLZXkodmUpJiZZLnB1c2goSy5nZXQoImxlbmd0aCIpKTooWS5wdXNoKEsuZ2V0KEh0KSksVC5pc01hcChNKSYmWS5wdXNoKEsuZ2V0KEluKSkpO2JyZWFrO2Nhc2UiZGVsZXRlIjpULmlzQXJyYXkoTSl8fChZLnB1c2goSy5nZXQoSHQpKSxULmlzTWFwKE0pJiZZLnB1c2goSy5nZXQoSW4pKSk7YnJlYWs7Y2FzZSJzZXQiOlQuaXNNYXAoTSkmJlkucHVzaChLLmdldChIdCkpO2JyZWFrfWxldCB1ZT12b2lkIDA7aWYoWS5sZW5ndGg9PT0xKVlbMF0mJnJuKFlbMF0pO2Vsc2V7bGV0IEJlPVtdO2ZvcihsZXQgbHQgb2YgWSlsdCYmQmUucHVzaCguLi5sdCk7cm4oUXQoQmUpKX19ZnVuY3Rpb24gcm4oTSxaKXtsZXQgdmU9VC5pc0FycmF5KE0pP006Wy4uLk1dO2ZvcihsZXQgY2Ugb2YgdmUpY2UuY29tcHV0ZWQmJk5uKGNlLFopO2ZvcihsZXQgY2Ugb2YgdmUpY2UuY29tcHV0ZWR8fE5uKGNlLFopfWZ1bmN0aW9uIE5uKE0sWil7KE0hPT1jbnx8TS5hbGxvd1JlY3Vyc2UpJiYoTS5zY2hlZHVsZXI/TS5zY2hlZHVsZXIoKTpNLnJ1bigpKX1mdW5jdGlvbiBKdChNLFope3ZhciB2ZTtyZXR1cm4odmU9bXQuZ2V0KE0pKT09PW51bGx8fHZlPT09dm9pZCAwP3ZvaWQgMDp2ZS5nZXQoWil9bGV0IEZuPVQubWFrZU1hcCgiX19wcm90b19fLF9fdl9pc1JlZixfX2lzVnVlIiksaXI9bmV3IFNldChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhTeW1ib2wpLmZpbHRlcihNPT5NIT09ImFyZ3VtZW50cyImJk0hPT0iY2FsbGVyIikubWFwKE09PlN5bWJvbFtNXSkuZmlsdGVyKFQuaXNTeW1ib2wpKSx4aT14cigpLEJpPXhyKCExLCEwKSxqbj14cighMCksanI9eHIoITAsITApLE1pPXBhKCk7ZnVuY3Rpb24gcGEoKXtsZXQgTT17fTtyZXR1cm5bImluY2x1ZGVzIiwiaW5kZXhPZiIsImxhc3RJbmRleE9mIl0uZm9yRWFjaChaPT57TVtaXT1mdW5jdGlvbiguLi52ZSl7bGV0IGNlPW9uKHRoaXMpO2ZvcihsZXQgU3Q9MCxLPXRoaXMubGVuZ3RoO1N0PEs7U3QrKylLZShjZSwiZ2V0IixTdCsiIik7bGV0IGhlPWNlW1pdKC4uLnZlKTtyZXR1cm4gaGU9PT0tMXx8aGU9PT0hMT9jZVtaXSguLi52ZS5tYXAob24pKTpoZX19KSxbInB1c2giLCJwb3AiLCJzaGlmdCIsInVuc2hpZnQiLCJzcGxpY2UiXS5mb3JFYWNoKFo9PntNW1pdPWZ1bmN0aW9uKC4uLnZlKXtSbigpO2xldCBjZT1vbih0aGlzKVtaXS5hcHBseSh0aGlzLHZlKTtyZXR1cm4gbXIoKSxjZX19KSxNfWZ1bmN0aW9uIEpvKE0pe2xldCBaPW9uKHRoaXMpO3JldHVybiBLZShaLCJoYXMiLE0pLFouaGFzT3duUHJvcGVydHkoTSl9ZnVuY3Rpb24geHIoTT0hMSxaPSExKXtyZXR1cm4gZnVuY3Rpb24oY2UsaGUsU3Qpe2lmKGhlPT09Il9fdl9pc1JlYWN0aXZlIilyZXR1cm4hTTtpZihoZT09PSJfX3ZfaXNSZWFkb25seSIpcmV0dXJuIE07aWYoaGU9PT0iX192X2lzU2hhbGxvdyIpcmV0dXJuIFo7aWYoaGU9PT0iX192X3JhdyImJlN0PT09KE0/Wj9CdDpjaTpaP29yOkpuKS5nZXQoY2UpKXJldHVybiBjZTtsZXQgSz1ULmlzQXJyYXkoY2UpO2lmKCFNKXtpZihLJiZULmhhc093bihNaSxoZSkpcmV0dXJuIFJlZmxlY3QuZ2V0KE1pLGhlLFN0KTtpZihoZT09PSJoYXNPd25Qcm9wZXJ0eSIpcmV0dXJuIEpvfWxldCBZPVJlZmxlY3QuZ2V0KGNlLGhlLFN0KTtyZXR1cm4oVC5pc1N5bWJvbChoZSk/aXIuaGFzKGhlKTpGbihoZSkpfHwoTXx8S2UoY2UsImdldCIsaGUpLFopP1k6aHIoWSk/SyYmVC5pc0ludGVnZXJLZXkoaGUpP1k6WS52YWx1ZTpULmlzT2JqZWN0KFkpP00/bWEoWSk6ZW8oWSk6WX19bGV0IEJyPWZyKCksTXI9ZnIoITApO2Z1bmN0aW9uIGZyKE09ITEpe3JldHVybiBmdW5jdGlvbih2ZSxjZSxoZSxTdCl7bGV0IEs9dmVbY2VdO2lmKElyKEspJiZocihLKSYmIWhyKGhlKSlyZXR1cm4hMTtpZighTSYmKCFFaShoZSkmJiFJcihoZSkmJihLPW9uKEspLGhlPW9uKGhlKSksIVQuaXNBcnJheSh2ZSkmJmhyKEspJiYhaHIoaGUpKSlyZXR1cm4gSy52YWx1ZT1oZSwhMDtsZXQgWT1ULmlzQXJyYXkodmUpJiZULmlzSW50ZWdlcktleShjZSk/TnVtYmVyKGNlKTx2ZS5sZW5ndGg6VC5oYXNPd24odmUsY2UpLHVlPVJlZmxlY3Quc2V0KHZlLGNlLGhlLFN0KTtyZXR1cm4gdmU9PT1vbihTdCkmJihZP1QuaGFzQ2hhbmdlZChoZSxLKSYmd3QodmUsInNldCIsY2UsaGUsSyk6d3QodmUsImFkZCIsY2UsaGUpKSx1ZX19ZnVuY3Rpb24gZ2EoTSxaKXtsZXQgdmU9VC5oYXNPd24oTSxaKSxjZT1NW1pdLGhlPVJlZmxlY3QuZGVsZXRlUHJvcGVydHkoTSxaKTtyZXR1cm4gaGUmJnZlJiZ3dChNLCJkZWxldGUiLFosdm9pZCAwLGNlKSxoZX1mdW5jdGlvbiBabyhNLFope2xldCB2ZT1SZWZsZWN0LmhhcyhNLFopO3JldHVybighVC5pc1N5bWJvbChaKXx8IWlyLmhhcyhaKSkmJktlKE0sImhhcyIsWiksdmV9ZnVuY3Rpb24gaG8oTSl7cmV0dXJuIEtlKE0sIml0ZXJhdGUiLFQuaXNBcnJheShNKT8ibGVuZ3RoIjpIdCksUmVmbGVjdC5vd25LZXlzKE0pfWxldCBwbz17Z2V0OnhpLHNldDpCcixkZWxldGVQcm9wZXJ0eTpnYSxoYXM6Wm8sb3duS2V5czpob30sZ289e2dldDpqbixzZXQoTSxaKXtyZXR1cm4hMH0sZGVsZXRlUHJvcGVydHkoTSxaKXtyZXR1cm4hMH19LHZhPVQuZXh0ZW5kKHt9LHBvLHtnZXQ6Qmksc2V0Ok1yfSksQm89VC5leHRlbmQoe30sZ28se2dldDpqcn0pLEtuPU09Pk0sX3I9TT0+UmVmbGVjdC5nZXRQcm90b3R5cGVPZihNKTtmdW5jdGlvbiBkcihNLFosdmU9ITEsY2U9ITEpe009TS5fX3ZfcmF3O2xldCBoZT1vbihNKSxTdD1vbihaKTt2ZXx8KFohPT1TdCYmS2UoaGUsImdldCIsWiksS2UoaGUsImdldCIsU3QpKTtsZXR7aGFzOkt9PV9yKGhlKSxZPWNlP0tuOnZlP3duOnVpO2lmKEsuY2FsbChoZSxaKSlyZXR1cm4gWShNLmdldChaKSk7aWYoSy5jYWxsKGhlLFN0KSlyZXR1cm4gWShNLmdldChTdCkpO00hPT1oZSYmTS5nZXQoWil9ZnVuY3Rpb24gRG4oTSxaPSExKXtsZXQgdmU9dGhpcy5fX3ZfcmF3LGNlPW9uKHZlKSxoZT1vbihNKTtyZXR1cm4gWnx8KE0hPT1oZSYmS2UoY2UsImhhcyIsTSksS2UoY2UsImhhcyIsaGUpKSxNPT09aGU/dmUuaGFzKE0pOnZlLmhhcyhNKXx8dmUuaGFzKGhlKX1mdW5jdGlvbiBYaShNLFo9ITEpe3JldHVybiBNPU0uX192X3JhdywhWiYmS2Uob24oTSksIml0ZXJhdGUiLEh0KSxSZWZsZWN0LmdldChNLCJzaXplIixNKX1mdW5jdGlvbiBYbyhNKXtNPW9uKE0pO2xldCBaPW9uKHRoaXMpO3JldHVybiBfcihaKS5oYXMuY2FsbChaLE0pfHwoWi5hZGQoTSksd3QoWiwiYWRkIixNLE0pKSx0aGlzfWZ1bmN0aW9uIE1vKE0sWil7Wj1vbihaKTtsZXQgdmU9b24odGhpcykse2hhczpjZSxnZXQ6aGV9PV9yKHZlKSxTdD1jZS5jYWxsKHZlLE0pO1N0fHwoTT1vbihNKSxTdD1jZS5jYWxsKHZlLE0pKTtsZXQgSz1oZS5jYWxsKHZlLE0pO3JldHVybiB2ZS5zZXQoTSxaKSxTdD9ULmhhc0NoYW5nZWQoWixLKSYmd3QodmUsInNldCIsTSxaLEspOnd0KHZlLCJhZGQiLE0sWiksdGhpc31mdW5jdGlvbiBvaShNKXtsZXQgWj1vbih0aGlzKSx7aGFzOnZlLGdldDpjZX09X3IoWiksaGU9dmUuY2FsbChaLE0pO2hlfHwoTT1vbihNKSxoZT12ZS5jYWxsKFosTSkpO2xldCBTdD1jZT9jZS5jYWxsKFosTSk6dm9pZCAwLEs9Wi5kZWxldGUoTSk7cmV0dXJuIGhlJiZ3dChaLCJkZWxldGUiLE0sdm9pZCAwLFN0KSxLfWZ1bmN0aW9uIGFpKCl7bGV0IE09b24odGhpcyksWj1NLnNpemUhPT0wLHZlPXZvaWQgMCxjZT1NLmNsZWFyKCk7cmV0dXJuIFomJnd0KE0sImNsZWFyIix2b2lkIDAsdm9pZCAwLHZlKSxjZX1mdW5jdGlvbiBRaShNLFope3JldHVybiBmdW5jdGlvbihjZSxoZSl7bGV0IFN0PXRoaXMsSz1TdC5fX3ZfcmF3LFk9b24oSyksdWU9Wj9LbjpNP3duOnVpO3JldHVybiFNJiZLZShZLCJpdGVyYXRlIixIdCksSy5mb3JFYWNoKChCZSxsdCk9PmNlLmNhbGwoaGUsdWUoQmUpLHVlKGx0KSxTdCkpfX1mdW5jdGlvbiBUcihNLFosdmUpe3JldHVybiBmdW5jdGlvbiguLi5jZSl7bGV0IGhlPXRoaXMuX192X3JhdyxTdD1vbihoZSksSz1ULmlzTWFwKFN0KSxZPU09PT0iZW50cmllcyJ8fE09PT1TeW1ib2wuaXRlcmF0b3ImJkssdWU9TT09PSJrZXlzIiYmSyxCZT1oZVtNXSguLi5jZSksbHQ9dmU/S246Wj93bjp1aTtyZXR1cm4hWiYmS2UoU3QsIml0ZXJhdGUiLHVlP0luOkh0KSx7bmV4dCgpe2xldHt2YWx1ZTp6dCxkb25lOlNufT1CZS5uZXh0KCk7cmV0dXJuIFNuP3t2YWx1ZTp6dCxkb25lOlNufTp7dmFsdWU6WT9bbHQoenRbMF0pLGx0KHp0WzFdKV06bHQoenQpLGRvbmU6U259fSxbU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzfX19fWZ1bmN0aW9uIGtuKE0pe3JldHVybiBmdW5jdGlvbiguLi5aKXtyZXR1cm4gTT09PSJkZWxldGUiPyExOnRoaXN9fWZ1bmN0aW9uIHZvKCl7bGV0IE09e2dldChTdCl7cmV0dXJuIGRyKHRoaXMsU3QpfSxnZXQgc2l6ZSgpe3JldHVybiBYaSh0aGlzKX0saGFzOkRuLGFkZDpYbyxzZXQ6TW8sZGVsZXRlOm9pLGNsZWFyOmFpLGZvckVhY2g6UWkoITEsITEpfSxaPXtnZXQoU3Qpe3JldHVybiBkcih0aGlzLFN0LCExLCEwKX0sZ2V0IHNpemUoKXtyZXR1cm4gWGkodGhpcyl9LGhhczpEbixhZGQ6WG8sc2V0Ok1vLGRlbGV0ZTpvaSxjbGVhcjphaSxmb3JFYWNoOlFpKCExLCEwKX0sdmU9e2dldChTdCl7cmV0dXJuIGRyKHRoaXMsU3QsITApfSxnZXQgc2l6ZSgpe3JldHVybiBYaSh0aGlzLCEwKX0saGFzKFN0KXtyZXR1cm4gRG4uY2FsbCh0aGlzLFN0LCEwKX0sYWRkOmtuKCJhZGQiKSxzZXQ6a24oInNldCIpLGRlbGV0ZTprbigiZGVsZXRlIiksY2xlYXI6a24oImNsZWFyIiksZm9yRWFjaDpRaSghMCwhMSl9LGNlPXtnZXQoU3Qpe3JldHVybiBkcih0aGlzLFN0LCEwLCEwKX0sZ2V0IHNpemUoKXtyZXR1cm4gWGkodGhpcywhMCl9LGhhcyhTdCl7cmV0dXJuIERuLmNhbGwodGhpcyxTdCwhMCl9LGFkZDprbigiYWRkIiksc2V0OmtuKCJzZXQiKSxkZWxldGU6a24oImRlbGV0ZSIpLGNsZWFyOmtuKCJjbGVhciIpLGZvckVhY2g6UWkoITAsITApfTtyZXR1cm5bImtleXMiLCJ2YWx1ZXMiLCJlbnRyaWVzIixTeW1ib2wuaXRlcmF0b3JdLmZvckVhY2goU3Q9PntNW1N0XT1UcihTdCwhMSwhMSksdmVbU3RdPVRyKFN0LCEwLCExKSxaW1N0XT1UcihTdCwhMSwhMCksY2VbU3RdPVRyKFN0LCEwLCEwKX0pLFtNLHZlLFosY2VdfWxldFttbyxEbyxfbyxMb109dm8oKTtmdW5jdGlvbiBzaShNLFope2xldCB2ZT1aP00/TG86X286TT9EbzptbztyZXR1cm4oY2UsaGUsU3QpPT5oZT09PSJfX3ZfaXNSZWFjdGl2ZSI/IU06aGU9PT0iX192X2lzUmVhZG9ubHkiP006aGU9PT0iX192X3JhdyI/Y2U6UmVmbGVjdC5nZXQoVC5oYXNPd24odmUsaGUpJiZoZSBpbiBjZT92ZTpjZSxoZSxTdCl9bGV0IHluPXtnZXQ6c2koITEsITEpfSxFbj17Z2V0OnNpKCExLCEwKX0sbGk9e2dldDpzaSghMCwhMSl9LEZvPXtnZXQ6c2koITAsITApfTtmdW5jdGlvbiBxYShNLFosdmUpe2xldCBjZT1vbih2ZSk7aWYoY2UhPT12ZSYmWi5jYWxsKE0sY2UpKXtsZXQgaGU9VC50b1Jhd1R5cGUoTSk7Y29uc29sZS53YXJuKGBSZWFjdGl2ZSAke2hlfSBjb250YWlucyBib3RoIHRoZSByYXcgYW5kIHJlYWN0aXZlIHZlcnNpb25zIG9mIHRoZSBzYW1lIG9iamVjdCR7aGU9PT0iTWFwIj8iIGFzIGtleXMiOiIifSwgd2hpY2ggY2FuIGxlYWQgdG8gaW5jb25zaXN0ZW5jaWVzLiBBdm9pZCBkaWZmZXJlbnRpYXRpbmcgYmV0d2VlbiB0aGUgcmF3IGFuZCByZWFjdGl2ZSB2ZXJzaW9ucyBvZiBhbiBvYmplY3QgYW5kIG9ubHkgdXNlIHRoZSByZWFjdGl2ZSB2ZXJzaW9uIGlmIHBvc3NpYmxlLmApfX1sZXQgSm49bmV3IFdlYWtNYXAsb3I9bmV3IFdlYWtNYXAsY2k9bmV3IFdlYWtNYXAsQnQ9bmV3IFdlYWtNYXA7ZnVuY3Rpb24geGUoTSl7c3dpdGNoKE0pe2Nhc2UiT2JqZWN0IjpjYXNlIkFycmF5IjpyZXR1cm4gMTtjYXNlIk1hcCI6Y2FzZSJTZXQiOmNhc2UiV2Vha01hcCI6Y2FzZSJXZWFrU2V0IjpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBibyhNKXtyZXR1cm4gTS5fX3Zfc2tpcHx8IU9iamVjdC5pc0V4dGVuc2libGUoTSk/MDp4ZShULnRvUmF3VHlwZShNKSl9ZnVuY3Rpb24gZW8oTSl7cmV0dXJuIElyKE0pP006RGkoTSwhMSxwbyx5bixKbil9ZnVuY3Rpb24gVm8oTSl7cmV0dXJuIERpKE0sITEsdmEsRW4sb3IpfWZ1bmN0aW9uIG1hKE0pe3JldHVybiBEaShNLCEwLGdvLGxpLGNpKX1mdW5jdGlvbiBRbyhNKXtyZXR1cm4gRGkoTSwhMCxCbyxGbyxCdCl9ZnVuY3Rpb24gRGkoTSxaLHZlLGNlLGhlKXtpZighVC5pc09iamVjdChNKXx8TS5fX3ZfcmF3JiYhKFomJk0uX192X2lzUmVhY3RpdmUpKXJldHVybiBNO2xldCBTdD1oZS5nZXQoTSk7aWYoU3QpcmV0dXJuIFN0O2xldCBLPWJvKE0pO2lmKEs9PT0wKXJldHVybiBNO2xldCBZPW5ldyBQcm94eShNLEs9PT0yP2NlOnZlKTtyZXR1cm4gaGUuc2V0KE0sWSksWX1mdW5jdGlvbiB5byhNKXtyZXR1cm4gSXIoTSk/eW8oTS5fX3ZfcmF3KTohIShNJiZNLl9fdl9pc1JlYWN0aXZlKX1mdW5jdGlvbiBJcihNKXtyZXR1cm4hIShNJiZNLl9fdl9pc1JlYWRvbmx5KX1mdW5jdGlvbiBFaShNKXtyZXR1cm4hIShNJiZNLl9fdl9pc1NoYWxsb3cpfWZ1bmN0aW9uIFRhKE0pe3JldHVybiB5byhNKXx8SXIoTSl9ZnVuY3Rpb24gb24oTSl7bGV0IFo9TSYmTS5fX3ZfcmF3O3JldHVybiBaP29uKFopOk19ZnVuY3Rpb24gRW8oTSl7cmV0dXJuIFQuZGVmKE0sIl9fdl9za2lwIiwhMCksTX1sZXQgdWk9TT0+VC5pc09iamVjdChNKT9lbyhNKTpNLHduPU09PlQuaXNPYmplY3QoTSk/bWEoTSk6TTtmdW5jdGlvbiBmaShNKXtqdCYmY24mJihNPW9uKE0pLGR0KE0uZGVwfHwoTS5kZXA9UXQoKSkpKX1mdW5jdGlvbiBacihNLFope009b24oTSk7bGV0IHZlPU0uZGVwO3ZlJiZybih2ZSl9ZnVuY3Rpb24gaHIoTSl7cmV0dXJuISEoTSYmTS5fX3ZfaXNSZWY9PT0hMCl9ZnVuY3Rpb24gS2EoTSl7cmV0dXJuIGVhKE0sITEpfWZ1bmN0aW9uIElhKE0pe3JldHVybiBlYShNLCEwKX1mdW5jdGlvbiBlYShNLFope3JldHVybiBocihNKT9NOm5ldyB0byhNLFopfWNsYXNzIHRve2NvbnN0cnVjdG9yKFosdmUpe3RoaXMuX192X2lzU2hhbGxvdz12ZSx0aGlzLmRlcD12b2lkIDAsdGhpcy5fX3ZfaXNSZWY9ITAsdGhpcy5fcmF3VmFsdWU9dmU/WjpvbihaKSx0aGlzLl92YWx1ZT12ZT9aOnVpKFopfWdldCB2YWx1ZSgpe3JldHVybiBmaSh0aGlzKSx0aGlzLl92YWx1ZX1zZXQgdmFsdWUoWil7bGV0IHZlPXRoaXMuX192X2lzU2hhbGxvd3x8RWkoWil8fElyKFopO1o9dmU/WjpvbihaKSxULmhhc0NoYW5nZWQoWix0aGlzLl9yYXdWYWx1ZSkmJih0aGlzLl9yYXdWYWx1ZT1aLHRoaXMuX3ZhbHVlPXZlP1o6dWkoWiksWnIodGhpcyxaKSl9fWZ1bmN0aW9uIFpuKE0pe1pyKE0sdm9pZCAwKX1mdW5jdGlvbiBhcihNKXtyZXR1cm4gaHIoTSk/TS52YWx1ZTpNfWxldCBWbj17Z2V0OihNLFosdmUpPT5hcihSZWZsZWN0LmdldChNLFosdmUpKSxzZXQ6KE0sWix2ZSxjZSk9PntsZXQgaGU9TVtaXTtyZXR1cm4gaHIoaGUpJiYhaHIodmUpPyhoZS52YWx1ZT12ZSwhMCk6UmVmbGVjdC5zZXQoTSxaLHZlLGNlKX19O2Z1bmN0aW9uIFhyKE0pe3JldHVybiB5byhNKT9NOm5ldyBQcm94eShNLFZuKX1jbGFzcyBkaXtjb25zdHJ1Y3RvcihaKXt0aGlzLmRlcD12b2lkIDAsdGhpcy5fX3ZfaXNSZWY9ITA7bGV0e2dldDp2ZSxzZXQ6Y2V9PVooKCk9PmZpKHRoaXMpLCgpPT5acih0aGlzKSk7dGhpcy5fZ2V0PXZlLHRoaXMuX3NldD1jZX1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5fZ2V0KCl9c2V0IHZhbHVlKFope3RoaXMuX3NldChaKX19ZnVuY3Rpb24gdGEoTSl7cmV0dXJuIG5ldyBkaShNKX1mdW5jdGlvbiB3aShNKXtsZXQgWj1ULmlzQXJyYXkoTSk/bmV3IEFycmF5KE0ubGVuZ3RoKTp7fTtmb3IobGV0IHZlIGluIE0pWlt2ZV09d28oTSx2ZSk7cmV0dXJuIFp9Y2xhc3MgaGl7Y29uc3RydWN0b3IoWix2ZSxjZSl7dGhpcy5fb2JqZWN0PVosdGhpcy5fa2V5PXZlLHRoaXMuX2RlZmF1bHRWYWx1ZT1jZSx0aGlzLl9fdl9pc1JlZj0hMH1nZXQgdmFsdWUoKXtsZXQgWj10aGlzLl9vYmplY3RbdGhpcy5fa2V5XTtyZXR1cm4gWj09PXZvaWQgMD90aGlzLl9kZWZhdWx0VmFsdWU6Wn1zZXQgdmFsdWUoWil7dGhpcy5fb2JqZWN0W3RoaXMuX2tleV09Wn1nZXQgZGVwKCl7cmV0dXJuIEp0KG9uKHRoaXMuX29iamVjdCksdGhpcy5fa2V5KX19ZnVuY3Rpb24gd28oTSxaLHZlKXtsZXQgY2U9TVtaXTtyZXR1cm4gaHIoY2UpP2NlOm5ldyBoaShNLFosdmUpfXZhciBfYTtjbGFzcyBTaXtjb25zdHJ1Y3RvcihaLHZlLGNlLGhlKXt0aGlzLl9zZXR0ZXI9dmUsdGhpcy5kZXA9dm9pZCAwLHRoaXMuX192X2lzUmVmPSEwLHRoaXNbX2FdPSExLHRoaXMuX2RpcnR5PSEwLHRoaXMuZWZmZWN0PW5ldyBScihaLCgpPT57dGhpcy5fZGlydHl8fCh0aGlzLl9kaXJ0eT0hMCxacih0aGlzKSl9KSx0aGlzLmVmZmVjdC5jb21wdXRlZD10aGlzLHRoaXMuZWZmZWN0LmFjdGl2ZT10aGlzLl9jYWNoZWFibGU9IWhlLHRoaXMuX192X2lzUmVhZG9ubHk9Y2V9Z2V0IHZhbHVlKCl7bGV0IFo9b24odGhpcyk7cmV0dXJuIGZpKFopLChaLl9kaXJ0eXx8IVouX2NhY2hlYWJsZSkmJihaLl9kaXJ0eT0hMSxaLl92YWx1ZT1aLmVmZmVjdC5ydW4oKSksWi5fdmFsdWV9c2V0IHZhbHVlKFope3RoaXMuX3NldHRlcihaKX19X2E9Il9fdl9pc1JlYWRvbmx5IjtmdW5jdGlvbiBMaShNLFosdmU9ITEpe2xldCBjZSxoZSxTdD1ULmlzRnVuY3Rpb24oTSk7cmV0dXJuIFN0PyhjZT1NLGhlPVQuTk9PUCk6KGNlPU0uZ2V0LGhlPU0uc2V0KSxuZXcgU2koY2UsaGUsU3R8fCFoZSx2ZSl9dmFyIHNyO2xldCBEcj1Qcm9taXNlLnJlc29sdmUoKSxubz1bXSwkbz0hMSxTbz1NPT57bm8ucHVzaChNKSwkb3x8KCRvPSEwLERyLnRoZW4oQ2kpKX0sQ2k9KCk9Pntmb3IobGV0IE09MDtNPG5vLmxlbmd0aDtNKyspbm9bTV0oKTtuby5sZW5ndGg9MCwkbz0hMX07Y2xhc3MgcGl7Y29uc3RydWN0b3IoWil7dGhpcy5kZXA9dm9pZCAwLHRoaXMuX2RpcnR5PSEwLHRoaXMuX192X2lzUmVmPSEwLHRoaXNbc3JdPSEwO2xldCB2ZSxjZT0hMSxoZT0hMTt0aGlzLmVmZmVjdD1uZXcgUnIoWixTdD0+e2lmKHRoaXMuZGVwKXtpZihTdCl2ZT10aGlzLl92YWx1ZSxjZT0hMDtlbHNlIGlmKCFoZSl7bGV0IEs9Y2U/dmU6dGhpcy5fdmFsdWU7aGU9ITAsY2U9ITEsU28oKCk9Pnt0aGlzLmVmZmVjdC5hY3RpdmUmJnRoaXMuX2dldCgpIT09SyYmWnIodGhpcyksaGU9ITF9KX1mb3IobGV0IEsgb2YgdGhpcy5kZXApSy5jb21wdXRlZCBpbnN0YW5jZW9mIHBpJiZLLnNjaGVkdWxlcighMCl9dGhpcy5fZGlydHk9ITB9KSx0aGlzLmVmZmVjdC5jb21wdXRlZD10aGlzfV9nZXQoKXtyZXR1cm4gdGhpcy5fZGlydHk/KHRoaXMuX2RpcnR5PSExLHRoaXMuX3ZhbHVlPXRoaXMuZWZmZWN0LnJ1bigpKTp0aGlzLl92YWx1ZX1nZXQgdmFsdWUoKXtyZXR1cm4gZmkodGhpcyksb24odGhpcykuX2dldCgpfX1zcj0iX192X2lzUmVhZG9ubHkiO2Z1bmN0aW9uIFVvKE0pe3JldHVybiBuZXcgcGkoTSl9cmV0dXJuIGIuRWZmZWN0U2NvcGU9ZCxiLklURVJBVEVfS0VZPUh0LGIuUmVhY3RpdmVFZmZlY3Q9UnIsYi5jb21wdXRlZD1MaSxiLmN1c3RvbVJlZj10YSxiLmRlZmVycmVkQ29tcHV0ZWQ9VW8sYi5lZmZlY3Q9cnIsYi5lZmZlY3RTY29wZT1tLGIuZW5hYmxlVHJhY2tpbmc9eG4sYi5nZXRDdXJyZW50U2NvcGU9V2UsYi5pc1Byb3h5PVRhLGIuaXNSZWFjdGl2ZT15byxiLmlzUmVhZG9ubHk9SXIsYi5pc1JlZj1ocixiLmlzU2hhbGxvdz1FaSxiLm1hcmtSYXc9RW8sYi5vblNjb3BlRGlzcG9zZT1QdCxiLnBhdXNlVHJhY2tpbmc9Um4sYi5wcm94eVJlZnM9WHIsYi5yZWFjdGl2ZT1lbyxiLnJlYWRvbmx5PW1hLGIucmVmPUthLGIucmVzZXRUcmFja2luZz1tcixiLnNoYWxsb3dSZWFjdGl2ZT1WbyxiLnNoYWxsb3dSZWFkb25seT1RbyxiLnNoYWxsb3dSZWY9SWEsYi5zdG9wPW5uLGIudG9SYXc9b24sYi50b1JlZj13byxiLnRvUmVmcz13aSxiLnRyYWNrPUtlLGIudHJpZ2dlcj13dCxiLnRyaWdnZXJSZWY9Wm4sYi51bnJlZj1hcixPYmplY3QuZGVmaW5lUHJvcGVydHkoYiwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksYn0oe30sdik7cmV0dXJuIGx9ZnVuY3Rpb24gcnYodil7dmFyIGw9ZnVuY3Rpb24oYil7InVzZSBzdHJpY3QiO2xldCBUPWAKYCxrPTQ0LEM9NTAsZD01MCxtPVsiJSIsIiUiXSxSPSIjMDA3YWZmIixXZT0vXihbYS16LV0rOik/XC9cLy9pLFB0PS9eZGF0YTouKiwuKi8sUXQ9IldFQl9JTlZPS0VfQVBQU0VSVklDRSIsTz0id3hzOi8vIixpZT0ianNvbjovLyIsVG49Ind4c01vZHVsZXMiLHFuPSJyZW5kZXJqc01vZHVsZXMiLG10PSJvblNob3ciLEo9Im9uSGlkZSIscmU9Im9uTGF1bmNoIixMbj0ib25FcnJvciIsY249Im9uVGhlbWVDaGFuZ2UiLEh0PSJvZmZUaGVtZUNoYW5nZSIsSW49Im9uS2V5Ym9hcmRIZWlnaHRDaGFuZ2UiLFJyPSJvblBhZ2VOb3RGb3VuZCIsSHI9Im9uVW5oYW5kbGVkUmVqZWN0aW9uIixycj0ib25Mb2FkIixubj0ib25SZWFkeSIsanQ9Im9uVW5sb2FkIixnbj0ib25Jbml0IixSbj0ib25TYXZlRXhpdFN0YXRlIix4bj0ib25SZXNpemUiLG1yPSJvbkJhY2tQcmVzcyIsS2U9Im9uUGFnZVNjcm9sbCIsZHQ9Im9uVGFiSXRlbVRhcCIsd3Q9Im9uUmVhY2hCb3R0b20iLHJuPSJvblB1bGxEb3duUmVmcmVzaCIsTm49Im9uU2hhcmVUaW1lbGluZSIsSnQ9Im9uQWRkVG9GYXZvcml0ZXMiLEZuPSJvblNoYXJlQXBwTWVzc2FnZSIsaXI9Im9uTmF2aWdhdGlvbkJhckJ1dHRvblRhcCIseGk9Im9uTmF2aWdhdGlvbkJhclNlYXJjaElucHV0Q2xpY2tlZCIsQmk9Im9uTmF2aWdhdGlvbkJhclNlYXJjaElucHV0Q2hhbmdlZCIsam49Im9uTmF2aWdhdGlvbkJhclNlYXJjaElucHV0Q29uZmlybWVkIixqcj0ib25OYXZpZ2F0aW9uQmFyU2VhcmNoSW5wdXRGb2N1c0NoYW5nZWQiLE1pPSJvbkFwcEVudGVyRm9yZWdyb3VuZCIscGE9Im9uQXBwRW50ZXJCYWNrZ3JvdW5kIixKbz0ib25XeHNJbnZva2VDYWxsTWV0aG9kIjtmdW5jdGlvbiB4cihLKXtyZXR1cm4hIUsuYXBwQ29udGV4dH1mdW5jdGlvbiBCcihLKXtyZXR1cm4gSyYmKHhyKEspP0sucHJveHk6Syl9ZnVuY3Rpb24gTXIoSyl7cmV0dXJuIEsubm9kZVR5cGU9PT0xfWZ1bmN0aW9uIGZyKEssWT0hMSl7bGV0e3Zub2RlOnVlfT1LO2lmKE1yKHVlLmVsKSlyZXR1cm4gWT91ZS5lbD9bdWUuZWxdOltdOnVlLmVsO2xldHtzdWJUcmVlOkJlfT1LO2lmKEJlLnNoYXBlRmxhZyYxNil7bGV0IGx0PUJlLmNoaWxkcmVuLmZpbHRlcih6dD0+enQuZWwmJk1yKHp0LmVsKSk7aWYobHQubGVuZ3RoPjApcmV0dXJuIFk/bHQubWFwKHp0PT56dC5lbCk6bHRbMF0uZWx9cmV0dXJuIFk/dWUuZWw/W3VlLmVsXTpbXTp1ZS5lbH1sZXQgZ2E9MDtmdW5jdGlvbiBabyhLLC4uLlkpe2xldCB1ZT1EYXRlLm5vdygpLEJlPWdhP3VlLWdhOjA7cmV0dXJuIGdhPXVlLGBbJHt1ZX1dWyR7QmV9bXNdWyR7S31dXHVGRjFBJHtZLm1hcChsdD0+SlNPTi5zdHJpbmdpZnkobHQpKS5qb2luKCIgIil9YH1mdW5jdGlvbiBobyhLKXtsZXQgWT1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiB1ZT0+WVt1ZV18fChZW3VlXT1LKHVlKSl9ZnVuY3Rpb24gcG8oSyl7cmV0dXJuIGhvKEspfWZ1bmN0aW9uIGdvKEs9IiIpe3JldHVybigiIitLKS5yZXBsYWNlKC9bXlx4MDAtXHhmZl0vZywiKioiKS5sZW5ndGh9ZnVuY3Rpb24gdmEoSyl7cmV0dXJuIEsuaW5kZXhPZigiLyIpPT09MH1mdW5jdGlvbiBCbyhLKXtyZXR1cm4gdmEoSyk/SzoiLyIrS31mdW5jdGlvbiBLbihLKXtyZXR1cm4gdmEoSyk/Sy5zbGljZSgxKTpLfWxldCBfcj0oSyxZKT0+e2xldCB1ZTtmb3IobGV0IEJlPTA7QmU8Sy5sZW5ndGg7QmUrKyl1ZT1LW0JlXShZKTtyZXR1cm4gdWV9O2Z1bmN0aW9uIGRyKEssWT1udWxsKXtsZXQgdWU7cmV0dXJuKC4uLkJlKT0+KEsmJih1ZT1LLmFwcGx5KFksQmUpLEs9bnVsbCksdWUpfWZ1bmN0aW9uIERuKEssWSl7Sz1LfHx7fSxiLmlzU3RyaW5nKFkpJiYoWT17ZXJyTXNnOll9KSwvOm9rJC8udGVzdChZLmVyck1zZyk/Yi5pc0Z1bmN0aW9uKEsuc3VjY2VzcykmJksuc3VjY2VzcyhZKTpiLmlzRnVuY3Rpb24oSy5mYWlsKSYmSy5mYWlsKFkpLGIuaXNGdW5jdGlvbihLLmNvbXBsZXRlKSYmSy5jb21wbGV0ZShZKX1mdW5jdGlvbiBYaShLKXtsZXQgWT17fTtyZXR1cm4gYi5pc1BsYWluT2JqZWN0KEspJiZPYmplY3Qua2V5cyhLKS5zb3J0KCkuZm9yRWFjaCh1ZT0+e2xldCBCZT11ZTtZW0JlXT1LW0JlXX0pLE9iamVjdC5rZXlzKFkpP1k6S31sZXQgWG89ZW5jb2RlVVJJQ29tcG9uZW50O2Z1bmN0aW9uIE1vKEssWT1Ybyl7bGV0IHVlPUs/T2JqZWN0LmtleXMoSykubWFwKEJlPT57bGV0IGx0PUtbQmVdO3JldHVybiB0eXBlb2YgbHQ9PT12b2lkIDB8fGx0PT09bnVsbD9sdD0iIjpiLmlzUGxhaW5PYmplY3QobHQpJiYobHQ9SlNPTi5zdHJpbmdpZnkobHQpKSxZKEJlKSsiPSIrWShsdCl9KS5maWx0ZXIoQmU9PkJlLmxlbmd0aD4wKS5qb2luKCImIik6bnVsbDtyZXR1cm4gdWU/YD8ke3VlfWA6IiJ9ZnVuY3Rpb24gb2koSyl7dHJ5e3JldHVybiBkZWNvZGVVUklDb21wb25lbnQoIiIrSyl9Y2F0Y2goWSl7fXJldHVybiIiK0t9bGV0IGFpPS9cKy9nO2Z1bmN0aW9uIFFpKEspe2xldCBZPXt9O2lmKEs9PT0iInx8Sz09PSI/IilyZXR1cm4gWTtsZXQgQmU9KEtbMF09PT0iPyI/Sy5zbGljZSgxKTpLKS5zcGxpdCgiJiIpO2ZvcihsZXQgbHQ9MDtsdDxCZS5sZW5ndGg7KytsdCl7bGV0IHp0PUJlW2x0XS5yZXBsYWNlKGFpLCIgIiksU249enQuaW5kZXhPZigiPSIpLFhuPW9pKFNuPDA/enQ6enQuc2xpY2UoMCxTbikpLFFyPVNuPDA/bnVsbDpvaSh6dC5zbGljZShTbisxKSk7aWYoWG4gaW4gWSl7bGV0IExyPVlbWG5dO2IuaXNBcnJheShMcil8fChMcj1ZW1huXT1bTHJdKSxMci5wdXNoKFFyKX1lbHNlIFlbWG5dPVFyfXJldHVybiBZfWZ1bmN0aW9uIFRyKEspe2xldFtZLHVlXT1LLnNwbGl0KCI/IiwyKTtyZXR1cm57cGF0aDpZLHF1ZXJ5OlFpKHVlfHwiIil9fWZ1bmN0aW9uIGtuKEspe2xldCBZPXt9O3JldHVybiBLJiZPYmplY3Qua2V5cyhLKS5mb3JFYWNoKHVlPT57dWUuaW5kZXhPZigiZGF0YS0iKT09PTAmJihZW3VlLnJlcGxhY2UoImRhdGEtIiwiIildPUtbdWVdKX0pLFl9Y2xhc3Mgdm8gZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihZKXtzdXBlcihZKTt0aGlzLm5hbWU9IkRPTUV4Y2VwdGlvbiJ9fWZ1bmN0aW9uIG1vKEssWSl7cmV0dXJuIFkmJihZLmNhcHR1cmUmJihLKz0iQ2FwdHVyZSIpLFkub25jZSYmKEsrPSJPbmNlIiksWS5wYXNzaXZlJiYoSys9IlBhc3NpdmUiKSksYG9uJHtiLmNhcGl0YWxpemUoYi5jYW1lbGl6ZShLKSl9YH1jbGFzcyBEb3tjb25zdHJ1Y3RvcihZLHVlKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITEsdGhpcy50aW1lU3RhbXA9RGF0ZS5ub3coKSx0aGlzLl9zdG9wPSExLHRoaXMuX2VuZD0hMSx0aGlzLnR5cGU9WSx0aGlzLmJ1YmJsZXM9ISF1ZS5idWJibGVzLHRoaXMuY2FuY2VsYWJsZT0hIXVlLmNhbmNlbGFibGV9cHJldmVudERlZmF1bHQoKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITB9c3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl7dGhpcy5fZW5kPXRoaXMuX3N0b3A9ITB9c3RvcFByb3BhZ2F0aW9uKCl7dGhpcy5fc3RvcD0hMH19ZnVuY3Rpb24gX28oSyl7aWYoSyBpbnN0YW5jZW9mIERvKXJldHVybiBLO2xldFtZXT15bihLLnR5cGUpLHVlPW5ldyBEbyhZLHtidWJibGVzOiExLGNhbmNlbGFibGU6ITF9KTtyZXR1cm4gYi5leHRlbmQodWUsSyksdWV9Y2xhc3MgTG97Y29uc3RydWN0b3IoKXt0aGlzLmxpc3RlbmVycz1PYmplY3QuY3JlYXRlKG51bGwpfWRpc3BhdGNoRXZlbnQoWSl7bGV0IHVlPXRoaXMubGlzdGVuZXJzW1kudHlwZV07aWYoIXVlKXJldHVybiExO2xldCBCZT1fbyhZKSxsdD11ZS5sZW5ndGg7Zm9yKGxldCB6dD0wO3p0PGx0JiYodWVbenRdLmNhbGwodGhpcyxCZSksIUJlLl9lbmQpO3p0KyspO3JldHVybiBCZS5jYW5jZWxhYmxlJiZCZS5kZWZhdWx0UHJldmVudGVkfWFkZEV2ZW50TGlzdGVuZXIoWSx1ZSxCZSl7WT1tbyhZLEJlKSwodGhpcy5saXN0ZW5lcnNbWV18fCh0aGlzLmxpc3RlbmVyc1tZXT1bXSkpLnB1c2godWUpfXJlbW92ZUV2ZW50TGlzdGVuZXIoWSx1ZSxCZSl7WT1tbyhZLEJlKTtsZXQgbHQ9dGhpcy5saXN0ZW5lcnNbWV07aWYoIWx0KXJldHVybjtsZXQgenQ9bHQuaW5kZXhPZih1ZSk7enQ+LTEmJmx0LnNwbGljZSh6dCwxKX19bGV0IHNpPS8oPzpPbmNlfFBhc3NpdmV8Q2FwdHVyZSkkLztmdW5jdGlvbiB5bihLKXtsZXQgWTtpZihzaS50ZXN0KEspKXtZPXt9O2xldCB1ZTtmb3IoO3VlPUsubWF0Y2goc2kpOylLPUsuc2xpY2UoMCxLLmxlbmd0aC11ZVswXS5sZW5ndGgpLFlbdWVbMF0udG9Mb3dlckNhc2UoKV09ITB9cmV0dXJuW2IuaHlwaGVuYXRlKEsuc2xpY2UoMikpLFldfWxldCBFbj0oKCk9Pih7c3RvcDoxLHByZXZlbnQ6MTw8MSxzZWxmOjE8PDJ9KSkoKTtmdW5jdGlvbiBsaShLKXtsZXQgWT0wO3JldHVybiBLLmluY2x1ZGVzKCJzdG9wIikmJihZfD1Fbi5zdG9wKSxLLmluY2x1ZGVzKCJwcmV2ZW50IikmJihZfD1Fbi5wcmV2ZW50KSxLLmluY2x1ZGVzKCJzZWxmIikmJihZfD1Fbi5zZWxmKSxZfWxldCBGbz0wLHFhPTEsSm49Myxvcj04O2Z1bmN0aW9uIGNpKEssWSl7bGV0e3BhcmVudE5vZGU6dWV9PUs7aWYoIXVlKXJldHVybiBudWxsO2xldHtjaGlsZE5vZGVzOkJlfT11ZTtyZXR1cm4gQmVbQmUuaW5kZXhPZihLKSsoWT09PSJuIj8xOi0xKV18fG51bGx9ZnVuY3Rpb24gQnQoSyl7bGV0e3BhcmVudE5vZGU6WX09SztpZihZKXtsZXR7Y2hpbGROb2Rlczp1ZX09WSxCZT11ZS5pbmRleE9mKEspO0JlPi0xJiYoSy5wYXJlbnROb2RlPW51bGwsdWUuc3BsaWNlKEJlLDEpKX19ZnVuY3Rpb24geGUoSyl7IUsubm9kZUlkJiZLLnBhZ2VOb2RlJiYoSy5ub2RlSWQ9Sy5wYWdlTm9kZS5nZW5JZCgpKX1jbGFzcyBibyBleHRlbmRzIExve2NvbnN0cnVjdG9yKFksdWUsQmUpe3N1cGVyKCk7aWYodGhpcy5wYWdlTm9kZT1udWxsLHRoaXMucGFyZW50Tm9kZT1udWxsLHRoaXMuX3RleHQ9bnVsbCxCZSl7bGV0e3BhZ2VOb2RlOmx0fT1CZTtsdCYmKHRoaXMucGFnZU5vZGU9bHQsdGhpcy5ub2RlSWQ9bHQuZ2VuSWQoKSwhbHQuaXNVbm1vdW50ZWQmJmx0Lm9uQ3JlYXRlKHRoaXMsdWUpKX10aGlzLm5vZGVUeXBlPVksdGhpcy5ub2RlTmFtZT11ZSx0aGlzLmNoaWxkTm9kZXM9W119Z2V0IGZpcnN0Q2hpbGQoKXtyZXR1cm4gdGhpcy5jaGlsZE5vZGVzWzBdfHxudWxsfWdldCBsYXN0Q2hpbGQoKXtsZXR7Y2hpbGROb2RlczpZfT10aGlzLHVlPVkubGVuZ3RoO3JldHVybiB1ZT9ZW3VlLTFdOm51bGx9Z2V0IG5leHRTaWJsaW5nKCl7cmV0dXJuIGNpKHRoaXMsIm4iKX1nZXQgbm9kZVZhbHVlKCl7cmV0dXJuIG51bGx9c2V0IG5vZGVWYWx1ZShZKXt9Z2V0IHRleHRDb250ZW50KCl7cmV0dXJuIHRoaXMuX3RleHR8fCIifXNldCB0ZXh0Q29udGVudChZKXt0aGlzLl90ZXh0PVksdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQmJnRoaXMucGFnZU5vZGUub25UZXh0Q29udGVudCh0aGlzLFkpfWdldCBwYXJlbnRFbGVtZW50KCl7bGV0e3BhcmVudE5vZGU6WX09dGhpcztyZXR1cm4gWSYmWS5ub2RlVHlwZT09PXFhP1k6bnVsbH1nZXQgcHJldmlvdXNTaWJsaW5nKCl7cmV0dXJuIGNpKHRoaXMsInAiKX1hcHBlbmRDaGlsZChZKXtyZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoWSxudWxsKX1jbG9uZU5vZGUoWSl7bGV0IHVlPWIuZXh0ZW5kKE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpKSx0aGlzKSx7YXR0cmlidXRlczpCZX09dWU7cmV0dXJuIEJlJiYodWUuYXR0cmlidXRlcz1iLmV4dGVuZCh7fSxCZSkpLFkmJih1ZS5jaGlsZE5vZGVzPXVlLmNoaWxkTm9kZXMubWFwKGx0PT5sdC5jbG9uZU5vZGUoITApKSksdWV9aW5zZXJ0QmVmb3JlKFksdWUpe0J0KFkpLFkucGFnZU5vZGU9dGhpcy5wYWdlTm9kZSxZLnBhcmVudE5vZGU9dGhpcyx4ZShZKTtsZXR7Y2hpbGROb2RlczpCZX09dGhpcztpZih1ZSl7bGV0IGx0PUJlLmluZGV4T2YodWUpO2lmKGx0PT09LTEpdGhyb3cgbmV3IHZvKCJGYWlsZWQgdG8gZXhlY3V0ZSAnaW5zZXJ0QmVmb3JlJyBvbiAnTm9kZSc6IFRoZSBub2RlIGJlZm9yZSB3aGljaCB0aGUgbmV3IG5vZGUgaXMgdG8gYmUgaW5zZXJ0ZWQgaXMgbm90IGEgY2hpbGQgb2YgdGhpcyBub2RlLiIpO0JlLnNwbGljZShsdCwwLFkpfWVsc2UgQmUucHVzaChZKTtyZXR1cm4gdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQ/dGhpcy5wYWdlTm9kZS5vbkluc2VydEJlZm9yZSh0aGlzLFksdWUpOll9cmVtb3ZlQ2hpbGQoWSl7bGV0e2NoaWxkTm9kZXM6dWV9PXRoaXMsQmU9dWUuaW5kZXhPZihZKTtpZihCZT09PS0xKXRocm93IG5ldyB2bygiRmFpbGVkIHRvIGV4ZWN1dGUgJ3JlbW92ZUNoaWxkJyBvbiAnTm9kZSc6IFRoZSBub2RlIHRvIGJlIHJlbW92ZWQgaXMgbm90IGEgY2hpbGQgb2YgdGhpcyBub2RlLiIpO3JldHVybiBZLnBhcmVudE5vZGU9bnVsbCx1ZS5zcGxpY2UoQmUsMSksdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQ/dGhpcy5wYWdlTm9kZS5vblJlbW92ZUNoaWxkKFkpOll9fWxldCBlbz0iY2xhc3MiLFZvPSJzdHlsZSIsbWE9Ii52T3duZXJJZCIsUW89Ii52UmVuZGVyanMiO2NsYXNzIERpIGV4dGVuZHMgYm97Y29uc3RydWN0b3IoWSx1ZSxCZSl7c3VwZXIoWSx1ZSxCZSk7dGhpcy5hdHRyaWJ1dGVzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5zdHlsZT1udWxsLHRoaXMudlNob3c9bnVsbCx0aGlzLl9odG1sPW51bGx9Z2V0IGNsYXNzTmFtZSgpe3JldHVybiB0aGlzLmF0dHJpYnV0ZXNbZW9dfHwiIn1zZXQgY2xhc3NOYW1lKFkpe3RoaXMuc2V0QXR0cmlidXRlKGVvLFkpfWdldCBpbm5lckhUTUwoKXtyZXR1cm4iIn1zZXQgaW5uZXJIVE1MKFkpe3RoaXMuX2h0bWw9WX1hZGRFdmVudExpc3RlbmVyKFksdWUsQmUpe3N1cGVyLmFkZEV2ZW50TGlzdGVuZXIoWSx1ZSxCZSksdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQmJih1ZS53eHNFdmVudD90aGlzLnBhZ2VOb2RlLm9uQWRkV3hzRXZlbnQodGhpcyxtbyhZLEJlKSx1ZS53eHNFdmVudCxsaSh1ZS5tb2RpZmllcnN8fFtdKSk6dGhpcy5wYWdlTm9kZS5vbkFkZEV2ZW50KHRoaXMsbW8oWSxCZSksbGkodWUubW9kaWZpZXJzfHxbXSkpKX1yZW1vdmVFdmVudExpc3RlbmVyKFksdWUsQmUpe3N1cGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoWSx1ZSxCZSksdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQmJnRoaXMucGFnZU5vZGUub25SZW1vdmVFdmVudCh0aGlzLG1vKFksQmUpKX1nZXRBdHRyaWJ1dGUoWSl7cmV0dXJuIFk9PT1Wbz90aGlzLnN0eWxlOnRoaXMuYXR0cmlidXRlc1tZXX1yZW1vdmVBdHRyaWJ1dGUoWSl7WT09Vm8/dGhpcy5zdHlsZT1udWxsOmRlbGV0ZSB0aGlzLmF0dHJpYnV0ZXNbWV0sdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQmJnRoaXMucGFnZU5vZGUub25SZW1vdmVBdHRyaWJ1dGUodGhpcyxZKX1zZXRBdHRyaWJ1dGUoWSx1ZSl7WT09PVZvP3RoaXMuc3R5bGU9dWU6dGhpcy5hdHRyaWJ1dGVzW1ldPXVlLHRoaXMucGFnZU5vZGUmJiF0aGlzLnBhZ2VOb2RlLmlzVW5tb3VudGVkJiZ0aGlzLnBhZ2VOb2RlLm9uU2V0QXR0cmlidXRlKHRoaXMsWSx1ZSl9dG9KU09OKHthdHRyOlksbm9ybWFsaXplOnVlfT17fSl7bGV0e2F0dHJpYnV0ZXM6QmUsc3R5bGU6bHQsbGlzdGVuZXJzOnp0LF90ZXh0OlNufT10aGlzLFhuPXt9O09iamVjdC5rZXlzKEJlKS5sZW5ndGgmJihYbi5hPXVlP3VlKEJlKTpCZSk7bGV0IFFyPU9iamVjdC5rZXlzKHp0KTtpZihRci5sZW5ndGgpe2xldCBMcixybz17fTtRci5mb3JFYWNoKGJyPT57bGV0IGdpPXp0W2JyXTtpZihnaS5sZW5ndGgpe2xldHt3eHNFdmVudDppbyxtb2RpZmllcnM6b299PWdpWzBdLG5hPWxpKG9vfHxbXSk7aW8/KExyfHwoTHI9e30pLExyW2JyXT1bdWU/dWUoaW8pOmlvLG5hXSk6cm9bYnJdPW5hfX0pLFhuLmU9dWU/dWUocm8sITEpOnJvLExyJiYoWG4udz11ZT91ZShMciwhMSk6THIpfXJldHVybiBsdCE9PW51bGwmJihYbi5zPXVlP3VlKGx0KTpsdCksWXx8KFhuLmk9dGhpcy5ub2RlSWQsWG4ubj10aGlzLm5vZGVOYW1lKSxTbiE9PW51bGwmJihYbi50PXVlP3VlKFNuKTpTbiksWG59fWNsYXNzIHlvIGV4dGVuZHMgYm97Y29uc3RydWN0b3IoWSx1ZSl7c3VwZXIob3IsIiNjb21tZW50Iix1ZSk7dGhpcy5fdGV4dD0iIn10b0pTT04oWT17fSl7cmV0dXJuIFkuYXR0cj97fTp7aTp0aGlzLm5vZGVJZH19fWNsYXNzIElyIGV4dGVuZHMgRGl7Y29uc3RydWN0b3IoWSx1ZSl7c3VwZXIocWEsWS50b1VwcGVyQ2FzZSgpLHVlKTt0aGlzLnRhZ05hbWU9dGhpcy5ub2RlTmFtZX19Y2xhc3MgRWkgZXh0ZW5kcyBJcntnZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoInZhbHVlIil9c2V0IHZhbHVlKFkpe3RoaXMuc2V0QXR0cmlidXRlKCJ2YWx1ZSIsWSl9fWNsYXNzIFRhIGV4dGVuZHMgRWl7fWNsYXNzIG9uIGV4dGVuZHMgRGl7Y29uc3RydWN0b3IoWSx1ZSl7c3VwZXIoSm4sIiN0ZXh0Iix1ZSk7dGhpcy5fdGV4dD1ZfWdldCBub2RlVmFsdWUoKXtyZXR1cm4gdGhpcy5fdGV4dHx8IiJ9c2V0IG5vZGVWYWx1ZShZKXt0aGlzLl90ZXh0PVksdGhpcy5wYWdlTm9kZSYmIXRoaXMucGFnZU5vZGUuaXNVbm1vdW50ZWQmJnRoaXMucGFnZU5vZGUub25Ob2RlVmFsdWUodGhpcyxZKX19bGV0IEVvPXtBRDpbImRhdGEiXSwiQUQtRFJBVyI6WyJkYXRhIl0sIkxJVkUtUExBWUVSIjpbInBpY3R1cmUtaW4tcGljdHVyZS1tb2RlIl0sTUFQOlsibWFya2VycyIsInBvbHlsaW5lIiwiY2lyY2xlcyIsImNvbnRyb2xzIiwiaW5jbHVkZS1wb2ludHMiLCJwb2x5Z29ucyJdLFBJQ0tFUjpbInJhbmdlIiwidmFsdWUiXSwiUElDS0VSLVZJRVciOlsidmFsdWUiXSwiUklDSC1URVhUIjpbIm5vZGVzIl0sVklERU86WyJkYW5tdS1saXN0IiwiaGVhZGVyIl0sIldFQi1WSUVXIjpbIndlYnZpZXctc3R5bGVzIl19LHVpPVsiYW5pbWF0aW9uIl0sd249KEssWSk9PntpZih1aS5pbmRleE9mKFkpPi0xKXJldHVybiEwO2xldCB1ZT1Fb1tLLm5vZGVOYW1lXTtyZXR1cm4hISh1ZSYmdWUuaW5kZXhPZihZKT4tMSl9LGZpPTEsWnI9Mixocj0zLEthPTQsSWE9NSxlYT02LHRvPTcsWm49OCxhcj05LFZuPTEwLFhyPTEyLGRpPTE1LHRhPTIwO2Z1bmN0aW9uIHdpKEssWSx7Y2xlYXJUaW1lb3V0OnVlLHNldFRpbWVvdXQ6QmV9KXtsZXQgbHQsenQ9ZnVuY3Rpb24oKXt1ZShsdCksbHQ9QmUoKCk9PksuYXBwbHkodGhpcyxhcmd1bWVudHMpLFkpfTtyZXR1cm4genQuY2FuY2VsPWZ1bmN0aW9uKCl7dWUobHQpfSx6dH1jbGFzcyBoaXtjb25zdHJ1Y3RvcihZLHVlKXt0aGlzLmlkPVksdGhpcy5saXN0ZW5lcj17fSx0aGlzLmVtaXRDYWNoZT1bXSx1ZSYmT2JqZWN0LmtleXModWUpLmZvckVhY2goQmU9Pnt0aGlzLm9uKEJlLHVlW0JlXSl9KX1lbWl0KFksLi4udWUpe2xldCBCZT10aGlzLmxpc3RlbmVyW1ldO2lmKCFCZSlyZXR1cm4gdGhpcy5lbWl0Q2FjaGUucHVzaCh7ZXZlbnROYW1lOlksYXJnczp1ZX0pO0JlLmZvckVhY2gobHQ9PntsdC5mbi5hcHBseShsdC5mbix1ZSl9KSx0aGlzLmxpc3RlbmVyW1ldPUJlLmZpbHRlcihsdD0+bHQudHlwZSE9PSJvbmNlIil9b24oWSx1ZSl7dGhpcy5fYWRkTGlzdGVuZXIoWSwib24iLHVlKSx0aGlzLl9jbGVhckNhY2hlKFkpfW9uY2UoWSx1ZSl7dGhpcy5fYWRkTGlzdGVuZXIoWSwib25jZSIsdWUpLHRoaXMuX2NsZWFyQ2FjaGUoWSl9b2ZmKFksdWUpe2xldCBCZT10aGlzLmxpc3RlbmVyW1ldO2lmKCEhQmUpaWYodWUpZm9yKGxldCBsdD0wO2x0PEJlLmxlbmd0aDspQmVbbHRdLmZuPT09dWUmJihCZS5zcGxpY2UobHQsMSksbHQtLSksbHQrKztlbHNlIGRlbGV0ZSB0aGlzLmxpc3RlbmVyW1ldfV9jbGVhckNhY2hlKFkpe2ZvcihsZXQgdWU9MDt1ZTx0aGlzLmVtaXRDYWNoZS5sZW5ndGg7dWUrKyl7bGV0IEJlPXRoaXMuZW1pdENhY2hlW3VlXSxsdD1ZP0JlLmV2ZW50TmFtZT09PVk/WTpudWxsOkJlLmV2ZW50TmFtZTtpZighbHQpY29udGludWU7aWYodHlwZW9mIHRoaXMuZW1pdC5hcHBseSh0aGlzLFtsdCwuLi5CZS5hcmdzXSk9PSJudW1iZXIiKXt0aGlzLmVtaXRDYWNoZS5wb3AoKTtjb250aW51ZX10aGlzLmVtaXRDYWNoZS5zcGxpY2UodWUsMSksdWUtLX19X2FkZExpc3RlbmVyKFksdWUsQmUpeyh0aGlzLmxpc3RlbmVyW1ldfHwodGhpcy5saXN0ZW5lcltZXT1bXSkpLnB1c2goe2ZuOkJlLHR5cGU6dWV9KX19bGV0IHdvPVtnbixycixtdCxKLGp0LG1yLEtlLGR0LHd0LHJuLE5uLEZuLEp0LFJuLGlyLHhpLEJpLGpuLGpyXSxfYT1bcnIsbXRdO2Z1bmN0aW9uIFNpKEspe3JldHVybiBfYS5pbmRleE9mKEspPi0xfWZ1bmN0aW9uIExpKEspe3JldHVybiB3by5pbmRleE9mKEspPi0xfWxldCBzcj1bbXQsSixyZSxMbixjbixScixIcixnbixycixubixqdCx4bixtcixLZSxkdCx3dCxybixObixKdCxGbixSbixpcix4aSxCaSxqbixqcl07ZnVuY3Rpb24gRHIoSyxZLHVlPSEwKXtyZXR1cm4gdWUmJiFiLmlzRnVuY3Rpb24oWSk/ITE6c3IuaW5kZXhPZihLKT4tMT8hMDpLLmluZGV4T2YoIm9uIik9PT0wfWxldCBubywkbz1bXTtmdW5jdGlvbiBTbyhLKXtpZihubylyZXR1cm4gSyhubyk7JG8ucHVzaChLKX1mdW5jdGlvbiBDaShLKXtubz1LLCRvLmZvckVhY2goWT0+WShLKSl9bGV0IHBpPWRyKChLLFkpPT57aWYoYi5pc0Z1bmN0aW9uKEsuX2NvbXBvbmVudC5vbkVycm9yKSlyZXR1cm4gWShLKX0pLFVvPWZ1bmN0aW9uKCl7fTtVby5wcm90b3R5cGU9e29uOmZ1bmN0aW9uKEssWSx1ZSl7dmFyIEJlPXRoaXMuZXx8KHRoaXMuZT17fSk7cmV0dXJuKEJlW0tdfHwoQmVbS109W10pKS5wdXNoKHtmbjpZLGN0eDp1ZX0pLHRoaXN9LG9uY2U6ZnVuY3Rpb24oSyxZLHVlKXt2YXIgQmU9dGhpcztmdW5jdGlvbiBsdCgpe0JlLm9mZihLLGx0KSxZLmFwcGx5KHVlLGFyZ3VtZW50cyl9cmV0dXJuIGx0Ll89WSx0aGlzLm9uKEssbHQsdWUpfSxlbWl0OmZ1bmN0aW9uKEspe3ZhciBZPVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLHVlPSgodGhpcy5lfHwodGhpcy5lPXt9KSlbS118fFtdKS5zbGljZSgpLEJlPTAsbHQ9dWUubGVuZ3RoO2ZvcihCZTtCZTxsdDtCZSsrKXVlW0JlXS5mbi5hcHBseSh1ZVtCZV0uY3R4LFkpO3JldHVybiB0aGlzfSxvZmY6ZnVuY3Rpb24oSyxZKXt2YXIgdWU9dGhpcy5lfHwodGhpcy5lPXt9KSxCZT11ZVtLXSxsdD1bXTtpZihCZSYmWSlmb3IodmFyIHp0PTAsU249QmUubGVuZ3RoO3p0PFNuO3p0KyspQmVbenRdLmZuIT09WSYmQmVbenRdLmZuLl8hPT1ZJiZsdC5wdXNoKEJlW3p0XSk7cmV0dXJuIGx0Lmxlbmd0aD91ZVtLXT1sdDpkZWxldGUgdWVbS10sdGhpc319O3ZhciBNPVVvO2xldCBaPXtibGFjazoicmdiYSgwLDAsMCwwLjQpIix3aGl0ZToicmdiYSgyNTUsMjU1LDI1NSwwLjQpIn07ZnVuY3Rpb24gdmUoSyl7cmV0dXJuIEsmJksgaW4gWj9aW0tdOkt9ZnVuY3Rpb24gY2UoSyl7cmV0dXJuIEs9PT0iYmxhY2siPyIjMDAwMDAwIjoiI2ZmZmZmZiJ9ZnVuY3Rpb24gaGUoSyxZPXt9LHVlPSJsaWdodCIpe2xldCBCZT1ZW3VlXSxsdD17fTtyZXR1cm4gQmU/KE9iamVjdC5rZXlzKEspLmZvckVhY2goenQ9PntsZXQgU249S1t6dF07bHRbenRdPSgoKT0+e2lmKGIuaXNQbGFpbk9iamVjdChTbikpcmV0dXJuIGhlKFNuLFksdWUpO2lmKGIuaXNBcnJheShTbikpcmV0dXJuIFNuLm1hcChYbj0+Yi5pc1BsYWluT2JqZWN0KFhuKT9oZShYbixZLHVlKTpYbik7aWYoYi5pc1N0cmluZyhTbikmJlNuLnN0YXJ0c1dpdGgoIkAiKSl7bGV0IFhuPVNuLnJlcGxhY2UoIkAiLCIiKSxRcj1CZVtYbl18fFNuO3N3aXRjaCh6dCl7Y2FzZSJ0aXRsZUNvbG9yIjpRcj1jZShRcik7YnJlYWs7Y2FzZSJib3JkZXJTdHlsZSI6UXI9dmUoUXIpO2JyZWFrfXJldHVybiBRcn1yZXR1cm4gU259KSgpfSksbHQpOkt9dmFyIFN0PXtpbnZva2VBcnJheUZuczpfcixpc1VuaUxpZmVjeWNsZUhvb2s6RHIsT05fTE9BRDpycixPTl9TSE9XOm10LExJTkVGRUVEOlQsUkVOREVSSlNfTU9EVUxFUzpxbixmb3JtYXRMb2c6Wm8sV1hTX1BST1RPQ09MOk8sV1hTX01PRFVMRVM6VG4sVW5pTGlmZWN5Y2xlSG9va3M6c3IsT05fRVJST1I6TG4saW52b2tlQ3JlYXRlRXJyb3JIYW5kbGVyOnBpLGludm9rZUNyZWF0ZVZ1ZUFwcEhvb2s6Q2kscGFyc2VOVnVlRGF0YXNldDprbixvbmNlOmRyLEkxOE5fSlNPTl9ERUxJTUlURVJTOm0sRW1pdHRlcjpNLG5vcm1hbGl6ZVN0eWxlczpoZSxhZGRMZWFkaW5nU2xhc2g6Qm8scmVzb2x2ZUNvbXBvbmVudEluc3RhbmNlOkJyLHJlbW92ZUxlYWRpbmdTbGFzaDpLbixPTl9SRVNJWkU6eG4sT05fQVBQX0VOVEVSX0ZPUkVHUk9VTkQ6TWksT05fQVBQX0VOVEVSX0JBQ0tHUk9VTkQ6cGEsT05fSElERTpKLE9OX1BBR0VfU0NST0xMOktlLE9OX1JFQUNIX0JPVFRPTTp3dCxTQ0hFTUVfUkU6V2UsREFUQV9SRTpQdCxjYWNoZVN0cmluZ0Z1bmN0aW9uOnBvLHBhcnNlUXVlcnk6UWksY2FsbE9wdGlvbnM6RG4sT05fVU5IQU5ETEVfUkVKRUNUSU9OOkhyLE9OX1BBR0VfTk9UX0ZPVU5EOlJyLFBSSU1BUllfQ09MT1I6UixnZXRMZW46Z28sT05fVEhFTUVfQ0hBTkdFOmNuLFRBQkJBUl9IRUlHSFQ6QyxOQVZCQVJfSEVJR0hUOmssc29ydE9iamVjdDpYaSxPRkZfVEhFTUVfQ0hBTkdFOkh0LE9OX0tFWUJPQVJEX0hFSUdIVF9DSEFOR0U6SW4sbm9ybWFsaXplVGFiQmFyU3R5bGVzOnZlLE9OX05BVklHQVRJT05fQkFSX0JVVFRPTl9UQVA6aXIsc3RyaW5naWZ5UXVlcnk6TW8sZGVib3VuY2U6d2ksT05fUFVMTF9ET1dOX1JFRlJFU0g6cm4sT05fTkFWSUdBVElPTl9CQVJfU0VBUkNIX0lOUFVUX0NIQU5HRUQ6QmksT05fTkFWSUdBVElPTl9CQVJfU0VBUkNIX0lOUFVUX0NPTkZJUk1FRDpqbixPTl9OQVZJR0FUSU9OX0JBUl9TRUFSQ0hfSU5QVVRfQ0xJQ0tFRDp4aSxPTl9OQVZJR0FUSU9OX0JBUl9TRUFSQ0hfSU5QVVRfRk9DVVNfQ0hBTkdFRDpqcixPTl9CQUNLX1BSRVNTOm1yLFVuaU5vZGU6Ym8sTk9ERV9UWVBFX1BBR0U6Rm8sQUNUSU9OX1RZUEVfUEFHRV9DUkVBVEU6ZmksQUNUSU9OX1RZUEVfUEFHRV9DUkVBVEVEOlpyLEFDVElPTl9UWVBFX1BBR0VfU0NST0xMOmRpLEFDVElPTl9UWVBFX0lOU0VSVDpLYSxBQ1RJT05fVFlQRV9DUkVBVEU6aHIsQUNUSU9OX1RZUEVfUkVNT1ZFOklhLEFDVElPTl9UWVBFX0FERF9FVkVOVDpabixBQ1RJT05fVFlQRV9BRERfV1hTX0VWRU5UOlhyLEFDVElPTl9UWVBFX1JFTU9WRV9FVkVOVDphcixBQ1RJT05fVFlQRV9TRVRfQVRUUklCVVRFOmVhLEFDVElPTl9UWVBFX1JFTU9WRV9BVFRSSUJVVEU6dG8sQUNUSU9OX1RZUEVfU0VUX1RFWFQ6Vm4sT05fUkVBRFk6bm4sT05fVU5MT0FEOmp0LEV2ZW50Q2hhbm5lbDpoaSxPTl9SRUFDSF9CT1RUT01fRElTVEFOQ0U6ZCxwYXJzZVVybDpUcixvbkNyZWF0ZVZ1ZUFwcDpTbyxPTl9UQUJfSVRFTV9UQVA6ZHQsT05fTEFVTkNIOnJlLEFDVElPTl9UWVBFX0VWRU5UOnRhLGNyZWF0ZVVuaUV2ZW50Ol9vLE9OX1dYU19JTlZPS0VfQ0FMTF9NRVRIT0Q6Sm8sV0VCX0lOVk9LRV9BUFBTRVJWSUNFOlF0LGlzUm9vdEhvb2s6TGksaXNSb290SW1tZWRpYXRlSG9vazpTaSxVbmlJbnB1dEVsZW1lbnQ6RWksVW5pVGV4dEFyZWFFbGVtZW50OlRhLFVuaUVsZW1lbnQ6SXIsVW5pVGV4dE5vZGU6b24sVW5pQ29tbWVudE5vZGU6eW8sZm9yY2VQYXRjaFByb3A6d24sSlNPTl9QUk9UT0NPTDppZSxyZXNvbHZlT3duZXJFbDpmcixBVFRSX1ZfT1dORVJfSUQ6bWEsQVRUUl9WX1JFTkRFUkpTOlFvfTtyZXR1cm4gU3R9KHYpO3JldHVybiBsfXZhciBXUD0xO2Z1bmN0aW9uIGl2KCl7cmV0dXJuKFdQKyspLnRvU3RyaW5nKCl9dmFyIGNkPXY9PnYmJkpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodikpfHx2O2Z1bmN0aW9uIFN1KHYpe2xldCBsPUxzKHYpO3JldHVybiBsLnN1YnN0cmluZyg4LGwubGVuZ3RoLTEpfWZ1bmN0aW9uIHVkKHYpe2lmKCFIbihidG9hKSlyZXR1cm4iIjtsZXQgbD1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwobmV3IFVpbnQ4QXJyYXkodiksYj0+U3RyaW5nLmZyb21DaGFyQ29kZShiKSkuam9pbigiIik7cmV0dXJuIGJ0b2EobCl9ZnVuY3Rpb24gQ3Uodil7aWYoIXZ8fHR5cGVvZiB2IT0ib2JqZWN0IilyZXR1cm4hMDtmb3IobGV0IGwgaW4gdilpZihabCh2LGwpKXJldHVybiExO3JldHVybiEwfXZhciBjZj1bIm9mZiIsImVycm9yIiwid2FybiIsImluZm8iLCJsb2ciLCJkZWJ1ZyJdLHVmPXt9O2Z1bmN0aW9uIG92KCl7Y2YuZm9yRWFjaCh2PT57bGV0IGw9Y2YuaW5kZXhPZih2KTt1Zlt2XT17fSxjZi5mb3JFYWNoKGI9PntjZi5pbmRleE9mKGIpPD1sJiYodWZbdl1bYl09ITApfSl9KX1mdW5jdGlvbiBucih2KXtsZXQgbD1nbG9iYWwuV1hFbnZpcm9ubWVudCYmZ2xvYmFsLldYRW52aXJvbm1lbnQubG9nTGV2ZWx8fCJsb2ciO3JldHVybiB1ZltsXSYmdWZbbF1bdl19ZnVuY3Rpb24gZm8odil7Z2xvYmFsLm5hdGl2ZUxvZygid3hJbnRlcmFjdGlvbkFuYWx5emVyOiBbanNmbV0iK3YsIl9fREVCVUciKX1mdW5jdGlvbiBhdih2LGwsYil7cmV0dXJuYCR7bH1AJHtifSMke3Z9YH12YXIgZmY9Y2xhc3N7Y29uc3RydWN0b3IobCl7dGhpcy5pbnN0YW5jZUlkPVN0cmluZyhsKSx0aGlzLmxhc3RDYWxsYmFja0lkPTAsdGhpcy5jYWxsYmFja3M9e30sdGhpcy5ob29rcz17fX1hZGQobCl7cmV0dXJuIHRoaXMubGFzdENhbGxiYWNrSWQrKyx0aGlzLmNhbGxiYWNrc1t0aGlzLmxhc3RDYWxsYmFja0lkXT1sLHRoaXMubGFzdENhbGxiYWNrSWR9cmVtb3ZlKGwpe2xldCBiPXRoaXMuY2FsbGJhY2tzW2xdO3JldHVybiBkZWxldGUgdGhpcy5jYWxsYmFja3NbbF0sYn1yZWdpc3Rlckhvb2sobCxiLFQsayl7bGV0IEM9YXYobCxiLFQpO3RoaXMuaG9va3NbQ10mJmNvbnNvbGUud2FybihgW0pTIEZyYW1ld29ya10gT3ZlcnJpZGUgYW4gZXhpc3RpbmcgY29tcG9uZW50IGhvb2sgIiR7Q30iLmApLHRoaXMuaG9va3NbQ109a310cmlnZ2VySG9vayhsLGIsVCxrKXtsZXQgQz1hdihsLGIsVCksZD10aGlzLmhvb2tzW0NdO2lmKCFIbihkKSlyZXR1cm4gY29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gSW52YWxpZCBob29rIGZ1bmN0aW9uIHR5cGUgKCR7dHlwZW9mIGR9KSBvbiAiJHtDfSIuYCksbnVsbDtsZXQgbT1udWxsO3RyeXttPWQuYXBwbHkobnVsbCxrfHxbXSl9Y2F0Y2goUil7dGhyb3cgY29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIGV4ZWN1dGUgdGhlIGhvb2sgZnVuY3Rpb24gb24gIiR7Q30iLmApLFJ9cmV0dXJuIG19Y29uc3VtZShsLGIsVCl7bGV0IGs9dGhpcy5jYWxsYmFja3NbbF07aWYoKHR5cGVvZiBUPT0idW5kZWZpbmVkInx8VD09PSExKSYmZGVsZXRlIHRoaXMuY2FsbGJhY2tzW2xdLEhuKGspKXRyeXtyZXR1cm4gay5jYWxsKG51bGwsYixUKX1jYXRjaChDKXt0aHJvdyBjb25zb2xlLmVycm9yKGBbSlMgRnJhbWV3b3JrXSBGYWlsZWQgdG8gZXhlY3V0ZSB0aGUgY2FsbGJhY2sgZnVuY3Rpb246CiAke0MudG9TdHJpbmcoKX1gKSxDfXJldHVybiBuZXcgRXJyb3IoYGludmFsaWQgY2FsbGJhY2sgaWQgIiR7bH0iYCl9Y2xvc2UoKXt0aGlzLmNhbGxiYWNrcz17fSx0aGlzLmhvb2tzPXt9fX07dmFyIGRmPXt9O2Z1bmN0aW9uIHN2KHYsbCl7diYmKGRmW3ZdPWwpfWZ1bmN0aW9uIHJsKHYpe3JldHVybiBkZlt2XX1mdW5jdGlvbiBsdih2KXtkZWxldGUgZGZbdl19ZnVuY3Rpb24gSnIodil7aWYodil7bGV0IGw9ZGZbdl07aWYobCYmbC50YXNrQ2VudGVyKXJldHVybiBsLnRhc2tDZW50ZXJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gR1Aodil7di5jYWxjQ2xhc3NMaXN0JiZ2LmNhbGNDbGFzc0xpc3QoKX1mdW5jdGlvbiBmZCh2LGwsYil7bGV0e2RvY3VtZW50RWxlbWVudDpUfT12O2lmKFQucHVyZUNoaWxkcmVuLmxlbmd0aD4wfHxsLnBhcmVudE5vZGUpcmV0dXJuO2xldCBrPVQuY2hpbGRyZW4sQz1iP2suaW5kZXhPZihiKTotMTtDPDA/ay5wdXNoKGwpOmsuc3BsaWNlKEMsMCxsKSxsLm5vZGVUeXBlPT09MT8obC5yb2xlPT09ImJvZHkiPyhsLmRvY0lkPXYuaWQsbC5vd25lckRvY3VtZW50PXYsbC5wYXJlbnROb2RlPVQsWGwobCxUKSk6KGwuY2hpbGRyZW4uZm9yRWFjaChkPT57ZC5wYXJlbnROb2RlPWx9KSxkZCh2LGwpLFhsKGwsVCksZGVsZXRlIHYubm9kZU1hcFtsLm5vZGVJZF0pLFQucHVyZUNoaWxkcmVuLnB1c2gobCksWVAodixsKSk6KGwucGFyZW50Tm9kZT1ULHYubm9kZU1hcFtsLnJlZl09bCl9ZnVuY3Rpb24gWVAodixsKXtsZXQgYj1sLnRvSlNPTigpO3YmJnYudGFza0NlbnRlciYmSG4odi50YXNrQ2VudGVyLnNlbmQpJiZ2LnRhc2tDZW50ZXIuc2VuZCgiZG9tIix7YWN0aW9uOiJjcmVhdGVCb2R5In0sW2JdKX1mdW5jdGlvbiBkZCh2LGwpe2wucm9sZT0iYm9keSIsbC5kZXB0aD0xLGRlbGV0ZSB2Lm5vZGVNYXBbbC5ub2RlSWRdLGwucmVmPSJfcm9vdCIsdi5ub2RlTWFwLl9yb290PWwsdi5ib2R5PWx9ZnVuY3Rpb24gWGwodixsKXt2LnBhcmVudE5vZGU9bCxHUCh2KSxsLmRvY0lkJiYodi5kb2NJZD1sLmRvY0lkLHYub3duZXJEb2N1bWVudD1sLm93bmVyRG9jdW1lbnQsdi5vd25lckRvY3VtZW50Lm5vZGVNYXBbdi5ub2RlSWRdPXYsdi5kZXB0aD1sLmRlcHRoKzEpLHYuY2hpbGRyZW4uZm9yRWFjaChiPT57WGwoYix2KX0pfWZ1bmN0aW9uIGhkKHYpe2Zvcig7djspe2lmKHYubm9kZVR5cGU9PT0xKXJldHVybiB2O3Y9di5uZXh0U2libGluZ319ZnVuY3Rpb24gcGQodil7Zm9yKDt2Oyl7aWYodi5ub2RlVHlwZT09PTEpcmV0dXJuIHY7dj12LnByZXZpb3VzU2libGluZ319ZnVuY3Rpb24gUWwodixsLGIsVD0hMSl7YjwwJiYoYj0wKTtsZXQgaz1sW2ItMV0sQz1sW2JdO3JldHVybiBsLnNwbGljZShiLDAsdiksVCYmKGsmJihrLm5leHRTaWJsaW5nPXYpLHYucHJldmlvdXNTaWJsaW5nPWssdi5uZXh0U2libGluZz1DLEMmJihDLnByZXZpb3VzU2libGluZz12KSksYn1mdW5jdGlvbiBlYyh2LGwsYixUPSExKXtsZXQgaz1sLmluZGV4T2Yodik7aWYoazwwKXJldHVybi0xO2lmKFQpe2xldCBSPWxbay0xXSxXZT1sW2srMV07UiYmKFIubmV4dFNpYmxpbmc9V2UpLFdlJiYoV2UucHJldmlvdXNTaWJsaW5nPVIpfWwuc3BsaWNlKGssMSk7bGV0IEM9YjtrPD1iJiYoQz1iLTEpO2xldCBkPWxbQy0xXSxtPWxbQ107cmV0dXJuIGwuc3BsaWNlKEMsMCx2KSxUJiYoZCYmKGQubmV4dFNpYmxpbmc9diksdi5wcmV2aW91c1NpYmxpbmc9ZCx2Lm5leHRTaWJsaW5nPW0sbSYmKG0ucHJldmlvdXNTaWJsaW5nPXYpKSxrPT09Qz8tMTpifWZ1bmN0aW9uIGdkKHYsbCxiPSExKXtsZXQgVD1sLmluZGV4T2Yodik7aWYoIShUPDApKXtpZihiKXtsZXQgaz1sW1QtMV0sQz1sW1QrMV07ayYmKGsubmV4dFNpYmxpbmc9QyksQyYmKEMucHJldmlvdXNTaWJsaW5nPWspfWwuc3BsaWNlKFQsMSl9fXZhciB0Yz1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuZGVwdGg9MDt0aGlzLm5vZGVJZD1pdigpLHRoaXMucmVmPXRoaXMubm9kZUlkLHRoaXMuY2hpbGRyZW49W10sdGhpcy5wdXJlQ2hpbGRyZW49W10sdGhpcy5wYXJlbnROb2RlPW51bGwsdGhpcy5uZXh0U2libGluZz1udWxsLHRoaXMucHJldmlvdXNTaWJsaW5nPW51bGx9ZGVzdHJveSgpe2xldCBsPXJsKHRoaXMuZG9jSWQpO2wmJihkZWxldGUgdGhpcy5kb2NJZCxkZWxldGUgbC5ub2RlTWFwW3RoaXMubm9kZUlkXSksdGhpcy5jaGlsZHJlbi5mb3JFYWNoKGI9PntiLmRlc3Ryb3koKX0pfX07dmFyIGN2PXt9O2Z1bmN0aW9uIHZkKHYsbCl7aWYoIVppKGwpfHwhbC5sZW5ndGgpcmV0dXJuO2NsYXNzIGIgZXh0ZW5kcyB4b3t9bC5mb3JFYWNoKFQ9PntiLnByb3RvdHlwZVtUXT1mdW5jdGlvbiguLi5rKXtsZXQgQz1Kcih0aGlzLmRvY0lkKTtpZihDKXJldHVybiBDLnNlbmQoImNvbXBvbmVudCIse3JlZjp0aGlzLnJlZixjb21wb25lbnQ6dixtZXRob2Q6VH0sayl9fSksY3Zbdl09Yn1mdW5jdGlvbiB1dih2KXtyZXR1cm4gY3Zbdl19ZnVuY3Rpb24gVXIodixsLGIsVCxrKXtsZXQgQz17dHlwZToiZGVjbCIscHJvcDp2LHZhbHVlOmwudG9TdHJpbmcoKSxyYXdzOlQsc291cmNlOmt9O3JldHVybiBiJiYoQy5pbXBvcnRhbnQ9ITApLEN9dmFyIHFQPSJiYWNrZ3JvdW5kQ29sb3IiLEtQPSJiYWNrZ3JvdW5kSW1hZ2UiLEpQPXY9PntsZXR7dmFsdWU6bCxpbXBvcnRhbnQ6YixyYXdzOlQsc291cmNlOmt9PXY7cmV0dXJuL14jP1xTKyQvLnRlc3QobCl8fC9ecmdiYT8oLispJC8udGVzdChsKT9bVXIocVAsbCxiLFQsayldOi9ebGluZWFyLWdyYWRpZW50KC4rKSQvLnRlc3QobCk/W1VyKEtQLGwsYixULGspXTpbdl19LFpQPSJXaWR0aCIsWFA9IlN0eWxlIixRUD0iQ29sb3IiLE91PXY9PntsZXR7cHJvcDpsLHZhbHVlOmIsaW1wb3J0YW50OlQscmF3czprLHNvdXJjZTpDfT12LGQ9Yi5yZXBsYWNlKC9ccyosXHMqL2csIiwiKS5zcGxpdCgvXHMrLyksbT1bL15bXGRcLl0rXFMqJC8sL14oc29saWR8ZGFzaGVkfGRvdHRlZCkkLywvXFMrL10ubWFwKFI9PntsZXQgV2U9ZC5maW5kSW5kZXgoUHQ9PlIudGVzdChQdCkpO3JldHVybiBXZTwwP251bGw6ZC5zcGxpY2UoV2UsMSlbMF19KTtyZXR1cm4gZC5sZW5ndGg/W3ZdOltVcihsK1pQLChtWzBdfHwiMCIpLnRyaW0oKSxULGssQyksVXIobCtYUCwobVsxXXx8InNvbGlkIikudHJpbSgpLFQsayxDKSxVcihsK1FQLChtWzJdfHwiIzAwMDAwMCIpLnRyaW0oKSxULGssQyldfSxlTj0iYm9yZGVyVG9wIix0Tj0iYm9yZGVyUmlnaHQiLG5OPSJib3JkZXJCb3R0b20iLHJOPSJib3JkZXJMZWZ0IixtZD12PT57bGV0e3Byb3A6bCx2YWx1ZTpiLGltcG9ydGFudDpULHJhd3M6ayxzb3VyY2U6Q309dixkPWxkKGwpLnNwbGl0KCItIilbMV07ZD1sZihkKTtsZXQgbT1iLnJlcGxhY2UoL1xzKixccyovZywiLCIpLnNwbGl0KC9ccysvKTtzd2l0Y2gobS5sZW5ndGgpe2Nhc2UgMTpyZXR1cm5bdl07Y2FzZSAyOm0ucHVzaChtWzBdLG1bMV0pO2JyZWFrO2Nhc2UgMzptLnB1c2gobVsxXSk7YnJlYWt9cmV0dXJuW1VyKGVOK2QsbVswXSxULGssQyksVXIodE4rZCxtWzFdLFQsayxDKSxVcihuTitkLG1bMl0sVCxrLEMpLFVyKHJOK2QsbVszXSxULGssQyldfSxpTj0iYm9yZGVyVG9wTGVmdFJhZGl1cyIsb049ImJvcmRlclRvcFJpZ2h0UmFkaXVzIixhTj0iYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLHNOPSJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIixsTj12PT57bGV0e3ZhbHVlOmwsaW1wb3J0YW50OmIscmF3czpULHNvdXJjZTprfT12LEM9bC5zcGxpdCgvXHMrLyk7aWYobC5pbmNsdWRlcygiLyIpKXJldHVyblt2XTtzd2l0Y2goQy5sZW5ndGgpe2Nhc2UgMTpyZXR1cm5bdl07Y2FzZSAyOkMucHVzaChDWzBdLENbMV0pO2JyZWFrO2Nhc2UgMzpDLnB1c2goQ1sxXSk7YnJlYWt9cmV0dXJuW1VyKGlOLENbMF0sYixULGspLFVyKG9OLENbMV0sYixULGspLFVyKGFOLENbMl0sYixULGspLFVyKHNOLENbM10sYixULGspXX0sY049bWQsdU49bWQsZk49ImZsZXhEaXJlY3Rpb24iLGROPSJmbGV4V3JhcCIsaE49dj0+e2xldHt2YWx1ZTpsLGltcG9ydGFudDpiLHJhd3M6VCxzb3VyY2U6a309dixDPWwuc3BsaXQoL1xzKy8pLGQ9Wy9eKGNvbHVtbnxjb2x1bW4tcmV2ZXJzZXxyb3d8cm93LXJldmVyc2UpJC8sL14obm93cmFwfHdyYXB8d3JhcC1yZXZlcnNlKSQvXS5tYXAobT0+e2xldCBSPUMuZmluZEluZGV4KFdlPT5tLnRlc3QoV2UpKTtyZXR1cm4gUjwwP251bGw6Qy5zcGxpY2UoUiwxKVswXX0pO3JldHVybiBDLmxlbmd0aD9bdl06W1VyKGZOLGRbMF18fCJjb2x1bW4iLGIsVCxrKSxVcihkTixkWzFdfHwibm93cmFwIixiLFQsayldfSxwTj0iVG9wIixnTj0iUmlnaHQiLHZOPSJCb3R0b20iLG1OPSJMZWZ0Iixmdj12PT5sPT57bGV0e3ZhbHVlOmIsaW1wb3J0YW50OlQscmF3czprLHNvdXJjZTpDfT1sLGQ9Yi5zcGxpdCgvXHMrLyk7c3dpdGNoKGQubGVuZ3RoKXtjYXNlIDE6ZC5wdXNoKGRbMF0sZFswXSxkWzBdKTticmVhaztjYXNlIDI6ZC5wdXNoKGRbMF0sZFsxXSk7YnJlYWs7Y2FzZSAzOmQucHVzaChkWzFdKTticmVha31yZXR1cm5bVXIoditwTixkWzBdLFQsayxDKSxVcih2K2dOLGRbMV0sVCxrLEMpLFVyKHYrdk4sZFsyXSxULGssQyksVXIodittTixkWzNdLFQsayxDKV19LF9OPWZ2KCJtYXJnaW4iKSxiTj1mdigicGFkZGluZyIpLHlOPSJ0cmFuc2l0aW9uUHJvcGVydHkiLEVOPSJ0cmFuc2l0aW9uRHVyYXRpb24iLHdOPSJ0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24iLFNOPSJ0cmFuc2l0aW9uRGVsYXkiLENOPXY9PntsZXQgbD0vXihcUyopP1xzKihcZCpcLj9cZCsoPzptc3xzKT8pP1xzKihcUyopP1xzKihcZCpcLj9cZCsoPzptc3xzKT8pPyQvLHt2YWx1ZTpiLGltcG9ydGFudDpULHJhd3M6ayxzb3VyY2U6Q309dixkPVtdLG09Yi5tYXRjaChsKTtyZXR1cm4gbSYmKG1bMV0mJmQucHVzaChVcih5TixtWzFdLFQsayxDKSksbVsyXSYmZC5wdXNoKFVyKEVOLG1bMl0sVCxrLEMpKSxtWzNdJiZkLnB1c2goVXIod04sbVszXSxULGssQykpLG1bNF0mJmQucHVzaChVcihTTixtWzRdLFQsayxDKSkpLGR9LGR2PXt0cmFuc2l0aW9uOkNOLG1hcmdpbjpfTixwYWRkaW5nOmJOLGJvcmRlcjpPdSxiYWNrZ3JvdW5kOkpQfTtraShkdix7Ym9yZGVyVG9wOk91LGJvcmRlclJpZ2h0Ok91LGJvcmRlckJvdHRvbTpPdSxib3JkZXJMZWZ0Ok91LGJvcmRlclN0eWxlOmNOLGJvcmRlcldpZHRoOnVOLGJvcmRlckNvbG9yOm1kLGJvcmRlclJhZGl1czpsTixmbGV4RmxvdzpoTn0pO3ZhciBodj1TeW1ib2woImV4cGFuZGVkIikscHY9e3Bvc3Rjc3NQbHVnaW46Im52dWU6ZXhwYW5kIixEZWNsYXJhdGlvbih2KXtpZih2W2h2XSlyZXR1cm47bGV0IGw9ZHZbdi5wcm9wXTtpZihsKXtsZXQgYj1sKHYpO2IubGVuZ3RoPT09MSYmYlswXT09PXZ8fHYucmVwbGFjZVdpdGgoYil9dltodl09ITB9fTt2YXIgT049cHYuRGVjbGFyYXRpb247ZnVuY3Rpb24gX2QodixsKXtsZXQgYj1raSh7cmVwbGFjZVdpdGgoayl7VD1rfX0sQU4odixsKSksVD1bYl07cmV0dXJuIE9OKGIpLFR9ZnVuY3Rpb24gQU4odixsKXtsZXQgYj1sKyIiO3JldHVybiBiLmluY2x1ZGVzKCIhaW1wb3J0YW50Iik/e3Byb3A6dix2YWx1ZTpiLnJlcGxhY2UoL1xzKiFpbXBvcnRhbnQvLCIiKSxpbXBvcnRhbnQ6ITB9Ontwcm9wOnYsdmFsdWU6YixpbXBvcnRhbnQ6ITF9fXZhciBUTj0idmlldyIsSU49WyJjbGljayIsImxvbmdwcmVzcyIsInRvdWNoc3RhcnQiLCJ0b3VjaG1vdmUiLCJ0b3VjaGVuZCIsInBhbnN0YXJ0IiwicGFubW92ZSIsInBhbmVuZCIsImhvcml6b250YWxwYW4iLCJ2ZXJ0aWNhbHBhbiIsInN3aXBlIl07ZnVuY3Rpb24gYmQodixsKXtsZXQgYj1ybCh2KTtiLm5vZGVNYXBbbC5ub2RlSWRdPWx9dmFyIHlkO2Z1bmN0aW9uIGd2KHYpe3lkfHwoeWQ9dil9dmFyIHhvPWNsYXNzIGV4dGVuZHMgdGN7Y29uc3RydWN0b3IobD1UTixiPXt9LFQpe3N1cGVyKCk7bGV0IGs9dXYobCk7aWYoayYmIVQpcmV0dXJuIG5ldyBrKGwsYiwhMCk7dGhpcy5ub2RlVHlwZT0xLHRoaXMudHlwZT1sLHRoaXMuYXR0cj1iLmF0dHJ8fHt9LHRoaXMuc3R5bGU9Yi5zdHlsZXx8e30sdGhpcy5jbGFzc1N0eWxlPWIuY2xhc3NTdHlsZXx8e30sdGhpcy5jbGFzc0xpc3Q9Yi5jbGFzc0xpc3R8fFtdLHRoaXMuc3R5bGVTaGVldD1iLnN0eWxlU2hlZXR8fHt9LHRoaXMuZXZlbnQ9e319YXBwZW5kQ2hpbGQobCl7aWYoIShsLnBhcmVudE5vZGUmJmwucGFyZW50Tm9kZSE9PXRoaXMpKXtpZihsLnBhcmVudE5vZGUpe2lmKG5yKCJkZWJ1ZyIpJiZmbyhgW2FwcGVuZENoaWxkXSgke3RoaXMuZG9jSWR9LCR7bC50eXBlfSwke2wucmVmfSkgTW92ZSA8JHtsLnR5cGV9PiB0byAke3RoaXMuY2hpbGRyZW4ubGVuZ3RofSBvZiA8JHt0aGlzLnR5cGV9PiAoJHt0aGlzLnJlZn0pLmApLGVjKGwsdGhpcy5jaGlsZHJlbix0aGlzLmNoaWxkcmVuLmxlbmd0aCwhMCksbC5ub2RlVHlwZT09PTEpe2xldCBiPWVjKGwsdGhpcy5wdXJlQ2hpbGRyZW4sdGhpcy5wdXJlQ2hpbGRyZW4ubGVuZ3RoKSxUPUpyKHRoaXMuZG9jSWQpO2lmKFQmJmI+PTApcmV0dXJuIFQuc2VuZCgiZG9tIix7YWN0aW9uOiJtb3ZlRWxlbWVudCJ9LFtsLnJlZix0aGlzLnJlZixiXSl9fWVsc2UgaWYobnIoImRlYnVnIikmJmZvKGBbYXBwZW5kQ2hpbGRdKCR7dGhpcy5kb2NJZH0sJHtsLnR5cGV9LCR7bC5yZWZ9KSBBcHBlbmQgPCR7bC50eXBlfT4gdG8gPCR7dGhpcy50eXBlfT4gKCR7dGhpcy5yZWZ9KS5gKSxYbChsLHRoaXMpLFFsKGwsdGhpcy5jaGlsZHJlbix0aGlzLmNoaWxkcmVuLmxlbmd0aCwhMCksdGhpcy5kb2NJZCYmYmQodGhpcy5kb2NJZCxsKSxsLm5vZGVUeXBlPT09MSl7UWwobCx0aGlzLnB1cmVDaGlsZHJlbix0aGlzLnB1cmVDaGlsZHJlbi5sZW5ndGgpO2xldCBiPUpyKHRoaXMuZG9jSWQpO2lmKGIpcmV0dXJuIGIuc2VuZCgiZG9tIix7YWN0aW9uOiJhZGRFbGVtZW50In0sW3RoaXMucmVmLGwudG9KU09OKCksLTFdKX19fWluc2VydEJlZm9yZShsLGIpe2lmKCEobC5wYXJlbnROb2RlJiZsLnBhcmVudE5vZGUhPT10aGlzKSYmIShsPT09Ynx8bC5uZXh0U2libGluZyYmbC5uZXh0U2libGluZz09PWIpKXtpZihsLnBhcmVudE5vZGUpe2lmKGVjKGwsdGhpcy5jaGlsZHJlbix0aGlzLmNoaWxkcmVuLmluZGV4T2YoYiksITApLGwubm9kZVR5cGU9PT0xKXtsZXQgVD1oZChiKSxrPWVjKGwsdGhpcy5wdXJlQ2hpbGRyZW4sVD90aGlzLnB1cmVDaGlsZHJlbi5pbmRleE9mKFQpOnRoaXMucHVyZUNoaWxkcmVuLmxlbmd0aCksQz1Kcih0aGlzLmRvY0lkKTtpZihDJiZrPj0wKXJldHVybiBDLnNlbmQoImRvbSIse2FjdGlvbjoibW92ZUVsZW1lbnQifSxbbC5yZWYsdGhpcy5yZWYsa10pfX1lbHNlIGlmKG5yKCJkZWJ1ZyIpJiZmbyhgW2luc2VydEJlZm9yZV0oJHt0aGlzLmRvY0lkfSwke2wudHlwZX0sJHtsLnJlZn0pIEluc2VydCA8JHtsLnR5cGV9PiB0byA8JHt0aGlzLnR5cGV9PiAoJHt0aGlzLnJlZn0pLCBiZWZvcmUgKCR7Yi5yZWZ9KS5gKSxYbChsLHRoaXMpLFFsKGwsdGhpcy5jaGlsZHJlbix0aGlzLmNoaWxkcmVuLmluZGV4T2YoYiksITApLHRoaXMuZG9jSWQmJmJkKHRoaXMuZG9jSWQsbCksbC5ub2RlVHlwZT09PTEpe2xldCBUPWhkKGIpLGs9UWwobCx0aGlzLnB1cmVDaGlsZHJlbixUP3RoaXMucHVyZUNoaWxkcmVuLmluZGV4T2YoVCk6dGhpcy5wdXJlQ2hpbGRyZW4ubGVuZ3RoKSxDPUpyKHRoaXMuZG9jSWQpO2lmKEMpcmV0dXJuIEMuc2VuZCgiZG9tIix7YWN0aW9uOiJhZGRFbGVtZW50In0sW3RoaXMucmVmLGwudG9KU09OKCksa10pfX19aW5zZXJ0QWZ0ZXIobCxiKXtpZighKGwucGFyZW50Tm9kZSYmbC5wYXJlbnROb2RlIT09dGhpcykmJiEobD09PWJ8fGwucHJldmlvdXNTaWJsaW5nJiZsLnByZXZpb3VzU2libGluZz09PWIpKXtpZihsLnBhcmVudE5vZGUpe2lmKGVjKGwsdGhpcy5jaGlsZHJlbix0aGlzLmNoaWxkcmVuLmluZGV4T2YoYikrMSwhMCksbC5ub2RlVHlwZT09PTEpe2xldCBUPWVjKGwsdGhpcy5wdXJlQ2hpbGRyZW4sdGhpcy5wdXJlQ2hpbGRyZW4uaW5kZXhPZihwZChiKSkrMSksaz1Kcih0aGlzLmRvY0lkKTtpZihrJiZUPj0wKXJldHVybiBrLnNlbmQoImRvbSIse2FjdGlvbjoibW92ZUVsZW1lbnQifSxbbC5yZWYsdGhpcy5yZWYsVF0pfX1lbHNlIGlmKG5yKCJkZWJ1ZyIpJiZmbyhgW2luc2VydEFmdGVyXSgke3RoaXMuZG9jSWR9LCR7bC50eXBlfSwke2wucmVmfSkgSW5zZXJ0IDwke2wudHlwZX0+IHRvIDwke3RoaXMudHlwZX0+ICgke3RoaXMucmVmfSksIGFmdGVyICgke2IucmVmfSkuYCksWGwobCx0aGlzKSxRbChsLHRoaXMuY2hpbGRyZW4sdGhpcy5jaGlsZHJlbi5pbmRleE9mKGIpKzEsITApLHRoaXMuZG9jSWQmJmJkKHRoaXMuZG9jSWQsbCksbC5ub2RlVHlwZT09PTEpe2xldCBUPVFsKGwsdGhpcy5wdXJlQ2hpbGRyZW4sdGhpcy5wdXJlQ2hpbGRyZW4uaW5kZXhPZihwZChiKSkrMSksaz1Kcih0aGlzLmRvY0lkKTtpZihrKXJldHVybiBrLnNlbmQoImRvbSIse2FjdGlvbjoiYWRkRWxlbWVudCJ9LFt0aGlzLnJlZixsLnRvSlNPTigpLFRdKX19fXJlbW92ZUNoaWxkKGwsYil7aWYobC5wYXJlbnROb2RlJiYoZ2QobCx0aGlzLmNoaWxkcmVuLCEwKSxsLm5vZGVUeXBlPT09MSkpe25yKCJkZWJ1ZyIpJiZmbyhgW3JlbW92ZUNoaWxkXSgke3RoaXMuZG9jSWR9LCR7bC50eXBlfSwke2wucmVmfSkgUmVtb3ZlIDwke2wudHlwZX0+IGZyb20gPCR7dGhpcy50eXBlfT4gKCR7dGhpcy5yZWZ9KS5gKSxnZChsLHRoaXMucHVyZUNoaWxkcmVuKTtsZXQgVD1Kcih0aGlzLmRvY0lkKTtUJiZULnNlbmQoImRvbSIse2FjdGlvbjoicmVtb3ZlRWxlbWVudCJ9LFtsLnJlZl0pfWJ8fGwuZGVzdHJveSgpfWNsZWFyKCl7bGV0IGw9SnIodGhpcy5kb2NJZCk7bCYmdGhpcy5wdXJlQ2hpbGRyZW4uZm9yRWFjaChiPT57bC5zZW5kKCJkb20iLHthY3Rpb246InJlbW92ZUVsZW1lbnQifSxbYi5yZWZdKX0pLHRoaXMuY2hpbGRyZW4uZm9yRWFjaChiPT57Yi5kZXN0cm95KCl9KSx0aGlzLmNoaWxkcmVuLmxlbmd0aD0wLHRoaXMucHVyZUNoaWxkcmVuLmxlbmd0aD0wfXNldEF0dHIobCxiLFQpe2lmKHRoaXMuYXR0cltsXT09PWImJlQhPT0hMSlyZXR1cm47dGhpcy5hdHRyW2xdPWI7bGV0IGs9SnIodGhpcy5kb2NJZCk7IVQmJmsmJmsuc2VuZCgiZG9tIix7YWN0aW9uOiJ1cGRhdGVBdHRycyJ9LFt0aGlzLnJlZix7W2xdOmJ9XSl9c2V0QXR0cnMobCxiKXtpZihDdShsKSlyZXR1cm47bGV0IFQ9e307Zm9yKGxldCBrIGluIGwpdGhpcy5hdHRyW2tdIT09bFtrXSYmKHRoaXMuYXR0cltrXT1sW2tdLFRba109bFtrXSk7aWYoIUN1KFQpKXtsZXQgaz1Kcih0aGlzLmRvY0lkKTshYiYmayYmay5zZW5kKCJkb20iLHthY3Rpb246InVwZGF0ZUF0dHJzIn0sW3RoaXMucmVmLFRdKX19c2V0U3R5bGUobCxiLFQpe19kKGwsYikuZm9yRWFjaCgoe3Byb3A6ayx2YWx1ZTpDfSk9PntpZih0aGlzLnN0eWxlW2tdPT09QyYmVCE9PSExKXJldHVybjt0aGlzLnN0eWxlW2tdPUM7bGV0IGQ9SnIodGhpcy5kb2NJZCk7IVQmJmQmJmQuc2VuZCgiZG9tIix7YWN0aW9uOiJ1cGRhdGVTdHlsZSJ9LFt0aGlzLnJlZix7W2tdOkM9PT0iIiYmayBpbiB0aGlzLmNsYXNzU3R5bGU/dGhpcy5jbGFzc1N0eWxlW2tdOkN9XSl9KX1zZXRTdHlsZXMobCxiKXtpZihDdShsKSlyZXR1cm47bGV0IFQ9e307Zm9yKGxldCBrIGluIGwpX2QoayxsW2tdKS5mb3JFYWNoKCh7cHJvcDpDLHZhbHVlOmR9KT0+e3RoaXMuc3R5bGVbQ10hPT1kJiYodGhpcy5zdHlsZVtDXT1kLFRbQ109ZD09PSIiJiZDIGluIHRoaXMuY2xhc3NTdHlsZT90aGlzLmNsYXNzU3R5bGVbQ106ZCl9KTtpZighQ3UoVCkpe2xldCBrPUpyKHRoaXMuZG9jSWQpOyFiJiZrJiZrLnNlbmQoImRvbSIse2FjdGlvbjoidXBkYXRlU3R5bGUifSxbdGhpcy5yZWYsVF0pfX1zZXRDbGFzc1N0eWxlKGwpe2ZvcihsZXQgVCBpbiB0aGlzLmNsYXNzU3R5bGUpdGhpcy5jbGFzc1N0eWxlW1RdPSIiO2tpKHRoaXMuY2xhc3NTdHlsZSxsKTtsZXQgYj1Kcih0aGlzLmRvY0lkKTtiJiZiLnNlbmQoImRvbSIse2FjdGlvbjoidXBkYXRlU3R5bGUifSxbdGhpcy5yZWYsdGhpcy50b1N0eWxlKCldKX1zZXRDbGFzc0xpc3QobCl7bC5sZW5ndGg9PT10aGlzLmNsYXNzTGlzdC5sZW5ndGgmJmwuZmlsdGVyKGI9PiF0aGlzLmNsYXNzTGlzdC5pbmNsdWRlcyhiKSkubGVuZ3RoPT09MHx8KHRoaXMuY2xhc3NMaXN0PWwsdGhpcy5wYXJlbnROb2RlJiZ0aGlzLmNhbGNDbGFzc0xpc3QoKSl9Y2FsY0NsYXNzTGlzdCgpe3RoaXMuc2V0Q2xhc3NTdHlsZSh5ZCh0aGlzKSl9c2V0U3R5bGVTaGVldChsKXt0aGlzLnN0eWxlU2hlZXQ9bH1hZGRFdmVudChsLGIsVCl7aWYodGhpcy5ldmVudHx8KHRoaXMuZXZlbnQ9e30pLCF0aGlzLmV2ZW50W2xdKXtucigiZGVidWciKSYmZm8oYFthZGRFdmVudF0oJHt0aGlzLmRvY0lkfSwke3RoaXMudHlwZX0sJHt0aGlzLnJlZn0pIEFkZCAiJHtsfSIgZXZlbnQgb24gPCR7dGhpcy50eXBlfT4gKCR7dGhpcy5yZWZ9KS5gKSx0aGlzLmV2ZW50W2xdPXtoYW5kbGVyOmIscGFyYW1zOlR9O2xldCBrPUpyKHRoaXMuZG9jSWQpO2smJmsuc2VuZCgiZG9tIix7YWN0aW9uOiJhZGRFdmVudCJ9LFt0aGlzLnJlZixsXSl9fXJlbW92ZUV2ZW50KGwpe2lmKHRoaXMuZXZlbnQmJnRoaXMuZXZlbnRbbF0pe25yKCJkZWJ1ZyIpJiZmbyhgW3JlbW92ZUV2ZW50XSgke3RoaXMuZG9jSWR9LCR7dGhpcy50eXBlfSwke3RoaXMucmVmfSkgUmVtb3ZlICIke2x9IiBldmVudCBvbiA8JHt0aGlzLnR5cGV9PiAoJHt0aGlzLnJlZn0pLmApLGRlbGV0ZSB0aGlzLmV2ZW50W2xdO2xldCBiPUpyKHRoaXMuZG9jSWQpO2ImJmIuc2VuZCgiZG9tIix7YWN0aW9uOiJyZW1vdmVFdmVudCJ9LFt0aGlzLnJlZixsXSl9fWZpcmVFdmVudChsLGIsVCxrKXtsZXQgQz1udWxsLGQ9ITEsbT10aGlzLmV2ZW50W2xdO2lmKG0mJmIpe25yKCJkZWJ1ZyIpJiZmbyhgW2ZpcmVFdmVudF0oJHt0aGlzLmRvY0lkfSwke3RoaXMudHlwZX0sJHt0aGlzLnJlZn0pIEZpcmUgIiR7bH0iIGV2ZW50IG9uIDwke3RoaXMudHlwZX0+ICgke3RoaXMucmVmfSkuYCk7bGV0IFI9bS5oYW5kbGVyO2Iuc3RvcFByb3BhZ2F0aW9uPSgpPT57ZD0hMH0sYi5wcmV2ZW50RGVmYXVsdD0oKT0+e307dHJ5e2smJmsucGFyYW1zP0M9Ui5jYWxsKHRoaXMsLi4uay5wYXJhbXMsYik6Qz1SLmNhbGwodGhpcyxiKX1jYXRjaChXZSl7dGhyb3cgY29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIGludm9rZSB0aGUgZXZlbnQgaGFuZGxlciBvZiAiJHtsfSIgb24gJHt0aGlzLnR5cGV9ICgke3RoaXMucmVmfSk6CiAke1dlLnRvU3RyaW5nKCl9YCksV2V9fXJldHVybiFkJiZUJiZJTi5pbmRleE9mKGwpIT09LTEmJnRoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmZpcmVFdmVudCYmKGIuY3VycmVudFRhcmdldD10aGlzLnBhcmVudE5vZGUsdGhpcy5wYXJlbnROb2RlLmZpcmVFdmVudChsLGIsVCkpLEN9dG9TdHlsZSgpe2xldCBsPU9iamVjdC5hc3NpZ24oe30sdGhpcy5jbGFzc1N0eWxlKSxiPXRoaXMuc3R5bGU7Zm9yKGxldCBUIGluIGIpe2xldCBrPWJbVF07bFtUXT1rPT09IiImJlQgaW4gdGhpcy5jbGFzc1N0eWxlP3RoaXMuY2xhc3NTdHlsZVtUXTprfXJldHVybiBsfXRvSlNPTihsPSExKXtsZXQgYj17cmVmOnRoaXMucmVmLnRvU3RyaW5nKCksdHlwZTp0aGlzLnR5cGUsYXR0cjp0aGlzLmF0dHIsc3R5bGU6dGhpcy50b1N0eWxlKCl9LFQ9W107Zm9yKGxldCBrIGluIHRoaXMuZXZlbnQpe2xldHtwYXJhbXM6Q309dGhpcy5ldmVudFtrXTtDP1QucHVzaCh7dHlwZTprLHBhcmFtczpDfSk6VC5wdXNoKGspfXJldHVybiBULmxlbmd0aCYmKGIuZXZlbnQ9VCksIWwmJnRoaXMucHVyZUNoaWxkcmVuLmxlbmd0aCYmKGIuY2hpbGRyZW49dGhpcy5wdXJlQ2hpbGRyZW4ubWFwKGs9PmsudG9KU09OKCkpKSxifXRvU3RyaW5nKCl7cmV0dXJuIjwiK3RoaXMudHlwZSsiIGF0dHI9IitKU09OLnN0cmluZ2lmeSh0aGlzLmF0dHIpKyIgc3R5bGU9IitKU09OLnN0cmluZ2lmeSh0aGlzLnRvU3R5bGUoKSkrIj4iK3RoaXMucHVyZUNoaWxkcmVuLm1hcChsPT5sLnRvU3RyaW5nKCkpLmpvaW4oIiIpKyI8LyIrdGhpcy50eXBlKyI+In19O2Z1bmN0aW9uIHZ2KHYpe2xldCBsPXYmJnYuX192X3JhdztyZXR1cm4gbD92dihsKTp2fWZ1bmN0aW9uIG12KHYpe2xldCBsPVN1KHYpO3N3aXRjaChsKXtjYXNlIlVuZGVmaW5lZCI6Y2FzZSJOdWxsIjpyZXR1cm4iIjtjYXNlIlJlZ0V4cCI6cmV0dXJuIHYudG9TdHJpbmcoKTtjYXNlIkRhdGUiOnJldHVybiB2LnRvSVNPU3RyaW5nKCk7Y2FzZSJOdW1iZXIiOmNhc2UiU3RyaW5nIjpjYXNlIkJvb2xlYW4iOmNhc2UiQXJyYXkiOmNhc2UiT2JqZWN0IjpyZXR1cm4gdnYodik7Y2FzZSJBcnJheUJ1ZmZlciI6cmV0dXJueyJAdHlwZSI6ImJpbmFyeSIsZGF0YVR5cGU6bCxiYXNlNjQ6dWQodil9O2Nhc2UiSW50OEFycmF5IjpjYXNlIlVpbnQ4QXJyYXkiOmNhc2UiVWludDhDbGFtcGVkQXJyYXkiOmNhc2UiSW50MTZBcnJheSI6Y2FzZSJVaW50MTZBcnJheSI6Y2FzZSJJbnQzMkFycmF5IjpjYXNlIlVpbnQzMkFycmF5IjpjYXNlIkZsb2F0MzJBcnJheSI6Y2FzZSJGbG9hdDY0QXJyYXkiOnJldHVybnsiQHR5cGUiOiJiaW5hcnkiLGRhdGFUeXBlOmwsYmFzZTY0OnVkKHYuYnVmZmVyKX07ZGVmYXVsdDpyZXR1cm4gSlNPTi5zdHJpbmdpZnkodil9fXZhciBoZj1mdW5jdGlvbigpe30sVWM9Y2xhc3N7Y29uc3RydWN0b3IobCxiKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywiaW5zdGFuY2VJZCIse2VudW1lcmFibGU6ITAsdmFsdWU6U3RyaW5nKGwpfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsImNhbGxiYWNrTWFuYWdlciIse2VudW1lcmFibGU6ITAsdmFsdWU6bmV3IGZmKGwpfSksaGY9Ynx8ZnVuY3Rpb24oKXt9fWNhbGxiYWNrKGwsYixUKXtyZXR1cm4gdGhpcy5jYWxsYmFja01hbmFnZXIuY29uc3VtZShsLGIsVCl9cmVnaXN0ZXJIb29rKGwsYixULGspe3JldHVybiB0aGlzLmNhbGxiYWNrTWFuYWdlci5yZWdpc3Rlckhvb2sobCxiLFQsayl9dHJpZ2dlckhvb2sobCxiLFQsayl7cmV0dXJuIHRoaXMuY2FsbGJhY2tNYW5hZ2VyLnRyaWdnZXJIb29rKGwsYixULGspfXVwZGF0ZURhdGEobCxiLFQpe3RoaXMuc2VuZCgibW9kdWxlIix7bW9kdWxlOiJkb20iLG1ldGhvZDoidXBkYXRlQ29tcG9uZW50RGF0YSJ9LFtsLGIsVF0pfWRlc3Ryb3lDYWxsYmFjaygpe3JldHVybiB0aGlzLmNhbGxiYWNrTWFuYWdlci5jbG9zZSgpfW5vcm1hbGl6ZShsLGI9ITEpe2xldCBUPVN1KGwpO2lmKGwmJmwgaW5zdGFuY2VvZiB4bylyZXR1cm4gbC5yZWY7aWYobCYmbC4kZWwgaW5zdGFuY2VvZiB4bylyZXR1cm4gbC4kZWwucmVmO2lmKFQ9PT0iRnVuY3Rpb24iKXJldHVybiB0aGlzLmNhbGxiYWNrTWFuYWdlci5hZGQobCkudG9TdHJpbmcoKTtpZihiKXtpZihUPT09Ik9iamVjdCIpe2xldCBrPXt9O2ZvcihsZXQgQyBpbiBsKWtbQ109dGhpcy5ub3JtYWxpemUobFtDXSwhMCk7cmV0dXJuIGt9aWYoVD09PSJBcnJheSIpcmV0dXJuIGwubWFwKGs9PnRoaXMubm9ybWFsaXplKGssITApKX1yZXR1cm4gbCYmbC5yZWYmJmxbIltbVmlydHVhbEVsZW1lbnRdXSJdP2wucmVmOm12KGwpfXNlbmQobCxiLFQsayl7bGV0e2FjdGlvbjpDLGNvbXBvbmVudDpkLHJlZjptLG1vZHVsZTpSLG1ldGhvZDpXZX09Yjtzd2l0Y2goVD1ULm1hcChQdD0+dGhpcy5ub3JtYWxpemUoUHQsbCE9PSJtb2R1bGUiKSksU3Uoayk9PT0iT2JqZWN0IiYmKGs9dGhpcy5ub3JtYWxpemUoaywhMCkpLGwpe2Nhc2UiZG9tIjpyZXR1cm4gbnIoImRlYnVnIikmJmZvKGBbdGFza10oJHt0aGlzLmluc3RhbmNlSWR9LCR7bH0sJHtDfSkgJHtKU09OLnN0cmluZ2lmeShUKX1gKSx0aGlzW0NdKHRoaXMuaW5zdGFuY2VJZCxUKTtjYXNlImNvbXBvbmVudCI6cmV0dXJuIHRoaXMuY29tcG9uZW50SGFuZGxlcih0aGlzLmluc3RhbmNlSWQsbSxXZSxULGtpKHtjb21wb25lbnQ6ZH0saykpO2RlZmF1bHQ6cmV0dXJuIG5yKCJkZWJ1ZyIpJiZmbyhgW3Rhc2tdKCR7dGhpcy5pbnN0YW5jZUlkfSwke1J9LCR7V2V9KSAke0pTT04uc3RyaW5naWZ5KFQpfWApLHRoaXMubW9kdWxlSGFuZGxlcih0aGlzLmluc3RhbmNlSWQsUixXZSxULGspfX1jYWxsRE9NKGwsYil7cmV0dXJuIHRoaXNbbF0odGhpcy5pbnN0YW5jZUlkLGIpfWNhbGxDb21wb25lbnQobCxiLFQsayl7cmV0dXJuIHRoaXMuY29tcG9uZW50SGFuZGxlcih0aGlzLmluc3RhbmNlSWQsbCxiLFQsayl9Y2FsbE1vZHVsZShsLGIsVCxrKXtyZXR1cm4gdGhpcy5tb2R1bGVIYW5kbGVyKHRoaXMuaW5zdGFuY2VJZCxsLGIsVCxrKX19O2Z1bmN0aW9uIF92KCl7bGV0IHY9e2NyZWF0ZUZpbmlzaDpnbG9iYWwuY2FsbENyZWF0ZUZpbmlzaCx1cGRhdGVGaW5pc2g6Z2xvYmFsLmNhbGxVcGRhdGVGaW5pc2gscmVmcmVzaEZpbmlzaDpnbG9iYWwuY2FsbFJlZnJlc2hGaW5pc2gsY3JlYXRlQm9keTpnbG9iYWwuY2FsbENyZWF0ZUJvZHksYWRkRWxlbWVudDpnbG9iYWwuY2FsbEFkZEVsZW1lbnQscmVtb3ZlRWxlbWVudDpnbG9iYWwuY2FsbFJlbW92ZUVsZW1lbnQsbW92ZUVsZW1lbnQ6Z2xvYmFsLmNhbGxNb3ZlRWxlbWVudCx1cGRhdGVBdHRyczpnbG9iYWwuY2FsbFVwZGF0ZUF0dHJzLHVwZGF0ZVN0eWxlOmdsb2JhbC5jYWxsVXBkYXRlU3R5bGUsYWRkRXZlbnQ6Z2xvYmFsLmNhbGxBZGRFdmVudCxyZW1vdmVFdmVudDpnbG9iYWwuY2FsbFJlbW92ZUV2ZW50LF9fdXBkYXRlQ29tcG9uZW50RGF0YTpnbG9iYWwuX191cGRhdGVDb21wb25lbnREYXRhfSxsPVVjLnByb3RvdHlwZTtmb3IobGV0IGIgaW4gdil7bGV0IFQ9dltiXTtsW2JdPVQ/KGssQyk9PlQoaywuLi5DKTooayxDKT0+aGYoayxbe21vZHVsZToiZG9tIixtZXRob2Q6YixhcmdzOkN9XSwiLTEiKX1sLmNvbXBvbmVudEhhbmRsZXI9Z2xvYmFsLmNhbGxOYXRpdmVDb21wb25lbnR8fCgoYixULGssQyxkKT0+aGYoYixbe2NvbXBvbmVudDpkLmNvbXBvbmVudCxyZWY6VCxtZXRob2Q6ayxhcmdzOkN9XSkpLGwubW9kdWxlSGFuZGxlcj1nbG9iYWwuY2FsbE5hdGl2ZU1vZHVsZXx8KChiLFQsayxDKT0+aGYoYixbe21vZHVsZTpULG1ldGhvZDprLGFyZ3M6Q31dKSl9ZnVuY3Rpb24gUE4odixsLGIsVCxrLEMpe2xldCBkPXYuZ2V0UmVmKGwpO2lmKGQpcmV0dXJuIHYuZmlyZUV2ZW50KGQsYixULGssQyk7aWYoVClyZXR1cm4gVC5fbm9kZUlkPWwsdi5maXJlRXZlbnQodi5nZXRSZWYoIl9kb2N1bWVudEVsZW1lbnQiKSxiLFQsayxDKX1mdW5jdGlvbiBOTih2LGwsYixUKXtyZXR1cm4gdi50YXNrQ2VudGVyLmNhbGxiYWNrKGwsYixUKX1mdW5jdGlvbiBrTih2LGwsYixULGspe2lmKCF2fHwhdi50YXNrQ2VudGVyKXJldHVybiBjb25zb2xlLmVycm9yKGBbSlMgRnJhbWV3b3JrXSBDYW4ndCBmaW5kICJkb2N1bWVudCIgb3IgInRhc2tDZW50ZXIiLmApLG51bGw7bGV0IEM9bnVsbDt0cnl7Qz12LnRhc2tDZW50ZXIudHJpZ2dlckhvb2sobCxiLFQsayl9Y2F0Y2goZCl7dGhyb3cgY29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIHRyaWdnZXIgdGhlICIke2J9QCR7VH0iIGhvb2sgb24gJHtsfS5gKSxkfXJldHVybiBDfWZ1bmN0aW9uIEVkKHYsbCl7bGV0IGI9cmwodik7aWYoIWIpcmV0dXJuIG5ldyBFcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIHJlY2VpdmVUYXNrcywgaW5zdGFuY2UgKCR7dn0pIGlzIG5vdCBhdmFpbGFibGUuYCk7aWYoWmkobCkpcmV0dXJuIGwubWFwKFQ9Pntzd2l0Y2goVC5tZXRob2Qpe2Nhc2UiY2FsbGJhY2siOnJldHVybiBOTihiLC4uLlQuYXJncyk7Y2FzZSJmaXJlRXZlbnRTeW5jIjpjYXNlImZpcmVFdmVudCI6cmV0dXJuIFBOKGIsLi4uVC5hcmdzKTtjYXNlImNvbXBvbmVudEhvb2siOnJldHVybiBrTihiLC4uLlQuYXJncyl9fSl9dmFyIFRsPXt9O2Z1bmN0aW9uIGJ2KHY9e30pe2ZvcihsZXQgbCBpbiB2KVpsKFRsLGwpfHwoVGxbbF09e30pLCEhWmkodltsXSkmJnZbbF0uZm9yRWFjaChiPT57UmkoYik/VGxbbF1bYl09ITA6JGMoYikmJlJpKGIubmFtZSkmJihUbFtsXVtiLm5hbWVdPWIuYXJnc3x8W10pfSl9ZnVuY3Rpb24gcGYodixsKXtyZXR1cm4gUmkobCk/ISEoVGxbdl0mJlRsW3ZdW2xdKTohIVRsW3ZdfWZ1bmN0aW9uIHl2KHYpe3JldHVybiBUbFt2XX12YXIgd2Q9e307ZnVuY3Rpb24gRXYodil7IVppKHYpfHx2LmZvckVhY2gobD0+eyFsfHwoUmkobCk/d2RbbF09ITA6JGMobCkmJlJpKGwudHlwZSkmJih3ZFtsLnR5cGVdPWwsdmQobC50eXBlLGwubWV0aG9kcykpKX0pfWZ1bmN0aW9uIFNkKHYpe3JldHVybiEhd2Rbdl19dmFyIElsPVtdO2Z1bmN0aW9uIGdmKHYsbCl7Q2Qodik/Y29uc29sZS53YXJuKGBTZXJ2aWNlICIke3Z9IiBoYXMgYmVlbiByZWdpc3RlcmVkIGFscmVhZHkhYCk6KGw9a2koe30sbCksSWwucHVzaCh7bmFtZTp2LG9wdGlvbnM6bH0pKX1mdW5jdGlvbiB2Zih2KXtJbC5zb21lKChsLGIpPT57aWYobC5uYW1lPT09dilyZXR1cm4gSWwuc3BsaWNlKGIsMSksITB9KX1mdW5jdGlvbiBDZCh2KXtyZXR1cm4gUk4odik+PTB9ZnVuY3Rpb24gUk4odil7cmV0dXJuIElsLm1hcChsPT5sLm5hbWUpLmluZGV4T2Yodil9ZnVuY3Rpb24geE4odil7cmV0dXJuIGw9PntsZXQgYj1vZih2LGwpLHtjcmVhdGVBcHA6VH09YjtiLmNyZWF0ZVZ1ZUFwcD1iLmNyZWF0ZUFwcD0oayxDKT0+VChrLEMpLnVzZShCTixsKSxsLlZ1ZT1ifX12YXIgQk49e2luc3RhbGwodixsKXtNTih2LGwpLEV1KGwpLmluaXRBcHAodil9fTtmdW5jdGlvbiBNTih2LGwpe2xldHttb3VudDpifT12O3YubW91bnQ9VD0+e2xldCBrPWIoVCk7cmV0dXJuIFQ9PT0iI2FwcCImJmwuX19yZWdpc3RlckFwcChrKSxrfX1mdW5jdGlvbiBETih2KXtsZXR7VW5pU2hhcmVkOmwsVnVlU2hhcmVkOmIsVnVlUmVhY3Rpdml0eTpUfT12O3ZhciBrPWZ1bmN0aW9uKEMsZCxtLFIpeyJ1c2Ugc3RyaWN0Ijt2YXIgV2U9W107ZnVuY3Rpb24gUHQoaSl7V2UucHVzaChpKX1mdW5jdGlvbiBRdCgpe1dlLnBvcCgpfWZ1bmN0aW9uIE8oaSl7bS5wYXVzZVRyYWNraW5nKCk7Zm9yKHZhciBhPVdlLmxlbmd0aD9XZVtXZS5sZW5ndGgtMV0uY29tcG9uZW50Om51bGwsZj1hJiZhLmFwcENvbnRleHQuY29uZmlnLndhcm5IYW5kbGVyLHA9aWUoKSxTPWFyZ3VtZW50cy5sZW5ndGgsdz1uZXcgQXJyYXkoUz4xP1MtMTowKSxOPTE7TjxTO04rKyl3W04tMV09YXJndW1lbnRzW05dO2lmKGYpY24oZixhLDExLFtpK3cuam9pbigiIiksYSYmYS5wcm94eSxwLm1hcChGPT57dmFye3Zub2RlOnF9PUY7cmV0dXJuImF0IDwiLmNvbmNhdChrcyhhLHEudHlwZSksIj4iKX0pLmpvaW4oYApgKSxwXSk7ZWxzZXt2YXIgVj1bIltWdWUgd2Fybl06ICIuY29uY2F0KGkpLC4uLnddO3AubGVuZ3RoJiZWLnB1c2goYApgLC4uLlRuKHApKSxjb25zb2xlLndhcm4oLi4uVil9bS5yZXNldFRyYWNraW5nKCl9ZnVuY3Rpb24gaWUoKXt2YXIgaT1XZVtXZS5sZW5ndGgtMV07aWYoIWkpcmV0dXJuW107Zm9yKHZhciBhPVtdO2k7KXt2YXIgZj1hWzBdO2YmJmYudm5vZGU9PT1pP2YucmVjdXJzZUNvdW50Kys6YS5wdXNoKHt2bm9kZTppLHJlY3Vyc2VDb3VudDowfSk7dmFyIHA9aS5jb21wb25lbnQmJmkuY29tcG9uZW50LnBhcmVudDtpPXAmJnAudm5vZGV9cmV0dXJuIGF9ZnVuY3Rpb24gVG4oaSl7dmFyIGE9W107cmV0dXJuIGkuZm9yRWFjaCgoZixwKT0+e2EucHVzaCguLi5wPT09MD9bXTpbYApgXSwuLi5xbihmKSl9KSxhfWZ1bmN0aW9uIHFuKGkpe3Zhcnt2bm9kZTphLHJlY3Vyc2VDb3VudDpmfT1pLHA9Zj4wPyIuLi4gKCIuY29uY2F0KGYsIiByZWN1cnNpdmUgY2FsbHMpIik6IiIsUz1hLmNvbXBvbmVudD9hLmNvbXBvbmVudC5wYXJlbnQ9PW51bGw6ITEsdz0iIGF0IDwiLmNvbmNhdChrcyhhLmNvbXBvbmVudCxhLnR5cGUsUykpLE49Ij4iK3A7cmV0dXJuIGEucHJvcHM/W3csLi4ubXQoYS5wcm9wcyksTl06W3crTl19ZnVuY3Rpb24gbXQoaSl7dmFyIGE9W10sZj1PYmplY3Qua2V5cyhpKTtyZXR1cm4gZi5zbGljZSgwLDMpLmZvckVhY2gocD0+e2EucHVzaCguLi5KKHAsaVtwXSkpfSksZi5sZW5ndGg+MyYmYS5wdXNoKCIgLi4uIiksYX1mdW5jdGlvbiBKKGksYSxmKXtyZXR1cm4gZC5pc1N0cmluZyhhKT8oYT1KU09OLnN0cmluZ2lmeShhKSxmP2E6WyIiLmNvbmNhdChpLCI9IikuY29uY2F0KGEpXSk6dHlwZW9mIGE9PSJudW1iZXIifHx0eXBlb2YgYT09ImJvb2xlYW4ifHxhPT1udWxsP2Y/YTpbIiIuY29uY2F0KGksIj0iKS5jb25jYXQoYSldOm0uaXNSZWYoYSk/KGE9SihpLG0udG9SYXcoYS52YWx1ZSksITApLGY/YTpbIiIuY29uY2F0KGksIj1SZWY8IiksYSwiPiJdKTpkLmlzRnVuY3Rpb24oYSk/WyIiLmNvbmNhdChpLCI9Zm4iKS5jb25jYXQoYS5uYW1lPyI8Ii5jb25jYXQoYS5uYW1lLCI+Iik6IiIpXTooYT1tLnRvUmF3KGEpLGY/YTpbIiIuY29uY2F0KGksIj0iKSxhXSl9ZnVuY3Rpb24gcmUoaSxhKXtpIT09dm9pZCAwJiYodHlwZW9mIGkhPSJudW1iZXIiP08oIiIuY29uY2F0KGEsIiBpcyBub3QgYSB2YWxpZCBudW1iZXIgLSAiKSsiZ290ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KGkpLCIuIikpOmlzTmFOKGkpJiZPKCIiLmNvbmNhdChhLCIgaXMgTmFOIC0gIikrInRoZSBkdXJhdGlvbiBleHByZXNzaW9uIG1pZ2h0IGJlIGluY29ycmVjdC4iKSl9dmFyIExuPXtzcDoic2VydmVyUHJlZmV0Y2ggaG9vayIsYmM6ImJlZm9yZUNyZWF0ZSBob29rIixjOiJjcmVhdGVkIGhvb2siLGJtOiJiZWZvcmVNb3VudCBob29rIixtOiJtb3VudGVkIGhvb2siLGJ1OiJiZWZvcmVVcGRhdGUgaG9vayIsdToidXBkYXRlZCIsYnVtOiJiZWZvcmVVbm1vdW50IGhvb2siLHVtOiJ1bm1vdW50ZWQgaG9vayIsYToiYWN0aXZhdGVkIGhvb2siLGRhOiJkZWFjdGl2YXRlZCBob29rIixlYzoiZXJyb3JDYXB0dXJlZCBob29rIixydGM6InJlbmRlclRyYWNrZWQgaG9vayIscnRnOiJyZW5kZXJUcmlnZ2VyZWQgaG9vayIsWzBdOiJzZXR1cCBmdW5jdGlvbiIsWzFdOiJyZW5kZXIgZnVuY3Rpb24iLFsyXToid2F0Y2hlciBnZXR0ZXIiLFszXToid2F0Y2hlciBjYWxsYmFjayIsWzRdOiJ3YXRjaGVyIGNsZWFudXAgZnVuY3Rpb24iLFs1XToibmF0aXZlIGV2ZW50IGhhbmRsZXIiLFs2XToiY29tcG9uZW50IGV2ZW50IGhhbmRsZXIiLFs3XToidm5vZGUgaG9vayIsWzhdOiJkaXJlY3RpdmUgaG9vayIsWzldOiJ0cmFuc2l0aW9uIGhvb2siLFsxMF06ImFwcCBlcnJvckhhbmRsZXIiLFsxMV06ImFwcCB3YXJuSGFuZGxlciIsWzEyXToicmVmIGZ1bmN0aW9uIixbMTNdOiJhc3luYyBjb21wb25lbnQgbG9hZGVyIixbMTRdOiJzY2hlZHVsZXIgZmx1c2guIFRoaXMgaXMgbGlrZWx5IGEgVnVlIGludGVybmFscyBidWcuIFBsZWFzZSBvcGVuIGFuIGlzc3VlIGF0IGh0dHBzOi8vbmV3LWlzc3VlLnZ1ZWpzLm9yZy8/cmVwbz12dWVqcy9jb3JlIn07ZnVuY3Rpb24gY24oaSxhLGYscCl7dmFyIFM7dHJ5e1M9cD9pKC4uLnApOmkoKX1jYXRjaCh3KXtJbih3LGEsZil9cmV0dXJuIFN9ZnVuY3Rpb24gSHQoaSxhLGYscCl7aWYoZC5pc0Z1bmN0aW9uKGkpKXt2YXIgUz1jbihpLGEsZixwKTtyZXR1cm4gUyYmZC5pc1Byb21pc2UoUykmJlMuY2F0Y2goVj0+e0luKFYsYSxmKX0pLFN9Zm9yKHZhciB3PVtdLE49MDtOPGkubGVuZ3RoO04rKyl3LnB1c2goSHQoaVtOXSxhLGYscCkpO3JldHVybiB3fWZ1bmN0aW9uIEluKGksYSxmKXt2YXIgcD1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITAsUz1hP2Eudm5vZGU6bnVsbDtpZihhKXtmb3IodmFyIHc9YS5wYXJlbnQsTj1hLnByb3h5LFY9TG5bZl18fGY7dzspe3ZhciBGPXcuZWM7aWYoRil7Zm9yKHZhciBxPTA7cTxGLmxlbmd0aDtxKyspaWYoRltxXShpLE4sVik9PT0hMSlyZXR1cm59dz13LnBhcmVudH12YXIgX2U9YS5hcHBDb250ZXh0LmNvbmZpZy5lcnJvckhhbmRsZXI7aWYoX2Upe2NuKF9lLG51bGwsMTAsW2ksTixWXSk7cmV0dXJufX1ScihpLGYsUyxwKX1mdW5jdGlvbiBScihpLGEsZil7dmFyIHA9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiEwO3t2YXIgUz1MblthXXx8YTtmJiZQdChmKSxPKCJVbmhhbmRsZWQgZXJyb3IiLmNvbmNhdChTPyIgZHVyaW5nIGV4ZWN1dGlvbiBvZiAiLmNvbmNhdChTKToiIikpLGYmJlF0KCksY29uc29sZS5lcnJvcihpKX19dmFyIEhyPSExLHJyPSExLG5uPVtdLGp0PTAsZ249W10sUm49bnVsbCx4bj0wLG1yPXt0aGVuKGkpe3NldFRpbWVvdXQoKCk9PmkoKSwwKX19LEtlPUMucGxhdGZvcm09PT0iaU9TIixkdD1LZT9tcjpQcm9taXNlLnJlc29sdmUoKSx3dD1udWxsLHJuPTEwMDtmdW5jdGlvbiBObihpKXt2YXIgYT13dHx8ZHQ7cmV0dXJuIGk/YS50aGVuKHRoaXM/aS5iaW5kKHRoaXMpOmkpOmF9ZnVuY3Rpb24gSnQoaSl7Zm9yKHZhciBhPWp0KzEsZj1ubi5sZW5ndGg7YTxmOyl7dmFyIHA9YStmPj4+MSxTPU1pKG5uW3BdKTtTPGk/YT1wKzE6Zj1wfXJldHVybiBhfWZ1bmN0aW9uIEZuKGkpeyghbm4ubGVuZ3RofHwhbm4uaW5jbHVkZXMoaSxIciYmaS5hbGxvd1JlY3Vyc2U/anQrMTpqdCkpJiYoaS5pZD09bnVsbD9ubi5wdXNoKGkpOm5uLnNwbGljZShKdChpLmlkKSwwLGkpLGlyKCkpfWZ1bmN0aW9uIGlyKCl7IUhyJiYhcnImJihycj0hMCx3dD1kdC50aGVuKEpvKSl9ZnVuY3Rpb24geGkoaSl7dmFyIGE9bm4uaW5kZXhPZihpKTthPmp0JiZubi5zcGxpY2UoYSwxKX1mdW5jdGlvbiBCaShpKXtkLmlzQXJyYXkoaSk/Z24ucHVzaCguLi5pKTooIVJufHwhUm4uaW5jbHVkZXMoaSxpLmFsbG93UmVjdXJzZT94bisxOnhuKSkmJmduLnB1c2goaSksaXIoKX1mdW5jdGlvbiBqbihpKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06SHI/anQrMTowO2ZvcihpPWl8fG5ldyBNYXA7YTxubi5sZW5ndGg7YSsrKXt2YXIgZj1ublthXTtpZihmJiZmLnByZSl7aWYoeHIoaSxmKSljb250aW51ZTtubi5zcGxpY2UoYSwxKSxhLS0sZigpfX19ZnVuY3Rpb24ganIoaSl7aWYoZ24ubGVuZ3RoKXt2YXIgYT1bLi4ubmV3IFNldChnbildO2lmKGduLmxlbmd0aD0wLFJuKXtSbi5wdXNoKC4uLmEpO3JldHVybn1mb3IoUm49YSxpPWl8fG5ldyBNYXAsUm4uc29ydCgoZixwKT0+TWkoZiktTWkocCkpLHhuPTA7eG48Um4ubGVuZ3RoO3huKyspeHIoaSxSblt4bl0pfHxSblt4bl0oKTtSbj1udWxsLHhuPTB9fXZhciBNaT1pPT5pLmlkPT1udWxsPzEvMDppLmlkLHBhPShpLGEpPT57dmFyIGY9TWkoaSktTWkoYSk7aWYoZj09PTApe2lmKGkucHJlJiYhYS5wcmUpcmV0dXJuLTE7aWYoYS5wcmUmJiFpLnByZSlyZXR1cm4gMX1yZXR1cm4gZn07ZnVuY3Rpb24gSm8oaSl7cnI9ITEsSHI9ITAsaT1pfHxuZXcgTWFwLG5uLnNvcnQocGEpO3ZhciBhPXA9PnhyKGkscCk7dHJ5e2ZvcihqdD0wO2p0PG5uLmxlbmd0aDtqdCsrKXt2YXIgZj1ubltqdF07aWYoZiYmZi5hY3RpdmUhPT0hMSl7aWYoYShmKSljb250aW51ZTtjbihmLG51bGwsMTQpfX19ZmluYWxseXtqdD0wLG5uLmxlbmd0aD0wLGpyKGkpLEhyPSExLHd0PW51bGwsKG5uLmxlbmd0aHx8Z24ubGVuZ3RoKSYmSm8oaSl9fWZ1bmN0aW9uIHhyKGksYSl7aWYoIWkuaGFzKGEpKWkuc2V0KGEsMSk7ZWxzZXt2YXIgZj1pLmdldChhKTtpZihmPnJuKXt2YXIgcD1hLm93bmVySW5zdGFuY2UsUz1wJiZTYShwLnR5cGUpO3JldHVybiBPKCJNYXhpbXVtIHJlY3Vyc2l2ZSB1cGRhdGVzIGV4Y2VlZGVkIi5jb25jYXQoUz8iIGluIGNvbXBvbmVudCA8Ii5jb25jYXQoUywiPiIpOiIiLCIuICIpKyJUaGlzIG1lYW5zIHlvdSBoYXZlIGEgcmVhY3RpdmUgZWZmZWN0IHRoYXQgaXMgbXV0YXRpbmcgaXRzIG93biBkZXBlbmRlbmNpZXMgYW5kIHRodXMgcmVjdXJzaXZlbHkgdHJpZ2dlcmluZyBpdHNlbGYuIFBvc3NpYmxlIHNvdXJjZXMgaW5jbHVkZSBjb21wb25lbnQgdGVtcGxhdGUsIHJlbmRlciBmdW5jdGlvbiwgdXBkYXRlZCBob29rIG9yIHdhdGNoZXIgc291cmNlIGZ1bmN0aW9uLiIpLCEwfWVsc2UgaS5zZXQoYSxmKzEpfX12YXIgQnI9ITEsTXI9bmV3IFNldDtkLmdldEdsb2JhbFRoaXMoKS5fX1ZVRV9ITVJfUlVOVElNRV9fPXtjcmVhdGVSZWNvcmQ6S24oaG8pLHJlcmVuZGVyOktuKGdvKSxyZWxvYWQ6S24odmEpfTt2YXIgZnI9bmV3IE1hcDtmdW5jdGlvbiBnYShpKXt2YXIgYT1pLnR5cGUuX19obXJJZCxmPWZyLmdldChhKTtmfHwoaG8oYSxpLnR5cGUpLGY9ZnIuZ2V0KGEpKSxmLmluc3RhbmNlcy5hZGQoaSl9ZnVuY3Rpb24gWm8oaSl7ZnIuZ2V0KGkudHlwZS5fX2htcklkKS5pbnN0YW5jZXMuZGVsZXRlKGkpfWZ1bmN0aW9uIGhvKGksYSl7cmV0dXJuIGZyLmhhcyhpKT8hMTooZnIuc2V0KGkse2luaXRpYWxEZWY6cG8oYSksaW5zdGFuY2VzOm5ldyBTZXR9KSwhMCl9ZnVuY3Rpb24gcG8oaSl7cmV0dXJuIERsKGkpP2kuX192Y2NPcHRzOml9ZnVuY3Rpb24gZ28oaSxhKXt2YXIgZj1mci5nZXQoaSk7IWZ8fChmLmluaXRpYWxEZWYucmVuZGVyPWEsWy4uLmYuaW5zdGFuY2VzXS5mb3JFYWNoKHA9PnthJiYocC5yZW5kZXI9YSxwbyhwLnR5cGUpLnJlbmRlcj1hKSxwLnJlbmRlckNhY2hlPVtdLEJyPSEwLHAudXBkYXRlKCksQnI9ITF9KSl9ZnVuY3Rpb24gdmEoaSxhKXt2YXIgZj1mci5nZXQoaSk7aWYoISFmKXthPXBvKGEpLEJvKGYuaW5pdGlhbERlZixhKTt2YXIgcD1bLi4uZi5pbnN0YW5jZXNdO2Zvcih2YXIgUyBvZiBwKXt2YXIgdz1wbyhTLnR5cGUpO01yLmhhcyh3KXx8KHchPT1mLmluaXRpYWxEZWYmJkJvKHcsYSksTXIuYWRkKHcpKSxTLmFwcENvbnRleHQub3B0aW9uc0NhY2hlLmRlbGV0ZShTLnR5cGUpLFMuY2VSZWxvYWQ/KE1yLmFkZCh3KSxTLmNlUmVsb2FkKGEuc3R5bGVzKSxNci5kZWxldGUodykpOlMucGFyZW50P0ZuKFMucGFyZW50LnVwZGF0ZSk6Uy5hcHBDb250ZXh0LnJlbG9hZD9TLmFwcENvbnRleHQucmVsb2FkKCk6dHlwZW9mIHdpbmRvdyE9InVuZGVmaW5lZCI/d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOmNvbnNvbGUud2FybigiW0hNUl0gUm9vdCBvciBtYW51YWxseSBtb3VudGVkIGluc3RhbmNlIG1vZGlmaWVkLiBGdWxsIHJlbG9hZCByZXF1aXJlZC4iKX1CaSgoKT0+e2Zvcih2YXIgTiBvZiBwKU1yLmRlbGV0ZShwbyhOLnR5cGUpKX0pfX1mdW5jdGlvbiBCbyhpLGEpe2QuZXh0ZW5kKGksYSk7Zm9yKHZhciBmIGluIGkpZiE9PSJfX2ZpbGUiJiYhKGYgaW4gYSkmJmRlbGV0ZSBpW2ZdfWZ1bmN0aW9uIEtuKGkpe3JldHVybihhLGYpPT57dHJ5e3JldHVybiBpKGEsZil9Y2F0Y2gocCl7Y29uc29sZS5lcnJvcihwKSxjb25zb2xlLndhcm4oIltITVJdIFNvbWV0aGluZyB3ZW50IHdyb25nIGR1cmluZyBWdWUgY29tcG9uZW50IGhvdC1yZWxvYWQuIEZ1bGwgcmVsb2FkIHJlcXVpcmVkLiIpfX19Qy5kZXZ0b29scz12b2lkIDA7dmFyIF9yPVtdLGRyPSExO2Z1bmN0aW9uIERuKGkpe2Zvcih2YXIgYT1hcmd1bWVudHMubGVuZ3RoLGY9bmV3IEFycmF5KGE+MT9hLTE6MCkscD0xO3A8YTtwKyspZltwLTFdPWFyZ3VtZW50c1twXTtDLmRldnRvb2xzP0MuZGV2dG9vbHMuZW1pdChpLC4uLmYpOmRyfHxfci5wdXNoKHtldmVudDppLGFyZ3M6Zn0pfWZ1bmN0aW9uIFhpKGksYSl7dmFyIGYscDtpZihDLmRldnRvb2xzPWksQy5kZXZ0b29scylDLmRldnRvb2xzLmVuYWJsZWQ9ITAsX3IuZm9yRWFjaCh3PT57dmFye2V2ZW50Ok4sYXJnczpWfT13O3JldHVybiBDLmRldnRvb2xzLmVtaXQoTiwuLi5WKX0pLF9yPVtdO2Vsc2UgaWYodHlwZW9mIHdpbmRvdyE9InVuZGVmaW5lZCImJndpbmRvdy5IVE1MRWxlbWVudCYmISgocD0oZj13aW5kb3cubmF2aWdhdG9yKT09PW51bGx8fGY9PT12b2lkIDA/dm9pZCAwOmYudXNlckFnZW50KT09PW51bGx8fHA9PT12b2lkIDA/dm9pZCAwOnAuaW5jbHVkZXMoImpzZG9tIikpKXt2YXIgUz1hLl9fVlVFX0RFVlRPT0xTX0hPT0tfUkVQTEFZX189YS5fX1ZVRV9ERVZUT09MU19IT09LX1JFUExBWV9ffHxbXTtTLnB1c2godz0+e1hpKHcsYSl9KSxzZXRUaW1lb3V0KCgpPT57Qy5kZXZ0b29sc3x8KGEuX19WVUVfREVWVE9PTFNfSE9PS19SRVBMQVlfXz1udWxsLGRyPSEwLF9yPVtdKX0sM2UzKX1lbHNlIGRyPSEwLF9yPVtdfWZ1bmN0aW9uIFhvKGksYSl7RG4oImFwcDppbml0IixpLGEse0ZyYWdtZW50Omt0LFRleHQ6THQsQ29tbWVudDplbixTdGF0aWM6TnJ9KX1mdW5jdGlvbiBNbyhpKXtEbigiYXBwOnVubW91bnQiLGkpfXZhciBvaT1rbigiY29tcG9uZW50OmFkZGVkIiksYWk9a24oImNvbXBvbmVudDp1cGRhdGVkIiksUWk9a24oImNvbXBvbmVudDpyZW1vdmVkIiksVHI9aT0+e0MuZGV2dG9vbHMmJnR5cGVvZiBDLmRldnRvb2xzLmNsZWFudXBCdWZmZXI9PSJmdW5jdGlvbiImJiFDLmRldnRvb2xzLmNsZWFudXBCdWZmZXIoaSkmJlFpKGkpfTtmdW5jdGlvbiBrbihpKXtyZXR1cm4gYT0+e0RuKGksYS5hcHBDb250ZXh0LmFwcCxhLnVpZCxhLnBhcmVudD9hLnBhcmVudC51aWQ6dm9pZCAwLGEpfX12YXIgdm89RG8oInBlcmY6c3RhcnQiKSxtbz1EbygicGVyZjplbmQiKTtmdW5jdGlvbiBEbyhpKXtyZXR1cm4oYSxmLHApPT57RG4oaSxhLmFwcENvbnRleHQuYXBwLGEudWlkLGEsZixwKX19ZnVuY3Rpb24gX28oaSxhLGYpe0RuKCJjb21wb25lbnQ6ZW1pdCIsaS5hcHBDb250ZXh0LmFwcCxpLGEsZil9ZnVuY3Rpb24gTG8oaSxhKXtpZighaS5pc1VubW91bnRlZCl7Zm9yKHZhciBmPWkudm5vZGUucHJvcHN8fGQuRU1QVFlfT0JKLHA9YXJndW1lbnRzLmxlbmd0aCxTPW5ldyBBcnJheShwPjI/cC0yOjApLHc9Mjt3PHA7dysrKVNbdy0yXT1hcmd1bWVudHNbd107e3ZhcntlbWl0c09wdGlvbnM6Tixwcm9wc09wdGlvbnM6W1ZdfT1pO2lmKE4paWYoIShhIGluIE4pKSghVnx8IShkLnRvSGFuZGxlcktleShhKWluIFYpKSYmTygnQ29tcG9uZW50IGVtaXR0ZWQgZXZlbnQgIicuY29uY2F0KGEsJyIgYnV0IGl0IGlzIG5laXRoZXIgZGVjbGFyZWQgaW4gJykrJ3RoZSBlbWl0cyBvcHRpb24gbm9yIGFzIGFuICInLmNvbmNhdChkLnRvSGFuZGxlcktleShhKSwnIiBwcm9wLicpKTtlbHNle3ZhciBGPU5bYV07aWYoZC5pc0Z1bmN0aW9uKEYpKXt2YXIgcT1GKC4uLlMpO3F8fE8oJ0ludmFsaWQgZXZlbnQgYXJndW1lbnRzOiBldmVudCB2YWxpZGF0aW9uIGZhaWxlZCBmb3IgZXZlbnQgIicuY29uY2F0KGEsJyIuJykpfX19dmFyIF9lPVMsc2U9YS5zdGFydHNXaXRoKCJ1cGRhdGU6IiksbmU9c2UmJmEuc2xpY2UoNyk7aWYobmUmJm5lIGluIGYpe3ZhciBPZT0iIi5jb25jYXQobmU9PT0ibW9kZWxWYWx1ZSI/Im1vZGVsIjpuZSwiTW9kaWZpZXJzIikse251bWJlcjpEZSx0cmltOlplfT1mW09lXXx8ZC5FTVBUWV9PQko7WmUmJihfZT1TLm1hcChMZT0+ZC5pc1N0cmluZyhMZSk/TGUudHJpbSgpOkxlKSksRGUmJihfZT1TLm1hcChkLmxvb3NlVG9OdW1iZXIpKX1fbyhpLGEsX2UpO3t2YXIgZnQ9YS50b0xvd2VyQ2FzZSgpO2Z0IT09YSYmZltkLnRvSGFuZGxlcktleShmdCldJiZPKCdFdmVudCAiJy5jb25jYXQoZnQsJyIgaXMgZW1pdHRlZCBpbiBjb21wb25lbnQgJykrIiIuY29uY2F0KGtzKGksaS50eXBlKSwnIGJ1dCB0aGUgaGFuZGxlciBpcyByZWdpc3RlcmVkIGZvciAiJykuY29uY2F0KGEsJyIuICcpKyJOb3RlIHRoYXQgSFRNTCBhdHRyaWJ1dGVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlIGFuZCB5b3UgY2Fubm90IHVzZSB2LW9uIHRvIGxpc3RlbiB0byBjYW1lbENhc2UgZXZlbnRzIHdoZW4gdXNpbmcgaW4tRE9NIHRlbXBsYXRlcy4gIisnWW91IHNob3VsZCBwcm9iYWJseSB1c2UgIicuY29uY2F0KGQuaHlwaGVuYXRlKGEpLCciIGluc3RlYWQgb2YgIicpLmNvbmNhdChhLCciLicpKX12YXIgVGUsbGU9ZltUZT1kLnRvSGFuZGxlcktleShhKV18fGZbVGU9ZC50b0hhbmRsZXJLZXkoZC5jYW1lbGl6ZShhKSldOyFsZSYmc2UmJihsZT1mW1RlPWQudG9IYW5kbGVyS2V5KGQuaHlwaGVuYXRlKGEpKV0pLGxlJiZIdChsZSxpLDYsX2UpO3ZhciBFZT1mW1RlKyJPbmNlIl07aWYoRWUpe2lmKCFpLmVtaXR0ZWQpaS5lbWl0dGVkPXt9O2Vsc2UgaWYoaS5lbWl0dGVkW1RlXSlyZXR1cm47aS5lbWl0dGVkW1RlXT0hMCxIdChFZSxpLDYsX2UpfX19ZnVuY3Rpb24gc2koaSxhKXt2YXIgZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06ITEscD1hLmVtaXRzQ2FjaGUsUz1wLmdldChpKTtpZihTIT09dm9pZCAwKXJldHVybiBTO3ZhciB3PWkuZW1pdHMsTj17fSxWPSExO2lmKCFkLmlzRnVuY3Rpb24oaSkpe3ZhciBGPXE9Pnt2YXIgX2U9c2kocSxhLCEwKTtfZSYmKFY9ITAsZC5leHRlbmQoTixfZSkpfTshZiYmYS5taXhpbnMubGVuZ3RoJiZhLm1peGlucy5mb3JFYWNoKEYpLGkuZXh0ZW5kcyYmRihpLmV4dGVuZHMpLGkubWl4aW5zJiZpLm1peGlucy5mb3JFYWNoKEYpfXJldHVybiF3JiYhVj8oZC5pc09iamVjdChpKSYmcC5zZXQoaSxudWxsKSxudWxsKTooZC5pc0FycmF5KHcpP3cuZm9yRWFjaChxPT5OW3FdPW51bGwpOmQuZXh0ZW5kKE4sdyksZC5pc09iamVjdChpKSYmcC5zZXQoaSxOKSxOKX1mdW5jdGlvbiB5bihpLGEpe3JldHVybiFpfHwhZC5pc09uKGEpPyExOihhPWEuc2xpY2UoMikucmVwbGFjZSgvT25jZSQvLCIiKSxkLmhhc093bihpLGFbMF0udG9Mb3dlckNhc2UoKSthLnNsaWNlKDEpKXx8ZC5oYXNPd24oaSxkLmh5cGhlbmF0ZShhKSl8fGQuaGFzT3duKGksYSkpfXZhciBFbj1udWxsLGxpPW51bGw7ZnVuY3Rpb24gRm8oaSl7dmFyIGE9RW47cmV0dXJuIEVuPWksbGk9aSYmaS50eXBlLl9fc2NvcGVJZHx8bnVsbCxhfWZ1bmN0aW9uIHFhKGkpe2xpPWl9ZnVuY3Rpb24gSm4oKXtsaT1udWxsfXZhciBvcj1pPT5jaTtmdW5jdGlvbiBjaShpKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06RW47aWYoIWF8fGkuX24pcmV0dXJuIGk7dmFyIGY9ZnVuY3Rpb24oKXtmLl9kJiZXcygtMSk7dmFyIHA9Rm8oYSksUzt0cnl7Uz1pKC4uLmFyZ3VtZW50cyl9ZmluYWxseXtGbyhwKSxmLl9kJiZXcygxKX1yZXR1cm4gYWkoYSksU307cmV0dXJuIGYuX249ITAsZi5fYz0hMCxmLl9kPSEwLGZ9dmFyIEJ0PSExO2Z1bmN0aW9uIHhlKCl7QnQ9ITB9ZnVuY3Rpb24gYm8oaSl7dmFye3R5cGU6YSx2bm9kZTpmLHByb3h5OnAsd2l0aFByb3h5OlMscHJvcHM6dyxwcm9wc09wdGlvbnM6W05dLHNsb3RzOlYsYXR0cnM6RixlbWl0OnEscmVuZGVyOl9lLHJlbmRlckNhY2hlOnNlLGRhdGE6bmUsc2V0dXBTdGF0ZTpPZSxjdHg6RGUsaW5oZXJpdEF0dHJzOlplfT1pLGZ0LFRlLGxlPUZvKGkpO0J0PSExO3RyeXtpZihmLnNoYXBlRmxhZyY0KXt2YXIgRWU9U3x8cDtmdD1TcihfZS5jYWxsKEVlLEVlLHNlLHcsT2UsbmUsRGUpKSxUZT1GfWVsc2V7dmFyIExlPWE7Rj09PXcmJnhlKCksZnQ9U3IoTGUubGVuZ3RoPjE/TGUodyx7Z2V0IGF0dHJzKCl7cmV0dXJuIHhlKCksRn0sc2xvdHM6VixlbWl0OnF9KTpMZSh3LG51bGwpKSxUZT1hLnByb3BzP0Y6bWEoRil9fWNhdGNoKFFlKXtXbi5sZW5ndGg9MCxJbihRZSxpLDEpLGZ0PVVuKGVuKX12YXIgRmU9ZnQscnQ9dm9pZCAwO2lmKGZ0LnBhdGNoRmxhZz4wJiZmdC5wYXRjaEZsYWcmMjA0OCYmKFtGZSxydF09ZW8oZnQpKSxUZSYmWmUhPT0hMSl7dmFyIE90PU9iamVjdC5rZXlzKFRlKSx7c2hhcGVGbGFnOlhlfT1GZTtpZihPdC5sZW5ndGgpe2lmKFhlJigxfDYpKU4mJk90LnNvbWUoZC5pc01vZGVsTGlzdGVuZXIpJiYoVGU9UW8oVGUsTikpLEZlPVdpKEZlLFRlKTtlbHNlIGlmKCFCdCYmRmUudHlwZSE9PWVuKXtmb3IodmFyIEI9T2JqZWN0LmtleXMoRiksaj1bXSxvZT1bXSx5ZT0wLGFlPUIubGVuZ3RoO3llPGFlO3llKyspe3ZhciBnZT1CW3llXTtkLmlzT24oZ2UpP2QuaXNNb2RlbExpc3RlbmVyKGdlKXx8ai5wdXNoKGdlWzJdLnRvTG93ZXJDYXNlKCkrZ2Uuc2xpY2UoMykpOm9lLnB1c2goZ2UpfW9lLmxlbmd0aCYmTygiRXh0cmFuZW91cyBub24tcHJvcHMgYXR0cmlidXRlcyAoIisiIi5jb25jYXQob2Uuam9pbigiLCAiKSwiKSAiKSsid2VyZSBwYXNzZWQgdG8gY29tcG9uZW50IGJ1dCBjb3VsZCBub3QgYmUgYXV0b21hdGljYWxseSBpbmhlcml0ZWQgYmVjYXVzZSBjb21wb25lbnQgcmVuZGVycyBmcmFnbWVudCBvciB0ZXh0IHJvb3Qgbm9kZXMuIiksai5sZW5ndGgmJk8oIkV4dHJhbmVvdXMgbm9uLWVtaXRzIGV2ZW50IGxpc3RlbmVycyAoIisiIi5jb25jYXQoai5qb2luKCIsICIpLCIpICIpKyd3ZXJlIHBhc3NlZCB0byBjb21wb25lbnQgYnV0IGNvdWxkIG5vdCBiZSBhdXRvbWF0aWNhbGx5IGluaGVyaXRlZCBiZWNhdXNlIGNvbXBvbmVudCByZW5kZXJzIGZyYWdtZW50IG9yIHRleHQgcm9vdCBub2Rlcy4gSWYgdGhlIGxpc3RlbmVyIGlzIGludGVuZGVkIHRvIGJlIGEgY29tcG9uZW50IGN1c3RvbSBldmVudCBsaXN0ZW5lciBvbmx5LCBkZWNsYXJlIGl0IHVzaW5nIHRoZSAiZW1pdHMiIG9wdGlvbi4nKX19fXJldHVybiBmLmRpcnMmJihEaShGZSl8fE8oIlJ1bnRpbWUgZGlyZWN0aXZlIHVzZWQgb24gY29tcG9uZW50IHdpdGggbm9uLWVsZW1lbnQgcm9vdCBub2RlLiBUaGUgZGlyZWN0aXZlcyB3aWxsIG5vdCBmdW5jdGlvbiBhcyBpbnRlbmRlZC4iKSxGZT1XaShGZSksRmUuZGlycz1GZS5kaXJzP0ZlLmRpcnMuY29uY2F0KGYuZGlycyk6Zi5kaXJzKSxmLnRyYW5zaXRpb24mJihEaShGZSl8fE8oIkNvbXBvbmVudCBpbnNpZGUgPFRyYW5zaXRpb24+IHJlbmRlcnMgbm9uLWVsZW1lbnQgcm9vdCBub2RlIHRoYXQgY2Fubm90IGJlIGFuaW1hdGVkLiIpLEZlLnRyYW5zaXRpb249Zi50cmFuc2l0aW9uKSxydD9ydChGZSk6ZnQ9RmUsRm8obGUpLGZ0fXZhciBlbz1pPT57dmFyIGE9aS5jaGlsZHJlbixmPWkuZHluYW1pY0NoaWxkcmVuLHA9Vm8oYSk7aWYoIXApcmV0dXJuW2ksdm9pZCAwXTt2YXIgUz1hLmluZGV4T2YocCksdz1mP2YuaW5kZXhPZihwKTotMSxOPVY9PnthW1NdPVYsZiYmKHc+LTE/Zlt3XT1WOlYucGF0Y2hGbGFnPjAmJihpLmR5bmFtaWNDaGlsZHJlbj1bLi4uZixWXSkpfTtyZXR1cm5bU3IocCksTl19O2Z1bmN0aW9uIFZvKGkpe2Zvcih2YXIgYSxmPTA7ZjxpLmxlbmd0aDtmKyspe3ZhciBwPWlbZl07aWYod3IocCkpe2lmKHAudHlwZSE9PWVufHxwLmNoaWxkcmVuPT09InYtaWYiKXtpZihhKXJldHVybjthPXB9fWVsc2UgcmV0dXJufXJldHVybiBhfXZhciBtYT1pPT57dmFyIGE7Zm9yKHZhciBmIGluIGkpKGY9PT0iY2xhc3MifHxmPT09InN0eWxlInx8ZC5pc09uKGYpKSYmKChhfHwoYT17fSkpW2ZdPWlbZl0pO3JldHVybiBhfSxRbz0oaSxhKT0+e3ZhciBmPXt9O2Zvcih2YXIgcCBpbiBpKSghZC5pc01vZGVsTGlzdGVuZXIocCl8fCEocC5zbGljZSg5KWluIGEpKSYmKGZbcF09aVtwXSk7cmV0dXJuIGZ9LERpPWk9Pmkuc2hhcGVGbGFnJig2fDEpfHxpLnR5cGU9PT1lbjtmdW5jdGlvbiB5byhpLGEsZil7dmFye3Byb3BzOnAsY2hpbGRyZW46Uyxjb21wb25lbnQ6d309aSx7cHJvcHM6TixjaGlsZHJlbjpWLHBhdGNoRmxhZzpGfT1hLHE9dy5lbWl0c09wdGlvbnM7aWYoKFN8fFYpJiZCcnx8YS5kaXJzfHxhLnRyYW5zaXRpb24pcmV0dXJuITA7aWYoZiYmRj49MCl7aWYoRiYxMDI0KXJldHVybiEwO2lmKEYmMTYpcmV0dXJuIHA/SXIocCxOLHEpOiEhTjtpZihGJjgpZm9yKHZhciBfZT1hLmR5bmFtaWNQcm9wcyxzZT0wO3NlPF9lLmxlbmd0aDtzZSsrKXt2YXIgbmU9X2Vbc2VdO2lmKE5bbmVdIT09cFtuZV0mJiF5bihxLG5lKSlyZXR1cm4hMH19ZWxzZSByZXR1cm4oU3x8VikmJighVnx8IVYuJHN0YWJsZSk/ITA6cD09PU4/ITE6cD9OP0lyKHAsTixxKTohMDohIU47cmV0dXJuITF9ZnVuY3Rpb24gSXIoaSxhLGYpe3ZhciBwPU9iamVjdC5rZXlzKGEpO2lmKHAubGVuZ3RoIT09T2JqZWN0LmtleXMoaSkubGVuZ3RoKXJldHVybiEwO2Zvcih2YXIgUz0wO1M8cC5sZW5ndGg7UysrKXt2YXIgdz1wW1NdO2lmKGFbd10hPT1pW3ddJiYheW4oZix3KSlyZXR1cm4hMH1yZXR1cm4hMX1mdW5jdGlvbiBFaShpLGEpe2Zvcih2YXJ7dm5vZGU6ZixwYXJlbnQ6cH09aTtwJiZwLnN1YlRyZWU9PT1mOykoZj1wLnZub2RlKS5lbD1hLHA9cC5wYXJlbnR9dmFyIFRhPWk9PmkuX19pc1N1c3BlbnNlLG9uPXtuYW1lOiJTdXNwZW5zZSIsX19pc1N1c3BlbnNlOiEwLHByb2Nlc3MoaSxhLGYscCxTLHcsTixWLEYscSl7aT09bnVsbD93bihhLGYscCxTLHcsTixWLEYscSk6ZmkoaSxhLGYscCxTLE4sVixGLHEpfSxoeWRyYXRlOkthLGNyZWF0ZTpocixub3JtYWxpemU6SWF9LEVvPW9uO2Z1bmN0aW9uIHVpKGksYSl7dmFyIGY9aS5wcm9wcyYmaS5wcm9wc1thXTtkLmlzRnVuY3Rpb24oZikmJmYoKX1mdW5jdGlvbiB3bihpLGEsZixwLFMsdyxOLFYsRil7dmFye3A6cSxvOntjcmVhdGVFbGVtZW50Ol9lfX09RixzZT1fZSgiZGl2IixhKSxuZT1pLnN1c3BlbnNlPWhyKGksUyxwLGEsc2UsZix3LE4sVixGKTtxKG51bGwsbmUucGVuZGluZ0JyYW5jaD1pLnNzQ29udGVudCxzZSxudWxsLHAsbmUsdyxOKSxuZS5kZXBzPjA/KHVpKGksIm9uUGVuZGluZyIpLHVpKGksIm9uRmFsbGJhY2siKSxxKG51bGwsaS5zc0ZhbGxiYWNrLGEsZixwLG51bGwsdyxOKSxabihuZSxpLnNzRmFsbGJhY2spKTpuZS5yZXNvbHZlKCl9ZnVuY3Rpb24gZmkoaSxhLGYscCxTLHcsTixWLEYpe3ZhcntwOnEsdW06X2Usbzp7Y3JlYXRlRWxlbWVudDpzZX19PUYsbmU9YS5zdXNwZW5zZT1pLnN1c3BlbnNlO25lLnZub2RlPWEsYS5lbD1pLmVsO3ZhciBPZT1hLnNzQ29udGVudCxEZT1hLnNzRmFsbGJhY2sse2FjdGl2ZUJyYW5jaDpaZSxwZW5kaW5nQnJhbmNoOmZ0LGlzSW5GYWxsYmFjazpUZSxpc0h5ZHJhdGluZzpsZX09bmU7aWYoZnQpbmUucGVuZGluZ0JyYW5jaD1PZSx0aShPZSxmdCk/KHEoZnQsT2UsbmUuaGlkZGVuQ29udGFpbmVyLG51bGwsUyxuZSx3LE4sViksbmUuZGVwczw9MD9uZS5yZXNvbHZlKCk6VGUmJihxKFplLERlLGYscCxTLG51bGwsdyxOLFYpLFpuKG5lLERlKSkpOihuZS5wZW5kaW5nSWQrKyxsZT8obmUuaXNIeWRyYXRpbmc9ITEsbmUuYWN0aXZlQnJhbmNoPWZ0KTpfZShmdCxTLG5lKSxuZS5kZXBzPTAsbmUuZWZmZWN0cy5sZW5ndGg9MCxuZS5oaWRkZW5Db250YWluZXI9c2UoImRpdiIsZiksVGU/KHEobnVsbCxPZSxuZS5oaWRkZW5Db250YWluZXIsbnVsbCxTLG5lLHcsTixWKSxuZS5kZXBzPD0wP25lLnJlc29sdmUoKToocShaZSxEZSxmLHAsUyxudWxsLHcsTixWKSxabihuZSxEZSkpKTpaZSYmdGkoT2UsWmUpPyhxKFplLE9lLGYscCxTLG5lLHcsTixWKSxuZS5yZXNvbHZlKCEwKSk6KHEobnVsbCxPZSxuZS5oaWRkZW5Db250YWluZXIsbnVsbCxTLG5lLHcsTixWKSxuZS5kZXBzPD0wJiZuZS5yZXNvbHZlKCkpKTtlbHNlIGlmKFplJiZ0aShPZSxaZSkpcShaZSxPZSxmLHAsUyxuZSx3LE4sViksWm4obmUsT2UpO2Vsc2UgaWYodWkoYSwib25QZW5kaW5nIiksbmUucGVuZGluZ0JyYW5jaD1PZSxuZS5wZW5kaW5nSWQrKyxxKG51bGwsT2UsbmUuaGlkZGVuQ29udGFpbmVyLG51bGwsUyxuZSx3LE4sViksbmUuZGVwczw9MCluZS5yZXNvbHZlKCk7ZWxzZXt2YXJ7dGltZW91dDpFZSxwZW5kaW5nSWQ6TGV9PW5lO0VlPjA/c2V0VGltZW91dCgoKT0+e25lLnBlbmRpbmdJZD09PUxlJiZuZS5mYWxsYmFjayhEZSl9LEVlKTpFZT09PTAmJm5lLmZhbGxiYWNrKERlKX19dmFyIFpyPSExO2Z1bmN0aW9uIGhyKGksYSxmLHAsUyx3LE4sVixGLHEpe3ZhciBfZT1hcmd1bWVudHMubGVuZ3RoPjEwJiZhcmd1bWVudHNbMTBdIT09dm9pZCAwP2FyZ3VtZW50c1sxMF06ITE7WnJ8fChacj0hMCxjb25zb2xlW2NvbnNvbGUuaW5mbz8iaW5mbyI6ImxvZyJdKCI8U3VzcGVuc2U+IGlzIGFuIGV4cGVyaW1lbnRhbCBmZWF0dXJlIGFuZCBpdHMgQVBJIHdpbGwgbGlrZWx5IGNoYW5nZS4iKSk7dmFye3A6c2UsbTpuZSx1bTpPZSxuOkRlLG86e3BhcmVudE5vZGU6WmUscmVtb3ZlOmZ0fX09cSxUZT1pLnByb3BzP2QudG9OdW1iZXIoaS5wcm9wcy50aW1lb3V0KTp2b2lkIDA7cmUoVGUsIlN1c3BlbnNlIHRpbWVvdXQiKTt2YXIgbGU9e3Zub2RlOmkscGFyZW50OmEscGFyZW50Q29tcG9uZW50OmYsaXNTVkc6Tixjb250YWluZXI6cCxoaWRkZW5Db250YWluZXI6UyxhbmNob3I6dyxkZXBzOjAscGVuZGluZ0lkOjAsdGltZW91dDp0eXBlb2YgVGU9PSJudW1iZXIiP1RlOi0xLGFjdGl2ZUJyYW5jaDpudWxsLHBlbmRpbmdCcmFuY2g6bnVsbCxpc0luRmFsbGJhY2s6ITAsaXNIeWRyYXRpbmc6X2UsaXNVbm1vdW50ZWQ6ITEsZWZmZWN0czpbXSxyZXNvbHZlKCl7dmFyIEVlPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dm9pZCAwP2FyZ3VtZW50c1swXTohMTt7aWYoIUVlJiYhbGUucGVuZGluZ0JyYW5jaCl0aHJvdyBuZXcgRXJyb3IoInN1c3BlbnNlLnJlc29sdmUoKSBpcyBjYWxsZWQgd2l0aG91dCBhIHBlbmRpbmcgYnJhbmNoLiIpO2lmKGxlLmlzVW5tb3VudGVkKXRocm93IG5ldyBFcnJvcigic3VzcGVuc2UucmVzb2x2ZSgpIGlzIGNhbGxlZCBvbiBhbiBhbHJlYWR5IHVubW91bnRlZCBzdXNwZW5zZSBib3VuZGFyeS4iKX12YXJ7dm5vZGU6TGUsYWN0aXZlQnJhbmNoOkZlLHBlbmRpbmdCcmFuY2g6cnQscGVuZGluZ0lkOk90LGVmZmVjdHM6WGUscGFyZW50Q29tcG9uZW50OkIsY29udGFpbmVyOmp9PWxlO2lmKGxlLmlzSHlkcmF0aW5nKWxlLmlzSHlkcmF0aW5nPSExO2Vsc2UgaWYoIUVlKXt2YXIgb2U9RmUmJnJ0LnRyYW5zaXRpb24mJnJ0LnRyYW5zaXRpb24ubW9kZT09PSJvdXQtaW4iO29lJiYoRmUudHJhbnNpdGlvbi5hZnRlckxlYXZlPSgpPT57T3Q9PT1sZS5wZW5kaW5nSWQmJm5lKHJ0LGoseWUsMCl9KTt2YXJ7YW5jaG9yOnllfT1sZTtGZSYmKHllPURlKEZlKSxPZShGZSxCLGxlLCEwKSksb2V8fG5lKHJ0LGoseWUsMCl9Wm4obGUscnQpLGxlLnBlbmRpbmdCcmFuY2g9bnVsbCxsZS5pc0luRmFsbGJhY2s9ITE7Zm9yKHZhciBhZT1sZS5wYXJlbnQsZ2U9ITE7YWU7KXtpZihhZS5wZW5kaW5nQnJhbmNoKXthZS5lZmZlY3RzLnB1c2goLi4uWGUpLGdlPSEwO2JyZWFrfWFlPWFlLnBhcmVudH1nZXx8QmkoWGUpLGxlLmVmZmVjdHM9W10sdWkoTGUsIm9uUmVzb2x2ZSIpfSxmYWxsYmFjayhFZSl7aWYoISFsZS5wZW5kaW5nQnJhbmNoKXt2YXJ7dm5vZGU6TGUsYWN0aXZlQnJhbmNoOkZlLHBhcmVudENvbXBvbmVudDpydCxjb250YWluZXI6T3QsaXNTVkc6WGV9PWxlO3VpKExlLCJvbkZhbGxiYWNrIik7dmFyIEI9RGUoRmUpLGo9KCk9PnshbGUuaXNJbkZhbGxiYWNrfHwoc2UobnVsbCxFZSxPdCxCLHJ0LG51bGwsWGUsVixGKSxabihsZSxFZSkpfSxvZT1FZS50cmFuc2l0aW9uJiZFZS50cmFuc2l0aW9uLm1vZGU9PT0ib3V0LWluIjtvZSYmKEZlLnRyYW5zaXRpb24uYWZ0ZXJMZWF2ZT1qKSxsZS5pc0luRmFsbGJhY2s9ITAsT2UoRmUscnQsbnVsbCwhMCksb2V8fGooKX19LG1vdmUoRWUsTGUsRmUpe2xlLmFjdGl2ZUJyYW5jaCYmbmUobGUuYWN0aXZlQnJhbmNoLEVlLExlLEZlKSxsZS5jb250YWluZXI9RWV9LG5leHQoKXtyZXR1cm4gbGUuYWN0aXZlQnJhbmNoJiZEZShsZS5hY3RpdmVCcmFuY2gpfSxyZWdpc3RlckRlcChFZSxMZSl7dmFyIEZlPSEhbGUucGVuZGluZ0JyYW5jaDtGZSYmbGUuZGVwcysrO3ZhciBydD1FZS52bm9kZS5lbDtFZS5hc3luY0RlcC5jYXRjaChPdD0+e0luKE90LEVlLDApfSkudGhlbihPdD0+e2lmKCEoRWUuaXNVbm1vdW50ZWR8fGxlLmlzVW5tb3VudGVkfHxsZS5wZW5kaW5nSWQhPT1FZS5zdXNwZW5zZUlkKSl7RWUuYXN5bmNSZXNvbHZlZD0hMDt2YXJ7dm5vZGU6WGV9PUVlO1B0KFhlKSxlcyhFZSxPdCwhMSkscnQmJihYZS5lbD1ydCk7dmFyIEI9IXJ0JiZFZS5zdWJUcmVlLmVsO0xlKEVlLFhlLFplKHJ0fHxFZS5zdWJUcmVlLmVsKSxydD9udWxsOkRlKEVlLnN1YlRyZWUpLGxlLE4sRiksQiYmZnQoQiksRWkoRWUsWGUuZWwpLFF0KCksRmUmJi0tbGUuZGVwcz09PTAmJmxlLnJlc29sdmUoKX19KX0sdW5tb3VudChFZSxMZSl7bGUuaXNVbm1vdW50ZWQ9ITAsbGUuYWN0aXZlQnJhbmNoJiZPZShsZS5hY3RpdmVCcmFuY2gsZixFZSxMZSksbGUucGVuZGluZ0JyYW5jaCYmT2UobGUucGVuZGluZ0JyYW5jaCxmLEVlLExlKX19O3JldHVybiBsZX1mdW5jdGlvbiBLYShpLGEsZixwLFMsdyxOLFYsRil7dmFyIHE9YS5zdXNwZW5zZT1ocihhLHAsZixpLnBhcmVudE5vZGUsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksbnVsbCxTLHcsTixWLCEwKSxfZT1GKGkscS5wZW5kaW5nQnJhbmNoPWEuc3NDb250ZW50LGYscSx3LE4pO3JldHVybiBxLmRlcHM9PT0wJiZxLnJlc29sdmUoKSxfZX1mdW5jdGlvbiBJYShpKXt2YXJ7c2hhcGVGbGFnOmEsY2hpbGRyZW46Zn09aSxwPWEmMzI7aS5zc0NvbnRlbnQ9ZWEocD9mLmRlZmF1bHQ6ZiksaS5zc0ZhbGxiYWNrPXA/ZWEoZi5mYWxsYmFjayk6VW4oZW4pfWZ1bmN0aW9uIGVhKGkpe3ZhciBhO2lmKGQuaXNGdW5jdGlvbihpKSl7dmFyIGY9d2EmJmkuX2M7ZiYmKGkuX2Q9ITEsWGEoKSksaT1pKCksZiYmKGkuX2Q9ITAsYT1ncixBaSgpKX1pZihkLmlzQXJyYXkoaSkpe3ZhciBwPVZvKGkpO3B8fE8oIjxTdXNwZW5zZT4gc2xvdHMgZXhwZWN0IGEgc2luZ2xlIHJvb3Qgbm9kZS4iKSxpPXB9cmV0dXJuIGk9U3IoaSksYSYmIWkuZHluYW1pY0NoaWxkcmVuJiYoaS5keW5hbWljQ2hpbGRyZW49YS5maWx0ZXIoUz0+UyE9PWkpKSxpfWZ1bmN0aW9uIHRvKGksYSl7YSYmYS5wZW5kaW5nQnJhbmNoP2QuaXNBcnJheShpKT9hLmVmZmVjdHMucHVzaCguLi5pKTphLmVmZmVjdHMucHVzaChpKTpCaShpKX1mdW5jdGlvbiBabihpLGEpe2kuYWN0aXZlQnJhbmNoPWE7dmFye3Zub2RlOmYscGFyZW50Q29tcG9uZW50OnB9PWksUz1mLmVsPWEuZWw7cCYmcC5zdWJUcmVlPT09ZiYmKHAudm5vZGUuZWw9UyxFaShwLFMpKX1mdW5jdGlvbiBhcihpLGEpe2lmKCFtbilPKCJwcm92aWRlKCkgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgc2V0dXAoKS4iKTtlbHNle3ZhciBmPW1uLnByb3ZpZGVzLHA9bW4ucGFyZW50JiZtbi5wYXJlbnQucHJvdmlkZXM7cD09PWYmJihmPW1uLnByb3ZpZGVzPU9iamVjdC5jcmVhdGUocCkpLGZbaV09YSxtbi50eXBlLm1wVHlwZT09PSJhcHAiJiZtbi5hcHBDb250ZXh0LmFwcC5wcm92aWRlKGksYSl9fWZ1bmN0aW9uIFZuKGksYSl7dmFyIGY9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLHA9bW58fEVuO2lmKHApe3ZhciBTPXAucGFyZW50PT1udWxsP3Audm5vZGUuYXBwQ29udGV4dCYmcC52bm9kZS5hcHBDb250ZXh0LnByb3ZpZGVzOnAucGFyZW50LnByb3ZpZGVzO2lmKFMmJmkgaW4gUylyZXR1cm4gU1tpXTtpZihhcmd1bWVudHMubGVuZ3RoPjEpcmV0dXJuIGYmJmQuaXNGdW5jdGlvbihhKT9hLmNhbGwocC5wcm94eSk6YTtPKCdpbmplY3Rpb24gIicuY29uY2F0KFN0cmluZyhpKSwnIiBub3QgZm91bmQuJykpfWVsc2UgTygiaW5qZWN0KCkgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgc2V0dXAoKSBvciBmdW5jdGlvbmFsIGNvbXBvbmVudHMuIil9ZnVuY3Rpb24gWHIoaSxhKXtyZXR1cm4gd28oaSxudWxsLGEpfWZ1bmN0aW9uIGRpKGksYSl7cmV0dXJuIHdvKGksbnVsbCxPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sYSkse2ZsdXNoOiJwb3N0In0pKX1mdW5jdGlvbiB0YShpLGEpe3JldHVybiB3byhpLG51bGwsT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LGEpLHtmbHVzaDoic3luYyJ9KSl9dmFyIHdpPXt9O2Z1bmN0aW9uIGhpKGksYSxmKXtyZXR1cm4gZC5pc0Z1bmN0aW9uKGEpfHxPKCJgd2F0Y2goZm4sIG9wdGlvbnM/KWAgc2lnbmF0dXJlIGhhcyBiZWVuIG1vdmVkIHRvIGEgc2VwYXJhdGUgQVBJLiBVc2UgYHdhdGNoRWZmZWN0KGZuLCBvcHRpb25zPylgIGluc3RlYWQuIGB3YXRjaGAgbm93IG9ubHkgc3VwcG9ydHMgYHdhdGNoKHNvdXJjZSwgY2IsIG9wdGlvbnM/KSBzaWduYXR1cmUuIiksd28oaSxhLGYpfWZ1bmN0aW9uIHdvKGksYSl7dmFye2ltbWVkaWF0ZTpmLGRlZXA6cCxmbHVzaDpTLG9uVHJhY2s6dyxvblRyaWdnZXI6Tn09YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOmQuRU1QVFlfT0JKO2F8fChmIT09dm9pZCAwJiZPKCd3YXRjaCgpICJpbW1lZGlhdGUiIG9wdGlvbiBpcyBvbmx5IHJlc3BlY3RlZCB3aGVuIHVzaW5nIHRoZSB3YXRjaChzb3VyY2UsIGNhbGxiYWNrLCBvcHRpb25zPykgc2lnbmF0dXJlLicpLHAhPT12b2lkIDAmJk8oJ3dhdGNoKCkgImRlZXAiIG9wdGlvbiBpcyBvbmx5IHJlc3BlY3RlZCB3aGVuIHVzaW5nIHRoZSB3YXRjaChzb3VyY2UsIGNhbGxiYWNrLCBvcHRpb25zPykgc2lnbmF0dXJlLicpKTt2YXIgVj1ydD0+e08oIkludmFsaWQgd2F0Y2ggc291cmNlOiAiLHJ0LCJBIHdhdGNoIHNvdXJjZSBjYW4gb25seSBiZSBhIGdldHRlci9lZmZlY3QgZnVuY3Rpb24sIGEgcmVmLCBhIHJlYWN0aXZlIG9iamVjdCwgb3IgYW4gYXJyYXkgb2YgdGhlc2UgdHlwZXMuIil9LEY9bS5nZXRDdXJyZW50U2NvcGUoKT09PShtbj09bnVsbD92b2lkIDA6bW4uc2NvcGUpP21uOm51bGwscSxfZT0hMSxzZT0hMTtpZihtLmlzUmVmKGkpPyhxPSgpPT5pLnZhbHVlLF9lPW0uaXNTaGFsbG93KGkpKTptLmlzUmVhY3RpdmUoaSk/KHE9KCk9PmkscD0hMCk6ZC5pc0FycmF5KGkpPyhzZT0hMCxfZT1pLnNvbWUocnQ9Pm0uaXNSZWFjdGl2ZShydCl8fG0uaXNTaGFsbG93KHJ0KSkscT0oKT0+aS5tYXAocnQ9PntpZihtLmlzUmVmKHJ0KSlyZXR1cm4gcnQudmFsdWU7aWYobS5pc1JlYWN0aXZlKHJ0KSlyZXR1cm4gTGkocnQpO2lmKGQuaXNGdW5jdGlvbihydCkpcmV0dXJuIGNuKHJ0LEYsMik7VihydCl9KSk6ZC5pc0Z1bmN0aW9uKGkpP2E/cT0oKT0+Y24oaSxGLDIpOnE9KCk9PntpZighKEYmJkYuaXNVbm1vdW50ZWQpKXJldHVybiBPZSYmT2UoKSxIdChpLEYsMyxbRGVdKX06KHE9ZC5OT09QLFYoaSkpLGEmJnApe3ZhciBuZT1xO3E9KCk9PkxpKG5lKCkpfXZhciBPZSxEZT1ydD0+e09lPUxlLm9uU3RvcD0oKT0+e2NuKHJ0LEYsNCl9fSxaZTtpZihDLmlzSW5TU1JDb21wb25lbnRTZXR1cClpZihEZT1kLk5PT1AsYT9mJiZIdChhLEYsMyxbcSgpLHNlP1tdOnZvaWQgMCxEZV0pOnEoKSxTPT09InN5bmMiKXt2YXIgZnQ9UnMoKTtaZT1mdC5fX3dhdGNoZXJIYW5kbGVzfHwoZnQuX193YXRjaGVySGFuZGxlcz1bXSl9ZWxzZSByZXR1cm4gZC5OT09QO3ZhciBUZT1zZT9uZXcgQXJyYXkoaS5sZW5ndGgpLmZpbGwod2kpOndpLGxlPSgpPT57aWYoISFMZS5hY3RpdmUpaWYoYSl7dmFyIHJ0PUxlLnJ1bigpOyhwfHxfZXx8KHNlP3J0LnNvbWUoKE90LFhlKT0+ZC5oYXNDaGFuZ2VkKE90LFRlW1hlXSkpOmQuaGFzQ2hhbmdlZChydCxUZSkpKSYmKE9lJiZPZSgpLEh0KGEsRiwzLFtydCxUZT09PXdpP3ZvaWQgMDpzZSYmVGVbMF09PT13aT9bXTpUZSxEZV0pLFRlPXJ0KX1lbHNlIExlLnJ1bigpfTtsZS5hbGxvd1JlY3Vyc2U9ISFhO3ZhciBFZTtTPT09InN5bmMiP0VlPWxlOlM9PT0icG9zdCI/RWU9KCk9PlByKGxlLEYmJkYuc3VzcGVuc2UpOihsZS5wcmU9ITAsRiYmKGxlLmlkPUYudWlkKSxFZT0oKT0+Rm4obGUpKTt2YXIgTGU9bmV3IG0uUmVhY3RpdmVFZmZlY3QocSxFZSk7TGUub25UcmFjaz13LExlLm9uVHJpZ2dlcj1OLGE/Zj9sZSgpOlRlPUxlLnJ1bigpOlM9PT0icG9zdCI/UHIoTGUucnVuLmJpbmQoTGUpLEYmJkYuc3VzcGVuc2UpOkxlLnJ1bigpO3ZhciBGZT0oKT0+e0xlLnN0b3AoKSxGJiZGLnNjb3BlJiZkLnJlbW92ZShGLnNjb3BlLmVmZmVjdHMsTGUpfTtyZXR1cm4gWmUmJlplLnB1c2goRmUpLEZlfWZ1bmN0aW9uIF9hKGksYSxmKXt2YXIgcD10aGlzLnByb3h5LFM9ZC5pc1N0cmluZyhpKT9pLmluY2x1ZGVzKCIuIik/U2kocCxpKTooKT0+cFtpXTppLmJpbmQocCxwKSx3O2QuaXNGdW5jdGlvbihhKT93PWE6KHc9YS5oYW5kbGVyLGY9YSk7dmFyIE49bW47bWkodGhpcyk7dmFyIFY9d28oUyx3LmJpbmQocCksZik7cmV0dXJuIE4/bWkoTik6YWEoKSxWfWZ1bmN0aW9uIFNpKGksYSl7dmFyIGY9YS5zcGxpdCgiLiIpO3JldHVybigpPT57Zm9yKHZhciBwPWksUz0wO1M8Zi5sZW5ndGgmJnA7UysrKXA9cFtmW1NdXTtyZXR1cm4gcH19ZnVuY3Rpb24gTGkoaSxhKXtpZighZC5pc09iamVjdChpKXx8aS5fX3Zfc2tpcHx8KGE9YXx8bmV3IFNldCxhLmhhcyhpKSkpcmV0dXJuIGk7aWYoYS5hZGQoaSksbS5pc1JlZihpKSlMaShpLnZhbHVlLGEpO2Vsc2UgaWYoZC5pc0FycmF5KGkpKWZvcih2YXIgZj0wO2Y8aS5sZW5ndGg7ZisrKUxpKGlbZl0sYSk7ZWxzZSBpZihkLmlzU2V0KGkpfHxkLmlzTWFwKGkpKWkuZm9yRWFjaChTPT57TGkoUyxhKX0pO2Vsc2UgaWYoZC5pc1BsYWluT2JqZWN0KGkpKWZvcih2YXIgcCBpbiBpKUxpKGlbcF0sYSk7cmV0dXJuIGl9ZnVuY3Rpb24gc3IoKXt2YXIgaT17aXNNb3VudGVkOiExLGlzTGVhdmluZzohMSxpc1VubW91bnRpbmc6ITEsbGVhdmluZ1ZOb2RlczpuZXcgTWFwfTtyZXR1cm4gb28oKCk9PntpLmlzTW91bnRlZD0hMH0pLEZyKCgpPT57aS5pc1VubW91bnRpbmc9ITB9KSxpfXZhciBEcj1bRnVuY3Rpb24sQXJyYXldLG5vPXttb2RlOlN0cmluZyxhcHBlYXI6Qm9vbGVhbixwZXJzaXN0ZWQ6Qm9vbGVhbixvbkJlZm9yZUVudGVyOkRyLG9uRW50ZXI6RHIsb25BZnRlckVudGVyOkRyLG9uRW50ZXJDYW5jZWxsZWQ6RHIsb25CZWZvcmVMZWF2ZTpEcixvbkxlYXZlOkRyLG9uQWZ0ZXJMZWF2ZTpEcixvbkxlYXZlQ2FuY2VsbGVkOkRyLG9uQmVmb3JlQXBwZWFyOkRyLG9uQXBwZWFyOkRyLG9uQWZ0ZXJBcHBlYXI6RHIsb25BcHBlYXJDYW5jZWxsZWQ6RHJ9LCRvPXtuYW1lOiJCYXNlVHJhbnNpdGlvbiIscHJvcHM6bm8sc2V0dXAoaSxhKXt2YXJ7c2xvdHM6Zn09YSxwPXZpKCksUz1zcigpLHc7cmV0dXJuKCk9Pnt2YXIgTj1mLmRlZmF1bHQmJnZlKGYuZGVmYXVsdCgpLCEwKTtpZighKCFOfHwhTi5sZW5ndGgpKXt2YXIgVj1OWzBdO2lmKE4ubGVuZ3RoPjEpe3ZhciBGPSExO2Zvcih2YXIgcSBvZiBOKWlmKHEudHlwZSE9PWVuKXtpZihGKXtPKCI8dHJhbnNpdGlvbj4gY2FuIG9ubHkgYmUgdXNlZCBvbiBhIHNpbmdsZSBlbGVtZW50IG9yIGNvbXBvbmVudC4gVXNlIDx0cmFuc2l0aW9uLWdyb3VwPiBmb3IgbGlzdHMuIik7YnJlYWt9Vj1xLEY9ITB9fXZhciBfZT1tLnRvUmF3KGkpLHttb2RlOnNlfT1fZTtpZihzZSYmc2UhPT0iaW4tb3V0IiYmc2UhPT0ib3V0LWluIiYmc2UhPT0iZGVmYXVsdCImJk8oImludmFsaWQgPHRyYW5zaXRpb24+IG1vZGU6ICIuY29uY2F0KHNlKSksUy5pc0xlYXZpbmcpcmV0dXJuIFVvKFYpO3ZhciBuZT1NKFYpO2lmKCFuZSlyZXR1cm4gVW8oVik7dmFyIE9lPXBpKG5lLF9lLFMscCk7WihuZSxPZSk7dmFyIERlPXAuc3ViVHJlZSxaZT1EZSYmTShEZSksZnQ9ITEse2dldFRyYW5zaXRpb25LZXk6VGV9PW5lLnR5cGU7aWYoVGUpe3ZhciBsZT1UZSgpO3c9PT12b2lkIDA/dz1sZTpsZSE9PXcmJih3PWxlLGZ0PSEwKX1pZihaZSYmWmUudHlwZSE9PWVuJiYoIXRpKG5lLFplKXx8ZnQpKXt2YXIgRWU9cGkoWmUsX2UsUyxwKTtpZihaKFplLEVlKSxzZT09PSJvdXQtaW4iKXJldHVybiBTLmlzTGVhdmluZz0hMCxFZS5hZnRlckxlYXZlPSgpPT57Uy5pc0xlYXZpbmc9ITEscC51cGRhdGUuYWN0aXZlIT09ITEmJnAudXBkYXRlKCl9LFVvKFYpO3NlPT09ImluLW91dCImJm5lLnR5cGUhPT1lbiYmKEVlLmRlbGF5TGVhdmU9KExlLEZlLHJ0KT0+e3ZhciBPdD1DaShTLFplKTtPdFtTdHJpbmcoWmUua2V5KV09WmUsTGUuX2xlYXZlQ2I9KCk9PntGZSgpLExlLl9sZWF2ZUNiPXZvaWQgMCxkZWxldGUgT2UuZGVsYXllZExlYXZlfSxPZS5kZWxheWVkTGVhdmU9cnR9KX1yZXR1cm4gVn19fX0sU289JG87ZnVuY3Rpb24gQ2koaSxhKXt2YXJ7bGVhdmluZ1ZOb2RlczpmfT1pLHA9Zi5nZXQoYS50eXBlKTtyZXR1cm4gcHx8KHA9T2JqZWN0LmNyZWF0ZShudWxsKSxmLnNldChhLnR5cGUscCkpLHB9ZnVuY3Rpb24gcGkoaSxhLGYscCl7dmFye2FwcGVhcjpTLG1vZGU6dyxwZXJzaXN0ZWQ6Tj0hMSxvbkJlZm9yZUVudGVyOlYsb25FbnRlcjpGLG9uQWZ0ZXJFbnRlcjpxLG9uRW50ZXJDYW5jZWxsZWQ6X2Usb25CZWZvcmVMZWF2ZTpzZSxvbkxlYXZlOm5lLG9uQWZ0ZXJMZWF2ZTpPZSxvbkxlYXZlQ2FuY2VsbGVkOkRlLG9uQmVmb3JlQXBwZWFyOlplLG9uQXBwZWFyOmZ0LG9uQWZ0ZXJBcHBlYXI6VGUsb25BcHBlYXJDYW5jZWxsZWQ6bGV9PWEsRWU9U3RyaW5nKGkua2V5KSxMZT1DaShmLGkpLEZlPShYZSxCKT0+e1hlJiZIdChYZSxwLDksQil9LHJ0PShYZSxCKT0+e3ZhciBqPUJbMV07RmUoWGUsQiksZC5pc0FycmF5KFhlKT9YZS5ldmVyeShvZT0+b2UubGVuZ3RoPD0xKSYmaigpOlhlLmxlbmd0aDw9MSYmaigpfSxPdD17bW9kZTp3LHBlcnNpc3RlZDpOLGJlZm9yZUVudGVyKFhlKXt2YXIgQj1WO2lmKCFmLmlzTW91bnRlZClpZihTKUI9WmV8fFY7ZWxzZSByZXR1cm47WGUuX2xlYXZlQ2ImJlhlLl9sZWF2ZUNiKCEwKTt2YXIgaj1MZVtFZV07aiYmdGkoaSxqKSYmai5lbC5fbGVhdmVDYiYmai5lbC5fbGVhdmVDYigpLEZlKEIsW1hlXSl9LGVudGVyKFhlKXt2YXIgQj1GLGo9cSxvZT1fZTtpZighZi5pc01vdW50ZWQpaWYoUylCPWZ0fHxGLGo9VGV8fHEsb2U9bGV8fF9lO2Vsc2UgcmV0dXJuO3ZhciB5ZT0hMSxhZT1YZS5fZW50ZXJDYj1nZT0+e3llfHwoeWU9ITAsZ2U/RmUob2UsW1hlXSk6RmUoaixbWGVdKSxPdC5kZWxheWVkTGVhdmUmJk90LmRlbGF5ZWRMZWF2ZSgpLFhlLl9lbnRlckNiPXZvaWQgMCl9O0I/cnQoQixbWGUsYWVdKTphZSgpfSxsZWF2ZShYZSxCKXt2YXIgaj1TdHJpbmcoaS5rZXkpO2lmKFhlLl9lbnRlckNiJiZYZS5fZW50ZXJDYighMCksZi5pc1VubW91bnRpbmcpcmV0dXJuIEIoKTtGZShzZSxbWGVdKTt2YXIgb2U9ITEseWU9WGUuX2xlYXZlQ2I9YWU9PntvZXx8KG9lPSEwLEIoKSxhZT9GZShEZSxbWGVdKTpGZShPZSxbWGVdKSxYZS5fbGVhdmVDYj12b2lkIDAsTGVbal09PT1pJiZkZWxldGUgTGVbal0pfTtMZVtqXT1pLG5lP3J0KG5lLFtYZSx5ZV0pOnllKCl9LGNsb25lKFhlKXtyZXR1cm4gcGkoWGUsYSxmLHApfX07cmV0dXJuIE90fWZ1bmN0aW9uIFVvKGkpe2lmKFkoaSkpcmV0dXJuIGk9V2koaSksaS5jaGlsZHJlbj1udWxsLGl9ZnVuY3Rpb24gTShpKXtyZXR1cm4gWShpKT9pLmNoaWxkcmVuP2kuY2hpbGRyZW5bMF06dm9pZCAwOml9ZnVuY3Rpb24gWihpLGEpe2kuc2hhcGVGbGFnJjYmJmkuY29tcG9uZW50P1ooaS5jb21wb25lbnQuc3ViVHJlZSxhKTppLnNoYXBlRmxhZyYxMjg/KGkuc3NDb250ZW50LnRyYW5zaXRpb249YS5jbG9uZShpLnNzQ29udGVudCksaS5zc0ZhbGxiYWNrLnRyYW5zaXRpb249YS5jbG9uZShpLnNzRmFsbGJhY2spKTppLnRyYW5zaXRpb249YX1mdW5jdGlvbiB2ZShpKXtmb3IodmFyIGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOiExLGY9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDAscD1bXSxTPTAsdz0wO3c8aS5sZW5ndGg7dysrKXt2YXIgTj1pW3ddLFY9Zj09bnVsbD9OLmtleTpTdHJpbmcoZikrU3RyaW5nKE4ua2V5IT1udWxsP04ua2V5OncpO04udHlwZT09PWt0PyhOLnBhdGNoRmxhZyYxMjgmJlMrKyxwPXAuY29uY2F0KHZlKE4uY2hpbGRyZW4sYSxWKSkpOihhfHxOLnR5cGUhPT1lbikmJnAucHVzaChWIT1udWxsP1dpKE4se2tleTpWfSk6Til9aWYoUz4xKWZvcih2YXIgRj0wO0Y8cC5sZW5ndGg7RisrKXBbRl0ucGF0Y2hGbGFnPS0yO3JldHVybiBwfWZ1bmN0aW9uIGNlKGkpe3JldHVybiBkLmlzRnVuY3Rpb24oaSk/e3NldHVwOmksbmFtZTppLm5hbWV9Oml9dmFyIGhlPWk9PiEhaS50eXBlLl9fYXN5bmNMb2FkZXI7ZnVuY3Rpb24gU3QoaSl7ZC5pc0Z1bmN0aW9uKGkpJiYoaT17bG9hZGVyOml9KTt2YXJ7bG9hZGVyOmEsbG9hZGluZ0NvbXBvbmVudDpmLGVycm9yQ29tcG9uZW50OnAsZGVsYXk6Uz0yMDAsdGltZW91dDp3LHN1c3BlbnNpYmxlOk49ITAsb25FcnJvcjpWfT1pLEY9bnVsbCxxLF9lPTAsc2U9KCk9PihfZSsrLEY9bnVsbCxuZSgpKSxuZT0oKT0+e3ZhciBPZTtyZXR1cm4gRnx8KE9lPUY9YSgpLmNhdGNoKERlPT57aWYoRGU9RGUgaW5zdGFuY2VvZiBFcnJvcj9EZTpuZXcgRXJyb3IoU3RyaW5nKERlKSksVilyZXR1cm4gbmV3IFByb21pc2UoKFplLGZ0KT0+e3ZhciBUZT0oKT0+WmUoc2UoKSksbGU9KCk9PmZ0KERlKTtWKERlLFRlLGxlLF9lKzEpfSk7dGhyb3cgRGV9KS50aGVuKERlPT57aWYoT2UhPT1GJiZGKXJldHVybiBGO2lmKERlfHxPKCJBc3luYyBjb21wb25lbnQgbG9hZGVyIHJlc29sdmVkIHRvIHVuZGVmaW5lZC4gSWYgeW91IGFyZSB1c2luZyByZXRyeSgpLCBtYWtlIHN1cmUgdG8gcmV0dXJuIGl0cyByZXR1cm4gdmFsdWUuIiksRGUmJihEZS5fX2VzTW9kdWxlfHxEZVtTeW1ib2wudG9TdHJpbmdUYWddPT09Ik1vZHVsZSIpJiYoRGU9RGUuZGVmYXVsdCksRGUmJiFkLmlzT2JqZWN0KERlKSYmIWQuaXNGdW5jdGlvbihEZSkpdGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIGFzeW5jIGNvbXBvbmVudCBsb2FkIHJlc3VsdDogIi5jb25jYXQoRGUpKTtyZXR1cm4gcT1EZSxEZX0pKX07cmV0dXJuIGNlKHtuYW1lOiJBc3luY0NvbXBvbmVudFdyYXBwZXIiLF9fYXN5bmNMb2FkZXI6bmUsZ2V0IF9fYXN5bmNSZXNvbHZlZCgpe3JldHVybiBxfSxzZXR1cCgpe3ZhciBPZT1tbjtpZihxKXJldHVybigpPT5LKHEsT2UpO3ZhciBEZT1sZT0+e0Y9bnVsbCxJbihsZSxPZSwxMywhcCl9O2lmKE4mJk9lLnN1c3BlbnNlfHxDLmlzSW5TU1JDb21wb25lbnRTZXR1cClyZXR1cm4gbmUoKS50aGVuKGxlPT4oKT0+SyhsZSxPZSkpLmNhdGNoKGxlPT4oRGUobGUpLCgpPT5wP1VuKHAse2Vycm9yOmxlfSk6bnVsbCkpO3ZhciBaZT1tLnJlZighMSksZnQ9bS5yZWYoKSxUZT1tLnJlZighIVMpO3JldHVybiBTJiZzZXRUaW1lb3V0KCgpPT57VGUudmFsdWU9ITF9LFMpLHchPW51bGwmJnNldFRpbWVvdXQoKCk9PntpZighWmUudmFsdWUmJiFmdC52YWx1ZSl7dmFyIGxlPW5ldyBFcnJvcigiQXN5bmMgY29tcG9uZW50IHRpbWVkIG91dCBhZnRlciAiLmNvbmNhdCh3LCJtcy4iKSk7RGUobGUpLGZ0LnZhbHVlPWxlfX0sdyksbmUoKS50aGVuKCgpPT57WmUudmFsdWU9ITAsT2UucGFyZW50JiZZKE9lLnBhcmVudC52bm9kZSkmJkZuKE9lLnBhcmVudC51cGRhdGUpfSkuY2F0Y2gobGU9PntEZShsZSksZnQudmFsdWU9bGV9KSwoKT0+e2lmKFplLnZhbHVlJiZxKXJldHVybiBLKHEsT2UpO2lmKGZ0LnZhbHVlJiZwKXJldHVybiBVbihwLHtlcnJvcjpmdC52YWx1ZX0pO2lmKGYmJiFUZS52YWx1ZSlyZXR1cm4gVW4oZil9fX0pfWZ1bmN0aW9uIEsoaSxhKXt2YXJ7cmVmOmYscHJvcHM6cCxjaGlsZHJlbjpTLGNlOnd9PWEudm5vZGUsTj1VbihpLHAsUyk7cmV0dXJuIE4ucmVmPWYsTi5jZT13LGRlbGV0ZSBhLnZub2RlLmNlLE59dmFyIFk9aT0+aS50eXBlLl9faXNLZWVwQWxpdmUsdWU9e25hbWU6IktlZXBBbGl2ZSIsX19pc0tlZXBBbGl2ZTohMCxwcm9wczp7aW5jbHVkZTpbU3RyaW5nLFJlZ0V4cCxBcnJheV0sZXhjbHVkZTpbU3RyaW5nLFJlZ0V4cCxBcnJheV0sbWF4OltTdHJpbmcsTnVtYmVyXX0sc2V0dXAoaSxhKXt2YXJ7c2xvdHM6Zn09YSxwPXZpKCksUz1wLmN0eDtpZighUy5yZW5kZXJlcilyZXR1cm4oKT0+e3ZhciBFZT1mLmRlZmF1bHQmJmYuZGVmYXVsdCgpO3JldHVybiBFZSYmRWUubGVuZ3RoPT09MT9FZVswXTpFZX07dmFyIHc9bmV3IE1hcCxOPW5ldyBTZXQsVj1udWxsO3AuX192X2NhY2hlPXc7dmFyIEY9cC5zdXNwZW5zZSx7cmVuZGVyZXI6e3A6cSxtOl9lLHVtOnNlLG86e2NyZWF0ZUVsZW1lbnQ6bmV9fX09UyxPZT1uZSgiZGl2IixudWxsKTtTLmFjdGl2YXRlPShFZSxMZSxGZSxydCxPdCk9Pnt2YXIgWGU9RWUuY29tcG9uZW50O19lKEVlLExlLEZlLDAsRikscShYZS52bm9kZSxFZSxMZSxGZSxYZSxGLHJ0LEVlLnNsb3RTY29wZUlkcyxPdCksUHIoKCk9PntYZS5pc0RlYWN0aXZhdGVkPSExLFhlLmEmJmQuaW52b2tlQXJyYXlGbnMoWGUuYSk7dmFyIEI9RWUucHJvcHMmJkVlLnByb3BzLm9uVm5vZGVNb3VudGVkO0ImJllyKEIsWGUucGFyZW50LEVlKX0sRiksb2koWGUpfSxTLmRlYWN0aXZhdGU9RWU9Pnt2YXIgTGU9RWUuY29tcG9uZW50O19lKEVlLE9lLG51bGwsMSxGKSxQcigoKT0+e0xlLmRhJiZkLmludm9rZUFycmF5Rm5zKExlLmRhKTt2YXIgRmU9RWUucHJvcHMmJkVlLnByb3BzLm9uVm5vZGVVbm1vdW50ZWQ7RmUmJllyKEZlLExlLnBhcmVudCxFZSksTGUuaXNEZWFjdGl2YXRlZD0hMH0sRiksb2koTGUpfTtmdW5jdGlvbiBEZShFZSl7THIoRWUpLHNlKEVlLHAsRiwhMCl9ZnVuY3Rpb24gWmUoRWUpe3cuZm9yRWFjaCgoTGUsRmUpPT57dmFyIHJ0PVNhKExlLnR5cGUpO3J0JiYoIUVlfHwhRWUocnQpKSYmZnQoRmUpfSl9ZnVuY3Rpb24gZnQoRWUpe3ZhciBMZT13LmdldChFZSk7IVZ8fCF0aShMZSxWKT9EZShMZSk6ViYmTHIoViksdy5kZWxldGUoRWUpLE4uZGVsZXRlKEVlKX1oaSgoKT0+W2kuaW5jbHVkZSxpLmV4Y2x1ZGVdLEVlPT57dmFyW0xlLEZlXT1FZTtMZSYmWmUocnQ9Pmx0KExlLHJ0KSksRmUmJlplKHJ0PT4hbHQoRmUscnQpKX0se2ZsdXNoOiJwb3N0IixkZWVwOiEwfSk7dmFyIFRlPW51bGwsbGU9KCk9PntUZSE9bnVsbCYmdy5zZXQoVGUscm8ocC5zdWJUcmVlKSl9O3JldHVybiBvbyhsZSksUW4obGUpLEZyKCgpPT57dy5mb3JFYWNoKEVlPT57dmFye3N1YlRyZWU6TGUsc3VzcGVuc2U6RmV9PXAscnQ9cm8oTGUpO2lmKEVlLnR5cGU9PT1ydC50eXBlJiZFZS5rZXk9PT1ydC5rZXkpe0xyKHJ0KTt2YXIgT3Q9cnQuY29tcG9uZW50LmRhO090JiZQcihPdCxGZSk7cmV0dXJufURlKEVlKX0pfSksKCk9PntpZihUZT1udWxsLCFmLmRlZmF1bHQpcmV0dXJuIG51bGw7dmFyIEVlPWYuZGVmYXVsdCgpLExlPUVlWzBdO2lmKEVlLmxlbmd0aD4xKXJldHVybiBPKCJLZWVwQWxpdmUgc2hvdWxkIGNvbnRhaW4gZXhhY3RseSBvbmUgY29tcG9uZW50IGNoaWxkLiIpLFY9bnVsbCxFZTtpZighd3IoTGUpfHwhKExlLnNoYXBlRmxhZyY0KSYmIShMZS5zaGFwZUZsYWcmMTI4KSlyZXR1cm4gVj1udWxsLExlO3ZhciBGZT1ybyhMZSkscnQ9RmUudHlwZSxPdD1TYShoZShGZSk/RmUudHlwZS5fX2FzeW5jUmVzb2x2ZWR8fHt9OnJ0KSx7aW5jbHVkZTpYZSxleGNsdWRlOkIsbWF4Omp9PWk7aWYoWGUmJighT3R8fCFsdChYZSxPdCkpfHxCJiZPdCYmbHQoQixPdCkpcmV0dXJuIFY9RmUsTGU7dmFyIG9lPUZlLmtleT09bnVsbD9ydDpGZS5rZXkseWU9dy5nZXQob2UpO3JldHVybiBGZS5lbCYmKEZlPVdpKEZlKSxMZS5zaGFwZUZsYWcmMTI4JiYoTGUuc3NDb250ZW50PUZlKSksVGU9b2UseWU/KEZlLmVsPXllLmVsLEZlLmNvbXBvbmVudD15ZS5jb21wb25lbnQsRmUudHJhbnNpdGlvbiYmWihGZSxGZS50cmFuc2l0aW9uKSxGZS5zaGFwZUZsYWd8PTUxMixOLmRlbGV0ZShvZSksTi5hZGQob2UpKTooTi5hZGQob2UpLGomJk4uc2l6ZT5wYXJzZUludChqLDEwKSYmZnQoTi52YWx1ZXMoKS5uZXh0KCkudmFsdWUpKSxGZS5zaGFwZUZsYWd8PTI1NixWPUZlLFRhKExlLnR5cGUpP0xlOkZlfX19LEJlPXVlO2Z1bmN0aW9uIGx0KGksYSl7cmV0dXJuIGQuaXNBcnJheShpKT9pLnNvbWUoZj0+bHQoZixhKSk6ZC5pc1N0cmluZyhpKT9pLnNwbGl0KCIsIikuaW5jbHVkZXMoYSk6ZC5pc1JlZ0V4cChpKT9pLnRlc3QoYSk6ITF9ZnVuY3Rpb24genQoaSxhKXtYbihpLCJhIixhKX1mdW5jdGlvbiBTbihpLGEpe1huKGksImRhIixhKX1mdW5jdGlvbiBYbihpLGEpe3ZhciBmPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTptbixwPWkuX193ZGN8fChpLl9fd2RjPSgpPT57Zm9yKHZhciB3PWY7dzspe2lmKHcuaXNEZWFjdGl2YXRlZClyZXR1cm47dz13LnBhcmVudH1yZXR1cm4gaSgpfSk7aWYoYnIoYSxwLGYpLGYpZm9yKHZhciBTPWYucGFyZW50O1MmJlMucGFyZW50OylZKFMucGFyZW50LnZub2RlKSYmUXIocCxhLGYsUyksUz1TLnBhcmVudH1mdW5jdGlvbiBRcihpLGEsZixwKXt2YXIgUz1icihhLGkscCwhMCk7UGEoKCk9PntkLnJlbW92ZShwW2FdLFMpfSxmKX1mdW5jdGlvbiBMcihpKXtpLnNoYXBlRmxhZyY9fjI1NixpLnNoYXBlRmxhZyY9fjUxMn1mdW5jdGlvbiBybyhpKXtyZXR1cm4gaS5zaGFwZUZsYWcmMTI4P2kuc3NDb250ZW50Oml9ZnVuY3Rpb24gYnIoaSxhKXt2YXIgZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06bW4scD1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITE7aWYoZil7aWYoUi5pc1Jvb3RIb29rKGkpJiZmIT09Zi5yb290JiYoZj1mLnJvb3QsUi5pc1Jvb3RJbW1lZGlhdGVIb29rKGkpKSl7dmFyIFM9Zi5wcm94eTtIdChhLmJpbmQoUyksZixpLFIuT05fTE9BRD09PWk/W1MuJHBhZ2Uub3B0aW9uc106W10pfXZhcntfX3BhZ2VfY29udGFpbmVyX186d309Zi5yb290LnZub2RlO3cmJncub25JbmplY3RIb29rKGkpO3ZhciBOPWZbaV18fChmW2ldPVtdKSxWPWEuX193ZWh8fChhLl9fd2VoPWZ1bmN0aW9uKCl7aWYoIWYuaXNVbm1vdW50ZWQpe20ucGF1c2VUcmFja2luZygpLG1pKGYpO2Zvcih2YXIgcT1hcmd1bWVudHMubGVuZ3RoLF9lPW5ldyBBcnJheShxKSxzZT0wO3NlPHE7c2UrKylfZVtzZV09YXJndW1lbnRzW3NlXTt2YXIgbmU9SHQoYSxmLGksX2UpO3JldHVybiBhYSgpLG0ucmVzZXRUcmFja2luZygpLG5lfX0pO3JldHVybiBwP04udW5zaGlmdChWKTpOLnB1c2goViksVn1lbHNle3ZhciBGPWQudG9IYW5kbGVyS2V5KChMbltpXXx8aS5yZXBsYWNlKC9eb24vLCIiKSkucmVwbGFjZSgvIGhvb2skLywiIikpO08oIiIuY29uY2F0KEYsIiBpcyBjYWxsZWQgd2hlbiB0aGVyZSBpcyBubyBhY3RpdmUgY29tcG9uZW50IGluc3RhbmNlIHRvIGJlICIpKyJhc3NvY2lhdGVkIHdpdGguIExpZmVjeWNsZSBpbmplY3Rpb24gQVBJcyBjYW4gb25seSBiZSB1c2VkIGR1cmluZyBleGVjdXRpb24gb2Ygc2V0dXAoKS4gSWYgeW91IGFyZSB1c2luZyBhc3luYyBzZXR1cCgpLCBtYWtlIHN1cmUgdG8gcmVnaXN0ZXIgbGlmZWN5Y2xlIGhvb2tzIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQgc3RhdGVtZW50LiIpfX12YXIgZ2k9aT0+ZnVuY3Rpb24oYSl7dmFyIGY9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOm1uO3JldHVybighQy5pc0luU1NSQ29tcG9uZW50U2V0dXB8fGk9PT0ic3AiKSYmYnIoaSxmdW5jdGlvbigpe3JldHVybiBhKC4uLmFyZ3VtZW50cyl9LGYpfSxpbz1naSgiYm0iKSxvbz1naSgibSIpLG5hPWdpKCJidSIpLFFuPWdpKCJ1IiksRnI9Z2koImJ1bSIpLFBhPWdpKCJ1bSIpLE5hPWdpKCJzcCIpLHpyPWdpKCJydGciKSxWcz1naSgicnRjIik7ZnVuY3Rpb24gJHMoaSl7dmFyIGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOm1uO2JyKCJlYyIsaSxhKX1mdW5jdGlvbiBpbChpKXtkLmlzQnVpbHRJbkRpcmVjdGl2ZShpKSYmTygiRG8gbm90IHVzZSBidWlsdC1pbiBkaXJlY3RpdmUgaWRzIGFzIGN1c3RvbSBkaXJlY3RpdmUgaWQ6ICIraSl9ZnVuY3Rpb24gQ28oaSxhKXt2YXIgZj1FbjtpZihmPT09bnVsbClyZXR1cm4gTygid2l0aERpcmVjdGl2ZXMgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgcmVuZGVyIGZ1bmN0aW9ucy4iKSxpO2Zvcih2YXIgcD1OcyhmKXx8Zi5wcm94eSxTPWkuZGlyc3x8KGkuZGlycz1bXSksdz0wO3c8YS5sZW5ndGg7dysrKXt2YXJbTixWLEYscT1kLkVNUFRZX09CSl09YVt3XTtOJiYoZC5pc0Z1bmN0aW9uKE4pJiYoTj17bW91bnRlZDpOLHVwZGF0ZWQ6Tn0pLE4uZGVlcCYmTGkoViksUy5wdXNoKHtkaXI6TixpbnN0YW5jZTpwLHZhbHVlOlYsb2xkVmFsdWU6dm9pZCAwLGFyZzpGLG1vZGlmaWVyczpxfSkpfXJldHVybiBpfWZ1bmN0aW9uIE9pKGksYSxmLHApe2Zvcih2YXIgUz1pLmRpcnMsdz1hJiZhLmRpcnMsTj0wO048Uy5sZW5ndGg7TisrKXt2YXIgVj1TW05dO3cmJihWLm9sZFZhbHVlPXdbTl0udmFsdWUpO3ZhciBGPVYuZGlyW3BdO0YmJihtLnBhdXNlVHJhY2tpbmcoKSxIdChGLGYsOCxbaS5lbCxWLGksYV0pLG0ucmVzZXRUcmFja2luZygpKX19dmFyIGthPSJjb21wb25lbnRzIixObD0iZGlyZWN0aXZlcyI7ZnVuY3Rpb24gUG4oaSxhKXtyZXR1cm4gSmEoa2EsaSwhMCxhKXx8aX12YXIgb2w9U3ltYm9sKCk7ZnVuY3Rpb24gdnMoaSl7cmV0dXJuIGQuaXNTdHJpbmcoaSk/SmEoa2EsaSwhMSl8fGk6aXx8b2x9ZnVuY3Rpb24gYW8oaSl7cmV0dXJuIEphKE5sLGkpfWZ1bmN0aW9uIEphKGksYSl7dmFyIGY9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiEwLHA9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiExLFM9RW58fG1uO2lmKFMpe3ZhciB3PVMudHlwZTtpZihpPT09a2Epe3ZhciBOPVNhKHcsITEpO2lmKE4mJihOPT09YXx8Tj09PWQuY2FtZWxpemUoYSl8fE49PT1kLmNhcGl0YWxpemUoZC5jYW1lbGl6ZShhKSkpKXJldHVybiB3fXZhciBWPWFsKFNbaV18fHdbaV0sYSl8fGFsKFMuYXBwQ29udGV4dFtpXSxhKTtpZighViYmcClyZXR1cm4gdztpZihmJiYhVil7dmFyIEY9aT09PWthP2AKSWYgdGhpcyBpcyBhIG5hdGl2ZSBjdXN0b20gZWxlbWVudCwgbWFrZSBzdXJlIHRvIGV4Y2x1ZGUgaXQgZnJvbSBjb21wb25lbnQgcmVzb2x1dGlvbiB2aWEgY29tcGlsZXJPcHRpb25zLmlzQ3VzdG9tRWxlbWVudC5gOiIiO08oIkZhaWxlZCB0byByZXNvbHZlICIuY29uY2F0KGkuc2xpY2UoMCwtMSksIjogIikuY29uY2F0KGEpLmNvbmNhdChGKSl9cmV0dXJuIFZ9ZWxzZSBPKCJyZXNvbHZlIi5jb25jYXQoZC5jYXBpdGFsaXplKGkuc2xpY2UoMCwtMSkpLCIgIikrImNhbiBvbmx5IGJlIHVzZWQgaW4gcmVuZGVyKCkgb3Igc2V0dXAoKS4iKX1mdW5jdGlvbiBhbChpLGEpe3JldHVybiBpJiYoaVthXXx8aVtkLmNhbWVsaXplKGEpXXx8aVtkLmNhcGl0YWxpemUoZC5jYW1lbGl6ZShhKSldKX1mdW5jdGlvbiBSYShpLGEsZixwKXt2YXIgUyx3PWYmJmZbcF07aWYoZC5pc0FycmF5KGkpfHxkLmlzU3RyaW5nKGkpKXtTPW5ldyBBcnJheShpLmxlbmd0aCk7Zm9yKHZhciBOPTAsVj1pLmxlbmd0aDtOPFY7TisrKVNbTl09YShpW05dLE4sdm9pZCAwLHcmJndbTl0pfWVsc2UgaWYodHlwZW9mIGk9PSJudW1iZXIiKXtOdW1iZXIuaXNJbnRlZ2VyKGkpfHxPKCJUaGUgdi1mb3IgcmFuZ2UgZXhwZWN0IGFuIGludGVnZXIgdmFsdWUgYnV0IGdvdCAiLmNvbmNhdChpLCIuIikpLFM9bmV3IEFycmF5KGkpO2Zvcih2YXIgRj0wO0Y8aTtGKyspU1tGXT1hKEYrMSxGLHZvaWQgMCx3JiZ3W0ZdKX1lbHNlIGlmKGQuaXNPYmplY3QoaSkpaWYoaVtTeW1ib2wuaXRlcmF0b3JdKVM9QXJyYXkuZnJvbShpLChPZSxEZSk9PmEoT2UsRGUsdm9pZCAwLHcmJndbRGVdKSk7ZWxzZXt2YXIgcT1PYmplY3Qua2V5cyhpKTtTPW5ldyBBcnJheShxLmxlbmd0aCk7Zm9yKHZhciBfZT0wLHNlPXEubGVuZ3RoO19lPHNlO19lKyspe3ZhciBuZT1xW19lXTtTW19lXT1hKGlbbmVdLG5lLF9lLHcmJndbX2VdKX19ZWxzZSBTPVtdO3JldHVybiBmJiYoZltwXT1TKSxTfWZ1bmN0aW9uIHNsKGksYSl7Zm9yKHZhciBmPWZ1bmN0aW9uKFMpe3ZhciB3PWFbU107aWYoZC5pc0FycmF5KHcpKWZvcih2YXIgTj0wO048dy5sZW5ndGg7TisrKWlbd1tOXS5uYW1lXT13W05dLmZuO2Vsc2UgdyYmKGlbdy5uYW1lXT13LmtleT9mdW5jdGlvbigpe3ZhciBWPXcuZm4oLi4uYXJndW1lbnRzKTtyZXR1cm4gViYmKFYua2V5PXcua2V5KSxWfTp3LmZuKX0scD0wO3A8YS5sZW5ndGg7cCsrKWYocCk7cmV0dXJuIGl9ZnVuY3Rpb24gcmEoaSxhKXt2YXIgZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06e30scD1hcmd1bWVudHMubGVuZ3RoPjM/YXJndW1lbnRzWzNdOnZvaWQgMCxTPWFyZ3VtZW50cy5sZW5ndGg+ND9hcmd1bWVudHNbNF06dm9pZCAwO2lmKEVuLmlzQ0V8fEVuLnBhcmVudCYmaGUoRW4ucGFyZW50KSYmRW4ucGFyZW50LmlzQ0UpcmV0dXJuIGEhPT0iZGVmYXVsdCImJihmLm5hbWU9YSksVW4oInNsb3QiLGYscCYmcCgpKTt2YXIgdz1pW2FdO3cmJncubGVuZ3RoPjEmJihPKCJTU1Itb3B0aW1pemVkIHNsb3QgZnVuY3Rpb24gZGV0ZWN0ZWQgaW4gYSBub24tU1NSLW9wdGltaXplZCByZW5kZXIgZnVuY3Rpb24uIFlvdSBuZWVkIHRvIG1hcmsgdGhpcyBjb21wb25lbnQgd2l0aCAkZHluYW1pYy1zbG90cyBpbiB0aGUgcGFyZW50IHRlbXBsYXRlLiIpLHc9KCk9PltdKSx3JiZ3Ll9jJiYody5fZD0hMSksWGEoKTt2YXIgTj13JiZVcyh3KGYpKSxWPW9hKGt0LHtrZXk6Zi5rZXl8fE4mJk4ua2V5fHwiXyIuY29uY2F0KGEpfSxOfHwocD9wKCk6W10pLE4mJmkuXz09PTE/NjQ6LTIpO3JldHVybiFTJiZWLnNjb3BlSWQmJihWLnNsb3RTY29wZUlkcz1bVi5zY29wZUlkKyItcyJdKSx3JiZ3Ll9jJiYody5fZD0hMCksVn1mdW5jdGlvbiBVcyhpKXtyZXR1cm4gaS5zb21lKGE9PndyKGEpPyEoYS50eXBlPT09ZW58fGEudHlwZT09PWt0JiYhVXMoYS5jaGlsZHJlbikpOiEwKT9pOm51bGx9ZnVuY3Rpb24gbXMoaSxhKXt2YXIgZj17fTtpZighZC5pc09iamVjdChpKSlyZXR1cm4gTygidi1vbiB3aXRoIG5vIGFyZ3VtZW50IGV4cGVjdHMgYW4gb2JqZWN0IHZhbHVlLiIpLGY7Zm9yKHZhciBwIGluIGkpZlthJiYvW0EtWl0vLnRlc3QocCk/Im9uOiIuY29uY2F0KHApOmQudG9IYW5kbGVyS2V5KHApXT1pW3BdO3JldHVybiBmfXZhciB5cj1pPT5pP1RpKGkpP05zKGkpfHxpLnByb3h5OnlyKGkucGFyZW50KTpudWxsLHNvPWQuZXh0ZW5kKE9iamVjdC5jcmVhdGUobnVsbCkseyQ6aT0+aSwkZWw6aT0+aS52bm9kZS5lbCwkZGF0YTppPT5pLmRhdGEsJHByb3BzOmk9Pm0uc2hhbGxvd1JlYWRvbmx5KGkucHJvcHMpLCRhdHRyczppPT5tLnNoYWxsb3dSZWFkb25seShpLmF0dHJzKSwkc2xvdHM6aT0+bS5zaGFsbG93UmVhZG9ubHkoaS5zbG90cyksJHJlZnM6aT0+bS5zaGFsbG93UmVhZG9ubHkoaS5yZWZzKSwkcGFyZW50Omk9PnlyKGkucGFyZW50KSwkcm9vdDppPT55cihpLnJvb3QpLCRlbWl0Omk9PmkuZW1pdCwkb3B0aW9uczppPT5VKGkpLCRmb3JjZVVwZGF0ZTppPT5pLmZ8fChpLmY9KCk9PkZuKGkudXBkYXRlKSksJG5leHRUaWNrOmk9Pmkubnx8KGkubj1Obi5iaW5kKGkucHJveHkpKSwkd2F0Y2g6aT0+X2EuYmluZChpKX0pLGJhPWk9Pmk9PT0iXyJ8fGk9PT0iJCIsT289KGksYSk9PmkhPT1kLkVNUFRZX09CSiYmIWkuX19pc1NjcmlwdFNldHVwJiZkLmhhc093bihpLGEpLHhhPXtnZXQoaSxhKXt2YXJ7XzpmfT1pLHtjdHg6cCxzZXR1cFN0YXRlOlMsZGF0YTp3LHByb3BzOk4sYWNjZXNzQ2FjaGU6Vix0eXBlOkYsYXBwQ29udGV4dDpxfT1mO2lmKGE9PT0iX19pc1Z1ZSIpcmV0dXJuITA7dmFyIF9lO2lmKGFbMF0hPT0iJCIpe3ZhciBzZT1WW2FdO2lmKHNlIT09dm9pZCAwKXN3aXRjaChzZSl7Y2FzZSAxOnJldHVybiBTW2FdO2Nhc2UgMjpyZXR1cm4gd1thXTtjYXNlIDQ6cmV0dXJuIHBbYV07Y2FzZSAzOnJldHVybiBOW2FdfWVsc2V7aWYoT28oUyxhKSlyZXR1cm4gVlthXT0xLFNbYV07aWYodyE9PWQuRU1QVFlfT0JKJiZkLmhhc093bih3LGEpKXJldHVybiBWW2FdPTIsd1thXTtpZigoX2U9Zi5wcm9wc09wdGlvbnNbMF0pJiZkLmhhc093bihfZSxhKSlyZXR1cm4gVlthXT0zLE5bYV07aWYocCE9PWQuRU1QVFlfT0JKJiZkLmhhc093bihwLGEpKXJldHVybiBWW2FdPTQscFthXTticyYmKFZbYV09MCl9fXZhciBuZT1zb1thXSxPZSxEZTtpZihuZSlyZXR1cm4gYT09PSIkYXR0cnMiJiYobS50cmFjayhmLCJnZXQiLGEpLHhlKCkpLG5lKGYpO2lmKChPZT1GLl9fY3NzTW9kdWxlcykmJihPZT1PZVthXSkpcmV0dXJuIE9lO2lmKHAhPT1kLkVNUFRZX09CSiYmZC5oYXNPd24ocCxhKSlyZXR1cm4gVlthXT00LHBbYV07aWYoRGU9cS5jb25maWcuZ2xvYmFsUHJvcGVydGllcyxkLmhhc093bihEZSxhKSlyZXR1cm4gRGVbYV07RW4mJighZC5pc1N0cmluZyhhKXx8YS5pbmRleE9mKCJfX3YiKSE9PTApJiYodyE9PWQuRU1QVFlfT0JKJiZiYShhWzBdKSYmZC5oYXNPd24odyxhKT9PKCJQcm9wZXJ0eSAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShhKSwiIG11c3QgYmUgYWNjZXNzZWQgdmlhICRkYXRhIGJlY2F1c2UgaXQgc3RhcnRzIHdpdGggYSByZXNlcnZlZCAiKSsnY2hhcmFjdGVyICgiJCIgb3IgIl8iKSBhbmQgaXMgbm90IHByb3hpZWQgb24gdGhlIHJlbmRlciBjb250ZXh0LicpOmY9PT1FbiYmTygiUHJvcGVydHkgIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoYSksIiB3YXMgYWNjZXNzZWQgZHVyaW5nIHJlbmRlciAiKSsiYnV0IGlzIG5vdCBkZWZpbmVkIG9uIGluc3RhbmNlLiIpKX0sc2V0KGksYSxmKXt2YXJ7XzpwfT1pLHtkYXRhOlMsc2V0dXBTdGF0ZTp3LGN0eDpOfT1wO3JldHVybiBPbyh3LGEpPyh3W2FdPWYsITApOncuX19pc1NjcmlwdFNldHVwJiZkLmhhc093bih3LGEpPyhPKCdDYW5ub3QgbXV0YXRlIDxzY3JpcHQgc2V0dXA+IGJpbmRpbmcgIicuY29uY2F0KGEsJyIgZnJvbSBPcHRpb25zIEFQSS4nKSksITEpOlMhPT1kLkVNUFRZX09CSiYmZC5oYXNPd24oUyxhKT8oU1thXT1mLCEwKTpkLmhhc093bihwLnByb3BzLGEpPyhPKCdBdHRlbXB0aW5nIHRvIG11dGF0ZSBwcm9wICInLmNvbmNhdChhLCciLiBQcm9wcyBhcmUgcmVhZG9ubHkuJykpLCExKTphWzBdPT09IiQiJiZhLnNsaWNlKDEpaW4gcD8oTygnQXR0ZW1wdGluZyB0byBtdXRhdGUgcHVibGljIHByb3BlcnR5ICInLmNvbmNhdChhLCciLiAnKSsiUHJvcGVydGllcyBzdGFydGluZyB3aXRoICQgYXJlIHJlc2VydmVkIGFuZCByZWFkb25seS4iKSwhMSk6KGEgaW4gcC5hcHBDb250ZXh0LmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzP09iamVjdC5kZWZpbmVQcm9wZXJ0eShOLGEse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHZhbHVlOmZ9KTpOW2FdPWYsITApfSxoYXMoaSxhKXt2YXJ7Xzp7ZGF0YTpmLHNldHVwU3RhdGU6cCxhY2Nlc3NDYWNoZTpTLGN0eDp3LGFwcENvbnRleHQ6Tixwcm9wc09wdGlvbnM6Vn19PWksRjtyZXR1cm4hIVNbYV18fGYhPT1kLkVNUFRZX09CSiYmZC5oYXNPd24oZixhKXx8T28ocCxhKXx8KEY9VlswXSkmJmQuaGFzT3duKEYsYSl8fGQuaGFzT3duKHcsYSl8fGQuaGFzT3duKHNvLGEpfHxkLmhhc093bihOLmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzLGEpfSxkZWZpbmVQcm9wZXJ0eShpLGEsZil7cmV0dXJuIGYuZ2V0IT1udWxsP2kuXy5hY2Nlc3NDYWNoZVthXT0wOmQuaGFzT3duKGYsInZhbHVlIikmJnRoaXMuc2V0KGksYSxmLnZhbHVlLG51bGwpLFJlZmxlY3QuZGVmaW5lUHJvcGVydHkoaSxhLGYpfX07eGEub3duS2V5cz1pPT4oTygiQXZvaWQgYXBwIGxvZ2ljIHRoYXQgcmVsaWVzIG9uIGVudW1lcmF0aW5nIGtleXMgb24gYSBjb21wb25lbnQgaW5zdGFuY2UuIFRoZSBrZXlzIHdpbGwgYmUgZW1wdHkgaW4gcHJvZHVjdGlvbiBtb2RlIHRvIGF2b2lkIHBlcmZvcm1hbmNlIG92ZXJoZWFkLiIpLFJlZmxlY3Qub3duS2V5cyhpKSk7dmFyIGtsPWQuZXh0ZW5kKHt9LHhhLHtnZXQoaSxhKXtpZihhIT09U3ltYm9sLnVuc2NvcGFibGVzKXJldHVybiB4YS5nZXQoaSxhLGkpfSxoYXMoaSxhKXt2YXIgZj1hWzBdIT09Il8iJiYhZC5pc0dsb2JhbGx5V2hpdGVsaXN0ZWQoYSk7cmV0dXJuIWYmJnhhLmhhcyhpLGEpJiZPKCJQcm9wZXJ0eSAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShhKSwiIHNob3VsZCBub3Qgc3RhcnQgd2l0aCBfIHdoaWNoIGlzIGEgcmVzZXJ2ZWQgcHJlZml4IGZvciBWdWUgaW50ZXJuYWxzLiIpKSxmfX0pO2Z1bmN0aW9uIEhzKGkpe3ZhciBhPXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoYSwiXyIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDooKT0+aX0pLE9iamVjdC5rZXlzKHNvKS5mb3JFYWNoKGY9PntPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxmLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6KCk9PnNvW2ZdKGkpLHNldDpkLk5PT1B9KX0pLGF9ZnVuY3Rpb24gQmEoaSl7dmFye2N0eDphLHByb3BzT3B0aW9uczpbZl19PWk7ZiYmT2JqZWN0LmtleXMoZikuZm9yRWFjaChwPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KGEscCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OigpPT5pLnByb3BzW3BdLHNldDpkLk5PT1B9KX0pfWZ1bmN0aW9uIGxsKGkpe3ZhcntjdHg6YSxzZXR1cFN0YXRlOmZ9PWk7T2JqZWN0LmtleXMobS50b1JhdyhmKSkuZm9yRWFjaChwPT57aWYoIWYuX19pc1NjcmlwdFNldHVwKXtpZihiYShwWzBdKSl7Tygic2V0dXAoKSByZXR1cm4gcHJvcGVydHkgIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkocCksJyBzaG91bGQgbm90IHN0YXJ0IHdpdGggIiQiIG9yICJfIiAnKSsid2hpY2ggYXJlIHJlc2VydmVkIHByZWZpeGVzIGZvciBWdWUgaW50ZXJuYWxzLiIpO3JldHVybn1PYmplY3QuZGVmaW5lUHJvcGVydHkoYSxwLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PmZbcF0sc2V0OmQuTk9PUH0pfX0pfWZ1bmN0aW9uIF9zKCl7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4oYSxmKT0+e2lbZl0/TygiIi5jb25jYXQoYSwnIHByb3BlcnR5ICInKS5jb25jYXQoZiwnIiBpcyBhbHJlYWR5IGRlZmluZWQgaW4gJykuY29uY2F0KGlbZl0sIi4iKSk6aVtmXT1hfX12YXIgYnM9ITA7ZnVuY3Rpb24gb2MoaSl7dmFyIGE9VShpKSxmPWkucHJveHkscD1pLmN0eDticz0hMSxhLmJlZm9yZUNyZWF0ZSYmRChhLmJlZm9yZUNyZWF0ZSxpLCJiYyIpO3ZhcntkYXRhOlMsY29tcHV0ZWQ6dyxtZXRob2RzOk4sd2F0Y2g6Vixwcm92aWRlOkYsaW5qZWN0OnEsY3JlYXRlZDpfZSxiZWZvcmVNb3VudDpzZSxtb3VudGVkOm5lLGJlZm9yZVVwZGF0ZTpPZSx1cGRhdGVkOkRlLGFjdGl2YXRlZDpaZSxkZWFjdGl2YXRlZDpmdCxiZWZvcmVEZXN0cm95OlRlLGJlZm9yZVVubW91bnQ6bGUsZGVzdHJveWVkOkVlLHVubW91bnRlZDpMZSxyZW5kZXI6RmUscmVuZGVyVHJhY2tlZDpydCxyZW5kZXJUcmlnZ2VyZWQ6T3QsZXJyb3JDYXB0dXJlZDpYZSxzZXJ2ZXJQcmVmZXRjaDpCLGV4cG9zZTpqLGluaGVyaXRBdHRyczpvZSxjb21wb25lbnRzOnllLGRpcmVjdGl2ZXM6YWUsZmlsdGVyczpnZX09YSxRZT1fcygpO3t2YXJbR2VdPWkucHJvcHNPcHRpb25zO2lmKEdlKWZvcih2YXIgZXQgaW4gR2UpUWUoIlByb3BzIixldCl9aWYocSYmeShxLHAsUWUsaS5hcHBDb250ZXh0LmNvbmZpZy51bndyYXBJbmplY3RlZFJlZiksTilmb3IodmFyIFZlIGluIE4pe3ZhciBNdD1OW1ZlXTtkLmlzRnVuY3Rpb24oTXQpPyhPYmplY3QuZGVmaW5lUHJvcGVydHkocCxWZSx7dmFsdWU6TXQuYmluZChmKSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx3cml0YWJsZTohMH0pLFFlKCJNZXRob2RzIixWZSkpOk8oJ01ldGhvZCAiJy5jb25jYXQoVmUsJyIgaGFzIHR5cGUgIicpLmNvbmNhdCh0eXBlb2YgTXQsJyIgaW4gdGhlIGNvbXBvbmVudCBkZWZpbml0aW9uLiAnKSsiRGlkIHlvdSByZWZlcmVuY2UgdGhlIGZ1bmN0aW9uIGNvcnJlY3RseT8iKX1pZihTJiZmdW5jdGlvbigpe2QuaXNGdW5jdGlvbihTKXx8TygiVGhlIGRhdGEgb3B0aW9uIG11c3QgYmUgYSBmdW5jdGlvbi4gUGxhaW4gb2JqZWN0IHVzYWdlIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQuIik7dmFyIGFuPVMuY2FsbChmLGYpO2lmKGQuaXNQcm9taXNlKGFuKSYmTygiZGF0YSgpIHJldHVybmVkIGEgUHJvbWlzZSAtIG5vdGUgZGF0YSgpIGNhbm5vdCBiZSBhc3luYzsgSWYgeW91IGludGVuZCB0byBwZXJmb3JtIGRhdGEgZmV0Y2hpbmcgYmVmb3JlIGNvbXBvbmVudCByZW5kZXJzLCB1c2UgYXN5bmMgc2V0dXAoKSArIDxTdXNwZW5zZT4uIiksIWQuaXNPYmplY3QoYW4pKU8oImRhdGEoKSBzaG91bGQgcmV0dXJuIGFuIG9iamVjdC4iKTtlbHNle2kuZGF0YT1tLnJlYWN0aXZlKGFuKTt7dmFyIE9uPWZ1bmN0aW9uKHFpKXtRZSgiRGF0YSIscWkpLGJhKHFpWzBdKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHAscWkse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLGdldDooKT0+YW5bcWldLHNldDpkLk5PT1B9KX07Zm9yKHZhciBwbiBpbiBhbilPbihwbil9fX0oKSxicz0hMCx3KXt2YXIgeHQ9ZnVuY3Rpb24oYW4pe3ZhciBPbj13W2FuXSxwbj1kLmlzRnVuY3Rpb24oT24pP09uLmJpbmQoZixmKTpkLmlzRnVuY3Rpb24oT24uZ2V0KT9Pbi5nZXQuYmluZChmLGYpOmQuTk9PUDtwbj09PWQuTk9PUCYmTygnQ29tcHV0ZWQgcHJvcGVydHkgIicuY29uY2F0KGFuLCciIGhhcyBubyBnZXR0ZXIuJykpO3ZhciBxaT0hZC5pc0Z1bmN0aW9uKE9uKSYmZC5pc0Z1bmN0aW9uKE9uLnNldCk/T24uc2V0LmJpbmQoZik6KCk9PntPKCdXcml0ZSBvcGVyYXRpb24gZmFpbGVkOiBjb21wdXRlZCBwcm9wZXJ0eSAiJy5jb25jYXQoYW4sJyIgaXMgcmVhZG9ubHkuJykpfSxiaT1Hcyh7Z2V0OnBuLHNldDpxaX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShwLGFuLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PmJpLnZhbHVlLHNldDpxcj0+YmkudmFsdWU9cXJ9KSxRZSgiQ29tcHV0ZWQiLGFuKX07Zm9yKHZhciBGdCBpbiB3KXh0KEZ0KX1pZihWKWZvcih2YXIgdW4gaW4gVilHKFZbdW5dLHAsZix1bik7aWYoRil7dmFyIFluPWQuaXNGdW5jdGlvbihGKT9GLmNhbGwoZik6RjtSZWZsZWN0Lm93bktleXMoWW4pLmZvckVhY2goYW49PnthcihhbixZblthbl0pfSl9X2UmJkQoX2UsaSwiYyIpO2Z1bmN0aW9uIHF0KGFuLE9uKXtkLmlzQXJyYXkoT24pP09uLmZvckVhY2gocG49PmFuKHBuLmJpbmQoZikpKTpPbiYmYW4oT24uYmluZChmKSl9aWYocXQoaW8sc2UpLHF0KG9vLG5lKSxxdChuYSxPZSkscXQoUW4sRGUpLHF0KHp0LFplKSxxdChTbixmdCkscXQoJHMsWGUpLHF0KFZzLHJ0KSxxdCh6cixPdCkscXQoRnIsbGUpLHF0KFBhLExlKSxxdChOYSxCKSxkLmlzQXJyYXkoaikpaWYoai5sZW5ndGgpe3ZhciB2bj1pLmV4cG9zZWR8fChpLmV4cG9zZWQ9e30pO2ouZm9yRWFjaChhbj0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh2bixhbix7Z2V0OigpPT5mW2FuXSxzZXQ6T249PmZbYW5dPU9ufSl9KX1lbHNlIGkuZXhwb3NlZHx8KGkuZXhwb3NlZD17fSk7RmUmJmkucmVuZGVyPT09ZC5OT09QJiYoaS5yZW5kZXI9RmUpLG9lIT1udWxsJiYoaS5pbmhlcml0QXR0cnM9b2UpLHllJiYoaS5jb21wb25lbnRzPXllKSxhZSYmKGkuZGlyZWN0aXZlcz1hZSk7dmFyIF9pPWkuYXBwQ29udGV4dC5jb25maWcuZ2xvYmFsUHJvcGVydGllcy4kYXBwbHlPcHRpb25zO19pJiZfaShhLGksZil9ZnVuY3Rpb24geShpLGEpe3ZhciBmPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTpkLk5PT1AscD1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITE7ZC5pc0FycmF5KGkpJiYoaT1TZShpKSk7dmFyIFM9ZnVuY3Rpb24oTil7dmFyIFY9aVtOXSxGPXZvaWQgMDtkLmlzT2JqZWN0KFYpPyJkZWZhdWx0ImluIFY/Rj1WbihWLmZyb218fE4sVi5kZWZhdWx0LCEwKTpGPVZuKFYuZnJvbXx8Tik6Rj1WbihWKSxtLmlzUmVmKEYpP3A/T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsTix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OigpPT5GLnZhbHVlLHNldDpxPT5GLnZhbHVlPXF9KTooTygnaW5qZWN0ZWQgcHJvcGVydHkgIicuY29uY2F0KE4sJyIgaXMgYSByZWYgYW5kIHdpbGwgYmUgYXV0by11bndyYXBwZWQgJykrImFuZCBubyBsb25nZXIgbmVlZHMgYC52YWx1ZWAgaW4gdGhlIG5leHQgbWlub3IgcmVsZWFzZS4gVG8gb3B0LWluIHRvIHRoZSBuZXcgYmVoYXZpb3Igbm93LCBzZXQgYGFwcC5jb25maWcudW53cmFwSW5qZWN0ZWRSZWYgPSB0cnVlYCAodGhpcyBjb25maWcgaXMgdGVtcG9yYXJ5IGFuZCB3aWxsIG5vdCBiZSBuZWVkZWQgaW4gdGhlIGZ1dHVyZS4pIiksYVtOXT1GKTphW05dPUYsZigiSW5qZWN0IixOKX07Zm9yKHZhciB3IGluIGkpUyh3KX1mdW5jdGlvbiBEKGksYSxmKXtIdChkLmlzQXJyYXkoaSk/aS5tYXAocD0+cC5iaW5kKGEucHJveHkpKTppLmJpbmQoYS5wcm94eSksYSxmKX1mdW5jdGlvbiBHKGksYSxmLHApe3ZhciBTPXAuaW5jbHVkZXMoIi4iKT9TaShmLHApOigpPT5mW3BdO2lmKGQuaXNTdHJpbmcoaSkpe3ZhciB3PWFbaV07ZC5pc0Z1bmN0aW9uKHcpP2hpKFMsdyk6TygnSW52YWxpZCB3YXRjaCBoYW5kbGVyIHNwZWNpZmllZCBieSBrZXkgIicuY29uY2F0KGksJyInKSx3KX1lbHNlIGlmKGQuaXNGdW5jdGlvbihpKSloaShTLGkuYmluZChmKSk7ZWxzZSBpZihkLmlzT2JqZWN0KGkpKWlmKGQuaXNBcnJheShpKSlpLmZvckVhY2goVj0+RyhWLGEsZixwKSk7ZWxzZXt2YXIgTj1kLmlzRnVuY3Rpb24oaS5oYW5kbGVyKT9pLmhhbmRsZXIuYmluZChmKTphW2kuaGFuZGxlcl07ZC5pc0Z1bmN0aW9uKE4pP2hpKFMsTixpKTpPKCdJbnZhbGlkIHdhdGNoIGhhbmRsZXIgc3BlY2lmaWVkIGJ5IGtleSAiJy5jb25jYXQoaS5oYW5kbGVyLCciJyksTil9ZWxzZSBPKCdJbnZhbGlkIHdhdGNoIG9wdGlvbjogIicuY29uY2F0KHAsJyInKSxpKX1mdW5jdGlvbiBVKGkpe3ZhciBhPWkudHlwZSx7bWl4aW5zOmYsZXh0ZW5kczpwfT1hLHttaXhpbnM6UyxvcHRpb25zQ2FjaGU6dyxjb25maWc6e29wdGlvbk1lcmdlU3RyYXRlZ2llczpOfX09aS5hcHBDb250ZXh0LFY9dy5nZXQoYSksRjtyZXR1cm4gVj9GPVY6IVMubGVuZ3RoJiYhZiYmIXA/Rj1hOihGPXt9LFMubGVuZ3RoJiZTLmZvckVhY2gocT0+UShGLHEsTiwhMCkpLFEoRixhLE4pKSxkLmlzT2JqZWN0KGEpJiZ3LnNldChhLEYpLEZ9ZnVuY3Rpb24gUShpLGEsZil7dmFyIHA9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiExLHttaXhpbnM6UyxleHRlbmRzOnd9PWE7dyYmUShpLHcsZiwhMCksUyYmUy5mb3JFYWNoKEY9PlEoaSxGLGYsITApKTtmb3IodmFyIE4gaW4gYSlpZihwJiZOPT09ImV4cG9zZSIpTygnImV4cG9zZSIgb3B0aW9uIGlzIGlnbm9yZWQgd2hlbiBkZWNsYXJlZCBpbiBtaXhpbnMgb3IgZXh0ZW5kcy4gSXQgc2hvdWxkIG9ubHkgYmUgZGVjbGFyZWQgaW4gdGhlIGJhc2UgY29tcG9uZW50IGl0c2VsZi4nKTtlbHNle3ZhciBWPWVlW05dfHxmJiZmW05dO2lbTl09Vj9WKGlbTl0sYVtOXSk6YVtOXX1yZXR1cm4gaX12YXIgZWU9e2RhdGE6cGUscHJvcHM6YmUsZW1pdHM6YmUsbWV0aG9kczpiZSxjb21wdXRlZDpiZSxiZWZvcmVDcmVhdGU6SWUsY3JlYXRlZDpJZSxiZWZvcmVNb3VudDpJZSxtb3VudGVkOkllLGJlZm9yZVVwZGF0ZTpJZSx1cGRhdGVkOkllLGJlZm9yZURlc3Ryb3k6SWUsYmVmb3JlVW5tb3VudDpJZSxkZXN0cm95ZWQ6SWUsdW5tb3VudGVkOkllLGFjdGl2YXRlZDpJZSxkZWFjdGl2YXRlZDpJZSxlcnJvckNhcHR1cmVkOkllLHNlcnZlclByZWZldGNoOkllLGNvbXBvbmVudHM6YmUsZGlyZWN0aXZlczpiZSx3YXRjaDpIZSxwcm92aWRlOnBlLGluamVjdDpDZX07ZnVuY3Rpb24gcGUoaSxhKXtyZXR1cm4gYT9pP2Z1bmN0aW9uKCl7cmV0dXJuIGQuZXh0ZW5kKGQuaXNGdW5jdGlvbihpKT9pLmNhbGwodGhpcyx0aGlzKTppLGQuaXNGdW5jdGlvbihhKT9hLmNhbGwodGhpcyx0aGlzKTphKX06YTppfWZ1bmN0aW9uIENlKGksYSl7cmV0dXJuIGJlKFNlKGkpLFNlKGEpKX1mdW5jdGlvbiBTZShpKXtpZihkLmlzQXJyYXkoaSkpe2Zvcih2YXIgYT17fSxmPTA7ZjxpLmxlbmd0aDtmKyspYVtpW2ZdXT1pW2ZdO3JldHVybiBhfXJldHVybiBpfWZ1bmN0aW9uIEllKGksYSl7cmV0dXJuIGk/Wy4uLm5ldyBTZXQoW10uY29uY2F0KGksYSkpXTphfWZ1bmN0aW9uIGJlKGksYSl7cmV0dXJuIGk/ZC5leHRlbmQoZC5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSxpKSxhKTphfWZ1bmN0aW9uIEhlKGksYSl7aWYoIWkpcmV0dXJuIGE7aWYoIWEpcmV0dXJuIGk7dmFyIGY9ZC5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSxpKTtmb3IodmFyIHAgaW4gYSlmW3BdPUllKGlbcF0sYVtwXSk7cmV0dXJuIGZ9ZnVuY3Rpb24gX3QoaSxhLGYpe3ZhciBwPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTohMSxTPXt9LHc9e307ZC5kZWYodyxBcywxKSxpLnByb3BzRGVmYXVsdHM9T2JqZWN0LmNyZWF0ZShudWxsKSxFdChpLGEsUyx3KTtmb3IodmFyIE4gaW4gaS5wcm9wc09wdGlvbnNbMF0pTiBpbiBTfHwoU1tOXT12b2lkIDApO2xyKGF8fHt9LFMsaSksZj9pLnByb3BzPXA/UzptLnNoYWxsb3dSZWFjdGl2ZShTKTppLnR5cGUucHJvcHM/aS5wcm9wcz1TOmkucHJvcHM9dyxpLmF0dHJzPXd9ZnVuY3Rpb24gTnQoaSl7Zm9yKDtpOyl7aWYoaS50eXBlLl9faG1ySWQpcmV0dXJuITA7aT1pLnBhcmVudH19ZnVuY3Rpb24gV3QoaSxhLGYscCl7dmFye3Byb3BzOlMsYXR0cnM6dyx2bm9kZTp7cGF0Y2hGbGFnOk59fT1pLFY9bS50b1JhdyhTKSxbRl09aS5wcm9wc09wdGlvbnMscT0hMTtpZighTnQoaSkmJihwfHxOPjApJiYhKE4mMTYpKXtpZihOJjgpZm9yKHZhciBfZT1pLnZub2RlLmR5bmFtaWNQcm9wcyxzZT0wO3NlPF9lLmxlbmd0aDtzZSsrKXt2YXIgbmU9X2Vbc2VdO2lmKCF5bihpLmVtaXRzT3B0aW9ucyxuZSkpe3ZhciBPZT1hW25lXTtpZihGKWlmKGQuaGFzT3duKHcsbmUpKU9lIT09d1tuZV0mJih3W25lXT1PZSxxPSEwKTtlbHNle3ZhciBEZT1kLmNhbWVsaXplKG5lKTtTW0RlXT1odChGLFYsRGUsT2UsaSwhMSl9ZWxzZSBPZSE9PXdbbmVdJiYod1tuZV09T2UscT0hMCl9fX1lbHNle0V0KGksYSxTLHcpJiYocT0hMCk7dmFyIFplO2Zvcih2YXIgZnQgaW4gVikoIWF8fCFkLmhhc093bihhLGZ0KSYmKChaZT1kLmh5cGhlbmF0ZShmdCkpPT09ZnR8fCFkLmhhc093bihhLFplKSkpJiYoRj9mJiYoZltmdF0hPT12b2lkIDB8fGZbWmVdIT09dm9pZCAwKSYmKFNbZnRdPWh0KEYsVixmdCx2b2lkIDAsaSwhMCkpOmRlbGV0ZSBTW2Z0XSk7aWYodyE9PVYpZm9yKHZhciBUZSBpbiB3KSghYXx8IWQuaGFzT3duKGEsVGUpJiYhMCkmJihkZWxldGUgd1tUZV0scT0hMCl9cSYmbS50cmlnZ2VyKGksInNldCIsIiRhdHRycyIpLGxyKGF8fHt9LFMsaSl9ZnVuY3Rpb24gRXQoaSxhLGYscCl7dmFyW1Msd109aS5wcm9wc09wdGlvbnMsTj0hMSxWO2lmKGEpe2Zvcih2YXIgRiBpbiBhKWlmKCFkLmlzUmVzZXJ2ZWRQcm9wKEYpKXt2YXIgcT1hW0ZdLF9lPXZvaWQgMDtTJiZkLmhhc093bihTLF9lPWQuY2FtZWxpemUoRikpPyF3fHwhdy5pbmNsdWRlcyhfZSk/ZltfZV09cTooVnx8KFY9e30pKVtfZV09cTp5bihpLmVtaXRzT3B0aW9ucyxGKXx8KCEoRiBpbiBwKXx8cSE9PXBbRl0pJiYocFtGXT1xLE49ITApfX1pZih3KWZvcih2YXIgc2U9bS50b1JhdyhmKSxuZT1WfHxkLkVNUFRZX09CSixPZT0wO09lPHcubGVuZ3RoO09lKyspe3ZhciBEZT13W09lXTtmW0RlXT1odChTLHNlLERlLG5lW0RlXSxpLCFkLmhhc093bihuZSxEZSkpfXJldHVybiBOfWZ1bmN0aW9uIGh0KGksYSxmLHAsUyx3KXt2YXIgTj1pW2ZdO2lmKE4hPW51bGwpe3ZhciBWPWQuaGFzT3duKE4sImRlZmF1bHQiKTtpZihWJiZwPT09dm9pZCAwKXt2YXIgRj1OLmRlZmF1bHQ7aWYoTi50eXBlIT09RnVuY3Rpb24mJmQuaXNGdW5jdGlvbihGKSl7dmFye3Byb3BzRGVmYXVsdHM6cX09UztmIGluIHE/cD1xW2ZdOihtaShTKSxwPXFbZl09Ri5jYWxsKG51bGwsYSksYWEoKSl9ZWxzZSBwPUZ9TlswXSYmKHcmJiFWP3A9ITE6TlsxXSYmKHA9PT0iInx8cD09PWQuaHlwaGVuYXRlKGYpKSYmKHA9ITApKX1yZXR1cm4gcH1mdW5jdGlvbiB1dChpLGEpe3ZhciBmPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTohMSxwPWEucHJvcHNDYWNoZSxTPXAuZ2V0KGkpO2lmKFMpcmV0dXJuIFM7dmFyIHc9aS5wcm9wcyxOPXt9LFY9W10sRj0hMTtpZighZC5pc0Z1bmN0aW9uKGkpKXt2YXIgcT1FZT0+e0Y9ITA7dmFyW0xlLEZlXT11dChFZSxhLCEwKTtkLmV4dGVuZChOLExlKSxGZSYmVi5wdXNoKC4uLkZlKX07IWYmJmEubWl4aW5zLmxlbmd0aCYmYS5taXhpbnMuZm9yRWFjaChxKSxpLmV4dGVuZHMmJnEoaS5leHRlbmRzKSxpLm1peGlucyYmaS5taXhpbnMuZm9yRWFjaChxKX1pZighdyYmIUYpcmV0dXJuIGQuaXNPYmplY3QoaSkmJnAuc2V0KGksZC5FTVBUWV9BUlIpLGQuRU1QVFlfQVJSO2lmKGQuaXNBcnJheSh3KSlmb3IodmFyIF9lPTA7X2U8dy5sZW5ndGg7X2UrKyl7ZC5pc1N0cmluZyh3W19lXSl8fE8oInByb3BzIG11c3QgYmUgc3RyaW5ncyB3aGVuIHVzaW5nIGFycmF5IHN5bnRheC4iLHdbX2VdKTt2YXIgc2U9ZC5jYW1lbGl6ZSh3W19lXSk7aG4oc2UpJiYoTltzZV09ZC5FTVBUWV9PQkopfWVsc2UgaWYodyl7ZC5pc09iamVjdCh3KXx8TygiaW52YWxpZCBwcm9wcyBvcHRpb25zIix3KTtmb3IodmFyIG5lIGluIHcpe3ZhciBPZT1kLmNhbWVsaXplKG5lKTtpZihobihPZSkpe3ZhciBEZT13W25lXSxaZT1OW09lXT1kLmlzQXJyYXkoRGUpfHxkLmlzRnVuY3Rpb24oRGUpP3t0eXBlOkRlfTpPYmplY3QuYXNzaWduKHt9LERlKTtpZihaZSl7dmFyIGZ0PUt0KEJvb2xlYW4sWmUudHlwZSksVGU9S3QoU3RyaW5nLFplLnR5cGUpO1plWzBdPWZ0Pi0xLFplWzFdPVRlPDB8fGZ0PFRlLChmdD4tMXx8ZC5oYXNPd24oWmUsImRlZmF1bHQiKSkmJlYucHVzaChPZSl9fX19dmFyIGxlPVtOLFZdO3JldHVybiBkLmlzT2JqZWN0KGkpJiZwLnNldChpLGxlKSxsZX1mdW5jdGlvbiBobihpKXtyZXR1cm4gaVswXSE9PSIkIj8hMDooTygnSW52YWxpZCBwcm9wIG5hbWU6ICInLmNvbmNhdChpLCciIGlzIGEgcmVzZXJ2ZWQgcHJvcGVydHkuJykpLCExKX1mdW5jdGlvbiBDbihpKXt2YXIgYT1pJiZpLnRvU3RyaW5nKCkubWF0Y2goL15ccyooZnVuY3Rpb258Y2xhc3MpIChcdyspLyk7cmV0dXJuIGE/YVsyXTppPT09bnVsbD8ibnVsbCI6IiJ9ZnVuY3Rpb24gQ3QoaSxhKXtyZXR1cm4gQ24oaSk9PT1DbihhKX1mdW5jdGlvbiBLdChpLGEpe3JldHVybiBkLmlzQXJyYXkoYSk/YS5maW5kSW5kZXgoZj0+Q3QoZixpKSk6ZC5pc0Z1bmN0aW9uKGEpJiZDdChhLGkpPzA6LTF9ZnVuY3Rpb24gbHIoaSxhLGYpe3ZhciBwPW0udG9SYXcoYSksUz1mLnByb3BzT3B0aW9uc1swXTtmb3IodmFyIHcgaW4gUyl7dmFyIE49U1t3XTtOIT1udWxsJiZjcih3LHBbd10sTiwhZC5oYXNPd24oaSx3KSYmIWQuaGFzT3duKGksZC5oeXBoZW5hdGUodykpKX19ZnVuY3Rpb24gY3IoaSxhLGYscCl7dmFye3R5cGU6UyxyZXF1aXJlZDp3LHZhbGlkYXRvcjpOfT1mO2lmKHcmJnApe08oJ01pc3NpbmcgcmVxdWlyZWQgcHJvcDogIicraSsnIicpO3JldHVybn1pZighKGE9PW51bGwmJiFmLnJlcXVpcmVkKSl7aWYoUyE9bnVsbCYmUyE9PSEwKXtmb3IodmFyIFY9ITEsRj1kLmlzQXJyYXkoUyk/UzpbU10scT1bXSxfZT0wO19lPEYubGVuZ3RoJiYhVjtfZSsrKXt2YXJ7dmFsaWQ6c2UsZXhwZWN0ZWRUeXBlOm5lfT1ZdChhLEZbX2VdKTtxLnB1c2gobmV8fCIiKSxWPXNlfWlmKCFWKXtPKGVyKGksYSxxKSk7cmV0dXJufX1OJiYhTihhKSYmTygnSW52YWxpZCBwcm9wOiBjdXN0b20gdmFsaWRhdG9yIGNoZWNrIGZhaWxlZCBmb3IgcHJvcCAiJytpKyciLicpfX12YXIgR3Q9ZC5tYWtlTWFwKCJTdHJpbmcsTnVtYmVyLEJvb2xlYW4sRnVuY3Rpb24sU3ltYm9sLEJpZ0ludCIpO2Z1bmN0aW9uIFl0KGksYSl7dmFyIGYscD1DbihhKTtpZihHdChwKSl7dmFyIFM9dHlwZW9mIGk7Zj1TPT09cC50b0xvd2VyQ2FzZSgpLCFmJiZTPT09Im9iamVjdCImJihmPWkgaW5zdGFuY2VvZiBhKX1lbHNlIHA9PT0iT2JqZWN0Ij9mPWQuaXNPYmplY3QoaSk6cD09PSJBcnJheSI/Zj1kLmlzQXJyYXkoaSk6cD09PSJudWxsIj9mPWk9PT1udWxsOmY9aSBpbnN0YW5jZW9mIGE7cmV0dXJue3ZhbGlkOmYsZXhwZWN0ZWRUeXBlOnB9fWZ1bmN0aW9uIGVyKGksYSxmKXt2YXIgcD0nSW52YWxpZCBwcm9wOiB0eXBlIGNoZWNrIGZhaWxlZCBmb3IgcHJvcCAiJy5jb25jYXQoaSwnIi4nKSsiIEV4cGVjdGVkICIuY29uY2F0KGYubWFwKGQuY2FwaXRhbGl6ZSkuam9pbigiIHwgIikpLFM9ZlswXSx3PWQudG9SYXdUeXBlKGEpLE49eWEoYSxTKSxWPXlhKGEsdyk7cmV0dXJuIGYubGVuZ3RoPT09MSYmeXMoUykmJiFFcyhTLHcpJiYocCs9IiB3aXRoIHZhbHVlICIuY29uY2F0KE4pKSxwKz0iLCBnb3QgIi5jb25jYXQodywiICIpLHlzKHcpJiYocCs9IndpdGggdmFsdWUgIi5jb25jYXQoViwiLiIpKSxwfWZ1bmN0aW9uIHlhKGksYSl7cmV0dXJuIGE9PT0iU3RyaW5nIj8nIicuY29uY2F0KGksJyInKTphPT09Ik51bWJlciI/IiIuY29uY2F0KE51bWJlcihpKSk6IiIuY29uY2F0KGkpfWZ1bmN0aW9uIHlzKGkpe3ZhciBhPVsic3RyaW5nIiwibnVtYmVyIiwiYm9vbGVhbiJdO3JldHVybiBhLnNvbWUoZj0+aS50b0xvd2VyQ2FzZSgpPT09Zil9ZnVuY3Rpb24gRXMoKXtmb3IodmFyIGk9YXJndW1lbnRzLmxlbmd0aCxhPW5ldyBBcnJheShpKSxmPTA7ZjxpO2YrKylhW2ZdPWFyZ3VtZW50c1tmXTtyZXR1cm4gYS5zb21lKHA9PnAudG9Mb3dlckNhc2UoKT09PSJib29sZWFuIil9dmFyIGxvPWk9PmlbMF09PT0iXyJ8fGk9PT0iJHN0YWJsZSIsTWE9aT0+ZC5pc0FycmF5KGkpP2kubWFwKFNyKTpbU3IoaSldLERhPShpLGEsZik9PntpZihhLl9uKXJldHVybiBhO3ZhciBwPWNpKGZ1bmN0aW9uKCl7cmV0dXJuIG1uJiZPKCdTbG90ICInLmNvbmNhdChpLCciIGludm9rZWQgb3V0c2lkZSBvZiB0aGUgcmVuZGVyIGZ1bmN0aW9uOiAnKSsidGhpcyB3aWxsIG5vdCB0cmFjayBkZXBlbmRlbmNpZXMgdXNlZCBpbiB0aGUgc2xvdC4gSW52b2tlIHRoZSBzbG90IGZ1bmN0aW9uIGluc2lkZSB0aGUgcmVuZGVyIGZ1bmN0aW9uIGluc3RlYWQuIiksTWEoYSguLi5hcmd1bWVudHMpKX0sZik7cmV0dXJuIHAuX2M9ITEscH0sRmk9KGksYSxmKT0+e3ZhciBwPWkuX2N0eDtmb3IodmFyIFMgaW4gaSlpZighbG8oUykpe3ZhciB3PWlbU107ZC5pc0Z1bmN0aW9uKHcpP2FbU109RGEoUyx3LHApOnchPW51bGwmJmZ1bmN0aW9uKCl7TygnTm9uLWZ1bmN0aW9uIHZhbHVlIGVuY291bnRlcmVkIGZvciBzbG90ICInLmNvbmNhdChTLCciLiAnKSsiUHJlZmVyIGZ1bmN0aW9uIHNsb3RzIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UuIik7dmFyIE49TWEodyk7YVtTXT0oKT0+Tn0oKX19LExhPShpLGEpPT57WShpLnZub2RlKXx8TygiTm9uLWZ1bmN0aW9uIHZhbHVlIGVuY291bnRlcmVkIGZvciBkZWZhdWx0IHNsb3QuIFByZWZlciBmdW5jdGlvbiBzbG90cyBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlLiIpO3ZhciBmPU1hKGEpO2kuc2xvdHMuZGVmYXVsdD0oKT0+Zn0sem49KGksYSk9PntpZihpLnZub2RlLnNoYXBlRmxhZyYzMil7dmFyIGY9YS5fO2Y/KGkuc2xvdHM9bS50b1JhdyhhKSxkLmRlZihhLCJfIixmKSk6RmkoYSxpLnNsb3RzPXt9KX1lbHNlIGkuc2xvdHM9e30sYSYmTGEoaSxhKTtkLmRlZihpLnNsb3RzLEFzLDEpfSxIbz0oaSxhLGYpPT57dmFye3Zub2RlOnAsc2xvdHM6U309aSx3PSEwLE49ZC5FTVBUWV9PQko7aWYocC5zaGFwZUZsYWcmMzIpe3ZhciBWPWEuXztWP0JyP2QuZXh0ZW5kKFMsYSk6ZiYmVj09PTE/dz0hMTooZC5leHRlbmQoUyxhKSwhZiYmVj09PTEmJmRlbGV0ZSBTLl8pOih3PSFhLiRzdGFibGUsRmkoYSxTKSksTj1hfWVsc2UgYSYmKExhKGksYSksTj17ZGVmYXVsdDoxfSk7aWYodylmb3IodmFyIEYgaW4gUykhbG8oRikmJiEoRiBpbiBOKSYmZGVsZXRlIFNbRl19O2Z1bmN0aW9uIGpzKCl7cmV0dXJue2FwcDpudWxsLGNvbmZpZzp7aXNOYXRpdmVUYWc6ZC5OTyxwZXJmb3JtYW5jZTohMSxnbG9iYWxQcm9wZXJ0aWVzOnt9LG9wdGlvbk1lcmdlU3RyYXRlZ2llczp7fSxlcnJvckhhbmRsZXI6dm9pZCAwLHdhcm5IYW5kbGVyOnZvaWQgMCxjb21waWxlck9wdGlvbnM6e319LG1peGluczpbXSxjb21wb25lbnRzOnt9LGRpcmVjdGl2ZXM6e30scHJvdmlkZXM6T2JqZWN0LmNyZWF0ZShudWxsKSxvcHRpb25zQ2FjaGU6bmV3IFdlYWtNYXAscHJvcHNDYWNoZTpuZXcgV2Vha01hcCxlbWl0c0NhY2hlOm5ldyBXZWFrTWFwfX12YXIgY2w9MDtmdW5jdGlvbiBqbyhpLGEpe3JldHVybiBmdW5jdGlvbihwKXt2YXIgUz1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06bnVsbDtkLmlzRnVuY3Rpb24ocCl8fChwPU9iamVjdC5hc3NpZ24oe30scCkpLFMhPW51bGwmJiFkLmlzT2JqZWN0KFMpJiYoTygicm9vdCBwcm9wcyBwYXNzZWQgdG8gYXBwLm1vdW50KCkgbXVzdCBiZSBhbiBvYmplY3QuIiksUz1udWxsKTt2YXIgdz1qcygpLE49bmV3IFNldCxWPSExLEY9dy5hcHA9e191aWQ6Y2wrKyxfY29tcG9uZW50OnAsX3Byb3BzOlMsX2NvbnRhaW5lcjpudWxsLF9jb250ZXh0OncsX2luc3RhbmNlOm51bGwsdmVyc2lvbjptbCxnZXQgY29uZmlnKCl7cmV0dXJuIHcuY29uZmlnfSxzZXQgY29uZmlnKHEpe08oImFwcC5jb25maWcgY2Fubm90IGJlIHJlcGxhY2VkLiBNb2RpZnkgaW5kaXZpZHVhbCBvcHRpb25zIGluc3RlYWQuIil9LHVzZShxKXtmb3IodmFyIF9lPWFyZ3VtZW50cy5sZW5ndGgsc2U9bmV3IEFycmF5KF9lPjE/X2UtMTowKSxuZT0xO25lPF9lO25lKyspc2VbbmUtMV09YXJndW1lbnRzW25lXTtyZXR1cm4gTi5oYXMocSk/TygiUGx1Z2luIGhhcyBhbHJlYWR5IGJlZW4gYXBwbGllZCB0byB0YXJnZXQgYXBwLiIpOnEmJmQuaXNGdW5jdGlvbihxLmluc3RhbGwpPyhOLmFkZChxKSxxLmluc3RhbGwoRiwuLi5zZSkpOmQuaXNGdW5jdGlvbihxKT8oTi5hZGQocSkscShGLC4uLnNlKSk6TygnQSBwbHVnaW4gbXVzdCBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhbiBvYmplY3Qgd2l0aCBhbiAiaW5zdGFsbCIgZnVuY3Rpb24uJyksRn0sbWl4aW4ocSl7cmV0dXJuIHcubWl4aW5zLmluY2x1ZGVzKHEpP08oIk1peGluIGhhcyBhbHJlYWR5IGJlZW4gYXBwbGllZCB0byB0YXJnZXQgYXBwIisocS5uYW1lPyI6ICIuY29uY2F0KHEubmFtZSk6IiIpKTp3Lm1peGlucy5wdXNoKHEpLEZ9LGNvbXBvbmVudChxLF9lKXtyZXR1cm4gVWEocSx3LmNvbmZpZyksX2U/KHcuY29tcG9uZW50c1txXSYmTygnQ29tcG9uZW50ICInLmNvbmNhdChxLCciIGhhcyBhbHJlYWR5IGJlZW4gcmVnaXN0ZXJlZCBpbiB0YXJnZXQgYXBwLicpKSx3LmNvbXBvbmVudHNbcV09X2UsRik6dy5jb21wb25lbnRzW3FdfSxkaXJlY3RpdmUocSxfZSl7cmV0dXJuIGlsKHEpLF9lPyh3LmRpcmVjdGl2ZXNbcV0mJk8oJ0RpcmVjdGl2ZSAiJy5jb25jYXQocSwnIiBoYXMgYWxyZWFkeSBiZWVuIHJlZ2lzdGVyZWQgaW4gdGFyZ2V0IGFwcC4nKSksdy5kaXJlY3RpdmVzW3FdPV9lLEYpOncuZGlyZWN0aXZlc1txXX0sbW91bnQocSxfZSxzZSl7aWYoVilPKCJBcHAgaGFzIGFscmVhZHkgYmVlbiBtb3VudGVkLlxuSWYgeW91IHdhbnQgdG8gcmVtb3VudCB0aGUgc2FtZSBhcHAsIG1vdmUgeW91ciBhcHAgY3JlYXRpb24gbG9naWMgaW50byBhIGZhY3RvcnkgZnVuY3Rpb24gYW5kIGNyZWF0ZSBmcmVzaCBhcHAgaW5zdGFuY2VzIGZvciBlYWNoIG1vdW50IC0gZS5nLiBgY29uc3QgY3JlYXRlTXlBcHAgPSAoKSA9PiBjcmVhdGVBcHAoQXBwKWAiKTtlbHNle3EuX192dWVfYXBwX18mJk8oIlRoZXJlIGlzIGFscmVhZHkgYW4gYXBwIGluc3RhbmNlIG1vdW50ZWQgb24gdGhlIGhvc3QgY29udGFpbmVyLlxuIElmIHlvdSB3YW50IHRvIG1vdW50IGFub3RoZXIgYXBwIG9uIHRoZSBzYW1lIGhvc3QgY29udGFpbmVyLCB5b3UgbmVlZCB0byB1bm1vdW50IHRoZSBwcmV2aW91cyBhcHAgYnkgY2FsbGluZyBgYXBwLnVubW91bnQoKWAgZmlyc3QuIik7dmFyIG5lPVVuKHAsUyk7cmV0dXJuIG5lLmFwcENvbnRleHQ9dyx3LnJlbG9hZD0oKT0+e2koV2kobmUpLHEsc2UpfSxfZSYmYT9hKG5lLHEpOmkobmUscSxzZSksVj0hMCxGLl9jb250YWluZXI9cSxxLl9fdnVlX2FwcF9fPUYsRi5faW5zdGFuY2U9bmUuY29tcG9uZW50LFhvKEYsbWwpLE5zKG5lLmNvbXBvbmVudCl8fG5lLmNvbXBvbmVudC5wcm94eX19LHVubW91bnQoKXtWPyhpKG51bGwsRi5fY29udGFpbmVyKSxGLl9pbnN0YW5jZT1udWxsLE1vKEYpLGRlbGV0ZSBGLl9jb250YWluZXIuX192dWVfYXBwX18pOk8oIkNhbm5vdCB1bm1vdW50IGFuIGFwcCB0aGF0IGlzIG5vdCBtb3VudGVkLiIpfSxwcm92aWRlKHEsX2Upe3JldHVybiBxIGluIHcucHJvdmlkZXMmJk8oJ0FwcCBhbHJlYWR5IHByb3ZpZGVzIHByb3BlcnR5IHdpdGgga2V5ICInLmNvbmNhdChTdHJpbmcocSksJyIuICcpKyJJdCB3aWxsIGJlIG92ZXJ3cml0dGVuIHdpdGggdGhlIG5ldyB2YWx1ZS4iKSx3LnByb3ZpZGVzW3FdPV9lLEZ9fTtyZXR1cm4gRn19ZnVuY3Rpb24gZWkoaSxhLGYscCl7dmFyIFM9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOiExO2lmKGQuaXNBcnJheShpKSl7aS5mb3JFYWNoKChaZSxmdCk9PmVpKFplLGEmJihkLmlzQXJyYXkoYSk/YVtmdF06YSksZixwLFMpKTtyZXR1cm59aWYoIShoZShwKSYmIVMpKXt2YXIgdz1wLnNoYXBlRmxhZyY0P05zKHAuY29tcG9uZW50KXx8cC5jb21wb25lbnQucHJveHk6cC5lbCxOPVM/bnVsbDp3LHtpOlYscjpGfT1pO2lmKCFWKXtPKCJNaXNzaW5nIHJlZiBvd25lciBjb250ZXh0LiByZWYgY2Fubm90IGJlIHVzZWQgb24gaG9pc3RlZCB2bm9kZXMuIEEgdm5vZGUgd2l0aCByZWYgbXVzdCBiZSBjcmVhdGVkIGluc2lkZSB0aGUgcmVuZGVyIGZ1bmN0aW9uLiIpO3JldHVybn12YXIgcT1hJiZhLnIsX2U9Vi5yZWZzPT09ZC5FTVBUWV9PQko/Vi5yZWZzPXt9OlYucmVmcyxzZT1WLnNldHVwU3RhdGU7aWYocSE9bnVsbCYmcSE9PUYmJihkLmlzU3RyaW5nKHEpPyhfZVtxXT1udWxsLGQuaGFzT3duKHNlLHEpJiYoc2VbcV09bnVsbCkpOm0uaXNSZWYocSkmJihxLnZhbHVlPW51bGwpKSxkLmlzRnVuY3Rpb24oRikpY24oRixWLDEyLFtOLF9lXSk7ZWxzZXt2YXIgbmU9ZC5pc1N0cmluZyhGKSxPZT1tLmlzUmVmKEYpO2lmKG5lfHxPZSl7dmFyIERlPSgpPT57aWYoaS5mKXt2YXIgWmU9bmU/ZC5oYXNPd24oc2UsRik/c2VbRl06X2VbRl06Ri52YWx1ZTtTP2QuaXNBcnJheShaZSkmJmQucmVtb3ZlKFplLHcpOmQuaXNBcnJheShaZSk/WmUuaW5jbHVkZXModyl8fFplLnB1c2godyk6bmU/KF9lW0ZdPVt3XSxkLmhhc093bihzZSxGKSYmKHNlW0ZdPV9lW0ZdKSk6KEYudmFsdWU9W3ddLGkuayYmKF9lW2kua109Ri52YWx1ZSkpfWVsc2UgbmU/KF9lW0ZdPU4sZC5oYXNPd24oc2UsRikmJihzZVtGXT1OKSk6T2U/KEYudmFsdWU9TixpLmsmJihfZVtpLmtdPU4pKTpPKCJJbnZhbGlkIHRlbXBsYXRlIHJlZiB0eXBlOiIsRiwiKCIuY29uY2F0KHR5cGVvZiBGLCIpIikpfTtOPyhEZS5pZD0tMSxQcihEZSxmKSk6RGUoKX1lbHNlIE8oIkludmFsaWQgdGVtcGxhdGUgcmVmIHR5cGU6IixGLCIoIi5jb25jYXQodHlwZW9mIEYsIikiKSl9fX12YXIgJG49ITEsVnI9aT0+L3N2Zy8udGVzdChpLm5hbWVzcGFjZVVSSSkmJmkudGFnTmFtZSE9PSJmb3JlaWduT2JqZWN0IixWaT1pPT5pLm5vZGVUeXBlPT09ODtmdW5jdGlvbiB6byhpKXt2YXJ7bXQ6YSxwOmYsbzp7cGF0Y2hQcm9wOnAsY3JlYXRlVGV4dDpTLG5leHRTaWJsaW5nOncscGFyZW50Tm9kZTpOLHJlbW92ZTpWLGluc2VydDpGLGNyZWF0ZUNvbW1lbnQ6cX19PWksX2U9KFRlLGxlKT0+e2lmKCFsZS5oYXNDaGlsZE5vZGVzKCkpe08oIkF0dGVtcHRpbmcgdG8gaHlkcmF0ZSBleGlzdGluZyBtYXJrdXAgYnV0IGNvbnRhaW5lciBpcyBlbXB0eS4gUGVyZm9ybWluZyBmdWxsIG1vdW50IGluc3RlYWQuIiksZihudWxsLFRlLGxlKSxqcigpLGxlLl92bm9kZT1UZTtyZXR1cm59JG49ITEsc2UobGUuZmlyc3RDaGlsZCxUZSxudWxsLG51bGwsbnVsbCksanIoKSxsZS5fdm5vZGU9VGUsJG4mJmNvbnNvbGUuZXJyb3IoIkh5ZHJhdGlvbiBjb21wbGV0ZWQgYnV0IGNvbnRhaW5zIG1pc21hdGNoZXMuIil9LHNlPWZ1bmN0aW9uKFRlLGxlLEVlLExlLEZlKXt2YXIgcnQ9YXJndW1lbnRzLmxlbmd0aD41JiZhcmd1bWVudHNbNV0hPT12b2lkIDA/YXJndW1lbnRzWzVdOiExLE90PVZpKFRlKSYmVGUuZGF0YT09PSJbIixYZT0oKT0+WmUoVGUsbGUsRWUsTGUsRmUsT3QpLHt0eXBlOkIscmVmOmosc2hhcGVGbGFnOm9lLHBhdGNoRmxhZzp5ZX09bGUsYWU9VGUubm9kZVR5cGU7bGUuZWw9VGUseWU9PT0tMiYmKHJ0PSExLGxlLmR5bmFtaWNDaGlsZHJlbj1udWxsKTt2YXIgZ2U9bnVsbDtzd2l0Y2goQil7Y2FzZSBMdDphZSE9PTM/bGUuY2hpbGRyZW49PT0iIj8oRihsZS5lbD1TKCIiLFRlLnBhcmVudE5vZGUpLE4oVGUpLFRlKSxnZT1UZSk6Z2U9WGUoKTooVGUuZGF0YSE9PWxlLmNoaWxkcmVuJiYoJG49ITAsTygiSHlkcmF0aW9uIHRleHQgbWlzbWF0Y2g6IitgCi0gQ2xpZW50OiBgLmNvbmNhdChKU09OLnN0cmluZ2lmeShUZS5kYXRhKSkrYAotIFNlcnZlcjogYC5jb25jYXQoSlNPTi5zdHJpbmdpZnkobGUuY2hpbGRyZW4pKSksVGUuZGF0YT1sZS5jaGlsZHJlbiksZ2U9dyhUZSkpO2JyZWFrO2Nhc2UgZW46YWUhPT04fHxPdD9nZT1YZSgpOmdlPXcoVGUpO2JyZWFrO2Nhc2UgTnI6aWYoT3QmJihUZT13KFRlKSxhZT1UZS5ub2RlVHlwZSksYWU9PT0xfHxhZT09PTMpe2dlPVRlO2Zvcih2YXIgUWU9IWxlLmNoaWxkcmVuLmxlbmd0aCxHZT0wO0dlPGxlLnN0YXRpY0NvdW50O0dlKyspUWUmJihsZS5jaGlsZHJlbis9Z2Uubm9kZVR5cGU9PT0xP2dlLm91dGVySFRNTDpnZS5kYXRhKSxHZT09PWxlLnN0YXRpY0NvdW50LTEmJihsZS5hbmNob3I9Z2UpLGdlPXcoZ2UpO3JldHVybiBPdD93KGdlKTpnZX1lbHNlIFhlKCk7YnJlYWs7Y2FzZSBrdDpPdD9nZT1EZShUZSxsZSxFZSxMZSxGZSxydCk6Z2U9WGUoKTticmVhaztkZWZhdWx0OmlmKG9lJjEpYWUhPT0xfHxsZS50eXBlLnRvTG93ZXJDYXNlKCkhPT1UZS50YWdOYW1lLnRvTG93ZXJDYXNlKCk/Z2U9WGUoKTpnZT1uZShUZSxsZSxFZSxMZSxGZSxydCk7ZWxzZSBpZihvZSY2KXtsZS5zbG90U2NvcGVJZHM9RmU7dmFyIGV0PU4oVGUpO2lmKGEobGUsZXQsbnVsbCxFZSxMZSxWcihldCkscnQpLGdlPU90P2Z0KFRlKTp3KFRlKSxnZSYmVmkoZ2UpJiZnZS5kYXRhPT09InRlbGVwb3J0IGVuZCImJihnZT13KGdlKSksaGUobGUpKXt2YXIgVmU7T3Q/KFZlPVVuKGt0KSxWZS5hbmNob3I9Z2U/Z2UucHJldmlvdXNTaWJsaW5nOmV0Lmxhc3RDaGlsZCk6VmU9VGUubm9kZVR5cGU9PT0zP0lzKCIiKTpVbigiZGl2IiksVmUuZWw9VGUsbGUuY29tcG9uZW50LnN1YlRyZWU9VmV9fWVsc2Ugb2UmNjQ/YWUhPT04P2dlPVhlKCk6Z2U9bGUudHlwZS5oeWRyYXRlKFRlLGxlLEVlLExlLEZlLHJ0LGksT2UpOm9lJjEyOD9nZT1sZS50eXBlLmh5ZHJhdGUoVGUsbGUsRWUsTGUsVnIoTihUZSkpLEZlLHJ0LGksc2UpOk8oIkludmFsaWQgSG9zdFZOb2RlIHR5cGU6IixCLCIoIi5jb25jYXQodHlwZW9mIEIsIikiKSl9cmV0dXJuIGohPW51bGwmJmVpKGosbnVsbCxMZSxsZSksZ2V9LG5lPShUZSxsZSxFZSxMZSxGZSxydCk9PntydD1ydHx8ISFsZS5keW5hbWljQ2hpbGRyZW47dmFye3R5cGU6T3QscHJvcHM6WGUscGF0Y2hGbGFnOkIsc2hhcGVGbGFnOmosZGlyczpvZX09bGUseWU9T3Q9PT0iaW5wdXQiJiZvZXx8T3Q9PT0ib3B0aW9uIjt7aWYob2UmJk9pKGxlLG51bGwsRWUsImNyZWF0ZWQiKSxYZSlpZih5ZXx8IXJ0fHxCJigxNnwzMikpZm9yKHZhciBhZSBpbiBYZSkoeWUmJmFlLmVuZHNXaXRoKCJ2YWx1ZSIpfHxkLmlzT24oYWUpJiYhZC5pc1Jlc2VydmVkUHJvcChhZSkpJiZwKFRlLGFlLG51bGwsWGVbYWVdLCExLHZvaWQgMCxFZSk7ZWxzZSBYZS5vbkNsaWNrJiZwKFRlLCJvbkNsaWNrIixudWxsLFhlLm9uQ2xpY2ssITEsdm9pZCAwLEVlKTt2YXIgZ2U7aWYoKGdlPVhlJiZYZS5vblZub2RlQmVmb3JlTW91bnQpJiZZcihnZSxFZSxsZSksb2UmJk9pKGxlLG51bGwsRWUsImJlZm9yZU1vdW50IiksKChnZT1YZSYmWGUub25Wbm9kZU1vdW50ZWQpfHxvZSkmJnRvKCgpPT57Z2UmJllyKGdlLEVlLGxlKSxvZSYmT2kobGUsbnVsbCxFZSwibW91bnRlZCIpfSxMZSksaiYxNiYmIShYZSYmKFhlLmlubmVySFRNTHx8WGUudGV4dENvbnRlbnQpKSlmb3IodmFyIFFlPU9lKFRlLmZpcnN0Q2hpbGQsbGUsVGUsRWUsTGUsRmUscnQpLEdlPSExO1FlOyl7JG49ITAsR2V8fChPKCJIeWRyYXRpb24gY2hpbGRyZW4gbWlzbWF0Y2ggaW4gPCIuY29uY2F0KGxlLnR5cGUsIj46ICIpKyJzZXJ2ZXIgcmVuZGVyZWQgZWxlbWVudCBjb250YWlucyBtb3JlIGNoaWxkIG5vZGVzIHRoYW4gY2xpZW50IHZkb20uIiksR2U9ITApO3ZhciBldD1RZTtRZT1RZS5uZXh0U2libGluZyxWKGV0KX1lbHNlIGomOCYmVGUudGV4dENvbnRlbnQhPT1sZS5jaGlsZHJlbiYmKCRuPSEwLE8oIkh5ZHJhdGlvbiB0ZXh0IGNvbnRlbnQgbWlzbWF0Y2ggaW4gPCIuY29uY2F0KGxlLnR5cGUsYD46CmApKyItIENsaWVudDogIi5jb25jYXQoVGUudGV4dENvbnRlbnQsYApgKSsiLSBTZXJ2ZXI6ICIuY29uY2F0KGxlLmNoaWxkcmVuKSksVGUudGV4dENvbnRlbnQ9bGUuY2hpbGRyZW4pfXJldHVybiBUZS5uZXh0U2libGluZ30sT2U9KFRlLGxlLEVlLExlLEZlLHJ0LE90KT0+e090PU90fHwhIWxlLmR5bmFtaWNDaGlsZHJlbjtmb3IodmFyIFhlPWxlLmNoaWxkcmVuLEI9WGUubGVuZ3RoLGo9ITEsb2U9MDtvZTxCO29lKyspe3ZhciB5ZT1PdD9YZVtvZV06WGVbb2VdPVNyKFhlW29lXSk7aWYoVGUpVGU9c2UoVGUseWUsTGUsRmUscnQsT3QpO2Vsc2V7aWYoeWUudHlwZT09PUx0JiYheWUuY2hpbGRyZW4pY29udGludWU7JG49ITAsanx8KE8oIkh5ZHJhdGlvbiBjaGlsZHJlbiBtaXNtYXRjaCBpbiA8Ii5jb25jYXQoRWUudGFnTmFtZS50b0xvd2VyQ2FzZSgpLCI+OiAiKSsic2VydmVyIHJlbmRlcmVkIGVsZW1lbnQgY29udGFpbnMgZmV3ZXIgY2hpbGQgbm9kZXMgdGhhbiBjbGllbnQgdmRvbS4iKSxqPSEwKSxmKG51bGwseWUsRWUsbnVsbCxMZSxGZSxWcihFZSkscnQpfX1yZXR1cm4gVGV9LERlPShUZSxsZSxFZSxMZSxGZSxydCk9Pnt2YXJ7c2xvdFNjb3BlSWRzOk90fT1sZTtPdCYmKEZlPUZlP0ZlLmNvbmNhdChPdCk6T3QpO3ZhciBYZT1OKFRlKSxCPU9lKHcoVGUpLGxlLFhlLEVlLExlLEZlLHJ0KTtyZXR1cm4gQiYmVmkoQikmJkIuZGF0YT09PSJdIj93KGxlLmFuY2hvcj1CKTooJG49ITAsRihsZS5hbmNob3I9cSgiXSIsWGUpLFhlLEIpLEIpfSxaZT0oVGUsbGUsRWUsTGUsRmUscnQpPT57aWYoJG49ITAsTyhgSHlkcmF0aW9uIG5vZGUgbWlzbWF0Y2g6Ci0gQ2xpZW50IHZub2RlOmAsbGUudHlwZSxgCi0gU2VydmVyIHJlbmRlcmVkIERPTTpgLFRlLFRlLm5vZGVUeXBlPT09Mz8iKHRleHQpIjpWaShUZSkmJlRlLmRhdGE9PT0iWyI/IihzdGFydCBvZiBmcmFnbWVudCkiOiIiKSxsZS5lbD1udWxsLHJ0KWZvcih2YXIgT3Q9ZnQoVGUpOzspe3ZhciBYZT13KFRlKTtpZihYZSYmWGUhPT1PdClWKFhlKTtlbHNlIGJyZWFrfXZhciBCPXcoVGUpLGo9TihUZSk7cmV0dXJuIFYoVGUpLGYobnVsbCxsZSxqLEIsRWUsTGUsVnIoaiksRmUpLEJ9LGZ0PVRlPT57Zm9yKHZhciBsZT0wO1RlOylpZihUZT13KFRlKSxUZSYmVmkoVGUpJiYoVGUuZGF0YT09PSJbIiYmbGUrKyxUZS5kYXRhPT09Il0iKSl7aWYobGU9PT0wKXJldHVybiB3KFRlKTtsZS0tfXJldHVybiBUZX07cmV0dXJuW19lLHNlXX12YXIgJGksV3I7ZnVuY3Rpb24gRXIoaSxhKXtpLmFwcENvbnRleHQuY29uZmlnLnBlcmZvcm1hbmNlJiZ3cygpJiZXci5tYXJrKCJ2dWUtIi5jb25jYXQoYSwiLSIpLmNvbmNhdChpLnVpZCkpLHZvKGksYSx3cygpP1dyLm5vdygpOkRhdGUubm93KCkpfWZ1bmN0aW9uIFVpKGksYSl7aWYoaS5hcHBDb250ZXh0LmNvbmZpZy5wZXJmb3JtYW5jZSYmd3MoKSl7dmFyIGY9InZ1ZS0iLmNvbmNhdChhLCItIikuY29uY2F0KGkudWlkKSxwPWYrIjplbmQiO1dyLm1hcmsocCksV3IubWVhc3VyZSgiPCIuY29uY2F0KGtzKGksaS50eXBlKSwiPiAiKS5jb25jYXQoYSksZixwKSxXci5jbGVhck1hcmtzKGYpLFdyLmNsZWFyTWFya3MocCl9bW8oaSxhLHdzKCk/V3Iubm93KCk6RGF0ZS5ub3coKSl9ZnVuY3Rpb24gd3MoKXtyZXR1cm4gJGkhPT12b2lkIDB8fCh0eXBlb2Ygd2luZG93IT0idW5kZWZpbmVkIiYmd2luZG93LnBlcmZvcm1hbmNlPygkaT0hMCxXcj13aW5kb3cucGVyZm9ybWFuY2UpOiRpPSExKSwkaX1mdW5jdGlvbiBwcigpe3ZhciBpPVtdO2lmKGkubGVuZ3RoKXt2YXIgYT1pLmxlbmd0aD4xO2NvbnNvbGUud2FybigiRmVhdHVyZSBmbGFnIi5jb25jYXQoYT8icyI6IiIsIiAiKS5jb25jYXQoaS5qb2luKCIsICIpLCIgIikuY29uY2F0KGE/ImFyZSI6ImlzIiwiIG5vdCBleHBsaWNpdGx5IGRlZmluZWQuIFlvdSBhcmUgcnVubmluZyB0aGUgZXNtLWJ1bmRsZXIgYnVpbGQgb2YgVnVlLCAiKStgd2hpY2ggZXhwZWN0cyB0aGVzZSBjb21waWxlLXRpbWUgZmVhdHVyZSBmbGFncyB0byBiZSBnbG9iYWxseSBpbmplY3RlZCB2aWEgdGhlIGJ1bmRsZXIgY29uZmlnIGluIG9yZGVyIHRvIGdldCBiZXR0ZXIgdHJlZS1zaGFraW5nIGluIHRoZSBwcm9kdWN0aW9uIGJ1bmRsZS4KCkZvciBtb3JlIGRldGFpbHMsIHNlZSBodHRwczovL2xpbmsudnVlanMub3JnL2ZlYXR1cmUtZmxhZ3MuYCl9fXZhciBQcj10bztmdW5jdGlvbiBGYShpKXtyZXR1cm4gQW8oaSl9ZnVuY3Rpb24gSGkoaSl7cmV0dXJuIEFvKGksem8pfWZ1bmN0aW9uIEFvKGksYSl7cHIoKTt2YXIgZj1kLmdldEdsb2JhbFRoaXMoKTtmLl9fVlVFX189ITAsWGkoZi5fX1ZVRV9ERVZUT09MU19HTE9CQUxfSE9PS19fLGYpO3ZhcntpbnNlcnQ6cCxyZW1vdmU6UyxwYXRjaFByb3A6dyxmb3JjZVBhdGNoUHJvcDpOLGNyZWF0ZUVsZW1lbnQ6VixjcmVhdGVUZXh0OkYsY3JlYXRlQ29tbWVudDpxLHNldFRleHQ6X2Usc2V0RWxlbWVudFRleHQ6c2UscGFyZW50Tm9kZTpuZSxuZXh0U2libGluZzpPZSxzZXRTY29wZUlkOkRlPWQuTk9PUCxpbnNlcnRTdGF0aWNDb250ZW50OlplfT1pLGZ0PWZ1bmN0aW9uKFcsWCx3ZSl7dmFyICRlPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTpudWxsLGplPWFyZ3VtZW50cy5sZW5ndGg+NCYmYXJndW1lbnRzWzRdIT09dm9pZCAwP2FyZ3VtZW50c1s0XTpudWxsLG50PWFyZ3VtZW50cy5sZW5ndGg+NSYmYXJndW1lbnRzWzVdIT09dm9pZCAwP2FyZ3VtZW50c1s1XTpudWxsLHZ0PWFyZ3VtZW50cy5sZW5ndGg+NiYmYXJndW1lbnRzWzZdIT09dm9pZCAwP2FyZ3VtZW50c1s2XTohMSxpdD1hcmd1bWVudHMubGVuZ3RoPjcmJmFyZ3VtZW50c1s3XSE9PXZvaWQgMD9hcmd1bWVudHNbN106bnVsbCxjdD1hcmd1bWVudHMubGVuZ3RoPjgmJmFyZ3VtZW50c1s4XSE9PXZvaWQgMD9hcmd1bWVudHNbOF06QnI/ITE6ISFYLmR5bmFtaWNDaGlsZHJlbjtpZihXIT09WCl7VyYmIXRpKFcsWCkmJigkZT1wbihXKSxxdChXLGplLG50LCEwKSxXPW51bGwpLFgucGF0Y2hGbGFnPT09LTImJihjdD0hMSxYLmR5bmFtaWNDaGlsZHJlbj1udWxsKTt2YXJ7dHlwZTpZZSxyZWY6VnQsc2hhcGVGbGFnOkR0fT1YO3N3aXRjaChZZSl7Y2FzZSBMdDpUZShXLFgsd2UsJGUpO2JyZWFrO2Nhc2UgZW46bGUoVyxYLHdlLCRlKTticmVhaztjYXNlIE5yOlc9PW51bGw/RWUoWCx3ZSwkZSx2dCk6TGUoVyxYLHdlLHZ0KTticmVhaztjYXNlIGt0OmdlKFcsWCx3ZSwkZSxqZSxudCx2dCxpdCxjdCk7YnJlYWs7ZGVmYXVsdDpEdCYxP090KFcsWCx3ZSwkZSxqZSxudCx2dCxpdCxjdCk6RHQmNj9RZShXLFgsd2UsJGUsamUsbnQsdnQsaXQsY3QpOkR0JjY0fHxEdCYxMjg/WWUucHJvY2VzcyhXLFgsd2UsJGUsamUsbnQsdnQsaXQsY3QsYmkpOk8oIkludmFsaWQgVk5vZGUgdHlwZToiLFllLCIoIi5jb25jYXQodHlwZW9mIFllLCIpIikpfVZ0IT1udWxsJiZqZSYmZWkoVnQsVyYmVy5yZWYsbnQsWHx8VywhWCl9fSxUZT0oVyxYLHdlLCRlKT0+e2lmKFc9PW51bGwpcChYLmVsPUYoWC5jaGlsZHJlbix3ZSksd2UsJGUpO2Vsc2V7dmFyIGplPVguZWw9Vy5lbDtYLmNoaWxkcmVuIT09Vy5jaGlsZHJlbiYmX2UoamUsWC5jaGlsZHJlbil9fSxsZT0oVyxYLHdlLCRlKT0+e1c9PW51bGw/cChYLmVsPXEoWC5jaGlsZHJlbnx8IiIsd2UpLHdlLCRlKTpYLmVsPVcuZWx9LEVlPShXLFgsd2UsJGUpPT57W1cuZWwsVy5hbmNob3JdPVplKFcuY2hpbGRyZW4sWCx3ZSwkZSxXLmVsLFcuYW5jaG9yKX0sTGU9KFcsWCx3ZSwkZSk9PntpZihYLmNoaWxkcmVuIT09Vy5jaGlsZHJlbil7dmFyIGplPU9lKFcuYW5jaG9yKTtydChXKSxbWC5lbCxYLmFuY2hvcl09WmUoWC5jaGlsZHJlbix3ZSxqZSwkZSl9ZWxzZSBYLmVsPVcuZWwsWC5hbmNob3I9Vy5hbmNob3J9LEZlPShXLFgsd2UpPT57Zm9yKHZhcntlbDokZSxhbmNob3I6amV9PVcsbnQ7JGUmJiRlIT09amU7KW50PU9lKCRlKSxwKCRlLFgsd2UpLCRlPW50O3AoamUsWCx3ZSl9LHJ0PVc9Pntmb3IodmFye2VsOlgsYW5jaG9yOndlfT1XLCRlO1gmJlghPT13ZTspJGU9T2UoWCksUyhYKSxYPSRlO1Mod2UpfSxPdD0oVyxYLHdlLCRlLGplLG50LHZ0LGl0LGN0KT0+e3Z0PXZ0fHxYLnR5cGU9PT0ic3ZnIixXPT1udWxsP1hlKFgsd2UsJGUsamUsbnQsdnQsaXQsY3QpOm9lKFcsWCxqZSxudCx2dCxpdCxjdCl9LFhlPShXLFgsd2UsJGUsamUsbnQsdnQsaXQpPT57dmFyIGN0LFllLHt0eXBlOlZ0LHByb3BzOkR0LHNoYXBlRmxhZzpVdCx0cmFuc2l0aW9uOl9uLGRpcnM6S3J9PVc7aWYoY3Q9Vy5lbD1WKFcudHlwZSxYKSxVdCY4P3NlKGN0LFcuY2hpbGRyZW4pOlV0JjE2JiZqKFcuY2hpbGRyZW4sY3QsbnVsbCwkZSxqZSxudCYmVnQhPT0iZm9yZWlnbk9iamVjdCIsdnQsaXQpLEtyJiZPaShXLG51bGwsJGUsImNyZWF0ZWQiKSxCKGN0LFcsVy5zY29wZUlkLHZ0LCRlKSxEdCl7Zm9yKHZhciB0ciBpbiBEdCl0ciE9PSJ2YWx1ZSImJiFkLmlzUmVzZXJ2ZWRQcm9wKHRyKSYmdyhjdCx0cixudWxsLER0W3RyXSxudCxXLmNoaWxkcmVuLCRlLGplLE9uKTsidmFsdWUiaW4gRHQmJncoY3QsInZhbHVlIixudWxsLER0LnZhbHVlKSwoWWU9RHQub25Wbm9kZUJlZm9yZU1vdW50KSYmWXIoWWUsJGUsVyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGN0LCJfX3Zub2RlIix7dmFsdWU6VyxlbnVtZXJhYmxlOiExfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGN0LCJfX3Z1ZVBhcmVudENvbXBvbmVudCIse3ZhbHVlOiRlLGVudW1lcmFibGU6ITF9KSxLciYmT2koVyxudWxsLCRlLCJiZWZvcmVNb3VudCIpO3ZhciB5aT0oIWplfHxqZSYmIWplLnBlbmRpbmdCcmFuY2gpJiZfbiYmIV9uLnBlcnNpc3RlZDt5aSYmX24uYmVmb3JlRW50ZXIoY3QpLHAoY3QsWCx3ZSksKChZZT1EdCYmRHQub25Wbm9kZU1vdW50ZWQpfHx5aXx8S3IpJiZQcigoKT0+e1llJiZZcihZZSwkZSxXKSx5aSYmX24uZW50ZXIoY3QpLEtyJiZPaShXLG51bGwsJGUsIm1vdW50ZWQiKX0samUpfSxCPShXLFgsd2UsJGUsamUpPT57aWYod2UmJkRlKFcsd2UpLCRlKWZvcih2YXIgbnQ9MDtudDwkZS5sZW5ndGg7bnQrKylEZShXLCRlW250XSk7aWYoamUpe3ZhciB2dD1qZS5zdWJUcmVlO2lmKHZ0LnBhdGNoRmxhZz4wJiZ2dC5wYXRjaEZsYWcmMjA0OCYmKHZ0PVZvKHZ0LmNoaWxkcmVuKXx8dnQpLFg9PT12dCl7dmFyIGl0PWplLnZub2RlO0IoVyxpdCxpdC5zY29wZUlkLGl0LnNsb3RTY29wZUlkcyxqZS5wYXJlbnQpfX19LGo9ZnVuY3Rpb24oVyxYLHdlLCRlLGplLG50LHZ0LGl0KXtmb3IodmFyIGN0PWFyZ3VtZW50cy5sZW5ndGg+OCYmYXJndW1lbnRzWzhdIT09dm9pZCAwP2FyZ3VtZW50c1s4XTowLFllPWN0O1llPFcubGVuZ3RoO1llKyspe3ZhciBWdD1XW1llXT1pdD9HcihXW1llXSk6U3IoV1tZZV0pO2Z0KG51bGwsVnQsWCx3ZSwkZSxqZSxudCx2dCxpdCl9fSxvZT0oVyxYLHdlLCRlLGplLG50LHZ0KT0+e3ZhciBpdD1YLmVsPVcuZWwse3BhdGNoRmxhZzpjdCxkeW5hbWljQ2hpbGRyZW46WWUsZGlyczpWdH09WDtjdHw9Vy5wYXRjaEZsYWcmMTY7dmFyIER0PVcucHJvcHN8fGQuRU1QVFlfT0JKLFV0PVgucHJvcHN8fGQuRU1QVFlfT0JKLF9uO3dlJiZqaSh3ZSwhMSksKF9uPVV0Lm9uVm5vZGVCZWZvcmVVcGRhdGUpJiZZcihfbix3ZSxYLFcpLFZ0JiZPaShYLFcsd2UsImJlZm9yZVVwZGF0ZSIpLHdlJiZqaSh3ZSwhMCksQnImJihjdD0wLHZ0PSExLFllPW51bGwpO3ZhciBLcj1qZSYmWC50eXBlIT09ImZvcmVpZ25PYmplY3QiO2lmKFllPyh5ZShXLmR5bmFtaWNDaGlsZHJlbixZZSxpdCx3ZSwkZSxLcixudCksd2UmJndlLnR5cGUuX19obXJJZCYmRWEoVyxYKSk6dnR8fHh0KFcsWCxpdCxudWxsLHdlLCRlLEtyLG50LCExKSxjdD4wKXtpZihjdCYxNilhZShpdCxYLER0LFV0LHdlLCRlLGplKTtlbHNlIGlmKGN0JjImJkR0LmNsYXNzIT09VXQuY2xhc3MmJncoaXQsImNsYXNzIixudWxsLFV0LmNsYXNzLGplKSxjdCY0JiZ3KGl0LCJzdHlsZSIsRHQuc3R5bGUsVXQuc3R5bGUsamUpLGN0JjgpZm9yKHZhciB0cj1YLmR5bmFtaWNQcm9wcyx5aT0wO3lpPHRyLmxlbmd0aDt5aSsrKXt2YXIgZmE9dHJbeWldLEJzPUR0W2ZhXSx0bD1VdFtmYV07KHRsIT09QnN8fGZhPT09InZhbHVlInx8TiYmTihpdCxmYSkpJiZ3KGl0LGZhLEJzLHRsLGplLFcuY2hpbGRyZW4sd2UsJGUsT24pfWN0JjEmJlcuY2hpbGRyZW4hPT1YLmNoaWxkcmVuJiZzZShpdCxYLmNoaWxkcmVuKX1lbHNlIXZ0JiZZZT09bnVsbCYmYWUoaXQsWCxEdCxVdCx3ZSwkZSxqZSk7KChfbj1VdC5vblZub2RlVXBkYXRlZCl8fFZ0KSYmUHIoKCk9PntfbiYmWXIoX24sd2UsWCxXKSxWdCYmT2koWCxXLHdlLCJ1cGRhdGVkIil9LCRlKX0seWU9KFcsWCx3ZSwkZSxqZSxudCx2dCk9Pntmb3IodmFyIGl0PTA7aXQ8WC5sZW5ndGg7aXQrKyl7dmFyIGN0PVdbaXRdLFllPVhbaXRdLFZ0PWN0LmVsJiYoY3QudHlwZT09PWt0fHwhdGkoY3QsWWUpfHxjdC5zaGFwZUZsYWcmKDZ8NjQpKT9uZShjdC5lbCk6d2U7ZnQoY3QsWWUsVnQsbnVsbCwkZSxqZSxudCx2dCwhMCl9fSxhZT0oVyxYLHdlLCRlLGplLG50LHZ0KT0+e2lmKHdlIT09JGUpe2lmKHdlIT09ZC5FTVBUWV9PQkopZm9yKHZhciBpdCBpbiB3ZSkhZC5pc1Jlc2VydmVkUHJvcChpdCkmJiEoaXQgaW4gJGUpJiZ3KFcsaXQsd2VbaXRdLG51bGwsdnQsWC5jaGlsZHJlbixqZSxudCxPbik7Zm9yKHZhciBjdCBpbiAkZSlpZighZC5pc1Jlc2VydmVkUHJvcChjdCkpe3ZhciBZZT0kZVtjdF0sVnQ9d2VbY3RdOyhZZSE9PVZ0JiZjdCE9PSJ2YWx1ZSJ8fE4mJk4oVyxjdCkpJiZ3KFcsY3QsVnQsWWUsdnQsWC5jaGlsZHJlbixqZSxudCxPbil9InZhbHVlImluICRlJiZ3KFcsInZhbHVlIix3ZS52YWx1ZSwkZS52YWx1ZSl9fSxnZT0oVyxYLHdlLCRlLGplLG50LHZ0LGl0LGN0KT0+e3ZhciBZZT1YLmVsPVc/Vy5lbDpGKCIiLHdlKSxWdD1YLmFuY2hvcj1XP1cuYW5jaG9yOkYoIiIsd2UpLHtwYXRjaEZsYWc6RHQsZHluYW1pY0NoaWxkcmVuOlV0LHNsb3RTY29wZUlkczpfbn09WDsoQnJ8fER0JjIwNDgpJiYoRHQ9MCxjdD0hMSxVdD1udWxsKSxfbiYmKGl0PWl0P2l0LmNvbmNhdChfbik6X24pLFc9PW51bGw/KHAoWWUsd2UsJGUpLHAoVnQsd2UsJGUpLGooWC5jaGlsZHJlbix3ZSxWdCxqZSxudCx2dCxpdCxjdCkpOkR0PjAmJkR0JjY0JiZVdCYmVy5keW5hbWljQ2hpbGRyZW4/KHllKFcuZHluYW1pY0NoaWxkcmVuLFV0LHdlLGplLG50LHZ0LGl0KSxqZSYmamUudHlwZS5fX2htcklkP0VhKFcsWCk6KFgua2V5IT1udWxsfHxqZSYmWD09PWplLnN1YlRyZWUpJiZFYShXLFgsITApKTp4dChXLFgsd2UsVnQsamUsbnQsdnQsaXQsY3QpfSxRZT0oVyxYLHdlLCRlLGplLG50LHZ0LGl0LGN0KT0+e1guc2xvdFNjb3BlSWRzPWl0LFc9PW51bGw/WC5zaGFwZUZsYWcmNTEyP2plLmN0eC5hY3RpdmF0ZShYLHdlLCRlLHZ0LGN0KTpHZShYLHdlLCRlLGplLG50LHZ0LGN0KTpldChXLFgsY3QpfSxHZT0oVyxYLHdlLCRlLGplLG50LHZ0KT0+e3ZhciBpdD1XLmNvbXBvbmVudD1CbihXLCRlLGplKTtpZihpdC50eXBlLl9faG1ySWQmJmdhKGl0KSxQdChXKSxFcihpdCwibW91bnQiKSxZKFcpJiYoaXQuY3R4LnJlbmRlcmVyPWJpKSxFcihpdCwiaW5pdCIpLFlvKGl0KSxVaShpdCwiaW5pdCIpLGl0LmFzeW5jRGVwKXtpZihqZSYmamUucmVnaXN0ZXJEZXAoaXQsVmUpLCFXLmVsKXt2YXIgY3Q9aXQuc3ViVHJlZT1Vbihlbik7bGUobnVsbCxjdCxYLHdlKX1yZXR1cm59aWYoVmUoaXQsVyxYLHdlLGplLG50LHZ0KSxpdC4kd3hzTW9kdWxlcyl7dmFyIFllPVIucmVzb2x2ZU93bmVyRWwoaXQsITApO1llLmxlbmd0aCYmWWUuZm9yRWFjaChWdD0+e1Z0LnNldEF0dHJpYnV0ZShSLkFUVFJfVl9PV05FUl9JRCxpdC51aWQpO3ZhcnskcmVuZGVyanNNb2R1bGVzOkR0fT1pdC50eXBlO0R0JiZWdC5zZXRBdHRyaWJ1dGUoUi5BVFRSX1ZfUkVOREVSSlMsRHQpfSl9UXQoKSxVaShpdCwibW91bnQiKX0sZXQ9KFcsWCx3ZSk9Pnt2YXIgJGU9WC5jb21wb25lbnQ9Vy5jb21wb25lbnQ7aWYoeW8oVyxYLHdlKSlpZigkZS5hc3luY0RlcCYmISRlLmFzeW5jUmVzb2x2ZWQpe1B0KFgpLE10KCRlLFgsd2UpLFF0KCk7cmV0dXJufWVsc2UgJGUubmV4dD1YLHhpKCRlLnVwZGF0ZSksJGUudXBkYXRlKCk7ZWxzZSBYLmVsPVcuZWwsJGUudm5vZGU9WH0sVmU9KFcsWCx3ZSwkZSxqZSxudCx2dCk9Pnt2YXIgaXQ9KCk9PntpZihXLmlzTW91bnRlZCl7dmFye25leHQ6Q3IsYnU6a28sdTpvcyxwYXJlbnQ6Um8sdm5vZGU6YXN9PVcsbmw9Q3Isc3M7UHQoQ3J8fFcudm5vZGUpLGppKFcsITEpLENyPyhDci5lbD1hcy5lbCxNdChXLENyLHZ0KSk6Q3I9YXMsa28mJmQuaW52b2tlQXJyYXlGbnMoa28pLChzcz1Dci5wcm9wcyYmQ3IucHJvcHMub25Wbm9kZUJlZm9yZVVwZGF0ZSkmJllyKHNzLFJvLENyLGFzKSxqaShXLCEwKSxFcihXLCJyZW5kZXIiKTt2YXIgTXM9Ym8oVyk7VWkoVywicmVuZGVyIik7dmFyIEdhPVcuc3ViVHJlZTtXLnN1YlRyZWU9TXMsRXIoVywicGF0Y2giKSxmdChHYSxNcyxuZShHYS5lbCkscG4oR2EpLFcsamUsbnQpLFVpKFcsInBhdGNoIiksQ3IuZWw9TXMuZWwsbmw9PT1udWxsJiZFaShXLE1zLmVsKSxvcyYmUHIob3MsamUpLChzcz1Dci5wcm9wcyYmQ3IucHJvcHMub25Wbm9kZVVwZGF0ZWQpJiZQcigoKT0+WXIoc3MsUm8sQ3IsYXMpLGplKSxhaShXKSxRdCgpfWVsc2V7dmFyIFZ0LHtlbDpEdCxwcm9wczpVdH09WCx7Ym06X24sbTpLcixwYXJlbnQ6dHJ9PVcseWk9aGUoWCk7aWYoamkoVywhMSksX24mJmQuaW52b2tlQXJyYXlGbnMoX24pLCF5aSYmKFZ0PVV0JiZVdC5vblZub2RlQmVmb3JlTW91bnQpJiZZcihWdCx0cixYKSxqaShXLCEwKSxEdCYmdWEpe3ZhciBmYT0oKT0+e0VyKFcsInJlbmRlciIpLFcuc3ViVHJlZT1ibyhXKSxVaShXLCJyZW5kZXIiKSxFcihXLCJoeWRyYXRlIiksdWEoRHQsVy5zdWJUcmVlLFcsamUsbnVsbCksVWkoVywiaHlkcmF0ZSIpfTt5aT9YLnR5cGUuX19hc3luY0xvYWRlcigpLnRoZW4oKCk9PiFXLmlzVW5tb3VudGVkJiZmYSgpKTpmYSgpfWVsc2V7RXIoVywicmVuZGVyIik7dmFyIEJzPVcuc3ViVHJlZT1ibyhXKTtVaShXLCJyZW5kZXIiKSxFcihXLCJwYXRjaCIpLGZ0KG51bGwsQnMsd2UsJGUsVyxqZSxudCksVWkoVywicGF0Y2giKSxYLmVsPUJzLmVsfWlmKEtyJiZQcihLcixqZSksIXlpJiYoVnQ9VXQmJlV0Lm9uVm5vZGVNb3VudGVkKSl7dmFyIHRsPVg7UHIoKCk9PllyKFZ0LHRyLHRsKSxqZSl9KFguc2hhcGVGbGFnJjI1Nnx8dHImJmhlKHRyLnZub2RlKSYmdHIudm5vZGUuc2hhcGVGbGFnJjI1NikmJlcuYSYmUHIoVy5hLGplKSxXLmlzTW91bnRlZD0hMCxvaShXKSxYPXdlPSRlPW51bGx9fSxjdD1XLmVmZmVjdD1uZXcgbS5SZWFjdGl2ZUVmZmVjdChpdCwoKT0+Rm4oWWUpLFcuc2NvcGUpLFllPVcudXBkYXRlPSgpPT5jdC5ydW4oKTtZZS5pZD1XLnVpZCxqaShXLCEwKSxjdC5vblRyYWNrPVcucnRjP1Z0PT5kLmludm9rZUFycmF5Rm5zKFcucnRjLFZ0KTp2b2lkIDAsY3Qub25UcmlnZ2VyPVcucnRnP1Z0PT5kLmludm9rZUFycmF5Rm5zKFcucnRnLFZ0KTp2b2lkIDAsWWUub3duZXJJbnN0YW5jZT1XLFllKCl9LE10PShXLFgsd2UpPT57WC5jb21wb25lbnQ9Vzt2YXIgJGU9Vy52bm9kZS5wcm9wcztXLnZub2RlPVgsVy5uZXh0PW51bGwsV3QoVyxYLnByb3BzLCRlLHdlKSxIbyhXLFguY2hpbGRyZW4sd2UpLG0ucGF1c2VUcmFja2luZygpLGpuKCksbS5yZXNldFRyYWNraW5nKCl9LHh0PWZ1bmN0aW9uKFcsWCx3ZSwkZSxqZSxudCx2dCxpdCl7dmFyIGN0PWFyZ3VtZW50cy5sZW5ndGg+OCYmYXJndW1lbnRzWzhdIT09dm9pZCAwP2FyZ3VtZW50c1s4XTohMSxZZT1XJiZXLmNoaWxkcmVuLFZ0PVc/Vy5zaGFwZUZsYWc6MCxEdD1YLmNoaWxkcmVuLHtwYXRjaEZsYWc6VXQsc2hhcGVGbGFnOl9ufT1YO2lmKFV0PjApe2lmKFV0JjEyOCl7dW4oWWUsRHQsd2UsJGUsamUsbnQsdnQsaXQsY3QpO3JldHVybn1lbHNlIGlmKFV0JjI1Nil7RnQoWWUsRHQsd2UsJGUsamUsbnQsdnQsaXQsY3QpO3JldHVybn19X24mOD8oVnQmMTYmJk9uKFllLGplLG50KSxEdCE9PVllJiZzZSh3ZSxEdCkpOlZ0JjE2P19uJjE2P3VuKFllLER0LHdlLCRlLGplLG50LHZ0LGl0LGN0KTpPbihZZSxqZSxudCwhMCk6KFZ0JjgmJnNlKHdlLCIiKSxfbiYxNiYmaihEdCx3ZSwkZSxqZSxudCx2dCxpdCxjdCkpfSxGdD0oVyxYLHdlLCRlLGplLG50LHZ0LGl0LGN0KT0+e1c9V3x8ZC5FTVBUWV9BUlIsWD1YfHxkLkVNUFRZX0FSUjt2YXIgWWU9Vy5sZW5ndGgsVnQ9WC5sZW5ndGgsRHQ9TWF0aC5taW4oWWUsVnQpLFV0O2ZvcihVdD0wO1V0PER0O1V0Kyspe3ZhciBfbj1YW1V0XT1jdD9HcihYW1V0XSk6U3IoWFtVdF0pO2Z0KFdbVXRdLF9uLHdlLG51bGwsamUsbnQsdnQsaXQsY3QpfVllPlZ0P09uKFcsamUsbnQsITAsITEsRHQpOmooWCx3ZSwkZSxqZSxudCx2dCxpdCxjdCxEdCl9LHVuPShXLFgsd2UsJGUsamUsbnQsdnQsaXQsY3QpPT57Zm9yKHZhciBZZT0wLFZ0PVgubGVuZ3RoLER0PVcubGVuZ3RoLTEsVXQ9VnQtMTtZZTw9RHQmJlllPD1VdDspe3ZhciBfbj1XW1llXSxLcj1YW1llXT1jdD9HcihYW1llXSk6U3IoWFtZZV0pO2lmKHRpKF9uLEtyKSlmdChfbixLcix3ZSxudWxsLGplLG50LHZ0LGl0LGN0KTtlbHNlIGJyZWFrO1llKyt9Zm9yKDtZZTw9RHQmJlllPD1VdDspe3ZhciB0cj1XW0R0XSx5aT1YW1V0XT1jdD9HcihYW1V0XSk6U3IoWFtVdF0pO2lmKHRpKHRyLHlpKSlmdCh0cix5aSx3ZSxudWxsLGplLG50LHZ0LGl0LGN0KTtlbHNlIGJyZWFrO0R0LS0sVXQtLX1pZihZZT5EdCl7aWYoWWU8PVV0KWZvcih2YXIgZmE9VXQrMSxCcz1mYTxWdD9YW2ZhXS5lbDokZTtZZTw9VXQ7KWZ0KG51bGwsWFtZZV09Y3Q/R3IoWFtZZV0pOlNyKFhbWWVdKSx3ZSxCcyxqZSxudCx2dCxpdCxjdCksWWUrK31lbHNlIGlmKFllPlV0KWZvcig7WWU8PUR0OylxdChXW1llXSxqZSxudCwhMCksWWUrKztlbHNle3ZhciB0bD1ZZSxDcj1ZZSxrbz1uZXcgTWFwO2ZvcihZZT1DcjtZZTw9VXQ7WWUrKyl7dmFyIG9zPVhbWWVdPWN0P0dyKFhbWWVdKTpTcihYW1llXSk7b3Mua2V5IT1udWxsJiYoa28uaGFzKG9zLmtleSkmJk8oIkR1cGxpY2F0ZSBrZXlzIGZvdW5kIGR1cmluZyB1cGRhdGU6IixKU09OLnN0cmluZ2lmeShvcy5rZXkpLCJNYWtlIHN1cmUga2V5cyBhcmUgdW5pcXVlLiIpLGtvLnNldChvcy5rZXksWWUpKX12YXIgUm8sYXM9MCxubD1VdC1DcisxLHNzPSExLE1zPTAsR2E9bmV3IEFycmF5KG5sKTtmb3IoWWU9MDtZZTxubDtZZSsrKUdhW1llXT0wO2ZvcihZZT10bDtZZTw9RHQ7WWUrKyl7dmFyIGxzPVdbWWVdO2lmKGFzPj1ubCl7cXQobHMsamUsbnQsITApO2NvbnRpbnVlfXZhciBZYT12b2lkIDA7aWYobHMua2V5IT1udWxsKVlhPWtvLmdldChscy5rZXkpO2Vsc2UgZm9yKFJvPUNyO1JvPD1VdDtSbysrKWlmKEdhW1JvLUNyXT09PTAmJnRpKGxzLFhbUm9dKSl7WWE9Um87YnJlYWt9WWE9PT12b2lkIDA/cXQobHMsamUsbnQsITApOihHYVtZYS1Dcl09WWUrMSxZYT49TXM/TXM9WWE6c3M9ITAsZnQobHMsWFtZYV0sd2UsbnVsbCxqZSxudCx2dCxpdCxjdCksYXMrKyl9dmFyIGV1PXNzP2lhKEdhKTpkLkVNUFRZX0FSUjtmb3IoUm89ZXUubGVuZ3RoLTEsWWU9bmwtMTtZZT49MDtZZS0tKXt2YXIgQ2M9Q3IrWWUsdHU9WFtDY10sbnU9Q2MrMTxWdD9YW0NjKzFdLmVsOiRlO0dhW1llXT09PTA/ZnQobnVsbCx0dSx3ZSxudSxqZSxudCx2dCxpdCxjdCk6c3MmJihSbzwwfHxZZSE9PWV1W1JvXT9Zbih0dSx3ZSxudSwyKTpSby0tKX19fSxZbj1mdW5jdGlvbihXLFgsd2UsJGUpe3ZhciBqZT1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXZvaWQgMD9hcmd1bWVudHNbNF06bnVsbCx7ZWw6bnQsdHlwZTp2dCx0cmFuc2l0aW9uOml0LGNoaWxkcmVuOmN0LHNoYXBlRmxhZzpZZX09VztpZihZZSY2KXtZbihXLmNvbXBvbmVudC5zdWJUcmVlLFgsd2UsJGUpO3JldHVybn1pZihZZSYxMjgpe1cuc3VzcGVuc2UubW92ZShYLHdlLCRlKTtyZXR1cm59aWYoWWUmNjQpe3Z0Lm1vdmUoVyxYLHdlLGJpKTtyZXR1cm59aWYodnQ9PT1rdCl7cChudCxYLHdlKTtmb3IodmFyIFZ0PTA7VnQ8Y3QubGVuZ3RoO1Z0KyspWW4oY3RbVnRdLFgsd2UsJGUpO3AoVy5hbmNob3IsWCx3ZSk7cmV0dXJufWlmKHZ0PT09TnIpe0ZlKFcsWCx3ZSk7cmV0dXJufXZhciBEdD0kZSE9PTImJlllJjEmJml0O2lmKER0KWlmKCRlPT09MClpdC5iZWZvcmVFbnRlcihudCkscChudCxYLHdlKSxQcigoKT0+aXQuZW50ZXIobnQpLGplKTtlbHNle3ZhcntsZWF2ZTpVdCxkZWxheUxlYXZlOl9uLGFmdGVyTGVhdmU6S3J9PWl0LHRyPSgpPT5wKG50LFgsd2UpLHlpPSgpPT57VXQobnQsKCk9Pnt0cigpLEtyJiZLcigpfSl9O19uP19uKG50LHRyLHlpKTp5aSgpfWVsc2UgcChudCxYLHdlKX0scXQ9ZnVuY3Rpb24oVyxYLHdlKXt2YXIgJGU9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOiExLGplPWFyZ3VtZW50cy5sZW5ndGg+NCYmYXJndW1lbnRzWzRdIT09dm9pZCAwP2FyZ3VtZW50c1s0XTohMSx7dHlwZTpudCxwcm9wczp2dCxyZWY6aXQsY2hpbGRyZW46Y3QsZHluYW1pY0NoaWxkcmVuOlllLHNoYXBlRmxhZzpWdCxwYXRjaEZsYWc6RHQsZGlyczpVdH09VztpZihpdCE9bnVsbCYmZWkoaXQsbnVsbCx3ZSxXLCEwKSxWdCYyNTYpe1guY3R4LmRlYWN0aXZhdGUoVyk7cmV0dXJufXZhciBfbj1WdCYxJiZVdCxLcj0haGUoVyksdHI7aWYoS3ImJih0cj12dCYmdnQub25Wbm9kZUJlZm9yZVVubW91bnQpJiZZcih0cixYLFcpLFZ0JjYpYW4oVy5jb21wb25lbnQsd2UsJGUpO2Vsc2V7aWYoVnQmMTI4KXtXLnN1c3BlbnNlLnVubW91bnQod2UsJGUpO3JldHVybn1fbiYmT2koVyxudWxsLFgsImJlZm9yZVVubW91bnQiKSxWdCY2ND9XLnR5cGUucmVtb3ZlKFcsWCx3ZSxqZSxiaSwkZSk6WWUmJihudCE9PWt0fHxEdD4wJiZEdCY2NCk/T24oWWUsWCx3ZSwhMSwhMCk6KG50PT09a3QmJkR0JigxMjh8MjU2KXx8IWplJiZWdCYxNikmJk9uKGN0LFgsd2UpLCRlJiZ2bihXKX0oS3ImJih0cj12dCYmdnQub25Wbm9kZVVubW91bnRlZCl8fF9uKSYmUHIoKCk9Pnt0ciYmWXIodHIsWCxXKSxfbiYmT2koVyxudWxsLFgsInVubW91bnRlZCIpfSx3ZSl9LHZuPVc9Pnt2YXJ7dHlwZTpYLGVsOndlLGFuY2hvcjokZSx0cmFuc2l0aW9uOmplfT1XO2lmKFg9PT1rdCl7Vy5wYXRjaEZsYWc+MCYmVy5wYXRjaEZsYWcmMjA0OCYmamUmJiFqZS5wZXJzaXN0ZWQ/Vy5jaGlsZHJlbi5mb3JFYWNoKFllPT57WWUudHlwZT09PWVuP1MoWWUuZWwpOnZuKFllKX0pOl9pKHdlLCRlKTtyZXR1cm59aWYoWD09PU5yKXtydChXKTtyZXR1cm59dmFyIG50PSgpPT57Uyh3ZSksamUmJiFqZS5wZXJzaXN0ZWQmJmplLmFmdGVyTGVhdmUmJmplLmFmdGVyTGVhdmUoKX07aWYoVy5zaGFwZUZsYWcmMSYmamUmJiFqZS5wZXJzaXN0ZWQpe3ZhcntsZWF2ZTp2dCxkZWxheUxlYXZlOml0fT1qZSxjdD0oKT0+dnQod2UsbnQpO2l0P2l0KFcuZWwsbnQsY3QpOmN0KCl9ZWxzZSBudCgpfSxfaT0oVyxYKT0+e2Zvcih2YXIgd2U7VyE9PVg7KXdlPU9lKFcpLFMoVyksVz13ZTtTKFgpfSxhbj0oVyxYLHdlKT0+e1cudHlwZS5fX2htcklkJiZabyhXKTt2YXJ7YnVtOiRlLHNjb3BlOmplLHVwZGF0ZTpudCxzdWJUcmVlOnZ0LHVtOml0fT1XOyRlJiZkLmludm9rZUFycmF5Rm5zKCRlKSxqZS5zdG9wKCksbnQmJihudC5hY3RpdmU9ITEscXQodnQsVyxYLHdlKSksaXQmJlByKGl0LFgpLFByKCgpPT57Vy5pc1VubW91bnRlZD0hMH0sWCksWCYmWC5wZW5kaW5nQnJhbmNoJiYhWC5pc1VubW91bnRlZCYmVy5hc3luY0RlcCYmIVcuYXN5bmNSZXNvbHZlZCYmVy5zdXNwZW5zZUlkPT09WC5wZW5kaW5nSWQmJihYLmRlcHMtLSxYLmRlcHM9PT0wJiZYLnJlc29sdmUoKSksVHIoVyl9LE9uPWZ1bmN0aW9uKFcsWCx3ZSl7Zm9yKHZhciAkZT1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106ITEsamU9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOiExLG50PWFyZ3VtZW50cy5sZW5ndGg+NSYmYXJndW1lbnRzWzVdIT09dm9pZCAwP2FyZ3VtZW50c1s1XTowLHZ0PW50O3Z0PFcubGVuZ3RoO3Z0KyspcXQoV1t2dF0sWCx3ZSwkZSxqZSl9LHBuPVc9Plcuc2hhcGVGbGFnJjY/cG4oVy5jb21wb25lbnQuc3ViVHJlZSk6Vy5zaGFwZUZsYWcmMTI4P1cuc3VzcGVuc2UubmV4dCgpOk9lKFcuYW5jaG9yfHxXLmVsKSxxaT0oVyxYLHdlKT0+e1c9PW51bGw/WC5fdm5vZGUmJnF0KFguX3Zub2RlLG51bGwsbnVsbCwhMCk6ZnQoWC5fdm5vZGV8fG51bGwsVyxYLG51bGwsbnVsbCxudWxsLHdlKSxqbigpLGpyKCksWC5fdm5vZGU9V30sYmk9e3A6ZnQsdW06cXQsbTpZbixyOnZuLG10OkdlLG1jOmoscGM6eHQscGJjOnllLG46cG4sbzppfSxxcix1YTtyZXR1cm4gYSYmKFtxcix1YV09YShiaSkpLHtyZW5kZXI6cWksaHlkcmF0ZTpxcixjcmVhdGVBcHA6am8ocWkscXIpfX1mdW5jdGlvbiBqaShpLGEpe3ZhcntlZmZlY3Q6Zix1cGRhdGU6cH09aTtmLmFsbG93UmVjdXJzZT1wLmFsbG93UmVjdXJzZT1hfWZ1bmN0aW9uIEVhKGksYSl7dmFyIGY9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLHA9aS5jaGlsZHJlbixTPWEuY2hpbGRyZW47aWYoZC5pc0FycmF5KHApJiZkLmlzQXJyYXkoUykpZm9yKHZhciB3PTA7dzxwLmxlbmd0aDt3Kyspe3ZhciBOPXBbd10sVj1TW3ddO1Yuc2hhcGVGbGFnJjEmJiFWLmR5bmFtaWNDaGlsZHJlbiYmKChWLnBhdGNoRmxhZzw9MHx8Vi5wYXRjaEZsYWc9PT0zMikmJihWPVNbd109R3IoU1t3XSksVi5lbD1OLmVsKSxmfHxFYShOLFYpKSxWLnR5cGU9PT1MdCYmKFYuZWw9Ti5lbCksVi50eXBlPT09ZW4mJiFWLmVsJiYoVi5lbD1OLmVsKX19ZnVuY3Rpb24gaWEoaSl7dmFyIGE9aS5zbGljZSgpLGY9WzBdLHAsUyx3LE4sVixGPWkubGVuZ3RoO2ZvcihwPTA7cDxGO3ArKyl7dmFyIHE9aVtwXTtpZihxIT09MCl7aWYoUz1mW2YubGVuZ3RoLTFdLGlbU108cSl7YVtwXT1TLGYucHVzaChwKTtjb250aW51ZX1mb3Iodz0wLE49Zi5sZW5ndGgtMTt3PE47KVY9dytOPj4xLGlbZltWXV08cT93PVYrMTpOPVY7cTxpW2Zbd11dJiYodz4wJiYoYVtwXT1mW3ctMV0pLGZbd109cCl9fWZvcih3PWYubGVuZ3RoLE49Zlt3LTFdO3ctLSA+MDspZlt3XT1OLE49YVtOXTtyZXR1cm4gZn12YXIgY289aT0+aS5fX2lzVGVsZXBvcnQsVG89aT0+aSYmKGkuZGlzYWJsZWR8fGkuZGlzYWJsZWQ9PT0iIiksV289aT0+dHlwZW9mIFNWR0VsZW1lbnQhPSJ1bmRlZmluZWQiJiZpIGluc3RhbmNlb2YgU1ZHRWxlbWVudCxTcz0oaSxhKT0+e3ZhciBmPWkmJmkudG87aWYoZC5pc1N0cmluZyhmKSlpZihhKXt2YXIgcD1hKGYpO3JldHVybiBwfHxPKCdGYWlsZWQgdG8gbG9jYXRlIFRlbGVwb3J0IHRhcmdldCB3aXRoIHNlbGVjdG9yICInLmNvbmNhdChmLCciLiAnKSsiTm90ZSB0aGUgdGFyZ2V0IGVsZW1lbnQgbXVzdCBleGlzdCBiZWZvcmUgdGhlIGNvbXBvbmVudCBpcyBtb3VudGVkIC0gaS5lLiB0aGUgdGFyZ2V0IGNhbm5vdCBiZSByZW5kZXJlZCBieSB0aGUgY29tcG9uZW50IGl0c2VsZiwgYW5kIGlkZWFsbHkgc2hvdWxkIGJlIG91dHNpZGUgb2YgdGhlIGVudGlyZSBWdWUgY29tcG9uZW50IHRyZWUuIikscH1lbHNlIHJldHVybiBPKCJDdXJyZW50IHJlbmRlcmVyIGRvZXMgbm90IHN1cHBvcnQgc3RyaW5nIHRhcmdldCBmb3IgVGVsZXBvcnRzLiAobWlzc2luZyBxdWVyeVNlbGVjdG9yIHJlbmRlcmVyIG9wdGlvbikiKSxudWxsO2Vsc2UgcmV0dXJuIWYmJiFUbyhpKSYmTygiSW52YWxpZCBUZWxlcG9ydCB0YXJnZXQ6ICIuY29uY2F0KGYpKSxmfSxaYT17X19pc1RlbGVwb3J0OiEwLHByb2Nlc3MoaSxhLGYscCxTLHcsTixWLEYscSl7dmFye21jOl9lLHBjOnNlLHBiYzpuZSxvOntpbnNlcnQ6T2UscXVlcnlTZWxlY3RvcjpEZSxjcmVhdGVUZXh0OlplLGNyZWF0ZUNvbW1lbnQ6ZnR9fT1xLFRlPVRvKGEucHJvcHMpLHtzaGFwZUZsYWc6bGUsY2hpbGRyZW46RWUsZHluYW1pY0NoaWxkcmVuOkxlfT1hO2lmKEJyJiYoRj0hMSxMZT1udWxsKSxpPT1udWxsKXt2YXIgRmU9YS5lbD1mdCgidGVsZXBvcnQgc3RhcnQiLGYpLHJ0PWEuYW5jaG9yPWZ0KCJ0ZWxlcG9ydCBlbmQiLGYpO09lKEZlLGYscCksT2UocnQsZixwKTt2YXIgT3Q9YS50YXJnZXQ9U3MoYS5wcm9wcyxEZSksWGU9YS50YXJnZXRBbmNob3I9WmUoIiIsZik7T3Q/KE9lKFhlLE90KSxOPU58fFdvKE90KSk6VGV8fE8oIkludmFsaWQgVGVsZXBvcnQgdGFyZ2V0IG9uIG1vdW50OiIsT3QsIigiLmNvbmNhdCh0eXBlb2YgT3QsIikiKSk7dmFyIEI9KGV0LFZlKT0+e2xlJjE2JiZfZShFZSxldCxWZSxTLHcsTixWLEYpfTtUZT9CKGYscnQpOk90JiZCKE90LFhlKX1lbHNle2EuZWw9aS5lbDt2YXIgaj1hLmFuY2hvcj1pLmFuY2hvcixvZT1hLnRhcmdldD1pLnRhcmdldCx5ZT1hLnRhcmdldEFuY2hvcj1pLnRhcmdldEFuY2hvcixhZT1UbyhpLnByb3BzKSxnZT1hZT9mOm9lLFFlPWFlP2o6eWU7aWYoTj1OfHxXbyhvZSksTGU/KG5lKGkuZHluYW1pY0NoaWxkcmVuLExlLGdlLFMsdyxOLFYpLEVhKGksYSwhMCkpOkZ8fHNlKGksYSxnZSxRZSxTLHcsTixWLCExKSxUZSlhZXx8enMoYSxmLGoscSwxKTtlbHNlIGlmKChhLnByb3BzJiZhLnByb3BzLnRvKSE9PShpLnByb3BzJiZpLnByb3BzLnRvKSl7dmFyIEdlPWEudGFyZ2V0PVNzKGEucHJvcHMsRGUpO0dlP3pzKGEsR2UsbnVsbCxxLDApOk8oIkludmFsaWQgVGVsZXBvcnQgdGFyZ2V0IG9uIHVwZGF0ZToiLG9lLCIoIi5jb25jYXQodHlwZW9mIG9lLCIpIikpfWVsc2UgYWUmJnpzKGEsb2UseWUscSwxKX15dChhKX0scmVtb3ZlKGksYSxmLHAsUyx3KXt2YXJ7dW06TixvOntyZW1vdmU6Vn19PVMse3NoYXBlRmxhZzpGLGNoaWxkcmVuOnEsYW5jaG9yOl9lLHRhcmdldEFuY2hvcjpzZSx0YXJnZXQ6bmUscHJvcHM6T2V9PWk7aWYobmUmJlYoc2UpLCh3fHwhVG8oT2UpKSYmKFYoX2UpLEYmMTYpKWZvcih2YXIgRGU9MDtEZTxxLmxlbmd0aDtEZSsrKXt2YXIgWmU9cVtEZV07TihaZSxhLGYsITAsISFaZS5keW5hbWljQ2hpbGRyZW4pfX0sbW92ZTp6cyxoeWRyYXRlOnplfTtmdW5jdGlvbiB6cyhpLGEsZixwKXt2YXJ7bzp7aW5zZXJ0OlN9LG06d309cCxOPWFyZ3VtZW50cy5sZW5ndGg+NCYmYXJndW1lbnRzWzRdIT09dm9pZCAwP2FyZ3VtZW50c1s0XToyO049PT0wJiZTKGkudGFyZ2V0QW5jaG9yLGEsZik7dmFye2VsOlYsYW5jaG9yOkYsc2hhcGVGbGFnOnEsY2hpbGRyZW46X2UscHJvcHM6c2V9PWksbmU9Tj09PTI7aWYobmUmJlMoVixhLGYpLCghbmV8fFRvKHNlKSkmJnEmMTYpZm9yKHZhciBPZT0wO09lPF9lLmxlbmd0aDtPZSsrKXcoX2VbT2VdLGEsZiwyKTtuZSYmUyhGLGEsZil9ZnVuY3Rpb24gemUoaSxhLGYscCxTLHcsTixWKXt2YXJ7bzp7bmV4dFNpYmxpbmc6RixwYXJlbnROb2RlOnEscXVlcnlTZWxlY3RvcjpfZX19PU4sc2U9YS50YXJnZXQ9U3MoYS5wcm9wcyxfZSk7aWYoc2Upe3ZhciBuZT1zZS5fbHBhfHxzZS5maXJzdENoaWxkO2lmKGEuc2hhcGVGbGFnJjE2KWlmKFRvKGEucHJvcHMpKWEuYW5jaG9yPVYoRihpKSxhLHEoaSksZixwLFMsdyksYS50YXJnZXRBbmNob3I9bmU7ZWxzZXthLmFuY2hvcj1GKGkpO2Zvcih2YXIgT2U9bmU7T2U7KWlmKE9lPUYoT2UpLE9lJiZPZS5ub2RlVHlwZT09PTgmJk9lLmRhdGE9PT0idGVsZXBvcnQgYW5jaG9yIil7YS50YXJnZXRBbmNob3I9T2Usc2UuX2xwYT1hLnRhcmdldEFuY2hvciYmRihhLnRhcmdldEFuY2hvcik7YnJlYWt9VihuZSxhLHNlLGYscCxTLHcpfXl0KGEpfXJldHVybiBhLmFuY2hvciYmRihhLmFuY2hvcil9dmFyIFR0PVphO2Z1bmN0aW9uIHl0KGkpe3ZhciBhPWkuY3R4O2lmKGEmJmEudXQpe2Zvcih2YXIgZj1pLmNoaWxkcmVuWzBdLmVsO2YhPT1pLnRhcmdldEFuY2hvcjspZi5ub2RlVHlwZT09PTEmJmYuc2V0QXR0cmlidXRlKCJkYXRhLXYtb3duZXIiLGEudWlkKSxmPWYubmV4dFNpYmxpbmc7YS51dCgpfX12YXIga3Q9U3ltYm9sKCJGcmFnbWVudCIpLEx0PVN5bWJvbCgiVGV4dCIpLGVuPVN5bWJvbCgiQ29tbWVudCIpLE5yPVN5bWJvbCgiU3RhdGljIiksV249W10sZ3I9bnVsbDtmdW5jdGlvbiBYYSgpe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dm9pZCAwP2FyZ3VtZW50c1swXTohMTtXbi5wdXNoKGdyPWk/bnVsbDpbXSl9ZnVuY3Rpb24gQWkoKXtXbi5wb3AoKSxncj1XbltXbi5sZW5ndGgtMV18fG51bGx9dmFyIHdhPTE7ZnVuY3Rpb24gV3MoaSl7d2ErPWl9ZnVuY3Rpb24gYWMoaSl7cmV0dXJuIGkuZHluYW1pY0NoaWxkcmVuPXdhPjA/Z3J8fGQuRU1QVFlfQVJSOm51bGwsQWkoKSx3YT4wJiZnciYmZ3IucHVzaChpKSxpfWZ1bmN0aW9uIFJsKGksYSxmLHAsUyx3KXtyZXR1cm4gYWMoR24oaSxhLGYscCxTLHcsITApKX1mdW5jdGlvbiBvYShpLGEsZixwLFMpe3JldHVybiBhYyhVbihpLGEsZixwLFMsITApKX1mdW5jdGlvbiB3cihpKXtyZXR1cm4gaT9pLl9fdl9pc1ZOb2RlPT09ITA6ITF9ZnVuY3Rpb24gdGkoaSxhKXtyZXR1cm4gYS5zaGFwZUZsYWcmNiYmTXIuaGFzKGEudHlwZSk/KGkuc2hhcGVGbGFnJj1+MjU2LGEuc2hhcGVGbGFnJj1+NTEyLCExKTppLnR5cGU9PT1hLnR5cGUmJmkua2V5PT09YS5rZXl9dmFyIFFhO2Z1bmN0aW9uIENzKGkpe1FhPWl9dmFyIE9zPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPWFyZ3VtZW50cy5sZW5ndGgsYT1uZXcgQXJyYXkoaSksZj0wO2Y8aTtmKyspYVtmXT1hcmd1bWVudHNbZl07cmV0dXJuIHhsKC4uLlFhP1FhKGEsRW4pOmEpfSxBcz0iX192SW50ZXJuYWwiLEdvPWk9Pnt2YXJ7a2V5OmF9PWk7cmV0dXJuIGEhPW51bGw/YTpudWxsfSxWYT1pPT57dmFye3JlZjphLHJlZl9rZXk6ZixyZWZfZm9yOnB9PWk7cmV0dXJuIGEhPW51bGw/ZC5pc1N0cmluZyhhKXx8bS5pc1JlZihhKXx8ZC5pc0Z1bmN0aW9uKGEpP3tpOkVuLHI6YSxrOmYsZjohIXB9OmE6bnVsbH07ZnVuY3Rpb24gR24oaSl7dmFyIGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOm51bGwsZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06bnVsbCxwPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTowLFM9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOm51bGwsdz1hcmd1bWVudHMubGVuZ3RoPjUmJmFyZ3VtZW50c1s1XSE9PXZvaWQgMD9hcmd1bWVudHNbNV06aT09PWt0PzA6MSxOPWFyZ3VtZW50cy5sZW5ndGg+NiYmYXJndW1lbnRzWzZdIT09dm9pZCAwP2FyZ3VtZW50c1s2XTohMSxWPWFyZ3VtZW50cy5sZW5ndGg+NyYmYXJndW1lbnRzWzddIT09dm9pZCAwP2FyZ3VtZW50c1s3XTohMSxGPXtfX3ZfaXNWTm9kZTohMCxfX3Zfc2tpcDohMCx0eXBlOmkscHJvcHM6YSxrZXk6YSYmR28oYSkscmVmOmEmJlZhKGEpLHNjb3BlSWQ6bGksc2xvdFNjb3BlSWRzOm51bGwsY2hpbGRyZW46Zixjb21wb25lbnQ6bnVsbCxzdXNwZW5zZTpudWxsLHNzQ29udGVudDpudWxsLHNzRmFsbGJhY2s6bnVsbCxkaXJzOm51bGwsdHJhbnNpdGlvbjpudWxsLGVsOm51bGwsYW5jaG9yOm51bGwsdGFyZ2V0Om51bGwsdGFyZ2V0QW5jaG9yOm51bGwsc3RhdGljQ291bnQ6MCxzaGFwZUZsYWc6dyxwYXRjaEZsYWc6cCxkeW5hbWljUHJvcHM6UyxkeW5hbWljQ2hpbGRyZW46bnVsbCxhcHBDb250ZXh0Om51bGwsY3R4OkVufTtyZXR1cm4gVj8oJGEoRixmKSx3JjEyOCYmaS5ub3JtYWxpemUoRikpOmYmJihGLnNoYXBlRmxhZ3w9ZC5pc1N0cmluZyhmKT84OjE2KSxGLmtleSE9PUYua2V5JiZPKCJWTm9kZSBjcmVhdGVkIHdpdGggaW52YWxpZCBrZXkgKE5hTikuIFZOb2RlIHR5cGU6IixGLnR5cGUpLHdhPjAmJiFOJiZnciYmKEYucGF0Y2hGbGFnPjB8fHcmNikmJkYucGF0Y2hGbGFnIT09MzImJmdyLnB1c2goRiksRn12YXIgVW49T3M7ZnVuY3Rpb24geGwoaSl7dmFyIGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOm51bGwsZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXZvaWQgMD9hcmd1bWVudHNbMl06bnVsbCxwPWFyZ3VtZW50cy5sZW5ndGg+MyYmYXJndW1lbnRzWzNdIT09dm9pZCAwP2FyZ3VtZW50c1szXTowLFM9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOm51bGwsdz1hcmd1bWVudHMubGVuZ3RoPjUmJmFyZ3VtZW50c1s1XSE9PXZvaWQgMD9hcmd1bWVudHNbNV06ITE7aWYoKCFpfHxpPT09b2wpJiYoaXx8TygiSW52YWxpZCB2bm9kZSB0eXBlIHdoZW4gY3JlYXRpbmcgdm5vZGU6ICIuY29uY2F0KGksIi4iKSksaT1lbiksd3IoaSkpe3ZhciBOPVdpKGksYSwhMCk7cmV0dXJuIGYmJiRhKE4sZiksd2E+MCYmIXcmJmdyJiYoTi5zaGFwZUZsYWcmNj9ncltnci5pbmRleE9mKGkpXT1OOmdyLnB1c2goTikpLE4ucGF0Y2hGbGFnfD0tMixOfWlmKERsKGkpJiYoaT1pLl9fdmNjT3B0cyksYSl7YT16aShhKTt2YXJ7Y2xhc3M6VixzdHlsZTpGfT1hO1YmJiFkLmlzU3RyaW5nKFYpJiYoYS5jbGFzcz1kLm5vcm1hbGl6ZUNsYXNzKFYpKSxkLmlzT2JqZWN0KEYpJiYobS5pc1Byb3h5KEYpJiYhZC5pc0FycmF5KEYpJiYoRj1kLmV4dGVuZCh7fSxGKSksYS5zdHlsZT1kLm5vcm1hbGl6ZVN0eWxlKEYpKX12YXIgcT1kLmlzU3RyaW5nKGkpPzE6VGEoaSk/MTI4OmNvKGkpPzY0OmQuaXNPYmplY3QoaSk/NDpkLmlzRnVuY3Rpb24oaSk/MjowO3JldHVybiBxJjQmJm0uaXNQcm94eShpKSYmKGk9bS50b1JhdyhpKSxPKCJWdWUgcmVjZWl2ZWQgYSBDb21wb25lbnQgd2hpY2ggd2FzIG1hZGUgYSByZWFjdGl2ZSBvYmplY3QuIFRoaXMgY2FuIGxlYWQgdG8gdW5uZWNlc3NhcnkgcGVyZm9ybWFuY2Ugb3ZlcmhlYWQsIGFuZCBzaG91bGQgYmUgYXZvaWRlZCBieSBtYXJraW5nIHRoZSBjb21wb25lbnQgd2l0aCBgbWFya1Jhd2Agb3IgdXNpbmcgYHNoYWxsb3dSZWZgIGluc3RlYWQgb2YgYHJlZmAuIixgCkNvbXBvbmVudCB0aGF0IHdhcyBtYWRlIHJlYWN0aXZlOiBgLGkpKSxHbihpLGEsZixwLFMscSx3LCEwKX1mdW5jdGlvbiB6aShpKXtyZXR1cm4gaT9tLmlzUHJveHkoaSl8fEFzIGluIGk/ZC5leHRlbmQoe30saSk6aTpudWxsfWZ1bmN0aW9uIFdpKGksYSl7dmFyIGY9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOiExLHtwcm9wczpwLHJlZjpTLHBhdGNoRmxhZzp3LGNoaWxkcmVuOk59PWksVj1hPyRyKHB8fHt9LGEpOnAsRj17X192X2lzVk5vZGU6ITAsX192X3NraXA6ITAsdHlwZTppLnR5cGUscHJvcHM6VixrZXk6ViYmR28oVikscmVmOmEmJmEucmVmP2YmJlM/ZC5pc0FycmF5KFMpP1MuY29uY2F0KFZhKGEpKTpbUyxWYShhKV06VmEoYSk6UyxzY29wZUlkOmkuc2NvcGVJZCxzbG90U2NvcGVJZHM6aS5zbG90U2NvcGVJZHMsY2hpbGRyZW46dz09PS0xJiZkLmlzQXJyYXkoTik/Ti5tYXAoVHMpOk4sdGFyZ2V0OmkudGFyZ2V0LHRhcmdldEFuY2hvcjppLnRhcmdldEFuY2hvcixzdGF0aWNDb3VudDppLnN0YXRpY0NvdW50LHNoYXBlRmxhZzppLnNoYXBlRmxhZyxwYXRjaEZsYWc6YSYmaS50eXBlIT09a3Q/dz09PS0xPzE2Ond8MTY6dyxkeW5hbWljUHJvcHM6aS5keW5hbWljUHJvcHMsZHluYW1pY0NoaWxkcmVuOmkuZHluYW1pY0NoaWxkcmVuLGFwcENvbnRleHQ6aS5hcHBDb250ZXh0LGRpcnM6aS5kaXJzLHRyYW5zaXRpb246aS50cmFuc2l0aW9uLGNvbXBvbmVudDppLmNvbXBvbmVudCxzdXNwZW5zZTppLnN1c3BlbnNlLHNzQ29udGVudDppLnNzQ29udGVudCYmV2koaS5zc0NvbnRlbnQpLHNzRmFsbGJhY2s6aS5zc0ZhbGxiYWNrJiZXaShpLnNzRmFsbGJhY2spLGVsOmkuZWwsYW5jaG9yOmkuYW5jaG9yLGN0eDppLmN0eCxjZTppLmNlfTtyZXR1cm4gRn1mdW5jdGlvbiBUcyhpKXt2YXIgYT1XaShpKTtyZXR1cm4gZC5pc0FycmF5KGkuY2hpbGRyZW4pJiYoYS5jaGlsZHJlbj1pLmNoaWxkcmVuLm1hcChUcykpLGF9ZnVuY3Rpb24gSXMoKXt2YXIgaT1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXZvaWQgMD9hcmd1bWVudHNbMF06IiAiLGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOjA7cmV0dXJuIFVuKEx0LG51bGwsaSxhKX1mdW5jdGlvbiBqYyhpLGEpe3ZhciBmPVVuKE5yLG51bGwsaSk7cmV0dXJuIGYuc3RhdGljQ291bnQ9YSxmfWZ1bmN0aW9uIEdpKCl7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT12b2lkIDA/YXJndW1lbnRzWzBdOiIiLGE9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOiExO3JldHVybiBhPyhYYSgpLG9hKGVuLG51bGwsaSkpOlVuKGVuLG51bGwsaSl9ZnVuY3Rpb24gU3IoaSl7cmV0dXJuIGk9PW51bGx8fHR5cGVvZiBpPT0iYm9vbGVhbiI/VW4oZW4pOmQuaXNBcnJheShpKT9VbihrdCxudWxsLGkuc2xpY2UoKSk6dHlwZW9mIGk9PSJvYmplY3QiP0dyKGkpOlVuKEx0LG51bGwsU3RyaW5nKGkpKX1mdW5jdGlvbiBHcihpKXtyZXR1cm4gaS5lbD09PW51bGwmJmkucGF0Y2hGbGFnIT09LTF8fGkubWVtbz9pOldpKGkpfWZ1bmN0aW9uICRhKGksYSl7dmFyIGY9MCx7c2hhcGVGbGFnOnB9PWk7aWYoYT09bnVsbClhPW51bGw7ZWxzZSBpZihkLmlzQXJyYXkoYSkpZj0xNjtlbHNlIGlmKHR5cGVvZiBhPT0ib2JqZWN0IilpZihwJigxfDY0KSl7dmFyIFM9YS5kZWZhdWx0O1MmJihTLl9jJiYoUy5fZD0hMSksJGEoaSxTKCkpLFMuX2MmJihTLl9kPSEwKSk7cmV0dXJufWVsc2V7Zj0zMjt2YXIgdz1hLl87IXcmJiEoQXMgaW4gYSk/YS5fY3R4PUVuOnc9PT0zJiZFbiYmKEVuLnNsb3RzLl89PT0xP2EuXz0xOihhLl89MixpLnBhdGNoRmxhZ3w9MTAyNCkpfWVsc2UgZC5pc0Z1bmN0aW9uKGEpPyhhPXtkZWZhdWx0OmEsX2N0eDpFbn0sZj0zMik6KGE9U3RyaW5nKGEpLHAmNjQ/KGY9MTYsYT1bSXMoYSldKTpmPTgpO2kuY2hpbGRyZW49YSxpLnNoYXBlRmxhZ3w9Zn1mdW5jdGlvbiAkcigpe2Zvcih2YXIgaT17fSxhPTA7YTxhcmd1bWVudHMubGVuZ3RoO2ErKyl7dmFyIGY9YTwwfHxhcmd1bWVudHMubGVuZ3RoPD1hP3ZvaWQgMDphcmd1bWVudHNbYV07Zm9yKHZhciBwIGluIGYpaWYocD09PSJjbGFzcyIpaS5jbGFzcyE9PWYuY2xhc3MmJihpLmNsYXNzPWQubm9ybWFsaXplQ2xhc3MoW2kuY2xhc3MsZi5jbGFzc10pKTtlbHNlIGlmKHA9PT0ic3R5bGUiKWkuc3R5bGU9ZC5ub3JtYWxpemVTdHlsZShbaS5zdHlsZSxmLnN0eWxlXSk7ZWxzZSBpZihkLmlzT24ocCkpe3ZhciBTPWlbcF0sdz1mW3BdO3cmJlMhPT13JiYhKGQuaXNBcnJheShTKSYmUy5pbmNsdWRlcyh3KSkmJihpW3BdPVM/W10uY29uY2F0KFMsdyk6dyl9ZWxzZSBwIT09IiImJihpW3BdPWZbcF0pfXJldHVybiBpfWZ1bmN0aW9uIFlyKGksYSxmKXt2YXIgcD1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXZvaWQgMD9hcmd1bWVudHNbM106bnVsbDtIdChpLGEsNyxbZixwXSl9dmFyIEJsPWpzKCksdWw9MDtmdW5jdGlvbiBCbihpLGEsZil7dmFyIHA9aS50eXBlLFM9KGE/YS5hcHBDb250ZXh0OmkuYXBwQ29udGV4dCl8fEJsLHc9e3VpZDp1bCsrLHZub2RlOmksdHlwZTpwLHBhcmVudDphLGFwcENvbnRleHQ6Uyxyb290Om51bGwsbmV4dDpudWxsLHN1YlRyZWU6bnVsbCxlZmZlY3Q6bnVsbCx1cGRhdGU6bnVsbCxzY29wZTpuZXcgbS5FZmZlY3RTY29wZSghMCkscmVuZGVyOm51bGwscHJveHk6bnVsbCxleHBvc2VkOm51bGwsZXhwb3NlUHJveHk6bnVsbCx3aXRoUHJveHk6bnVsbCxwcm92aWRlczphP2EucHJvdmlkZXM6T2JqZWN0LmNyZWF0ZShTLnByb3ZpZGVzKSxhY2Nlc3NDYWNoZTpudWxsLHJlbmRlckNhY2hlOltdLGNvbXBvbmVudHM6bnVsbCxkaXJlY3RpdmVzOm51bGwscHJvcHNPcHRpb25zOnV0KHAsUyksZW1pdHNPcHRpb25zOnNpKHAsUyksZW1pdDpudWxsLGVtaXR0ZWQ6bnVsbCxwcm9wc0RlZmF1bHRzOmQuRU1QVFlfT0JKLGluaGVyaXRBdHRyczpwLmluaGVyaXRBdHRycyxjdHg6ZC5FTVBUWV9PQkosZGF0YTpkLkVNUFRZX09CSixwcm9wczpkLkVNUFRZX09CSixhdHRyczpkLkVNUFRZX09CSixzbG90czpkLkVNUFRZX09CSixyZWZzOmQuRU1QVFlfT0JKLHNldHVwU3RhdGU6ZC5FTVBUWV9PQkosc2V0dXBDb250ZXh0Om51bGwsc3VzcGVuc2U6ZixzdXNwZW5zZUlkOmY/Zi5wZW5kaW5nSWQ6MCxhc3luY0RlcDpudWxsLGFzeW5jUmVzb2x2ZWQ6ITEsaXNNb3VudGVkOiExLGlzVW5tb3VudGVkOiExLGlzRGVhY3RpdmF0ZWQ6ITEsYmM6bnVsbCxjOm51bGwsYm06bnVsbCxtOm51bGwsYnU6bnVsbCx1Om51bGwsdW06bnVsbCxidW06bnVsbCxkYTpudWxsLGE6bnVsbCxydGc6bnVsbCxydGM6bnVsbCxlYzpudWxsLHNwOm51bGx9O3JldHVybiB3LmN0eD1Icyh3KSx3LnJvb3Q9YT9hLnJvb3Q6dyx3LmVtaXQ9TG8uYmluZChudWxsLHcpLGkuY2UmJmkuY2Uodyksd312YXIgbW49bnVsbCx2aT0oKT0+bW58fEVuLG1pPWk9Pnttbj1pLGkuc2NvcGUub24oKX0sYWE9KCk9PnttbiYmbW4uc2NvcGUub2ZmKCksbW49bnVsbH0sZmw9ZC5tYWtlTWFwKCJzbG90LGNvbXBvbmVudCIpO2Z1bmN0aW9uIFVhKGksYSl7dmFyIGY9YS5pc05hdGl2ZVRhZ3x8ZC5OTzsoZmwoaSl8fGYoaSkpJiZPKCJEbyBub3QgdXNlIGJ1aWx0LWluIG9yIHJlc2VydmVkIEhUTUwgZWxlbWVudHMgYXMgY29tcG9uZW50IGlkOiAiK2kpfWZ1bmN0aW9uIFRpKGkpe3JldHVybiBpLnZub2RlLnNoYXBlRmxhZyY0fUMuaXNJblNTUkNvbXBvbmVudFNldHVwPSExO2Z1bmN0aW9uIFlvKGkpe3ZhciBhPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dm9pZCAwP2FyZ3VtZW50c1sxXTohMTtDLmlzSW5TU1JDb21wb25lbnRTZXR1cD1hO3Zhcntwcm9wczpmLGNoaWxkcmVuOnB9PWkudm5vZGUsUz1UaShpKTtfdChpLGYsUyxhKSx6bihpLHApO3ZhciB3PVM/ZGwoaSxhKTp2b2lkIDA7cmV0dXJuIEMuaXNJblNTUkNvbXBvbmVudFNldHVwPSExLHd9ZnVuY3Rpb24gZGwoaSxhKXt2YXIgZixwPWkudHlwZTt7aWYocC5uYW1lJiZVYShwLm5hbWUsaS5hcHBDb250ZXh0LmNvbmZpZykscC5jb21wb25lbnRzKWZvcih2YXIgUz1PYmplY3Qua2V5cyhwLmNvbXBvbmVudHMpLHc9MDt3PFMubGVuZ3RoO3crKylVYShTW3ddLGkuYXBwQ29udGV4dC5jb25maWcpO2lmKHAuZGlyZWN0aXZlcylmb3IodmFyIE49T2JqZWN0LmtleXMocC5kaXJlY3RpdmVzKSxWPTA7VjxOLmxlbmd0aDtWKyspaWwoTltWXSk7cC5jb21waWxlck9wdGlvbnMmJnBsKCkmJk8oJyJjb21waWxlck9wdGlvbnMiIGlzIG9ubHkgc3VwcG9ydGVkIHdoZW4gdXNpbmcgYSBidWlsZCBvZiBWdWUgdGhhdCBpbmNsdWRlcyB0aGUgcnVudGltZSBjb21waWxlci4gU2luY2UgeW91IGFyZSB1c2luZyBhIHJ1bnRpbWUtb25seSBidWlsZCwgdGhlIG9wdGlvbnMgc2hvdWxkIGJlIHBhc3NlZCB2aWEgeW91ciBidWlsZCB0b29sIGNvbmZpZyBpbnN0ZWFkLicpfWkuYWNjZXNzQ2FjaGU9T2JqZWN0LmNyZWF0ZShudWxsKSxpLnByb3h5PW0ubWFya1JhdyhuZXcgUHJveHkoaS5jdHgseGEpKSxCYShpKTt2YXJ7c2V0dXA6Rn09cDtpZihGKXt2YXIgcT1pLnNldHVwQ29udGV4dD1GLmxlbmd0aD4xP1BzKGkpOm51bGw7bWkoaSksbS5wYXVzZVRyYWNraW5nKCk7dmFyIF9lPWNuKEYsaSwwLFttLnNoYWxsb3dSZWFkb25seShpLnByb3BzKSxxXSk7aWYobS5yZXNldFRyYWNraW5nKCksYWEoKSxkLmlzUHJvbWlzZShfZSkpe2lmKF9lLnRoZW4oYWEsYWEpLGEpcmV0dXJuIF9lLnRoZW4obmU9PntlcyhpLG5lLGEpfSkuY2F0Y2gobmU9PntJbihuZSxpLDApfSk7aWYoaS5hc3luY0RlcD1fZSwhaS5zdXNwZW5zZSl7dmFyIHNlPShmPXAubmFtZSkhPT1udWxsJiZmIT09dm9pZCAwP2Y6IkFub255bW91cyI7TygiQ29tcG9uZW50IDwiLmNvbmNhdChzZSwiPjogc2V0dXAgZnVuY3Rpb24gcmV0dXJuZWQgYSBwcm9taXNlLCBidXQgbm8gIikrIjxTdXNwZW5zZT4gYm91bmRhcnkgd2FzIGZvdW5kIGluIHRoZSBwYXJlbnQgY29tcG9uZW50IHRyZWUuIEEgY29tcG9uZW50IHdpdGggYXN5bmMgc2V0dXAoKSBtdXN0IGJlIG5lc3RlZCBpbiBhIDxTdXNwZW5zZT4gaW4gb3JkZXIgdG8gYmUgcmVuZGVyZWQuIil9fWVsc2UgZXMoaSxfZSxhKX1lbHNlIE1sKGksYSl9ZnVuY3Rpb24gZXMoaSxhLGYpe2QuaXNGdW5jdGlvbihhKT9pLnR5cGUuX19zc3JJbmxpbmVSZW5kZXI/aS5zc3JSZW5kZXI9YTppLnJlbmRlcj1hOmQuaXNPYmplY3QoYSk/KHdyKGEpJiZPKCJzZXR1cCgpIHNob3VsZCBub3QgcmV0dXJuIFZOb2RlcyBkaXJlY3RseSAtIHJldHVybiBhIHJlbmRlciBmdW5jdGlvbiBpbnN0ZWFkLiIpLGkuZGV2dG9vbHNSYXdTZXR1cFN0YXRlPWEsaS5zZXR1cFN0YXRlPW0ucHJveHlSZWZzKGEpLGxsKGkpKTphIT09dm9pZCAwJiZPKCJzZXR1cCgpIHNob3VsZCByZXR1cm4gYW4gb2JqZWN0LiBSZWNlaXZlZDogIi5jb25jYXQoYT09PW51bGw/Im51bGwiOnR5cGVvZiBhKSksTWwoaSxmKX12YXIgdHMsaGw7ZnVuY3Rpb24gc2MoaSl7dHM9aSxobD1hPT57YS5yZW5kZXIuX3JjJiYoYS53aXRoUHJveHk9bmV3IFByb3h5KGEuY3R4LGtsKSl9fXZhciBwbD0oKT0+IXRzO2Z1bmN0aW9uIE1sKGksYSxmKXt2YXIgcD1pLnR5cGU7aWYoIWkucmVuZGVyKXtpZighYSYmdHMmJiFwLnJlbmRlcil7dmFyIFM9cC50ZW1wbGF0ZXx8VShpKS50ZW1wbGF0ZTtpZihTKXtFcihpLCJjb21waWxlIik7dmFye2lzQ3VzdG9tRWxlbWVudDp3LGNvbXBpbGVyT3B0aW9uczpOfT1pLmFwcENvbnRleHQuY29uZmlnLHtkZWxpbWl0ZXJzOlYsY29tcGlsZXJPcHRpb25zOkZ9PXAscT1kLmV4dGVuZChkLmV4dGVuZCh7aXNDdXN0b21FbGVtZW50OncsZGVsaW1pdGVyczpWfSxOKSxGKTtwLnJlbmRlcj10cyhTLHEpLFVpKGksImNvbXBpbGUiKX19aS5yZW5kZXI9cC5yZW5kZXJ8fGQuTk9PUCxobCYmaGwoaSl9bWkoaSksbS5wYXVzZVRyYWNraW5nKCksb2MoaSksbS5yZXNldFRyYWNraW5nKCksYWEoKSwhcC5yZW5kZXImJmkucmVuZGVyPT09ZC5OT09QJiYhYSYmKCF0cyYmcC50ZW1wbGF0ZT9PKCdDb21wb25lbnQgcHJvdmlkZWQgdGVtcGxhdGUgb3B0aW9uIGJ1dCBydW50aW1lIGNvbXBpbGF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBidWlsZCBvZiBWdWUuIENvbmZpZ3VyZSB5b3VyIGJ1bmRsZXIgdG8gYWxpYXMgInZ1ZSIgdG8gInZ1ZS9kaXN0L3Z1ZS5lc20tYnVuZGxlci5qcyIuJyk6TygiQ29tcG9uZW50IGlzIG1pc3NpbmcgdGVtcGxhdGUgb3IgcmVuZGVyIGZ1bmN0aW9uLiIpKX1mdW5jdGlvbiBsYyhpKXtyZXR1cm4gbmV3IFByb3h5KGkuYXR0cnMse2dldChhLGYpe3JldHVybiB4ZSgpLG0udHJhY2soaSwiZ2V0IiwiJGF0dHJzIiksYVtmXX0sc2V0KCl7cmV0dXJuIE8oInNldHVwQ29udGV4dC5hdHRycyBpcyByZWFkb25seS4iKSwhMX0sZGVsZXRlUHJvcGVydHkoKXtyZXR1cm4gTygic2V0dXBDb250ZXh0LmF0dHJzIGlzIHJlYWRvbmx5LiIpLCExfX0pfWZ1bmN0aW9uIFBzKGkpe3ZhciBhPXA9PntpZihpLmV4cG9zZWQmJk8oImV4cG9zZSgpIHNob3VsZCBiZSBjYWxsZWQgb25seSBvbmNlIHBlciBzZXR1cCgpLiIpLHAhPW51bGwpe3ZhciBTPXR5cGVvZiBwO1M9PT0ib2JqZWN0IiYmKGQuaXNBcnJheShwKT9TPSJhcnJheSI6bS5pc1JlZihwKSYmKFM9InJlZiIpKSxTIT09Im9iamVjdCImJk8oImV4cG9zZSgpIHNob3VsZCBiZSBwYXNzZWQgYSBwbGFpbiBvYmplY3QsIHJlY2VpdmVkICIuY29uY2F0KFMsIi4iKSl9aS5leHBvc2VkPXB8fHt9fSxmO3JldHVybiBPYmplY3QuZnJlZXplKHtnZXQgYXR0cnMoKXtyZXR1cm4gZnx8KGY9bGMoaSkpfSxnZXQgc2xvdHMoKXtyZXR1cm4gbS5zaGFsbG93UmVhZG9ubHkoaS5zbG90cyl9LGdldCBlbWl0KCl7cmV0dXJuIGZ1bmN0aW9uKHApe2Zvcih2YXIgUz1hcmd1bWVudHMubGVuZ3RoLHc9bmV3IEFycmF5KFM+MT9TLTE6MCksTj0xO048UztOKyspd1tOLTFdPWFyZ3VtZW50c1tOXTtyZXR1cm4gaS5lbWl0KHAsLi4udyl9fSxleHBvc2U6YX0pfWZ1bmN0aW9uIE5zKGkpe2lmKGkuZXhwb3NlZClyZXR1cm4gaS5leHBvc2VQcm94eXx8KGkuZXhwb3NlUHJveHk9bmV3IFByb3h5KG0ucHJveHlSZWZzKG0ubWFya1JhdyhpLmV4cG9zZWQpKSx7Z2V0KGEsZil7aWYoZiBpbiBhKXJldHVybiBhW2ZdO2lmKGYgaW4gc28pcmV0dXJuIHNvW2ZdKGkpfSxoYXMoYSxmKXtyZXR1cm4gZiBpbiBhfHxmIGluIHNvfX0pKX12YXIgY2M9Lyg/Ol58Wy1fXSkoXHcpL2csbnM9aT0+aS5yZXBsYWNlKGNjLGE9PmEudG9VcHBlckNhc2UoKSkucmVwbGFjZSgvWy1fXS9nLCIiKTtmdW5jdGlvbiBTYShpKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06ITA7cmV0dXJuIGQuaXNGdW5jdGlvbihpKT9pLmRpc3BsYXlOYW1lfHxpLm5hbWU6aS5uYW1lfHxhJiZpLl9fbmFtZX1mdW5jdGlvbiBrcyhpLGEpe3ZhciBmPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdIT09dm9pZCAwP2FyZ3VtZW50c1syXTohMSxwPVNhKGEpO2lmKCFwJiZhLl9fZmlsZSl7dmFyIFM9YS5fX2ZpbGUubWF0Y2goLyhbXi9cXF0rKVwuXHcrJC8pO1MmJihwPVNbMV0pfWlmKCFwJiZpJiZpLnBhcmVudCl7dmFyIHc9Tj0+e2Zvcih2YXIgViBpbiBOKWlmKE5bVl09PT1hKXJldHVybiBWfTtwPXcoaS5jb21wb25lbnRzfHxpLnBhcmVudC50eXBlLmNvbXBvbmVudHMpfHx3KGkuYXBwQ29udGV4dC5jb21wb25lbnRzKX1yZXR1cm4gcD9ucyhwKTpmPyJBcHAiOiJBbm9ueW1vdXMifWZ1bmN0aW9uIERsKGkpe3JldHVybiBkLmlzRnVuY3Rpb24oaSkmJiJfX3ZjY09wdHMiaW4gaX12YXIgR3M9KGksYSk9Pm0uY29tcHV0ZWQoaSxhLEMuaXNJblNTUkNvbXBvbmVudFNldHVwKSxnbD1pPT5PKCIiLmNvbmNhdChpLCIoKSBpcyBhIGNvbXBpbGVyLWhpbnQgaGVscGVyIHRoYXQgaXMgb25seSB1c2FibGUgaW5zaWRlICIpKyI8c2NyaXB0IHNldHVwPiBvZiBhIHNpbmdsZSBmaWxlIGNvbXBvbmVudC4gSXRzIGFyZ3VtZW50cyBzaG91bGQgYmUgY29tcGlsZWQgYXdheSBhbmQgcGFzc2luZyBpdCBhdCBydW50aW1lIGhhcyBubyBlZmZlY3QuIik7ZnVuY3Rpb24gdWMoKXtyZXR1cm4gZ2woImRlZmluZVByb3BzIiksbnVsbH1mdW5jdGlvbiB6Yygpe3JldHVybiBnbCgiZGVmaW5lRW1pdHMiKSxudWxsfWZ1bmN0aW9uIGZjKGkpe2dsKCJkZWZpbmVFeHBvc2UiKX1mdW5jdGlvbiBXYyhpLGEpe3JldHVybiBnbCgid2l0aERlZmF1bHRzIiksbnVsbH1mdW5jdGlvbiBHYygpe3JldHVybiBoYygpLnNsb3RzfWZ1bmN0aW9uIGRjKCl7cmV0dXJuIGhjKCkuYXR0cnN9ZnVuY3Rpb24gaGMoKXt2YXIgaT12aSgpO3JldHVybiBpfHxPKCJ1c2VDb250ZXh0KCkgY2FsbGVkIHdpdGhvdXQgYWN0aXZlIGluc3RhbmNlLiIpLGkuc2V0dXBDb250ZXh0fHwoaS5zZXR1cENvbnRleHQ9UHMoaSkpfWZ1bmN0aW9uIHBjKGksYSl7dmFyIGY9ZC5pc0FycmF5KGkpP2kucmVkdWNlKCh3LE4pPT4od1tOXT17fSx3KSx7fSk6aTtmb3IodmFyIHAgaW4gYSl7dmFyIFM9ZltwXTtTP2QuaXNBcnJheShTKXx8ZC5pc0Z1bmN0aW9uKFMpP2ZbcF09e3R5cGU6UyxkZWZhdWx0OmFbcF19OlMuZGVmYXVsdD1hW3BdOlM9PT1udWxsP2ZbcF09e2RlZmF1bHQ6YVtwXX06TygncHJvcHMgZGVmYXVsdCBrZXkgIicuY29uY2F0KHAsJyIgaGFzIG5vIGNvcnJlc3BvbmRpbmcgZGVjbGFyYXRpb24uJykpfXJldHVybiBmfWZ1bmN0aW9uIFljKGksYSl7dmFyIGY9e30scD1mdW5jdGlvbih3KXthLmluY2x1ZGVzKHcpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZix3LHtlbnVtZXJhYmxlOiEwLGdldDooKT0+aVt3XX0pfTtmb3IodmFyIFMgaW4gaSlwKFMpO3JldHVybiBmfWZ1bmN0aW9uIHFjKGkpe3ZhciBhPXZpKCk7YXx8Tygid2l0aEFzeW5jQ29udGV4dCBjYWxsZWQgd2l0aG91dCBhY3RpdmUgY3VycmVudCBpbnN0YW5jZS4gVGhpcyBpcyBsaWtlbHkgYSBidWcuIik7dmFyIGY9aSgpO3JldHVybiBhYSgpLGQuaXNQcm9taXNlKGYpJiYoZj1mLmNhdGNoKHA9Pnt0aHJvdyBtaShhKSxwfSkpLFtmLCgpPT5taShhKV19ZnVuY3Rpb24gTGwoaSxhLGYpe3ZhciBwPWFyZ3VtZW50cy5sZW5ndGg7cmV0dXJuIHA9PT0yP2QuaXNPYmplY3QoYSkmJiFkLmlzQXJyYXkoYSk/d3IoYSk/VW4oaSxudWxsLFthXSk6VW4oaSxhKTpVbihpLG51bGwsYSk6KHA+Mz9mPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTpwPT09MyYmd3IoZikmJihmPVtmXSksVW4oaSxhLGYpKX12YXIgdmw9U3ltYm9sKCJzc3JDb250ZXh0IiksUnM9KCk9Pnt7dmFyIGk9Vm4odmwpO3JldHVybiBpfHxPKCJTZXJ2ZXIgcmVuZGVyaW5nIGNvbnRleHQgbm90IHByb3ZpZGVkLiBNYWtlIHN1cmUgdG8gb25seSBjYWxsIHVzZVNTUkNvbnRleHQoKSBjb25kaXRpb25hbGx5IGluIHRoZSBzZXJ2ZXIgYnVpbGQuIiksaX19O2Z1bmN0aW9uIG5pKGkpe3JldHVybiEhKGkmJmkuX192X2lzU2hhbGxvdyl9ZnVuY3Rpb24gSW8oKXtpZih0eXBlb2Ygd2luZG93PT0idW5kZWZpbmVkIilyZXR1cm47dmFyIGk9e3N0eWxlOiJjb2xvcjojM2JhNzc2In0sYT17c3R5bGU6ImNvbG9yOiMwYjFiYzkifSxmPXtzdHlsZToiY29sb3I6I2I2MmUyNCJ9LHA9e3N0eWxlOiJjb2xvcjojOWQyODhjIn0sUz17aGVhZGVyKHNlKXtyZXR1cm4gZC5pc09iamVjdChzZSk/c2UuX19pc1Z1ZT9bImRpdiIsaSwiVnVlSW5zdGFuY2UiXTptLmlzUmVmKHNlKT9bImRpdiIse30sWyJzcGFuIixpLF9lKHNlKV0sIjwiLFYoc2UudmFsdWUpLCI+Il06bS5pc1JlYWN0aXZlKHNlKT9bImRpdiIse30sWyJzcGFuIixpLG5pKHNlKT8iU2hhbGxvd1JlYWN0aXZlIjoiUmVhY3RpdmUiXSwiPCIsVihzZSksIj4iLmNvbmNhdChtLmlzUmVhZG9ubHkoc2UpPyIgKHJlYWRvbmx5KSI6IiIpXTptLmlzUmVhZG9ubHkoc2UpP1siZGl2Iix7fSxbInNwYW4iLGksbmkoc2UpPyJTaGFsbG93UmVhZG9ubHkiOiJSZWFkb25seSJdLCI8IixWKHNlKSwiPiJdOm51bGw6bnVsbH0saGFzQm9keShzZSl7cmV0dXJuIHNlJiZzZS5fX2lzVnVlfSxib2R5KHNlKXtpZihzZSYmc2UuX19pc1Z1ZSlyZXR1cm5bImRpdiIse30sLi4udyhzZS4kKV19fTtmdW5jdGlvbiB3KHNlKXt2YXIgbmU9W107c2UudHlwZS5wcm9wcyYmc2UucHJvcHMmJm5lLnB1c2goTigicHJvcHMiLG0udG9SYXcoc2UucHJvcHMpKSksc2Uuc2V0dXBTdGF0ZSE9PWQuRU1QVFlfT0JKJiZuZS5wdXNoKE4oInNldHVwIixzZS5zZXR1cFN0YXRlKSksc2UuZGF0YSE9PWQuRU1QVFlfT0JKJiZuZS5wdXNoKE4oImRhdGEiLG0udG9SYXcoc2UuZGF0YSkpKTt2YXIgT2U9RihzZSwiY29tcHV0ZWQiKTtPZSYmbmUucHVzaChOKCJjb21wdXRlZCIsT2UpKTt2YXIgRGU9RihzZSwiaW5qZWN0Iik7cmV0dXJuIERlJiZuZS5wdXNoKE4oImluamVjdGVkIixEZSkpLG5lLnB1c2goWyJkaXYiLHt9LFsic3BhbiIse3N0eWxlOnAuc3R5bGUrIjtvcGFjaXR5OjAuNjYifSwiJCAoaW50ZXJuYWwpOiAiXSxbIm9iamVjdCIse29iamVjdDpzZX1dXSksbmV9ZnVuY3Rpb24gTihzZSxuZSl7cmV0dXJuIG5lPWQuZXh0ZW5kKHt9LG5lKSxPYmplY3Qua2V5cyhuZSkubGVuZ3RoP1siZGl2Iix7c3R5bGU6ImxpbmUtaGVpZ2h0OjEuMjVlbTttYXJnaW4tYm90dG9tOjAuNmVtIn0sWyJkaXYiLHtzdHlsZToiY29sb3I6IzQ3NjU4MiJ9LHNlXSxbImRpdiIse3N0eWxlOiJwYWRkaW5nLWxlZnQ6MS4yNWVtIn0sLi4uT2JqZWN0LmtleXMobmUpLm1hcChPZT0+WyJkaXYiLHt9LFsic3BhbiIscCxPZSsiOiAiXSxWKG5lW09lXSwhMSldKV1dOlsic3BhbiIse31dfWZ1bmN0aW9uIFYoc2Upe3ZhciBuZT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06ITA7cmV0dXJuIHR5cGVvZiBzZT09Im51bWJlciI/WyJzcGFuIixhLHNlXTp0eXBlb2Ygc2U9PSJzdHJpbmciP1sic3BhbiIsZixKU09OLnN0cmluZ2lmeShzZSldOnR5cGVvZiBzZT09ImJvb2xlYW4iP1sic3BhbiIscCxzZV06ZC5pc09iamVjdChzZSk/WyJvYmplY3QiLHtvYmplY3Q6bmU/bS50b1JhdyhzZSk6c2V9XTpbInNwYW4iLGYsU3RyaW5nKHNlKV19ZnVuY3Rpb24gRihzZSxuZSl7dmFyIE9lPXNlLnR5cGU7aWYoIWQuaXNGdW5jdGlvbihPZSkpe3ZhciBEZT17fTtmb3IodmFyIFplIGluIHNlLmN0eClxKE9lLFplLG5lKSYmKERlW1plXT1zZS5jdHhbWmVdKTtyZXR1cm4gRGV9fWZ1bmN0aW9uIHEoc2UsbmUsT2Upe3ZhciBEZT1zZVtPZV07aWYoZC5pc0FycmF5KERlKSYmRGUuaW5jbHVkZXMobmUpfHxkLmlzT2JqZWN0KERlKSYmbmUgaW4gRGV8fHNlLmV4dGVuZHMmJnEoc2UuZXh0ZW5kcyxuZSxPZSl8fHNlLm1peGlucyYmc2UubWl4aW5zLnNvbWUoWmU9PnEoWmUsbmUsT2UpKSlyZXR1cm4hMH1mdW5jdGlvbiBfZShzZSl7cmV0dXJuIG5pKHNlKT8iU2hhbGxvd1JlZiI6c2UuZWZmZWN0PyJDb21wdXRlZFJlZiI6IlJlZiJ9d2luZG93LmRldnRvb2xzRm9ybWF0dGVycz93aW5kb3cuZGV2dG9vbHNGb3JtYXR0ZXJzLnB1c2goUyk6d2luZG93LmRldnRvb2xzRm9ybWF0dGVycz1bU119ZnVuY3Rpb24gRmwoaSxhLGYscCl7dmFyIFM9ZltwXTtpZihTJiZxbyhTLGkpKXJldHVybiBTO3ZhciB3PWEoKTtyZXR1cm4gdy5tZW1vPWkuc2xpY2UoKSxmW3BdPXd9ZnVuY3Rpb24gcW8oaSxhKXt2YXIgZj1pLm1lbW87aWYoZi5sZW5ndGghPWEubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgcD0wO3A8Zi5sZW5ndGg7cCsrKWlmKGQuaGFzQ2hhbmdlZChmW3BdLGFbcF0pKXJldHVybiExO3JldHVybiB3YT4wJiZnciYmZ3IucHVzaChpKSwhMH12YXIgbWw9IjMuMi40NyIscnM9e2NyZWF0ZUNvbXBvbmVudEluc3RhbmNlOkJuLHNldHVwQ29tcG9uZW50OllvLHJlbmRlckNvbXBvbmVudFJvb3Q6Ym8sc2V0Q3VycmVudFJlbmRlcmluZ0luc3RhbmNlOkZvLGlzVk5vZGU6d3Isbm9ybWFsaXplVk5vZGU6U3J9LEtjPXJzLFlzPW51bGwsc2E9bnVsbDtmdW5jdGlvbiBxcyhpLGEpe3JldHVybiBpPT09ImlucHV0Ij9uZXcgUi5VbmlJbnB1dEVsZW1lbnQoaSxhKTppPT09InRleHRhcmVhIj9uZXcgUi5VbmlUZXh0QXJlYUVsZW1lbnQoaSxhKTpuZXcgUi5VbmlFbGVtZW50KGksYSl9ZnVuY3Rpb24gS28oaSxhKXtyZXR1cm4gbmV3IFIuVW5pVGV4dE5vZGUoaSxhKX1mdW5jdGlvbiBLcyhpLGEpe3JldHVybiBuZXcgUi5VbmlDb21tZW50Tm9kZShpLGEpfXZhciBZaSxnYz17aW5zZXJ0OihpLGEsZik9PnthLmluc2VydEJlZm9yZShpLGZ8fG51bGwpfSxyZW1vdmU6aT0+e3ZhciBhPWkucGFyZW50Tm9kZTthJiZhLnJlbW92ZUNoaWxkKGkpfSxjcmVhdGVFbGVtZW50OihpLGEpPT5xcyhpLGEpLGNyZWF0ZVRleHQ6KGksYSk9PktvKGksYSksY3JlYXRlQ29tbWVudDooaSxhKT0+S3MoaSxhKSxzZXRUZXh0OihpLGEpPT57aS5ub2RlVmFsdWU9YX0sc2V0RWxlbWVudFRleHQ6KGksYSk9PntpLnRleHRDb250ZW50PWF9LHBhcmVudE5vZGU6aT0+aS5wYXJlbnROb2RlLG5leHRTaWJsaW5nOmk9PmkubmV4dFNpYmxpbmcsc2V0U2NvcGVJZChpLGEpe2kuc2V0QXR0cmlidXRlKGEsIiIpfSxjbG9uZU5vZGUoaSl7dmFyIGE9aS5jbG9uZU5vZGUoITApO3JldHVybiJfdmFsdWUiaW4gaSYmKGEuX3ZhbHVlPWkuX3ZhbHVlKSxhfSxpbnNlcnRTdGF0aWNDb250ZW50KGksYSxmKXt2YXIgcD1ZaXx8KFlpPXFzKCJkaXYiKSk7cC5pbm5lckhUTUw9aTtmb3IodmFyIFM9cC5maXJzdENoaWxkLHc9UyxOPXc7dzspTj13LGdjLmluc2VydCh3LGEsZiksdz1wLmZpcnN0Q2hpbGQ7cmV0dXJuW1MsTl19fTtmdW5jdGlvbiBWbChpLGEpe2E9PW51bGwmJihhPSIiKSxpLnNldEF0dHJpYnV0ZSgiY2xhc3MiLGEpfWZ1bmN0aW9uIEpjKGksYSxmKXtpZighZilpLnJlbW92ZUF0dHJpYnV0ZSgic3R5bGUiKTtlbHNlIGlmKGQuaXNTdHJpbmcoZikpYSE9PWYmJmkuc2V0QXR0cmlidXRlKCJzdHlsZSIsZik7ZWxzZXt2YXIgcD17fSxTPWEmJiFkLmlzU3RyaW5nKGEpO2lmKFMpe2Zvcih2YXIgdyBpbiBhKWZbd109PW51bGwmJihwW3ddPSIiKTtmb3IodmFyIE4gaW4gZil7dmFyIFY9ZltOXTtWIT09YVtOXSYmKHBbTl09Vil9fWVsc2UgZm9yKHZhciBGIGluIGYpcFtGXT1mW0ZdO09iamVjdC5rZXlzKHApLmxlbmd0aCYmaS5zZXRBdHRyaWJ1dGUoInN0eWxlIixwKX19ZnVuY3Rpb24gdmMoaSxhLGYpe2Y9PW51bGw/aS5yZW1vdmVBdHRyaWJ1dGUoYSk6aS5zZXRBdHRyaWJ1dGUoYSxmKX1mdW5jdGlvbiBKcyhpLGEsZixwKXtpLmFkZEV2ZW50TGlzdGVuZXIoYSxmLHApfWZ1bmN0aW9uIG1jKGksYSxmLHApe2kucmVtb3ZlRXZlbnRMaXN0ZW5lcihhLGYscCl9ZnVuY3Rpb24gX2MoaSxhLGYscCl7dmFyIFM9YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT12b2lkIDA/YXJndW1lbnRzWzRdOm51bGwsdz1pLl92ZWl8fChpLl92ZWk9e30pLE49d1thXTtpZihwJiZOKU4udmFsdWU9cDtlbHNle3ZhcltWLEZdPSRsKGEpO2lmKHApe3ZhciBxPXdbYV09WnMocCxTKTtKcyhpLFYscSxGKX1lbHNlIE4mJihtYyhpLFYsTixGKSx3W2FdPXZvaWQgMCl9fXZhciBiYz0vKD86T25jZXxQYXNzaXZlfENhcHR1cmUpJC87ZnVuY3Rpb24gJGwoaSl7dmFyIGE7aWYoYmMudGVzdChpKSl7YT17fTtmb3IodmFyIGY7Zj1pLm1hdGNoKGJjKTspaT1pLnNsaWNlKDAsaS5sZW5ndGgtZlswXS5sZW5ndGgpLGFbZlswXS50b0xvd2VyQ2FzZSgpXT0hMH1yZXR1cm5bZC5oeXBoZW5hdGUoaS5zbGljZSgyKSksYV19ZnVuY3Rpb24gWnMoaSxhKXt2YXIgZj1TPT57SHQoZi52YWx1ZSxhLDUsW1NdKX07Zi52YWx1ZT1pO3ZhciBwPW5ldyBTZXQ7cmV0dXJuIGQuaXNBcnJheShmLnZhbHVlKT9mLnZhbHVlLmZvckVhY2goUz0+e1MubW9kaWZpZXJzJiZTLm1vZGlmaWVycy5mb3JFYWNoKHc9PntwLmFkZCh3KX0pfSk6KGYudmFsdWUubW9kaWZpZXJzJiZmLnZhbHVlLm1vZGlmaWVycy5mb3JFYWNoKFM9PntwLmFkZChTKX0pLHljKGYsYSkpLGYubW9kaWZpZXJzPVsuLi5wXSxmfWZ1bmN0aW9uIHljKGksYSl7aWYoISFhKXt2YXJ7JHd4c01vZHVsZXM6Zn09YTtpZighIWYpe3ZhciBwPWkudmFsdWUudG9TdHJpbmcoKTshZi5maW5kKFM9PnAuaW5kZXhPZigiLiIrUysiLiIpPi0xKXx8KGkud3hzRXZlbnQ9aS52YWx1ZSgpKX19fXZhciBaYz1mdW5jdGlvbihpLGEsZixwKXt2YXIgUz1hcmd1bWVudHMubGVuZ3RoPjY/YXJndW1lbnRzWzZdOnZvaWQgMDtzd2l0Y2goYSl7Y2FzZSJjbGFzcyI6VmwoaSxwKTticmVhaztjYXNlInN0eWxlIjpKYyhpLGYscCk7YnJlYWs7ZGVmYXVsdDppZihkLmlzT24oYSkpZC5pc01vZGVsTGlzdGVuZXIoYSl8fF9jKGksYSxmLHAsUyk7ZWxzZXtpZihkLmlzT2JqZWN0KHApKXt2YXIgdz1mPT09cDtpZihwPVIuSlNPTl9QUk9UT0NPTCtKU09OLnN0cmluZ2lmeShwKSx3JiZpLmdldEF0dHJpYnV0ZShhKT09PXApcmV0dXJufWVsc2UgaWYoZj09PXApcmV0dXJuO3ZjKGksYSxwKX1icmVha319O2Z1bmN0aW9uIFhjKCl7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT12b2lkIDA/YXJndW1lbnRzWzBdOiIkc3R5bGUiO3t2YXIgYT12aSgpO2lmKCFhKXJldHVybiBPKCJ1c2VDc3NNb2R1bGUgbXVzdCBiZSBjYWxsZWQgaW5zaWRlIHNldHVwKCkiKSxkLkVNUFRZX09CSjt2YXIgZj1hLnR5cGUuX19jc3NNb2R1bGVzO2lmKCFmKXJldHVybiBPKCJDdXJyZW50IGluc3RhbmNlIGRvZXMgbm90IGhhdmUgQ1NTIG1vZHVsZXMgaW5qZWN0ZWQuIiksZC5FTVBUWV9PQko7dmFyIHA9ZltpXTtyZXR1cm4gcHx8KE8oJ0N1cnJlbnQgaW5zdGFuY2UgZG9lcyBub3QgaGF2ZSBDU1MgbW9kdWxlIG5hbWVkICInLmNvbmNhdChpLCciLicpKSxkLkVNUFRZX09CSil9fWZ1bmN0aW9uIFFjKGkpe3ZhciBhPXZpKCk7aWYoIWEpe08oInVzZUNzc1ZhcnMgaXMgY2FsbGVkIHdpdGhvdXQgY3VycmVudCBhY3RpdmUgY29tcG9uZW50IGluc3RhbmNlLiIpO3JldHVybn12YXIgZj0oKT0+VWwoYS5zdWJUcmVlLGkoYS5wcm94eSkpO29vKCgpPT5YcihmLHtmbHVzaDoicG9zdCJ9KSksUW4oZil9ZnVuY3Rpb24gVWwoaSxhKXtpZihpLnNoYXBlRmxhZyYxMjgpe3ZhciBmPWkuc3VzcGVuc2U7aT1mLmFjdGl2ZUJyYW5jaCxmLnBlbmRpbmdCcmFuY2gmJiFmLmlzSHlkcmF0aW5nJiZmLmVmZmVjdHMucHVzaCgoKT0+e1VsKGYuYWN0aXZlQnJhbmNoLGEpfSl9Zm9yKDtpLmNvbXBvbmVudDspaT1pLmNvbXBvbmVudC5zdWJUcmVlO2lmKGkuc2hhcGVGbGFnJjEmJmkuZWwpX2woaS5lbCxhKTtlbHNlIGlmKGkudHlwZT09PWt0KWkuY2hpbGRyZW4uZm9yRWFjaCh3PT5VbCh3LGEpKTtlbHNlIGlmKGkudHlwZT09PU5yKWZvcih2YXJ7ZWw6cCxhbmNob3I6U309aTtwJiYoX2wocCxhKSxwIT09Uyk7KXA9cC5uZXh0U2libGluZ31mdW5jdGlvbiBfbChpLGEpe2lmKGkubm9kZVR5cGU9PT0xKWZvcih2YXIgZiBpbiBhKWkuc2V0QXR0cmlidXRlKCItLSIuY29uY2F0KGYpLGFbZl0pfXZhciBIYT0idHJhbnNpdGlvbiIsWHM9ImFuaW1hdGlvbiIsSGw9KGksYSk9Pnt2YXJ7c2xvdHM6Zn09YTtyZXR1cm4gTGwoU28sd2MoaSksZil9O0hsLmRpc3BsYXlOYW1lPSJUcmFuc2l0aW9uIjt2YXIgRWM9e25hbWU6U3RyaW5nLHR5cGU6U3RyaW5nLGNzczp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ITB9LGR1cmF0aW9uOltTdHJpbmcsTnVtYmVyLE9iamVjdF0sZW50ZXJGcm9tQ2xhc3M6U3RyaW5nLGVudGVyQWN0aXZlQ2xhc3M6U3RyaW5nLGVudGVyVG9DbGFzczpTdHJpbmcsYXBwZWFyRnJvbUNsYXNzOlN0cmluZyxhcHBlYXJBY3RpdmVDbGFzczpTdHJpbmcsYXBwZWFyVG9DbGFzczpTdHJpbmcsbGVhdmVGcm9tQ2xhc3M6U3RyaW5nLGxlYXZlQWN0aXZlQ2xhc3M6U3RyaW5nLGxlYXZlVG9DbGFzczpTdHJpbmd9LGRuPUhsLnByb3BzPWQuZXh0ZW5kKHt9LFNvLnByb3BzLEVjKSxJaT1mdW5jdGlvbihpKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXZvaWQgMD9hcmd1bWVudHNbMV06W107ZC5pc0FycmF5KGkpP2kuZm9yRWFjaChmPT5mKC4uLmEpKTppJiZpKC4uLmEpfSxQbz1pPT5pP2QuaXNBcnJheShpKT9pLnNvbWUoYT0+YS5sZW5ndGg+MSk6aS5sZW5ndGg+MTohMTtmdW5jdGlvbiB3YyhpKXt2YXIgYT17fTtmb3IodmFyIGYgaW4gaSlmIGluIEVjfHwoYVtmXT1pW2ZdKTtpZihpLmNzcz09PSExKXJldHVybiBhO3ZhcntuYW1lOnA9InYiLHR5cGU6UyxkdXJhdGlvbjp3LGVudGVyRnJvbUNsYXNzOk49IiIuY29uY2F0KHAsIi1lbnRlci1mcm9tIiksZW50ZXJBY3RpdmVDbGFzczpWPSIiLmNvbmNhdChwLCItZW50ZXItYWN0aXZlIiksZW50ZXJUb0NsYXNzOkY9IiIuY29uY2F0KHAsIi1lbnRlci10byIpLGFwcGVhckZyb21DbGFzczpxPU4sYXBwZWFyQWN0aXZlQ2xhc3M6X2U9VixhcHBlYXJUb0NsYXNzOnNlPUYsbGVhdmVGcm9tQ2xhc3M6bmU9IiIuY29uY2F0KHAsIi1sZWF2ZS1mcm9tIiksbGVhdmVBY3RpdmVDbGFzczpPZT0iIi5jb25jYXQocCwiLWxlYXZlLWFjdGl2ZSIpLGxlYXZlVG9DbGFzczpEZT0iIi5jb25jYXQocCwiLWxlYXZlLXRvIil9PWksWmU9YmwodyksZnQ9WmUmJlplWzBdLFRlPVplJiZaZVsxXSx7b25CZWZvcmVFbnRlcjpsZSxvbkVudGVyOkVlLG9uRW50ZXJDYW5jZWxsZWQ6TGUsb25MZWF2ZTpGZSxvbkxlYXZlQ2FuY2VsbGVkOnJ0LG9uQmVmb3JlQXBwZWFyOk90PWxlLG9uQXBwZWFyOlhlPUVlLG9uQXBwZWFyQ2FuY2VsbGVkOkI9TGV9PWEsaj0oYWUsZ2UsUWUpPT57bGEoYWUsZ2U/c2U6RiksbGEoYWUsZ2U/X2U6ViksUWUmJlFlKCl9LG9lPShhZSxnZSk9PntsYShhZSxEZSksbGEoYWUsT2UpLGdlJiZnZSgpfSx5ZT1hZT0+KGdlLFFlKT0+e3ZhciBHZT1hZT9YZTpFZSxldD0oKT0+aihnZSxhZSxRZSk7SWkoR2UsW2dlLGV0XSksamEoKCk9PntsYShnZSxhZT9xOk4pLE5vKGdlLGFlP3NlOkYpLFBvKEdlKXx8dnIoZ2UsUyxmdCxldCl9KX07cmV0dXJuIGQuZXh0ZW5kKGEse29uQmVmb3JlRW50ZXIoYWUpe0lpKGxlLFthZV0pLE5vKGFlLE4pLE5vKGFlLFYpfSxvbkJlZm9yZUFwcGVhcihhZSl7SWkoT3QsW2FlXSksTm8oYWUscSksTm8oYWUsX2UpfSxvbkVudGVyOnllKCExKSxvbkFwcGVhcjp5ZSghMCksb25MZWF2ZShhZSxnZSl7dmFyIFFlPSgpPT5vZShhZSxnZSk7Tm8oYWUsbmUpLFNjKCksTm8oYWUsT2UpLGphKCgpPT57bGEoYWUsbmUpLE5vKGFlLERlKSxQbyhGZSl8fHZyKGFlLFMsVGUsUWUpfSksSWkoRmUsW2FlLFFlXSl9LG9uRW50ZXJDYW5jZWxsZWQoYWUpe2ooYWUsITEpLElpKExlLFthZV0pfSxvbkFwcGVhckNhbmNlbGxlZChhZSl7aihhZSwhMCksSWkoQixbYWVdKX0sb25MZWF2ZUNhbmNlbGxlZChhZSl7b2UoYWUpLElpKHJ0LFthZV0pfX0pfWZ1bmN0aW9uIGJsKGkpe2lmKGk9PW51bGwpcmV0dXJuIG51bGw7aWYoZC5pc09iamVjdChpKSlyZXR1cm5bUXMoaS5lbnRlciksUXMoaS5sZWF2ZSldO3ZhciBhPVFzKGkpO3JldHVyblthLGFdfWZ1bmN0aW9uIFFzKGkpe3ZhciBhPWQudG9OdW1iZXIoaSk7cmV0dXJuIHlsKGEpLGF9ZnVuY3Rpb24geWwoaSl7dHlwZW9mIGkhPSJudW1iZXIiP08oIjx0cmFuc2l0aW9uPiBleHBsaWNpdCBkdXJhdGlvbiBpcyBub3QgYSB2YWxpZCBudW1iZXIgLSAiKyJnb3QgIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoaSksIi4iKSk6aXNOYU4oaSkmJk8oIjx0cmFuc2l0aW9uPiBleHBsaWNpdCBkdXJhdGlvbiBpcyBOYU4gLSB0aGUgZHVyYXRpb24gZXhwcmVzc2lvbiBtaWdodCBiZSBpbmNvcnJlY3QuIil9ZnVuY3Rpb24gTm8oaSxhKXthLnNwbGl0KC9ccysvKS5mb3JFYWNoKGY9PmYmJmkuY2xhc3NMaXN0LmFkZChmKSksKGkuX3Z0Y3x8KGkuX3Z0Yz1uZXcgU2V0KSkuYWRkKGEpfWZ1bmN0aW9uIGxhKGksYSl7YS5zcGxpdCgvXHMrLykuZm9yRWFjaChwPT5wJiZpLmNsYXNzTGlzdC5yZW1vdmUocCkpO3ZhcntfdnRjOmZ9PWk7ZiYmKGYuZGVsZXRlKGEpLGYuc2l6ZXx8KGkuX3Z0Yz12b2lkIDApKX1mdW5jdGlvbiBqYShpKXtyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCk9PntyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoaSl9KX12YXIgZWw9MDtmdW5jdGlvbiB2cihpLGEsZixwKXt2YXIgUz1pLl9lbmRJZD0rK2VsLHc9KCk9PntTPT09aS5fZW5kSWQmJnAoKX07aWYoZilyZXR1cm4gc2V0VGltZW91dCh3LGYpO3Zhcnt0eXBlOk4sdGltZW91dDpWLHByb3BDb3VudDpGfT14cyhpLGEpO2lmKCFOKXJldHVybiBwKCk7dmFyIHE9TisiZW5kIixfZT0wLHNlPSgpPT57aS5yZW1vdmVFdmVudExpc3RlbmVyKHEsbmUpLHcoKX0sbmU9T2U9PntPZS50YXJnZXQ9PT1pJiYrK19lPj1GJiZzZSgpfTtzZXRUaW1lb3V0KCgpPT57X2U8RiYmc2UoKX0sVisxKSxpLmFkZEV2ZW50TGlzdGVuZXIocSxuZSl9ZnVuY3Rpb24geHMoaSxhKXt2YXIgZj13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShpKSxwPURlPT4oZltEZV18fCIiKS5zcGxpdCgiLCAiKSxTPXAoSGErIkRlbGF5Iiksdz1wKEhhKyJEdXJhdGlvbiIpLE49emEoUyx3KSxWPXAoWHMrIkRlbGF5IiksRj1wKFhzKyJEdXJhdGlvbiIpLHE9emEoVixGKSxfZT1udWxsLHNlPTAsbmU9MDthPT09SGE/Tj4wJiYoX2U9SGEsc2U9TixuZT13Lmxlbmd0aCk6YT09PVhzP3E+MCYmKF9lPVhzLHNlPXEsbmU9Ri5sZW5ndGgpOihzZT1NYXRoLm1heChOLHEpLF9lPXNlPjA/Tj5xP0hhOlhzOm51bGwsbmU9X2U/X2U9PT1IYT93Lmxlbmd0aDpGLmxlbmd0aDowKTt2YXIgT2U9X2U9PT1IYSYmL1xiKHRyYW5zZm9ybXxhbGwpKCx8JCkvLnRlc3QoZltIYSsiUHJvcGVydHkiXSk7cmV0dXJue3R5cGU6X2UsdGltZW91dDpzZSxwcm9wQ291bnQ6bmUsaGFzVHJhbnNmb3JtOk9lfX1mdW5jdGlvbiB6YShpLGEpe2Zvcig7aS5sZW5ndGg8YS5sZW5ndGg7KWk9aS5jb25jYXQoaSk7cmV0dXJuIE1hdGgubWF4KC4uLmEubWFwKChmLHApPT5pcyhmKStpcyhpW3BdKSkpfWZ1bmN0aW9uIGlzKGkpe3JldHVybiBOdW1iZXIoaS5zbGljZSgwLC0xKS5yZXBsYWNlKCIsIiwiLiIpKSoxZTN9ZnVuY3Rpb24gU2MoKXtyZXR1cm4gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHR9dmFyIENhPW5ldyBXZWFrTWFwLEVsPW5ldyBXZWFrTWFwLGNhPXtuYW1lOiJUcmFuc2l0aW9uR3JvdXAiLHByb3BzOmQuZXh0ZW5kKHt9LGRuLHt0YWc6U3RyaW5nLG1vdmVDbGFzczpTdHJpbmd9KSxzZXR1cChpLGEpe3ZhcntzbG90czpmfT1hLHA9dmkoKSxTPXNyKCksdyxOO3JldHVybiBRbigoKT0+e2lmKCEhdy5sZW5ndGgpe3ZhciBWPWkubW92ZUNsYXNzfHwiIi5jb25jYXQoaS5uYW1lfHwidiIsIi1tb3ZlIik7aWYoISFfKHdbMF0uZWwscC52bm9kZS5lbCxWKSl7dy5mb3JFYWNoKG8pLHcuZm9yRWFjaChjKTt2YXIgRj13LmZpbHRlcihoKTtTYygpLEYuZm9yRWFjaChxPT57dmFyIF9lPXEuZWwsc2U9X2Uuc3R5bGU7Tm8oX2UsViksc2UudHJhbnNmb3JtPXNlLndlYmtpdFRyYW5zZm9ybT1zZS50cmFuc2l0aW9uRHVyYXRpb249IiI7dmFyIG5lPV9lLl9tb3ZlQ2I9T2U9PntPZSYmT2UudGFyZ2V0IT09X2V8fCghT2V8fC90cmFuc2Zvcm0kLy50ZXN0KE9lLnByb3BlcnR5TmFtZSkpJiYoX2UucmVtb3ZlRXZlbnRMaXN0ZW5lcigidHJhbnNpdGlvbmVuZCIsbmUpLF9lLl9tb3ZlQ2I9bnVsbCxsYShfZSxWKSl9O19lLmFkZEV2ZW50TGlzdGVuZXIoInRyYW5zaXRpb25lbmQiLG5lKX0pfX19KSwoKT0+e3ZhciBWPW0udG9SYXcoaSksRj13YyhWKSxxPVYudGFnfHxrdDt3PU4sTj1mLmRlZmF1bHQ/dmUoZi5kZWZhdWx0KCkpOltdO2Zvcih2YXIgX2U9MDtfZTxOLmxlbmd0aDtfZSsrKXt2YXIgc2U9TltfZV07c2Uua2V5IT1udWxsP1ooc2UscGkoc2UsRixTLHApKTpPKCI8VHJhbnNpdGlvbkdyb3VwPiBjaGlsZHJlbiBtdXN0IGJlIGtleWVkLiIpfWlmKHcpZm9yKHZhciBuZT0wO25lPHcubGVuZ3RoO25lKyspe3ZhciBPZT13W25lXTtaKE9lLHBpKE9lLEYsUyxwKSksQ2Euc2V0KE9lLE9lLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKX1yZXR1cm4gVW4ocSxudWxsLE4pfX19LFdhPWk9PmRlbGV0ZSBpLm1vZGU7Y2EucHJvcHM7dmFyIHJpPWNhO2Z1bmN0aW9uIG8oaSl7dmFyIGE9aS5lbDthLl9tb3ZlQ2ImJmEuX21vdmVDYigpLGEuX2VudGVyQ2ImJmEuX2VudGVyQ2IoKX1mdW5jdGlvbiBjKGkpe0VsLnNldChpLGkuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpfWZ1bmN0aW9uIGgoaSl7dmFyIGE9Q2EuZ2V0KGkpLGY9RWwuZ2V0KGkpLHA9YS5sZWZ0LWYubGVmdCxTPWEudG9wLWYudG9wO2lmKHB8fFMpe3ZhciB3PWkuZWwuc3R5bGU7cmV0dXJuIHcudHJhbnNmb3JtPXcud2Via2l0VHJhbnNmb3JtPSJ0cmFuc2xhdGUoIi5jb25jYXQocCwicHgsIikuY29uY2F0KFMsInB4KSIpLHcudHJhbnNpdGlvbkR1cmF0aW9uPSIwcyIsaX19ZnVuY3Rpb24gXyhpLGEsZil7dmFyIHA9aS5jbG9uZU5vZGUoKTtpLl92dGMmJmkuX3Z0Yy5mb3JFYWNoKE49PntOLnNwbGl0KC9ccysvKS5mb3JFYWNoKFY9PlYmJnAuY2xhc3NMaXN0LnJlbW92ZShWKSl9KSxmLnNwbGl0KC9ccysvKS5mb3JFYWNoKE49Pk4mJnAuY2xhc3NMaXN0LmFkZChOKSkscC5zdHlsZS5kaXNwbGF5PSJub25lIjt2YXIgUz1hLm5vZGVUeXBlPT09MT9hOmEucGFyZW50Tm9kZTtTLmFwcGVuZENoaWxkKHApO3ZhcntoYXNUcmFuc2Zvcm06d309eHMocCk7cmV0dXJuIFMucmVtb3ZlQ2hpbGQocCksd312YXIgST1pPT57dmFyIGE9aS5wcm9wc1sib25VcGRhdGU6bW9kZWxWYWx1ZSJdO3JldHVybiBkLmlzQXJyYXkoYSk/Zj0+ZC5pbnZva2VBcnJheUZucyhhLGYpOmF9LEE9e2NyZWF0ZWQoaSxhLGYpe3Zhcnt2YWx1ZTpwLG1vZGlmaWVyczp7dHJpbTpTLG51bWJlcjp3fX09YTtpLnZhbHVlPXA9PW51bGw/IiI6cCxpLl9hc3NpZ249SShmKSxKcyhpLCJpbnB1dCIsTj0+e3ZhciBWPU4uZGV0YWlsLnZhbHVlLEY9aS5wYWdlTm9kZTtpLnBhZ2VOb2RlPW51bGwsaS52YWx1ZT1WLGkucGFnZU5vZGU9RixTP1Y9Vi50cmltKCk6dyYmKFY9ZC50b051bWJlcihWKSksaS5fYXNzaWduKFYpfSl9LGJlZm9yZVVwZGF0ZShpLGEsZil7dmFye3ZhbHVlOnB9PWE7aS5fYXNzaWduPUkoZik7dmFyIFM9cD09bnVsbD8iIjpwO2kudmFsdWUhPT1TJiYoaS52YWx1ZT1TKX19LHg9QSx6PVsiY3RybCIsInNoaWZ0IiwiYWx0IiwibWV0YSJdLEg9e3N0b3A6aT0+aS5zdG9wUHJvcGFnYXRpb24oKSxwcmV2ZW50Omk9PmkucHJldmVudERlZmF1bHQoKSxzZWxmOmk9PmkudGFyZ2V0IT09aS5jdXJyZW50VGFyZ2V0LGN0cmw6aT0+IWkuY3RybEtleSxzaGlmdDppPT4haS5zaGlmdEtleSxhbHQ6aT0+IWkuYWx0S2V5LG1ldGE6aT0+IWkubWV0YUtleSxsZWZ0Omk9PiJidXR0b24iaW4gaSYmaS5idXR0b24hPT0wLG1pZGRsZTppPT4iYnV0dG9uImluIGkmJmkuYnV0dG9uIT09MSxyaWdodDppPT4iYnV0dG9uImluIGkmJmkuYnV0dG9uIT09MixleGFjdDooaSxhKT0+ei5zb21lKGY9PmlbIiIuY29uY2F0KGYsIktleSIpXSYmIWEuaW5jbHVkZXMoZikpfSx0ZT0oaSxhKT0+e3ZhciBmPWZ1bmN0aW9uKHApe2Zvcih2YXIgUz0wO1M8YS5sZW5ndGg7UysrKXt2YXIgdz1IW2FbU11dO2lmKHcmJncocCxhKSlyZXR1cm59Zm9yKHZhciBOPWFyZ3VtZW50cy5sZW5ndGgsVj1uZXcgQXJyYXkoTj4xP04tMTowKSxGPTE7RjxOO0YrKylWW0YtMV09YXJndW1lbnRzW0ZdO3JldHVybiBpKHAsLi4uVil9O3JldHVybiBmLm1vZGlmaWVycz1hLGZ9LFBlPXtlc2M6ImVzY2FwZSIsc3BhY2U6IiAiLHVwOiJhcnJvdy11cCIsbGVmdDoiYXJyb3ctbGVmdCIscmlnaHQ6ImFycm93LXJpZ2h0Iixkb3duOiJhcnJvdy1kb3duIixkZWxldGU6ImJhY2tzcGFjZSJ9LGRlPShpLGEpPT5mPT57aWYoImtleSJpbiBmKXt2YXIgcD1kLmh5cGhlbmF0ZShmLmtleSk7aWYoYS5zb21lKFM9PlM9PT1wfHxQZVtTXT09PXApKXJldHVybiBpKGYpfX0sZmU9e2JlZm9yZU1vdW50KGksYSl7dmFye3ZhbHVlOmZ9PWE7VWUoaSxmKX0sdXBkYXRlZChpLGEpe3Zhcnt2YWx1ZTpmLG9sZFZhbHVlOnB9PWE7IWYhPSFwJiZVZShpLGYpfSxiZWZvcmVVbm1vdW50KGksYSl7dmFye3ZhbHVlOmZ9PWE7VWUoaSxmKX19O2Z1bmN0aW9uIFVlKGksYSl7aS5zZXRBdHRyaWJ1dGUoIi52U2hvdyIsISFhKX12YXIgSmU9ZC5leHRlbmQoe3BhdGNoUHJvcDpaYyxmb3JjZVBhdGNoUHJvcDpSLmZvcmNlUGF0Y2hQcm9wfSxnYyksZ3Q7ZnVuY3Rpb24gYnQoKXtyZXR1cm4gZ3R8fChndD1GYShKZSkpfXZhciBrZT1mdW5jdGlvbigpe2J0KCkucmVuZGVyKC4uLmFyZ3VtZW50cyl9LG1lPWZ1bmN0aW9uKCl7dmFyIGk9YnQoKS5jcmVhdGVBcHAoLi4uYXJndW1lbnRzKTt0dChpKTt2YXJ7bW91bnQ6YX09aTtyZXR1cm4gaS5tb3VudD1mPT4oZC5pc1N0cmluZyhmKSYmKGY9PT0iI2FwcCImJlhvKGksbWwpLGY9S3MoZikpLGYmJmEoZiwhMSwhMSkpLGl9LE1lPW1lO2Z1bmN0aW9uIHR0KGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLmNvbmZpZywiaXNOYXRpdmVUYWciLHt2YWx1ZTphPT5kLmlzSFRNTFRhZyhhKXx8ZC5pc1NWR1RhZyhhKSx3cml0YWJsZTohMX0pfWZ1bmN0aW9uIHFlKCl7fWZ1bmN0aW9uIG90KCl7fWZ1bmN0aW9uIEl0KGkpe3JldHVybiBkLmlzT2JqZWN0KGkpP1IuSlNPTl9QUk9UT0NPTCtKU09OLnN0cmluZ2lmeShpKTppfXZhciBhdD1pPT5JdChpKTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsImNhbWVsaXplIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZC5jYW1lbGl6ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywiY2FwaXRhbGl6ZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQuY2FwaXRhbGl6ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywibm9ybWFsaXplQ2xhc3MiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBkLm5vcm1hbGl6ZUNsYXNzfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJub3JtYWxpemVQcm9wcyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQubm9ybWFsaXplUHJvcHN9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsIm5vcm1hbGl6ZVN0eWxlIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZC5ub3JtYWxpemVTdHlsZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywidG9EaXNwbGF5U3RyaW5nIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZC50b0Rpc3BsYXlTdHJpbmd9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsInRvSGFuZGxlcktleSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQudG9IYW5kbGVyS2V5fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJFZmZlY3RTY29wZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uRWZmZWN0U2NvcGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsIlJlYWN0aXZlRWZmZWN0Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5SZWFjdGl2ZUVmZmVjdH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywiY3VzdG9tUmVmIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5jdXN0b21SZWZ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsImVmZmVjdCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uZWZmZWN0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJlZmZlY3RTY29wZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uZWZmZWN0U2NvcGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsImdldEN1cnJlbnRTY29wZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uZ2V0Q3VycmVudFNjb3BlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJpc1Byb3h5Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5pc1Byb3h5fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJpc1JlYWN0aXZlIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5pc1JlYWN0aXZlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJpc1JlYWRvbmx5Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5pc1JlYWRvbmx5fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJpc1JlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uaXNSZWZ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsImlzU2hhbGxvdyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uaXNTaGFsbG93fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJtYXJrUmF3Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5tYXJrUmF3fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJvblNjb3BlRGlzcG9zZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0ub25TY29wZURpc3Bvc2V9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsInByb3h5UmVmcyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0ucHJveHlSZWZzfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJyZWFjdGl2ZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0ucmVhY3RpdmV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsInJlYWRvbmx5Iix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5yZWFkb25seX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywicmVmIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5yZWZ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsInNoYWxsb3dSZWFjdGl2ZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uc2hhbGxvd1JlYWN0aXZlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJzaGFsbG93UmVhZG9ubHkiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBtLnNoYWxsb3dSZWFkb25seX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywic2hhbGxvd1JlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uc2hhbGxvd1JlZn19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywic3RvcCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uc3RvcH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywidG9SYXciLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBtLnRvUmF3fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJ0b1JlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0udG9SZWZ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsInRvUmVmcyIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0udG9SZWZzfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJ0cmlnZ2VyUmVmIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS50cmlnZ2VyUmVmfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLCJ1bnJlZiIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0udW5yZWZ9fSksQy5CYXNlVHJhbnNpdGlvbj1TbyxDLkJhc2VUcmFuc2l0aW9uUHJvcHNWYWxpZGF0b3JzPW5vLEMuQ29tbWVudD1lbixDLkZyYWdtZW50PWt0LEMuS2VlcEFsaXZlPUJlLEMuU3RhdGljPU5yLEMuU3VzcGVuc2U9RW8sQy5UZWxlcG9ydD1UdCxDLlRleHQ9THQsQy5UcmFuc2l0aW9uPUhsLEMuVHJhbnNpdGlvbkdyb3VwPXJpLEMuYXNzZXJ0TnVtYmVyPXJlLEMuY2FsbFdpdGhBc3luY0Vycm9ySGFuZGxpbmc9SHQsQy5jYWxsV2l0aEVycm9ySGFuZGxpbmc9Y24sQy5jbG9uZVZOb2RlPVdpLEMuY29tcGF0VXRpbHM9c2EsQy5jb21wdXRlZD1HcyxDLmNyZWF0ZUFwcD1tZSxDLmNyZWF0ZUJsb2NrPW9hLEMuY3JlYXRlQ29tbWVudD1LcyxDLmNyZWF0ZUNvbW1lbnRWTm9kZT1HaSxDLmNyZWF0ZUVsZW1lbnQ9cXMsQy5jcmVhdGVFbGVtZW50QmxvY2s9UmwsQy5jcmVhdGVFbGVtZW50Vk5vZGU9R24sQy5jcmVhdGVIeWRyYXRpb25SZW5kZXJlcj1IaSxDLmNyZWF0ZVByb3BzUmVzdFByb3h5PVljLEMuY3JlYXRlUmVuZGVyZXI9RmEsQy5jcmVhdGVTU1JBcHA9TWUsQy5jcmVhdGVTbG90cz1zbCxDLmNyZWF0ZVN0YXRpY1ZOb2RlPWpjLEMuY3JlYXRlVGV4dE5vZGU9S28sQy5jcmVhdGVUZXh0Vk5vZGU9SXMsQy5jcmVhdGVWTm9kZT1VbixDLmNyZWF0ZVZ1ZUFwcD1tZSxDLmRlZmluZUFzeW5jQ29tcG9uZW50PVN0LEMuZGVmaW5lQ29tcG9uZW50PWNlLEMuZGVmaW5lRW1pdHM9emMsQy5kZWZpbmVFeHBvc2U9ZmMsQy5kZWZpbmVQcm9wcz11YyxDLmdldEN1cnJlbnRJbnN0YW5jZT12aSxDLmdldFRyYW5zaXRpb25SYXdDaGlsZHJlbj12ZSxDLmd1YXJkUmVhY3RpdmVQcm9wcz16aSxDLmg9TGwsQy5oYW5kbGVFcnJvcj1JbixDLmluaXRDdXN0b21Gb3JtYXR0ZXI9SW8sQy5pbmplY3Q9Vm4sQy5pbmplY3RIb29rPWJyLEMuaXNNZW1vU2FtZT1xbyxDLmlzUnVudGltZU9ubHk9cGwsQy5pc1ZOb2RlPXdyLEMubWVyZ2VEZWZhdWx0cz1wYyxDLm1lcmdlUHJvcHM9JHIsQy5uZXh0VGljaz1ObixDLm9uQWN0aXZhdGVkPXp0LEMub25CZWZvcmVBY3RpdmF0ZT1xZSxDLm9uQmVmb3JlRGVhY3RpdmF0ZT1vdCxDLm9uQmVmb3JlTW91bnQ9aW8sQy5vbkJlZm9yZVVubW91bnQ9RnIsQy5vbkJlZm9yZVVwZGF0ZT1uYSxDLm9uRGVhY3RpdmF0ZWQ9U24sQy5vbkVycm9yQ2FwdHVyZWQ9JHMsQy5vbk1vdW50ZWQ9b28sQy5vblJlbmRlclRyYWNrZWQ9VnMsQy5vblJlbmRlclRyaWdnZXJlZD16cixDLm9uU2VydmVyUHJlZmV0Y2g9TmEsQy5vblVubW91bnRlZD1QYSxDLm9uVXBkYXRlZD1RbixDLm9wZW5CbG9jaz1YYSxDLnBvcFNjb3BlSWQ9Sm4sQy5wcm92aWRlPWFyLEMucHVzaFNjb3BlSWQ9cWEsQy5xdWV1ZVBvc3RGbHVzaENiPUJpLEMucmVnaXN0ZXJSdW50aW1lQ29tcGlsZXI9c2MsQy5yZW5kZXI9a2UsQy5yZW5kZXJMaXN0PVJhLEMucmVuZGVyU2xvdD1yYSxDLnJlc29sdmVDb21wb25lbnQ9UG4sQy5yZXNvbHZlRGlyZWN0aXZlPWFvLEMucmVzb2x2ZUR5bmFtaWNDb21wb25lbnQ9dnMsQy5yZXNvbHZlRmlsdGVyPVlzLEMucmVzb2x2ZVRyYW5zaXRpb25Ib29rcz1waSxDLnNldEJsb2NrVHJhY2tpbmc9V3MsQy5zZXREZXZ0b29sc0hvb2s9WGksQy5zZXRUcmFuc2l0aW9uSG9va3M9WixDLnNzckNvbnRleHRLZXk9dmwsQy5zc3JVdGlscz1LYyxDLnRvSGFuZGxlcnM9bXMsQy50cmFuc2Zvcm1WTm9kZUFyZ3M9Q3MsQy51c2VBdHRycz1kYyxDLnVzZUNzc01vZHVsZT1YYyxDLnVzZUNzc1ZhcnM9UWMsQy51c2VTU1JDb250ZXh0PVJzLEMudXNlU2xvdHM9R2MsQy51c2VUcmFuc2l0aW9uU3RhdGU9c3IsQy52TW9kZWxEeW5hbWljPXgsQy52TW9kZWxUZXh0PUEsQy52U2hvdz1mZSxDLnZlcnNpb249bWwsQy53YXJuPU8sQy53YXRjaD1oaSxDLndhdGNoRWZmZWN0PVhyLEMud2F0Y2hQb3N0RWZmZWN0PWRpLEMud2F0Y2hTeW5jRWZmZWN0PXRhLEMud2l0aEFzeW5jQ29udGV4dD1xYyxDLndpdGhDdHg9Y2ksQy53aXRoRGVmYXVsdHM9V2MsQy53aXRoRGlyZWN0aXZlcz1DbyxDLndpdGhLZXlzPWRlLEMud2l0aE1lbW89RmwsQy53aXRoTW9kaWZpZXJzPXRlLEMud2l0aFNjb3BlSWQ9b3IsQy53cD1hdCxPYmplY3QuZGVmaW5lUHJvcGVydHkoQywiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksQ30oe30sYixULGwpO3JldHVybiBrLl9fVFlQRV9fPSJ2dWUiLGt9ZnVuY3Rpb24gd3YodixsLGIpe2xldCBUPWIuVnVlLGs9Yi5zZXRUaW1lb3V0LEM9Yi5jbGVhclRpbWVvdXQsZD1iLnNldEludGVydmFsLG09Yi5jbGVhckludGVydmFsLFI9Yi5fX3VuaUNvbmZpZyxXZT1iLl9fdW5pUm91dGVzLFB0PWIuVnVlU2hhcmVkLFF0PWIuVW5pU2hhcmVkO3ZhciBPPWZ1bmN0aW9uKEoscmUsTG4peyJ1c2Ugc3RyaWN0Ijt2YXIgY249IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8iLEh0PWZ1bmN0aW9uKCl7bGV0IGU9bmV3IFVpbnQ4QXJyYXkoMjU2KTtmb3IodmFyIHQ9MDt0PGNuLmxlbmd0aDt0KyspZVtjbi5jaGFyQ29kZUF0KHQpXT10O3JldHVybiBlfSgpO2Z1bmN0aW9uIEluKGUpe3ZhciB0PW5ldyBVaW50OEFycmF5KGUpLG4scj10Lmxlbmd0aCxzPSIiO2ZvcihuPTA7bjxyO24rPTMpcys9Y25bdFtuXT4+Ml0scys9Y25bKHRbbl0mMyk8PDR8dFtuKzFdPj40XSxzKz1jblsodFtuKzFdJjE1KTw8Mnx0W24rMl0+PjZdLHMrPWNuW3RbbisyXSY2M107cmV0dXJuIHIlMz09PTI/cz1zLnN1YnN0cmluZygwLHMubGVuZ3RoLTEpKyI9IjpyJTM9PT0xJiYocz1zLnN1YnN0cmluZygwLHMubGVuZ3RoLTIpKyI9PSIpLHN9ZnVuY3Rpb24gUnIoZSl7dmFyIHQ9ZS5sZW5ndGgqLjc1LG49ZS5sZW5ndGgscixzPTAsdSxnLEUsJDtlW2UubGVuZ3RoLTFdPT09Ij0iJiYodC0tLGVbZS5sZW5ndGgtMl09PT0iPSImJnQtLSk7dmFyIFA9bmV3IEFycmF5QnVmZmVyKHQpLEw9bmV3IFVpbnQ4QXJyYXkoUCk7Zm9yKHI9MDtyPG47cis9NCl1PUh0W2UuY2hhckNvZGVBdChyKV0sZz1IdFtlLmNoYXJDb2RlQXQocisxKV0sRT1IdFtlLmNoYXJDb2RlQXQocisyKV0sJD1IdFtlLmNoYXJDb2RlQXQociszKV0sTFtzKytdPXU8PDJ8Zz4+NCxMW3MrK109KGcmMTUpPDw0fEU+PjIsTFtzKytdPShFJjMpPDw2fCQmNjM7cmV0dXJuIFB9bGV0IEhyPVsib3JpZ2luYWwiLCJjb21wcmVzc2VkIl0scnI9WyJhbGJ1bSIsImNhbWVyYSJdLG5uPVsiR0VUIiwiT1BUSU9OUyIsIkhFQUQiLCJQT1NUIiwiUFVUIiwiREVMRVRFIiwiVFJBQ0UiLCJDT05ORUNUIiwiUEFUQ0giXTtmdW5jdGlvbiBqdChlLHQpe3JldHVybiFlfHx0LmluZGV4T2YoZSk9PT0tMT90WzBdOmV9ZnVuY3Rpb24gZ24oZSx0KXtyZXR1cm4hSi5pc0FycmF5KGUpfHxlLmxlbmd0aD09PTB8fGUuZmluZChuPT50LmluZGV4T2Yobik9PT0tMSk/dDplfWZ1bmN0aW9uIFJuKGUsdCl7Y29uc29sZS53YXJuKGAke2V9OiAke3R9YCl9ZnVuY3Rpb24geG4oZSx0LG4scil7cnx8KHI9Um4pO2ZvcihsZXQgcyBpbiBuKXtsZXQgdT1LZShzLHRbc10sbltzXSwhSi5oYXNPd24odCxzKSk7Si5pc1N0cmluZyh1KSYmcihlLHUpfX1mdW5jdGlvbiBtcihlLHQsbixyKXtpZighbilyZXR1cm47aWYoIUouaXNBcnJheShuKSlyZXR1cm4geG4oZSx0WzBdfHxPYmplY3QuY3JlYXRlKG51bGwpLG4scik7bGV0IHM9bi5sZW5ndGgsdT10Lmxlbmd0aDtmb3IobGV0IGc9MDtnPHM7ZysrKXtsZXQgRT1uW2ddLCQ9T2JqZWN0LmNyZWF0ZShudWxsKTt1PmcmJigkW0UubmFtZV09dFtnXSkseG4oZSwkLHtbRS5uYW1lXTpFfSxyKX19ZnVuY3Rpb24gS2UoZSx0LG4scil7Si5pc1BsYWluT2JqZWN0KG4pfHwobj17dHlwZTpufSk7bGV0e3R5cGU6cyxyZXF1aXJlZDp1LHZhbGlkYXRvcjpnfT1uO2lmKHUmJnIpcmV0dXJuJ01pc3NpbmcgcmVxdWlyZWQgYXJnczogIicrZSsnIic7aWYoISh0PT1udWxsJiYhdSkpe2lmKHMhPW51bGwpe2xldCBFPSExLCQ9Si5pc0FycmF5KHMpP3M6W3NdLFA9W107Zm9yKGxldCBMPTA7TDwkLmxlbmd0aCYmIUU7TCsrKXtsZXR7dmFsaWQ6QWUsZXhwZWN0ZWRUeXBlOk5lfT13dCh0LCRbTF0pO1AucHVzaChOZXx8IiIpLEU9QWV9aWYoIUUpcmV0dXJuIHJuKGUsdCxQKX1pZihnKXJldHVybiBnKHQpfX1sZXQgZHQ9Si5tYWtlTWFwKCJTdHJpbmcsTnVtYmVyLEJvb2xlYW4sRnVuY3Rpb24sU3ltYm9sIik7ZnVuY3Rpb24gd3QoZSx0KXtsZXQgbixyPU5uKHQpO2lmKGR0KHIpKXtsZXQgcz10eXBlb2YgZTtuPXM9PT1yLnRvTG93ZXJDYXNlKCksIW4mJnM9PT0ib2JqZWN0IiYmKG49ZSBpbnN0YW5jZW9mIHQpfWVsc2Ugcj09PSJPYmplY3QiP249Si5pc09iamVjdChlKTpyPT09IkFycmF5Ij9uPUouaXNBcnJheShlKTpuPWUgaW5zdGFuY2VvZiB0fHxKLnRvUmF3VHlwZShlKT09PU5uKHQpO3JldHVybnt2YWxpZDpuLGV4cGVjdGVkVHlwZTpyfX1mdW5jdGlvbiBybihlLHQsbil7bGV0IHI9YEludmFsaWQgYXJnczogdHlwZSBjaGVjayBmYWlsZWQgZm9yIGFyZ3MgIiR7ZX0iLiBFeHBlY3RlZCAke24ubWFwKEouY2FwaXRhbGl6ZSkuam9pbigiLCAiKX1gLHM9blswXSx1PUoudG9SYXdUeXBlKHQpLGc9SnQodCxzKSxFPUp0KHQsdSk7cmV0dXJuIG4ubGVuZ3RoPT09MSYmRm4ocykmJiFpcihzLHUpJiYocis9YCB3aXRoIHZhbHVlICR7Z31gKSxyKz1gLCBnb3QgJHt1fSBgLEZuKHUpJiYocis9YHdpdGggdmFsdWUgJHtFfS5gKSxyfWZ1bmN0aW9uIE5uKGUpe2xldCB0PWUmJmUudG9TdHJpbmcoKS5tYXRjaCgvXlxzKmZ1bmN0aW9uIChcdyspLyk7cmV0dXJuIHQ/dFsxXToiIn1mdW5jdGlvbiBKdChlLHQpe3JldHVybiB0PT09IlN0cmluZyI/YCIke2V9ImA6dD09PSJOdW1iZXIiP2Ake051bWJlcihlKX1gOmAke2V9YH1mdW5jdGlvbiBGbihlKXtyZXR1cm5bInN0cmluZyIsIm51bWJlciIsImJvb2xlYW4iXS5zb21lKG49PmUudG9Mb3dlckNhc2UoKT09PW4pfWZ1bmN0aW9uIGlyKC4uLmUpe3JldHVybiBlLnNvbWUodD0+dC50b0xvd2VyQ2FzZSgpPT09ImJvb2xlYW4iKX1mdW5jdGlvbiB4aShlKXtyZXR1cm4gZnVuY3Rpb24oKXt0cnl7cmV0dXJuIGUuYXBwbHkoZSxhcmd1bWVudHMpfWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9fX1sZXQgQmk9MSxqbj17fTtmdW5jdGlvbiBqcihlLHQsbixyPSExKXtyZXR1cm4gam5bZV09e25hbWU6dCxrZWVwQWxpdmU6cixjYWxsYmFjazpufSxlfWZ1bmN0aW9uIE1pKGUsdCxuKXtpZih0eXBlb2YgZT09Im51bWJlciIpe2xldCByPWpuW2VdO2lmKHIpcmV0dXJuIHIua2VlcEFsaXZlfHxkZWxldGUgam5bZV0sci5jYWxsYmFjayh0LG4pfXJldHVybiB0fWZ1bmN0aW9uIHBhKGUpe2ZvcihsZXQgdCBpbiBqbilpZihqblt0XS5uYW1lPT09ZSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBKbyhlLHQpe2ZvcihsZXQgbiBpbiBqbil7bGV0IHI9am5bbl07ci5jYWxsYmFjaz09PXQmJnIubmFtZT09PWUmJmRlbGV0ZSBqbltuXX19ZnVuY3Rpb24geHIoZSl7bXQub2ZmKCJhcGkuIitlKX1mdW5jdGlvbiBCcihlKXttdC5vbigiYXBpLiIrZSx0PT57Zm9yKGxldCBuIGluIGpuKXtsZXQgcj1qbltuXTtyLm5hbWU9PT1lJiZyLmNhbGxiYWNrKHQpfX0pfWZ1bmN0aW9uIE1yKGUsdCl7cmV0dXJuIGpyKEJpKyssZSx0LCEwKX1sZXQgZnI9InN1Y2Nlc3MiLGdhPSJmYWlsIixabz0iY29tcGxldGUiO2Z1bmN0aW9uIGhvKGUpe2xldCB0PXt9O2ZvcihsZXQgbiBpbiBlKXtsZXQgcj1lW25dO0ouaXNGdW5jdGlvbihyKSYmKHRbbl09eGkociksZGVsZXRlIGVbbl0pfXJldHVybiB0fWZ1bmN0aW9uIHBvKGUsdCl7cmV0dXJuIWV8fGUuaW5kZXhPZigiOmZhaWwiKT09PS0xP3QrIjpvayI6dCtlLnN1YnN0cmluZyhlLmluZGV4T2YoIjpmYWlsIikpfWZ1bmN0aW9uIGdvKGUsdD17fSx7YmVmb3JlQWxsOm4sYmVmb3JlU3VjY2VzczpyfT17fSl7Si5pc1BsYWluT2JqZWN0KHQpfHwodD17fSk7bGV0e3N1Y2Nlc3M6cyxmYWlsOnUsY29tcGxldGU6Z309aG8odCksRT1KLmlzRnVuY3Rpb24ocyksJD1KLmlzRnVuY3Rpb24odSksUD1KLmlzRnVuY3Rpb24oZyksTD1CaSsrO3JldHVybiBqcihMLGUsQWU9PntBZT1BZXx8e30sQWUuZXJyTXNnPXBvKEFlLmVyck1zZyxlKSxKLmlzRnVuY3Rpb24obikmJm4oQWUpLEFlLmVyck1zZz09PWUrIjpvayI/KEouaXNGdW5jdGlvbihyKSYmcihBZSx0KSxFJiZzKEFlKSk6JCYmdShBZSksUCYmZyhBZSl9KSxMfWxldCB2YT0ic3VjY2VzcyIsQm89ImZhaWwiLEtuPSJjb21wbGV0ZSIsX3I9e30sZHI9e307ZnVuY3Rpb24gRG4oZSx0KXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGUobix0KXx8bn19ZnVuY3Rpb24gWGkoZSx0LG4pe2xldCByPSExO2ZvcihsZXQgcz0wO3M8ZS5sZW5ndGg7cysrKXtsZXQgdT1lW3NdO2lmKHIpcj1Qcm9taXNlLnJlc29sdmUoRG4odSxuKSk7ZWxzZXtsZXQgZz11KHQsbik7aWYoSi5pc1Byb21pc2UoZykmJihyPVByb21pc2UucmVzb2x2ZShnKSksZz09PSExKXJldHVybnt0aGVuKCl7fSxjYXRjaCgpe319fX1yZXR1cm4gcnx8e3RoZW4ocyl7cmV0dXJuIHModCl9LGNhdGNoKCl7fX19ZnVuY3Rpb24gWG8oZSx0PXt9KXtyZXR1cm5bdmEsQm8sS25dLmZvckVhY2gobj0+e2xldCByPWVbbl07aWYoIUouaXNBcnJheShyKSlyZXR1cm47bGV0IHM9dFtuXTt0W25dPWZ1bmN0aW9uKGcpe1hpKHIsZyx0KS50aGVuKEU9PkouaXNGdW5jdGlvbihzKSYmcyhFKXx8RSl9fSksdH1mdW5jdGlvbiBNbyhlLHQpe2xldCBuPVtdO0ouaXNBcnJheShfci5yZXR1cm5WYWx1ZSkmJm4ucHVzaCguLi5fci5yZXR1cm5WYWx1ZSk7bGV0IHI9ZHJbZV07cmV0dXJuIHImJkouaXNBcnJheShyLnJldHVyblZhbHVlKSYmbi5wdXNoKC4uLnIucmV0dXJuVmFsdWUpLG4uZm9yRWFjaChzPT57dD1zKHQpfHx0fSksdH1mdW5jdGlvbiBvaShlKXtsZXQgdD1PYmplY3QuY3JlYXRlKG51bGwpO09iamVjdC5rZXlzKF9yKS5mb3JFYWNoKHI9PntyIT09InJldHVyblZhbHVlIiYmKHRbcl09X3Jbcl0uc2xpY2UoKSl9KTtsZXQgbj1kcltlXTtyZXR1cm4gbiYmT2JqZWN0LmtleXMobikuZm9yRWFjaChyPT57ciE9PSJyZXR1cm5WYWx1ZSImJih0W3JdPSh0W3JdfHxbXSkuY29uY2F0KG5bcl0pKX0pLHR9ZnVuY3Rpb24gYWkoZSx0LG4scil7bGV0IHM9b2koZSk7cmV0dXJuIHMmJk9iamVjdC5rZXlzKHMpLmxlbmd0aD9KLmlzQXJyYXkocy5pbnZva2UpP1hpKHMuaW52b2tlLG4pLnRoZW4oZz0+dChYbyhvaShlKSxnKSwuLi5yKSk6dChYbyhzLG4pLC4uLnIpOnQobiwuLi5yKX1mdW5jdGlvbiBRaShlKXtyZXR1cm4hIShKLmlzUGxhaW5PYmplY3QoZSkmJltmcixnYSxab10uZmluZCh0PT5KLmlzRnVuY3Rpb24oZVt0XSkpKX1mdW5jdGlvbiBUcihlKXtyZXR1cm4gZX1mdW5jdGlvbiBrbihlLHQpe3JldHVybihuPXt9LC4uLnIpPT5RaShuKT9NbyhlLGFpKGUsdCxuLHIpKTpNbyhlLG5ldyBQcm9taXNlKChzLHUpPT57YWkoZSx0LEouZXh0ZW5kKG4se3N1Y2Nlc3M6cyxmYWlsOnV9KSxyKX0pKX1mdW5jdGlvbiB2byhlLHQpe2xldCBuPWVbMF07aWYoIXR8fCFKLmlzUGxhaW5PYmplY3QodC5mb3JtYXRBcmdzKSYmSi5pc1BsYWluT2JqZWN0KG4pKXJldHVybjtsZXQgcj10LmZvcm1hdEFyZ3Mscz1PYmplY3Qua2V5cyhyKTtmb3IobGV0IHU9MDt1PHMubGVuZ3RoO3UrKyl7bGV0IGc9c1t1XSxFPXJbZ107aWYoSi5pc0Z1bmN0aW9uKEUpKXtsZXQgJD1FKGVbMF1bZ10sbik7aWYoSi5pc1N0cmluZygkKSlyZXR1cm4gJH1lbHNlIEouaGFzT3duKG4sZyl8fChuW2ddPUUpfX1mdW5jdGlvbiBtbyhlLHQsbil7cmV0dXJuIE1pKGUsSi5leHRlbmQobnx8e30se2Vyck1zZzp0KyI6b2sifSkpfWZ1bmN0aW9uIERvKGUsdCxuLHIpe3JldHVybiBNaShlLEouZXh0ZW5kKHtlcnJNc2c6dCsiOmZhaWwiKyhuPyIgIituOiIiKX0scikpfWZ1bmN0aW9uIF9vKGUsdCxuLHIpe2lmKHImJnIuYmVmb3JlSW52b2tlKXtsZXQgdT1yLmJlZm9yZUludm9rZSh0KTtpZihKLmlzU3RyaW5nKHUpKXJldHVybiB1fWxldCBzPXZvKHQscik7aWYocylyZXR1cm4gc31mdW5jdGlvbiBMbyhlKXtpZighSi5pc0Z1bmN0aW9uKGUpKXRocm93IG5ldyBFcnJvcignSW52YWxpZCBhcmdzOiB0eXBlIGNoZWNrIGZhaWxlZCBmb3IgYXJncyAiY2FsbGJhY2siLiBFeHBlY3RlZCBGdW5jdGlvbicpfWZ1bmN0aW9uIHNpKGUsdCxuKXtyZXR1cm4gcj0+e0xvKHIpO2xldCBzPV9vKGUsW3JdLHZvaWQgMCxuKTtpZihzKXRocm93IG5ldyBFcnJvcihzKTtsZXQgdT0hcGEoZSk7TXIoZSxyKSx1JiYoQnIoZSksdCgpKX19ZnVuY3Rpb24geW4oZSx0LG4pe3JldHVybiByPT57TG8ocik7bGV0IHM9X28oZSxbcl0sdm9pZCAwLG4pO2lmKHMpdGhyb3cgbmV3IEVycm9yKHMpO2U9ZS5yZXBsYWNlKCJvZmYiLCJvbiIpLEpvKGUscikscGEoZSl8fCh4cihlKSx0KCkpfX1mdW5jdGlvbiBFbihlKXtyZXR1cm4hZXx8Si5pc1N0cmluZyhlKT9lOmUuc3RhY2s/KGNvbnNvbGUuZXJyb3IoZS5tZXNzYWdlK3JlLkxJTkVGRUVEK2Uuc3RhY2spLGUubWVzc2FnZSk6ZX1mdW5jdGlvbiBsaShlLHQsbixyKXtyZXR1cm4gcz0+e2xldCB1PWdvKGUscyxyKSxnPV9vKGUsW3NdLG4scik7cmV0dXJuIGc/RG8odSxlLGcpOnQocyx7cmVzb2x2ZTpFPT5tbyh1LGUsRSkscmVqZWN0OihFLCQpPT5Ebyh1LGUsRW4oRSksJCl9KX19ZnVuY3Rpb24gRm8oZSx0LG4scil7cmV0dXJuKC4uLnMpPT57bGV0IHU9X28oZSxzLG4scik7aWYodSl0aHJvdyBuZXcgRXJyb3IodSk7cmV0dXJuIHQuYXBwbHkobnVsbCxzKX19ZnVuY3Rpb24gcWEoZSx0LG4scil7cmV0dXJuIGxpKGUsdCxuLHIpfWZ1bmN0aW9uIEpuKGUsdCxuKXtyZXR1cm4gc2koZSx0LG4pfWZ1bmN0aW9uIG9yKGUsdCxuKXtyZXR1cm4geW4oZSx0LG4pfWZ1bmN0aW9uIGNpKGUsdCxuLHIpe3JldHVybiBrbihlLGxpKGUsdCx2b2lkIDAscikpfWZ1bmN0aW9uIEJ0KGUsdCxuLHIpe3JldHVybiBGbyhlLHQsdm9pZCAwLHIpfWZ1bmN0aW9uIHhlKGUsdCxuLHIpe3JldHVybiBrbihlLHFhKGUsdCx2b2lkIDAscikpfWxldCBibz0iYmFzZTY0VG9BcnJheUJ1ZmZlciIsZW89W3tuYW1lOiJiYXNlNjQiLHR5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfV0sVm89ImFycmF5QnVmZmVyVG9CYXNlNjQiLG1hPVt7bmFtZToiYXJyYXlCdWZmZXIiLHR5cGU6W0FycmF5QnVmZmVyLFVpbnQ4QXJyYXldLHJlcXVpcmVkOiEwfV0sUW89QnQoYm8sZT0+UnIoZSksZW8pLERpPUJ0KFZvLGU9PkluKGUpLG1hKTtmdW5jdGlvbiB5bygpe2lmKHR5cGVvZiBfX1NZU1RFTV9JTkZPX18hPSJ1bmRlZmluZWQiKXJldHVybiB3aW5kb3cuX19TWVNURU1fSU5GT19fO2xldHtyZXNvbHV0aW9uV2lkdGg6ZX09bC5zY3JlZW4uZ2V0Q3VycmVudFNpemUoKXx8e3Jlc29sdXRpb25XaWR0aDowfTtyZXR1cm57cGxhdGZvcm06KGwub3MubmFtZXx8IiIpLnRvTG93ZXJDYXNlKCkscGl4ZWxSYXRpbzpsLnNjcmVlbi5zY2FsZSx3aW5kb3dXaWR0aDpNYXRoLnJvdW5kKGUpfX1mdW5jdGlvbiBJcihlLHQsbil7ZS4kcGFnZS5tZXRhLmlzTlZ1ZT9UYShlLHQsbik6RWkoZSx0LG4pfWZ1bmN0aW9uIEVpKGUsdCxuKXttdC5pbnZva2VWaWV3TWV0aG9kKCJyZXF1ZXN0Q29tcG9uZW50SW5mbyIse3JlcXM6dC5tYXAocj0+KHIuY29tcG9uZW50JiYoci5jb21wb25lbnQ9ci5jb21wb25lbnQuJGVsLm5vZGVJZCkscikpfSxlLiRwYWdlLmlkLG4pfWZ1bmN0aW9uIFRhKGUsdCxuKXtsZXQgcj1vbih0KSxzPW5ldyBBcnJheShyLmxlbmd0aCk7RW8ocixlLiRlbCxzKSx1aShlLiRyZXF1aXJlTmF0aXZlUGx1Z2luKCJkb20iKSxzLDAsW10sdT0+e24odSl9KX1mdW5jdGlvbiBvbihlKXtsZXQgdD1bXTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7bGV0IHI9ZVtuXS5zZWxlY3RvcjtyLmluZGV4T2YoIiMiKT09PTAmJnQucHVzaChyLnN1YnN0cmluZygxKSl9cmV0dXJuIHR9ZnVuY3Rpb24gRW8oZSx0LG4pe2xldCByPXQuY2hpbGRyZW47aWYoIUouaXNBcnJheShyKSlyZXR1cm4hMTtmb3IobGV0IHM9MDtzPHIubGVuZ3RoO3MrKyl7bGV0IHU9cltzXTtpZih1LmF0dHIpe2xldCBnPWUuaW5kZXhPZih1LmF0dHIuaWQpO2lmKGc+PTAmJihuW2ddPXtpZDplW2ddLHJlZjp1LnJlZixkYXRhc2V0OnJlLnBhcnNlTlZ1ZURhdGFzZXQodS5hdHRyKX0sZS5sZW5ndGg9PT0xKSlicmVha311LmNoaWxkcmVuJiZFbyhlLHUsbil9fWZ1bmN0aW9uIHVpKGUsdCxuLHIscyl7bGV0IHU9dFtuXTtlLmdldENvbXBvbmVudFJlY3QodS5yZWYsZz0+e2cuc2l6ZS5pZD11LmlkLGcuc2l6ZS5kYXRhc2V0PXUuZGF0YXNldCxyLnB1c2goZy5zaXplKSxuKz0xLG48dC5sZW5ndGg/dWkoZSx0LG4scixzKTpzKHIpfSl9ZnVuY3Rpb24gd24oZSx0KXttdC5pbnZva2VWaWV3TWV0aG9kKCJzZXRQYWdlTWV0YSIsdCxlLiRwYWdlLmlkKX1sZXQgZmk9ZT0+ZSE9PW51bGwmJnR5cGVvZiBlPT0ib2JqZWN0Iixacj1bInsiLCJ9Il07Y2xhc3MgaHJ7Y29uc3RydWN0b3IoKXt0aGlzLl9jYWNoZXM9T2JqZWN0LmNyZWF0ZShudWxsKX1pbnRlcnBvbGF0ZSh0LG4scj1acil7aWYoIW4pcmV0dXJuW3RdO2xldCBzPXRoaXMuX2NhY2hlc1t0XTtyZXR1cm4gc3x8KHM9ZWEodCxyKSx0aGlzLl9jYWNoZXNbdF09cyksdG8ocyxuKX19bGV0IEthPS9eKD86XGQpKy8sSWE9L14oPzpcdykrLztmdW5jdGlvbiBlYShlLFt0LG5dKXtsZXQgcj1bXSxzPTAsdT0iIjtmb3IoO3M8ZS5sZW5ndGg7KXtsZXQgZz1lW3MrK107aWYoZz09PXQpe3UmJnIucHVzaCh7dHlwZToidGV4dCIsdmFsdWU6dX0pLHU9IiI7bGV0IEU9IiI7Zm9yKGc9ZVtzKytdO2chPT12b2lkIDAmJmchPT1uOylFKz1nLGc9ZVtzKytdO2xldCAkPWc9PT1uLFA9S2EudGVzdChFKT8ibGlzdCI6JCYmSWEudGVzdChFKT8ibmFtZWQiOiJ1bmtub3duIjtyLnB1c2goe3ZhbHVlOkUsdHlwZTpQfSl9ZWxzZSB1Kz1nfXJldHVybiB1JiZyLnB1c2goe3R5cGU6InRleHQiLHZhbHVlOnV9KSxyfWZ1bmN0aW9uIHRvKGUsdCl7bGV0IG49W10scj0wLHM9QXJyYXkuaXNBcnJheSh0KT8ibGlzdCI6ZmkodCk/Im5hbWVkIjoidW5rbm93biI7aWYocz09PSJ1bmtub3duIilyZXR1cm4gbjtmb3IoO3I8ZS5sZW5ndGg7KXtsZXQgdT1lW3JdO3N3aXRjaCh1LnR5cGUpe2Nhc2UidGV4dCI6bi5wdXNoKHUudmFsdWUpO2JyZWFrO2Nhc2UibGlzdCI6bi5wdXNoKHRbcGFyc2VJbnQodS52YWx1ZSwxMCldKTticmVhaztjYXNlIm5hbWVkIjpzPT09Im5hbWVkIiYmbi5wdXNoKHRbdS52YWx1ZV0pO2JyZWFrO2Nhc2UidW5rbm93biI6YnJlYWt9cisrfXJldHVybiBufWxldCBabj0iemgtSGFucyIsYXI9InpoLUhhbnQiLFZuPSJlbiIsWHI9ImZyIixkaT0iZXMiLHRhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksd2k9KGUsdCk9PnRhLmNhbGwoZSx0KSxoaT1uZXcgaHI7ZnVuY3Rpb24gd28oZSx0KXtyZXR1cm4hIXQuZmluZChuPT5lLmluZGV4T2YobikhPT0tMSl9ZnVuY3Rpb24gX2EoZSx0KXtyZXR1cm4gdC5maW5kKG49PmUuaW5kZXhPZihuKT09PTApfWZ1bmN0aW9uIFNpKGUsdCl7aWYoIWUpcmV0dXJuO2lmKGU9ZS50cmltKCkucmVwbGFjZSgvXy9nLCItIiksdCYmdFtlXSlyZXR1cm4gZTtpZihlPWUudG9Mb3dlckNhc2UoKSxlPT09ImNoaW5lc2UiKXJldHVybiBabjtpZihlLmluZGV4T2YoInpoIik9PT0wKXJldHVybiBlLmluZGV4T2YoIi1oYW5zIik+LTE/Wm46ZS5pbmRleE9mKCItaGFudCIpPi0xfHx3byhlLFsiLXR3IiwiLWhrIiwiLW1vIiwiLWNodCJdKT9hcjpabjtsZXQgbj1fYShlLFtWbixYcixkaV0pO2lmKG4pcmV0dXJuIG59Y2xhc3MgTGl7Y29uc3RydWN0b3Ioe2xvY2FsZTp0LGZhbGxiYWNrTG9jYWxlOm4sbWVzc2FnZXM6cix3YXRjaGVyOnMsZm9ybWF0ZXI6dX0pe3RoaXMubG9jYWxlPVZuLHRoaXMuZmFsbGJhY2tMb2NhbGU9Vm4sdGhpcy5tZXNzYWdlPXt9LHRoaXMubWVzc2FnZXM9e30sdGhpcy53YXRjaGVycz1bXSxuJiYodGhpcy5mYWxsYmFja0xvY2FsZT1uKSx0aGlzLmZvcm1hdGVyPXV8fGhpLHRoaXMubWVzc2FnZXM9cnx8e30sdGhpcy5zZXRMb2NhbGUodHx8Vm4pLHMmJnRoaXMud2F0Y2hMb2NhbGUocyl9c2V0TG9jYWxlKHQpe2xldCBuPXRoaXMubG9jYWxlO3RoaXMubG9jYWxlPVNpKHQsdGhpcy5tZXNzYWdlcyl8fHRoaXMuZmFsbGJhY2tMb2NhbGUsdGhpcy5tZXNzYWdlc1t0aGlzLmxvY2FsZV18fCh0aGlzLm1lc3NhZ2VzW3RoaXMubG9jYWxlXT17fSksdGhpcy5tZXNzYWdlPXRoaXMubWVzc2FnZXNbdGhpcy5sb2NhbGVdLG4hPT10aGlzLmxvY2FsZSYmdGhpcy53YXRjaGVycy5mb3JFYWNoKHI9PntyKHRoaXMubG9jYWxlLG4pfSl9Z2V0TG9jYWxlKCl7cmV0dXJuIHRoaXMubG9jYWxlfXdhdGNoTG9jYWxlKHQpe2xldCBuPXRoaXMud2F0Y2hlcnMucHVzaCh0KS0xO3JldHVybigpPT57dGhpcy53YXRjaGVycy5zcGxpY2UobiwxKX19YWRkKHQsbixyPSEwKXtsZXQgcz10aGlzLm1lc3NhZ2VzW3RdO3M/cj9PYmplY3QuYXNzaWduKHMsbik6T2JqZWN0LmtleXMobikuZm9yRWFjaCh1PT57d2kocyx1KXx8KHNbdV09blt1XSl9KTp0aGlzLm1lc3NhZ2VzW3RdPW59Zih0LG4scil7cmV0dXJuIHRoaXMuZm9ybWF0ZXIuaW50ZXJwb2xhdGUodCxuLHIpLmpvaW4oIiIpfXQodCxuLHIpe2xldCBzPXRoaXMubWVzc2FnZTtyZXR1cm4gdHlwZW9mIG49PSJzdHJpbmciPyhuPVNpKG4sdGhpcy5tZXNzYWdlcyksbiYmKHM9dGhpcy5tZXNzYWdlc1tuXSkpOnI9bix3aShzLHQpP3RoaXMuZm9ybWF0ZXIuaW50ZXJwb2xhdGUoc1t0XSxyKS5qb2luKCIiKTooY29uc29sZS53YXJuKGBDYW5ub3QgdHJhbnNsYXRlIHRoZSB2YWx1ZSBvZiBrZXlwYXRoICR7dH0uIFVzZSB0aGUgdmFsdWUgb2Yga2V5cGF0aCBhcyBkZWZhdWx0LmApLHQpfX1mdW5jdGlvbiBzcihlLHQpe2UuJHdhdGNoTG9jYWxlP2UuJHdhdGNoTG9jYWxlKG49Pnt0LnNldExvY2FsZShuKX0pOmUuJHdhdGNoKCgpPT5lLiRsb2NhbGUsbj0+e3Quc2V0TG9jYWxlKG4pfSl9ZnVuY3Rpb24gRHIoKXtyZXR1cm4gdHlwZW9mIGllIT0idW5kZWZpbmVkIiYmaWUuZ2V0TG9jYWxlP2llLmdldExvY2FsZSgpOnR5cGVvZiBnbG9iYWwhPSJ1bmRlZmluZWQiJiZnbG9iYWwuZ2V0TG9jYWxlP2dsb2JhbC5nZXRMb2NhbGUoKTpWbn1mdW5jdGlvbiBubyhlLHQ9e30sbixyKXt0eXBlb2YgZSE9InN0cmluZyImJihbZSx0XT1bdCxlXSksdHlwZW9mIGUhPSJzdHJpbmciJiYoZT1EcigpKSx0eXBlb2YgbiE9InN0cmluZyImJihuPXR5cGVvZiBSIT0idW5kZWZpbmVkIiYmUi5mYWxsYmFja0xvY2FsZXx8Vm4pO2xldCBzPW5ldyBMaSh7bG9jYWxlOmUsZmFsbGJhY2tMb2NhbGU6bixtZXNzYWdlczp0LHdhdGNoZXI6cn0pLHU9KGcsRSk9PntpZih0eXBlb2YgVG4hPSJmdW5jdGlvbiIpdT1mdW5jdGlvbigkLFApe3JldHVybiBzLnQoJCxQKX07ZWxzZXtsZXQgJD0hMTt1PWZ1bmN0aW9uKFAsTCl7bGV0IEFlPVRuKCkuJHZtO3JldHVybiBBZSYmKEFlLiRsb2NhbGUsJHx8KCQ9ITAsc3IoQWUscykpKSxzLnQoUCxMKX19cmV0dXJuIHUoZyxFKX07cmV0dXJue2kxOG46cyxmKGcsRSwkKXtyZXR1cm4gcy5mKGcsRSwkKX0sdChnLEUpe3JldHVybiB1KGcsRSl9LGFkZChnLEUsJD0hMCl7cmV0dXJuIHMuYWRkKGcsRSwkKX0sd2F0Y2goZyl7cmV0dXJuIHMud2F0Y2hMb2NhbGUoZyl9LGdldExvY2FsZSgpe3JldHVybiBzLmdldExvY2FsZSgpfSxzZXRMb2NhbGUoZyl7cmV0dXJuIHMuc2V0TG9jYWxlKGcpfX19ZnVuY3Rpb24gJG8oZSx0KXtyZXR1cm4gZS5pbmRleE9mKHRbMF0pPi0xfWxldCBTbz1yZS5vbmNlKCgpPT50eXBlb2YgUiE9InVuZGVmaW5lZCImJlIubG9jYWxlcyYmISFPYmplY3Qua2V5cyhSLmxvY2FsZXMpLmxlbmd0aCksQ2k7ZnVuY3Rpb24gcGkoKXtsZXQgZT1pZS5nZXRMb2NhbGUoKSx0PVIubG9jYWxlcztyZXR1cm4gdFtlXXx8dFtSLmZhbGxiYWNrTG9jYWxlXXx8dC5lbnx8e319ZnVuY3Rpb24gVW8oZSl7cmV0dXJuICRvKGUscmUuSTE4Tl9KU09OX0RFTElNSVRFUlMpP2NlKCkuZihlLHBpKCkscmUuSTE4Tl9KU09OX0RFTElNSVRFUlMpOmV9ZnVuY3Rpb24gTShlLHQpe2lmKHQubGVuZ3RoPT09MSl7aWYoZSl7bGV0IHI9RT0+Si5pc1N0cmluZyhFKSYmJG8oRSxyZS5JMThOX0pTT05fREVMSU1JVEVSUykscz10WzBdLHU9W107aWYoSi5pc0FycmF5KGUpJiYodT1lLmZpbHRlcihFPT5yKEVbc10pKSkubGVuZ3RoKXJldHVybiB1O2xldCBnPWVbdFswXV07aWYocihnKSlyZXR1cm4gZX1yZXR1cm59bGV0IG49dC5zaGlmdCgpO3JldHVybiBNKGUmJmVbbl0sdCl9ZnVuY3Rpb24gWihlLHQpe3JldHVybiB0Lm1hcChuPT52ZShlLG4pKX1mdW5jdGlvbiB2ZShlLHQpe2xldCBuPU0oZSx0KTtpZighbilyZXR1cm4hMTtsZXQgcj10W3QubGVuZ3RoLTFdO2lmKEouaXNBcnJheShuKSluLmZvckVhY2gocz0+dmUocyxbcl0pKTtlbHNle2xldCBzPW5bcl07T2JqZWN0LmRlZmluZVByb3BlcnR5KG4scix7Z2V0KCl7cmV0dXJuIFVvKHMpfSxzZXQodSl7cz11fX0pfXJldHVybiEwfWZ1bmN0aW9uIGNlKCl7aWYoIUNpKXtsZXQgZTtpZih0eXBlb2YgVG49PSJmdW5jdGlvbiI/ZT12LnJlcXVpcmVNb2R1bGUoInBsdXMiKS5nZXRMYW5ndWFnZSgpOmU9bC53ZWJ2aWV3LmN1cnJlbnRXZWJ2aWV3KCkuZ2V0U3R5bGUoKS5sb2NhbGUsQ2k9bm8oZSksU28oKSl7bGV0IHQ9T2JqZWN0LmtleXMoUi5sb2NhbGVzfHx7fSk7dC5sZW5ndGgmJnQuZm9yRWFjaChuPT5DaS5hZGQobixSLmxvY2FsZXNbbl0pKSxDaS5zZXRMb2NhbGUoZSl9fXJldHVybiBDaX1mdW5jdGlvbiBoZShlLHQsbil7cmV0dXJuIHQucmVkdWNlKChyLHMsdSk9PihyW2Urc109blt1XSxyKSx7fSl9bGV0IFN0PXJlLm9uY2UoKCk9PntsZXQgZT0idW5pLmFwcC4iLHQ9WyJxdWl0Il07Y2UoKS5hZGQoVm4saGUoZSx0LFsiUHJlc3MgYmFjayBidXR0b24gYWdhaW4gdG8gZXhpdCJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiUHVsc2Ugb3RyYSB2ZXogcGFyYSBzYWxpciJdKSwhMSksY2UoKS5hZGQoWHIsaGUoZSx0LFsiQXBwdXlleiBceEUwIG5vdXZlYXUgcG91ciBxdWl0dGVyIGwnYXBwbGljYXRpb24iXSksITEpLGNlKCkuYWRkKFpuLGhlKGUsdCxbIlx1NTE4RFx1NjMwOVx1NEUwMFx1NkIyMVx1OTAwMFx1NTFGQVx1NUU5NFx1NzUyOCJdKSwhMSksY2UoKS5hZGQoYXIsaGUoZSx0LFsiXHU1MThEXHU2MzA5XHU0RTAwXHU2QjIxXHU5MDAwXHU1MUZBXHU2MUM5XHU3NTI4Il0pLCExKX0pLEs9cmUub25jZSgoKT0+e2xldCBlPSJ1bmkuc2hvd0FjdGlvblNoZWV0LiIsdD1bImNhbmNlbCJdO2NlKCkuYWRkKFZuLGhlKGUsdCxbIkNhbmNlbCJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiQ2FuY2VsYXIiXSksITEpLGNlKCkuYWRkKFhyLGhlKGUsdCxbIkFubnVsZXIiXSksITEpLGNlKCkuYWRkKFpuLGhlKGUsdCxbIlx1NTNENlx1NkQ4OCJdKSwhMSksY2UoKS5hZGQoYXIsaGUoZSx0LFsiXHU1M0Q2XHU2RDg4Il0pLCExKX0pLFk9cmUub25jZSgoKT0+e2xldCBlPSJ1bmkuc2hvd01vZGFsLiIsdD1bImNhbmNlbCIsImNvbmZpcm0iXTtjZSgpLmFkZChWbixoZShlLHQsWyJDYW5jZWwiLCJPSyJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiQ2FuY2VsYXIiLCJPSyJdKSwhMSksY2UoKS5hZGQoWHIsaGUoZSx0LFsiQW5udWxlciIsIk9LIl0pLCExKSxjZSgpLmFkZChabixoZShlLHQsWyJcdTUzRDZcdTZEODgiLCJcdTc4NkVcdTVCOUEiXSksITEpLGNlKCkuYWRkKGFyLGhlKGUsdCxbIlx1NTNENlx1NkQ4OCIsIlx1NzhCQVx1NUI5QSJdKSwhMSl9KSx1ZT1yZS5vbmNlKCgpPT57bGV0IGU9InVuaS5jaG9vc2VJbWFnZS4iLHQ9WyJjYW5jZWwiLCJzb3VyY2VUeXBlLmFsYnVtIiwic291cmNlVHlwZS5jYW1lcmEiXTtjZSgpLmFkZChWbixoZShlLHQsWyJDYW5jZWwiLCJBbGJ1bSIsIkNhbWVyYSJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiQ2FuY2VsYXIiLCJceEMxbGJ1bSIsIkNceEUxbWFyYSJdKSwhMSksY2UoKS5hZGQoWHIsaGUoZSx0LFsiQW5udWxlciIsIkFsYnVtIiwiQ2FtXHhFOXJhIl0pLCExKSxjZSgpLmFkZChabixoZShlLHQsWyJcdTUzRDZcdTZEODgiLCJcdTRFQ0VcdTc2RjhcdTUxOENcdTkwMDlcdTYyRTkiLCJcdTYyQ0RcdTY0NDQiXSksITEpLGNlKCkuYWRkKGFyLGhlKGUsdCxbIlx1NTNENlx1NkQ4OCIsIlx1NUY5RVx1NzZGOFx1NTE4QVx1OTA3OFx1NjRDNyIsIlx1NjJDRFx1NjUxRCJdKSwhMSl9KSxCZT1yZS5vbmNlKCgpPT57bGV0IGU9InVuaS5jaG9vc2VWaWRlby4iLHQ9WyJjYW5jZWwiLCJzb3VyY2VUeXBlLmFsYnVtIiwic291cmNlVHlwZS5jYW1lcmEiXTtjZSgpLmFkZChWbixoZShlLHQsWyJDYW5jZWwiLCJBbGJ1bSIsIkNhbWVyYSJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiQ2FuY2VsYXIiLCJceEMxbGJ1bSIsIkNceEUxbWFyYSJdKSwhMSksY2UoKS5hZGQoWHIsaGUoZSx0LFsiQW5udWxlciIsIkFsYnVtIiwiQ2FtXHhFOXJhIl0pLCExKSxjZSgpLmFkZChabixoZShlLHQsWyJcdTUzRDZcdTZEODgiLCJcdTRFQ0VcdTc2RjhcdTUxOENcdTkwMDlcdTYyRTkiLCJcdTYyQ0RcdTY0NDQiXSksITEpLGNlKCkuYWRkKGFyLGhlKGUsdCxbIlx1NTNENlx1NkQ4OCIsIlx1NUY5RVx1NzZGOFx1NTE4QVx1OTA3OFx1NjRDNyIsIlx1NjJDRFx1NjUxRCJdKSwhMSl9KSxsdD1yZS5vbmNlKCgpPT57bGV0IGU9InVuaS5wcmV2aWV3SW1hZ2UuIix0PVsiY2FuY2VsIiwiYnV0dG9uLnNhdmUiLCJzYXZlLnN1Y2Nlc3MiLCJzYXZlLmZhaWwiXTtjZSgpLmFkZChWbixoZShlLHQsWyJDYW5jZWwiLCJTYXZlIEltYWdlIiwiU2F2ZWQgc3VjY2Vzc2Z1bGx5IiwiU2F2ZSBmYWlsZWQiXSksITEpLGNlKCkuYWRkKGRpLGhlKGUsdCxbIkNhbmNlbGFyIiwiR3VhcmRhciBpbWFnZW4iLCJHdWFyZGFkbyBleGl0b3NhbWVudGUiLCJFcnJvciBhbCBndWFyZGFyIl0pLCExKSxjZSgpLmFkZChYcixoZShlLHQsWyJBbm51bGVyIiwiR3VhcmRhciBpbWFnZW4iLCJFbnJlZ2lzdHJceEU5IGF2ZWMgc3VjY1x4RThzIiwiXHhDOWNoZWMgZGUgbGEgc2F1dmVnYXJkZSJdKSwhMSksY2UoKS5hZGQoWm4saGUoZSx0LFsiXHU1M0Q2XHU2RDg4IiwiXHU0RkREXHU1QjU4XHU1NkZFXHU1MENGIiwiXHU0RkREXHU1QjU4XHU1NkZFXHU1MENGXHU1MjMwXHU3NkY4XHU1MThDXHU2MjEwXHU1MjlGIiwiXHU0RkREXHU1QjU4XHU1NkZFXHU1MENGXHU1MjMwXHU3NkY4XHU1MThDXHU1OTMxXHU4RDI1Il0pLCExKSxjZSgpLmFkZChhcixoZShlLHQsWyJcdTUzRDZcdTZEODgiLCJcdTRGRERcdTVCNThcdTU3MTZcdTUwQ0YiLCJcdTRGRERcdTVCNThcdTU3MTZcdTUwQ0ZcdTUyMzBcdTc2RjhcdTUxOEFcdTYyMTBcdTUyOUYiLCJcdTRGRERcdTVCNThcdTU3MTZcdTUwQ0ZcdTUyMzBcdTc2RjhcdTUxOEFcdTU5MzFcdTY1NTciXSksITEpfSksenQ9cmUub25jZSgoKT0+e2xldCBlPSJ1bmkuc2V0Q2xpcGJvYXJkRGF0YS4iLHQ9WyJzdWNjZXNzIiwiZmFpbCJdO2NlKCkuYWRkKFZuLGhlKGUsdCxbIkNvbnRlbnQgY29waWVkIiwiQ29weSBmYWlsZWQsIHBsZWFzZSBjb3B5IG1hbnVhbGx5Il0pLCExKSxjZSgpLmFkZChkaSxoZShlLHQsWyJDb250ZW5pZG8gY29waWFkbyIsIkVycm9yIGFsIGNvcGlhciwgY29waWUgbWFudWFsbWVudGUiXSksITEpLGNlKCkuYWRkKFhyLGhlKGUsdCxbIkNvbnRlbnUgY29waVx4RTkiLCJceEM5Y2hlYyBkZSBsYSBjb3BpZSwgY29waWV6IG1hbnVlbGxlbWVudCJdKSwhMSksY2UoKS5hZGQoWm4saGUoZSx0LFsiXHU1MTg1XHU1QkI5XHU1REYyXHU1OTBEXHU1MjM2IiwiXHU1OTBEXHU1MjM2XHU1OTMxXHU4RDI1XHVGRjBDXHU4QkY3XHU2MjRCXHU1MkE4XHU1OTBEXHU1MjM2Il0pLCExKSxjZSgpLmFkZChhcixoZShlLHQsWyJcdTUxNjdcdTVCQjlcdTVERjJcdTVGQTlcdTUyMzYiLCJcdTVGQTlcdTUyMzZcdTU5MzFcdTY1NTdcdUZGMENcdThBQ0JcdTYyNEJcdTUyRDVcdTVGQTlcdTg4RkQiXSksITEpfSksU249cmUub25jZSgoKT0+e2xldCBlPSJ1bmkuc2NhbkNvZGUuIix0PVsidGl0bGUiLCJhbGJ1bSIsImZhaWwiLCJmbGFzaC5vbiIsImZsYXNoLm9mZiJdO2NlKCkuYWRkKFZuLGhlKGUsdCxbIlNjYW4gY29kZSIsIkFsYnVtIiwiUmVjb2duaXRpb24gZmFpbHVyZSIsIlRhcCB0byB0dXJuIGxpZ2h0IG9uIiwiVGFwIHRvIHR1cm4gbGlnaHQgb2ZmIl0pLCExKSxjZSgpLmFkZChkaSxoZShlLHQsWyJDXHhGM2RpZ28gZGUgZXNjYW5lbyIsIlx4QzFsYnVtIiwiXHhDOWNoZWMgZGUgbGEgcmVjb25uYWlzc2FuY2UiLCJUb3F1ZSBwYXJhIGVuY2VuZGVyIGxhIGx1eiIsIlRvcXVlIHBhcmEgYXBhZ2FyIGxhIGx1eiJdKSwhMSksY2UoKS5hZGQoWHIsaGUoZSx0LFsiQ29kZSBkXHUyMDE5YW5hbHlzZSIsIkFsYnVtIiwiRmFsbG8gZGUgcmVjb25vY2ltaWVudG8iLCJBcHB1eWV6IHBvdXIgYWN0aXZlciBsJ1x4RTljbGFpcmFnZSIsIkFwcHV5ZXogcG91ciBkXHhFOXNhY3RpdmVyIGwnXHhFOWNsYWlyYWdlIl0pLCExKSxjZSgpLmFkZChabixoZShlLHQsWyJcdTYyNkJcdTc4MDEiLCJcdTc2RjhcdTUxOEMiLCJcdThCQzZcdTUyMkJcdTU5MzFcdThEMjUiLCJcdThGN0JcdTg5RTZcdTcxNjdcdTRFQUUiLCJcdThGN0JcdTg5RTZcdTUxNzNcdTk1RUQiXSksITEpLGNlKCkuYWRkKGFyLGhlKGUsdCxbIlx1NjM4M1x1NzhCQyIsIlx1NzZGOFx1NTE4QSIsIlx1OEI1OFx1NTIyNVx1NTkzMVx1NjU1NyIsIlx1OEYxNVx1ODlGOFx1NzE2N1x1NEVBRSIsIlx1OEYxNVx1ODlGOFx1OTVEQ1x1OTU4OSJdKSwhMSl9KSxYbj1yZS5vbmNlKCgpPT57bGV0IGU9InVuaS5zdGFydFNvdGVyQXV0aGVudGljYXRpb24uIix0PVsiYXV0aENvbnRlbnQiXTtjZSgpLmFkZChWbixoZShlLHQsWyJGaW5nZXJwcmludCByZWNvZ25pdGlvbiJdKSwhMSksY2UoKS5hZGQoZGksaGUoZSx0LFsiUmVjb25vY2ltaWVudG8gZGUgaHVlbGxhcyBkYWN0aWxhcmVzIl0pLCExKSxjZSgpLmFkZChYcixoZShlLHQsWyJSZWNvbm5haXNzYW5jZSBkZSBsJ2VtcHJlaW50ZSBkaWdpdGFsZSJdKSwhMSksY2UoKS5hZGQoWm4saGUoZSx0LFsiXHU2MzA3XHU3RUI5XHU4QkM2XHU1MjJCXHU0RTJELi4uIl0pLCExKSxjZSgpLmFkZChhcixoZShlLHQsWyJcdTYzMDdcdTdEMEJcdThCNThcdTUyMjVcdTRFMkQuLi4iXSksITEpfSk7ZnVuY3Rpb24gUXIoZSl7aWYoU28oKSlyZXR1cm4gWihlLFtbInRpdGxlVGV4dCJdLFsic2VhcmNoSW5wdXQiLCJwbGFjZWhvbGRlciJdLFsiYnV0dG9ucyIsInRleHQiXV0pfWZ1bmN0aW9uIExyKGUpe2lmKFNvKCkpe2xldCB0PSJjYXB0aW9uIjtyZXR1cm4gWihlLFtbImNvbnRlbnRkb3duIix0XSxbImNvbnRlbnRvdmVyIix0XSxbImNvbnRlbnRyZWZyZXNoIix0XV0pfX1mdW5jdGlvbiBybyhlKXtsZXQgdD1uZXcgcmUuRW1pdHRlcjtyZXR1cm57b24obixyKXtyZXR1cm4gdC5vbihuLHIpfSxvbmNlKG4scil7cmV0dXJuIHQub25jZShuLHIpfSxvZmYobixyKXtyZXR1cm4gdC5vZmYobixyKX0sZW1pdChuLC4uLnIpe3JldHVybiB0LmVtaXQobiwuLi5yKX0sc3Vic2NyaWJlKG4scixzPSExKXt0W3M/Im9uY2UiOiJvbiJdKGAke2V9LiR7bn1gLHIpfSx1bnN1YnNjcmliZShuLHIpe3Qub2ZmKGAke2V9LiR7bn1gLHIpfSxzdWJzY3JpYmVIYW5kbGVyKG4scixzKXt0LmVtaXQoYCR7ZX0uJHtufWAscixzKX19fWxldCBicj0iaW52b2tlVmlld0FwaSIsZ2k9Imludm9rZVNlcnZpY2VBcGkiO2Z1bmN0aW9uIGlvKGUpe3JldHVybiBlPWUrIiIsZS5pbmRleE9mKCJycHgiKSE9PS0xfHxlLmluZGV4T2YoInVweCIpIT09LTF9ZnVuY3Rpb24gb28oZSx0PSExKXtpZih0KXJldHVybiBuYShlKTtpZihKLmlzU3RyaW5nKGUpKXtsZXQgbj1wYXJzZUludChlKXx8MDtyZXR1cm4gaW8oZSk/aWUudXB4MnB4KG4pOm59cmV0dXJuIGV9ZnVuY3Rpb24gbmEoZSl7cmV0dXJuIGlvKGUpP2UucmVwbGFjZSgvKFxkKyhcLlxkKyk/KVtydV1weC9nLCh0LG4pPT5pZS51cHgycHgocGFyc2VGbG9hdChuKSkrInB4Iik6ZX1mdW5jdGlvbiBRbihlKXtsZXQgdD1yZS5yZXNvbHZlQ29tcG9uZW50SW5zdGFuY2UoZSk7aWYodC4kcGFnZSlyZXR1cm4gdC4kcGFnZS5pZDtpZighdC4kKXJldHVybjtsZXQgbj10LiQucm9vdC5wcm94eTtpZihuJiZuLiRwYWdlKXJldHVybiBuLiRwYWdlLmlkfWZ1bmN0aW9uIEZyKCl7bGV0IGU9cW4oKSx0PWUubGVuZ3RoO2lmKHQpcmV0dXJuIGVbdC0xXX1mdW5jdGlvbiBQYSgpe2xldCBlPUZyKCk7aWYoZSlyZXR1cm4gZS4kcGFnZS5tZXRhfWZ1bmN0aW9uIE5hKCl7bGV0IGU9UGEoKTtyZXR1cm4gZT9lLmlkOi0xfWZ1bmN0aW9uIHpyKCl7bGV0IGU9RnIoKTtpZihlKXJldHVybiBlLiR2bX1sZXQgVnM9WyJuYXZpZ2F0aW9uQmFyIiwicHVsbFRvUmVmcmVzaCJdO2Z1bmN0aW9uICRzKCl7cmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoUi5nbG9iYWxTdHlsZXx8e30pKX1mdW5jdGlvbiBpbChlLHQpe2xldCBuPSRzKCkscj1KLmV4dGVuZCh7aWQ6dH0sbixlKTtWcy5mb3JFYWNoKHU9PntyW3VdPUouZXh0ZW5kKHt9LG5bdV0sZVt1XSl9KTtsZXR7bmF2aWdhdGlvbkJhcjpzfT1yO3JldHVybiBzLnRpdGxlVGV4dCYmcy50aXRsZUltYWdlJiYocy50aXRsZVRleHQ9IiIpLHJ9ZnVuY3Rpb24gQ28oZSl7cmV0dXJuIEpTT04ucGFyc2Uob28oSlNPTi5zdHJpbmdpZnkoZSksITApKX1mdW5jdGlvbiBPaShlKXtyZXR1cm4gZS5vZmZzZXQmJihlLm9mZnNldD1vbyhlLm9mZnNldCkpLGUuaGVpZ2h0JiYoZS5oZWlnaHQ9b28oZS5oZWlnaHQpKSxlLnJhbmdlJiYoZS5yYW5nZT1vbyhlLnJhbmdlKSksZX1mdW5jdGlvbiBrYShlLHQsbixyLHMsdSl7bGV0e2lkOmcscm91dGU6RX09ciwkPXJlLm5vcm1hbGl6ZVN0eWxlcyhyLm5hdmlnYXRpb25CYXIsUi50aGVtZUNvbmZpZyx1KS50aXRsZUNvbG9yO3JldHVybntpZDpnLHBhdGg6cmUuYWRkTGVhZGluZ1NsYXNoKEUpLHJvdXRlOkUsZnVsbFBhdGg6dCxvcHRpb25zOm4sbWV0YTpyLG9wZW5UeXBlOmUsZXZlbnRDaGFubmVsOnMsc3RhdHVzQmFyU3R5bGU6JD09PSIjMDAwMDAwIj8iZGFyayI6ImxpZ2h0In19ZnVuY3Rpb24gTmwoZSx0LG4pe2xldCByPWUuJFt0XTshSi5pc0FycmF5KHIpfHxuLl9fd2VoJiZKLnJlbW92ZShyLG4uX193ZWgpfWZ1bmN0aW9uIFBuKGUsdCxuKXtpZihKLmlzU3RyaW5nKGUpKW49dCx0PWUsZT16cigpO2Vsc2UgaWYodHlwZW9mIGU9PSJudW1iZXIiKXtsZXQgcz1xbigpLmZpbmQodT0+dS4kcGFnZS5pZD09PWUpO3M/ZT1zLiR2bTplPXpyKCl9aWYoIWUpcmV0dXJuO2lmKGUuX19jYWxsX2hvb2spcmV0dXJuIGUuX19jYWxsX2hvb2sodCxuKTtsZXQgcj1lLiRbdF07cmV0dXJuIHImJnJlLmludm9rZUFycmF5Rm5zKHIsbil9ZnVuY3Rpb24gb2woZSl7aWYoZS5pbmRleE9mKCIvIik9PT0wKXJldHVybiBlO2xldCB0PSIiLG49cW4oKTtyZXR1cm4gbi5sZW5ndGgmJih0PW5bbi5sZW5ndGgtMV0uJHBhZ2Uucm91dGUpLHZzKHQsZSl9ZnVuY3Rpb24gdnMoZSx0KXtpZih0LmluZGV4T2YoIi8iKT09PTApcmV0dXJuIHQ7aWYodC5pbmRleE9mKCIuLyIpPT09MClyZXR1cm4gdnMoZSx0LnNsaWNlKDIpKTtsZXQgbj10LnNwbGl0KCIvIikscj1uLmxlbmd0aCxzPTA7Zm9yKDtzPHImJm5bc109PT0iLi4iO3MrKyk7bi5zcGxpY2UoMCxzKSx0PW4uam9pbigiLyIpO2xldCB1PWUubGVuZ3RoPjA/ZS5zcGxpdCgiLyIpOltdO3JldHVybiB1LnNwbGljZSh1Lmxlbmd0aC1zLTEscysxKSxyZS5hZGRMZWFkaW5nU2xhc2godS5jb25jYXQobikuam9pbigiLyIpKX1mdW5jdGlvbiBhbyhlLHQ9ITEpe3JldHVybiB0P1dlLmZpbmQobj0+bi5wYXRoPT09ZXx8bi5hbGlhcz09PWUpOldlLmZpbmQobj0+bi5wYXRoPT09ZSl9ZnVuY3Rpb24gSmEoZSl7bGV0IHQ9YW8oZSk7aWYodClyZXR1cm4gdC5tZXRhfWZ1bmN0aW9uIGFsKGUsdCxuKXtsZXQgcj1hbyhyZS5hZGRMZWFkaW5nU2xhc2godCkpO2lmKHIpe2xldHttZXRhOnV9PXI7ZGVsZXRlIHUudGFiQmFySW5kZXgsdS5pc1F1aXQ9dS5pc1RhYkJhcj0hMX1sZXQgcz1hbyhyZS5hZGRMZWFkaW5nU2xhc2gobikpO2lmKHMpe2xldHttZXRhOnV9PXM7dS50YWJCYXJJbmRleD1lLHUuaXNRdWl0PXUuaXNUYWJCYXI9ITA7bGV0IGc9Ui50YWJCYXI7ZyYmZy5saXN0JiZnLmxpc3RbZV0mJihnLmxpc3RbZV0ucGFnZVBhdGg9cmUucmVtb3ZlTGVhZGluZ1NsYXNoKG4pKX19bGV0IFJhLHNsLHJhO2Z1bmN0aW9uIFVzKCl7cmV0dXJuIHR5cGVvZiB3aW5kb3c9PSJvYmplY3QiJiZ0eXBlb2YgbmF2aWdhdG9yPT0ib2JqZWN0IiYmdHlwZW9mIGRvY3VtZW50PT0ib2JqZWN0Ij8id2VidmlldyI6InY4In1mdW5jdGlvbiBtcygpe3JldHVybiBSYS53ZWJ2aWV3LmN1cnJlbnRXZWJ2aWV3KCkuaWR9bGV0IHlyLHNvLGJhPXt9O2Z1bmN0aW9uIE9vKGUpe2xldCB0PWUuZGF0YSYmZS5kYXRhLl9fbWVzc2FnZTtpZighdHx8IXQuX19wYWdlKXJldHVybjtsZXQgbj10Ll9fcGFnZSxyPWJhW25dO3ImJnIodCksdC5rZWVwfHxkZWxldGUgYmFbbl19ZnVuY3Rpb24geGEoZSx0KXtVcygpPT09InY4Ij9yYT8oeXImJnlyLmNsb3NlKCkseXI9bmV3IHJhKG1zKCkpLHlyLm9ubWVzc2FnZT1Pbyk6c298fChzbz1zbC5yZXF1aXJlTW9kdWxlKCJnbG9iYWxFdmVudCIpLHNvLmFkZEV2ZW50TGlzdGVuZXIoInBsdXNNZXNzYWdlIixPbykpOndpbmRvdy5fX3BsdXNNZXNzYWdlPU9vLGJhW2VdPXR9Y2xhc3Mga2x7Y29uc3RydWN0b3IodCl7dGhpcy53ZWJ2aWV3PXR9c2VuZE1lc3NhZ2UodCl7bGV0IG49SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh7X19tZXNzYWdlOntkYXRhOnR9fSkpLHI9dGhpcy53ZWJ2aWV3LmlkO3JhP25ldyByYShyKS5wb3N0TWVzc2FnZShuKTpSYS53ZWJ2aWV3LnBvc3RNZXNzYWdlVG9VbmlOVmlldyYmUmEud2Vidmlldy5wb3N0TWVzc2FnZVRvVW5pTlZpZXcobixyKX1jbG9zZSgpe3RoaXMud2Vidmlldy5jbG9zZSgpfX1mdW5jdGlvbiBIcyh7Y29udGV4dDplPXt9LHVybDp0LGRhdGE6bj17fSxzdHlsZTpyPXt9LG9uTWVzc2FnZTpzLG9uQ2xvc2U6dX0pe2xldCBnPVIuZGFya21vZGU7UmE9ZS5wbHVzfHxsLHNsPWUud2VleHx8KHR5cGVvZiB2PT0ib2JqZWN0Ij92Om51bGwpLHJhPWUuQnJvYWRjYXN0Q2hhbm5lbHx8KHR5cGVvZiBCcm9hZGNhc3RDaGFubmVsPT0ib2JqZWN0Ij9Ccm9hZGNhc3RDaGFubmVsOm51bGwpO2xldCBFPXthdXRvQmFja0J1dHRvbjohMCx0aXRsZVNpemU6IjE3cHgifSwkPWBwYWdlJHtEYXRlLm5vdygpfWA7cj1KLmV4dGVuZCh7fSxyKSxyLnRpdGxlTlZpZXchPT0hMSYmci50aXRsZU5WaWV3IT09Im5vbmUiJiYoci50aXRsZU5WaWV3PUouZXh0ZW5kKEUsci50aXRsZU5WaWV3KSk7bGV0IFA9e3RvcDowLGJvdHRvbTowLHVzaW5nQ29tcG9uZW50czp7fSxwb3BHZXN0dXJlOiJjbG9zZSIsc2Nyb2xsSW5kaWNhdG9yOiJub25lIixhbmltYXRpb25UeXBlOiJwb3AtaW4iLGFuaW1hdGlvbkR1cmF0aW9uOjIwMCx1bmlOVmlldzp7cGF0aDpgLyR7dH0uanNgLGRlZmF1bHRGb250U2l6ZToxNix2aWV3cG9ydDpSYS5zY3JlZW4ucmVzb2x1dGlvbldpZHRofX07cj1KLmV4dGVuZChQLHIpO2xldCBMPVJhLndlYnZpZXcuY3JlYXRlKCIiLCQscix7ZXh0cmFzOntmcm9tOm1zKCkscnVudGltZTpVcygpLGRhdGE6Si5leHRlbmQoe30sbix7ZGFya21vZGU6Z30pLHVzZUdsb2JhbEV2ZW50OiFyYX19KTtyZXR1cm4gTC5hZGRFdmVudExpc3RlbmVyKCJjbG9zZSIsdSkseGEoJCxBZT0+e0ouaXNGdW5jdGlvbihzKSYmcyhBZS5kYXRhKSxBZS5rZWVwfHxMLmNsb3NlKCJhdXRvIil9KSxMLnNob3coci5hbmltYXRpb25UeXBlLHIuYW5pbWF0aW9uRHVyYXRpb24pLG5ldyBrbChMKX1sZXQgQmE9KGUsdCk9Pm10LmVtaXQoImFwaS4iK2UsdCksbGw9MTtmdW5jdGlvbiBfcygpe3JldHVybiBOYSgpKyIuIiticn1sZXQgYnM9KGUsdCxuLHIpPT57bGV0e3N1YnNjcmliZTpzLHB1Ymxpc2hIYW5kbGVyOnV9PW10LGc9cj9sbCsrOjA7ciYmcyhicisiLiIrZyxyLCEwKSx1KF9zKCkse2lkOmcsbmFtZTplLGFyZ3M6dH0sbil9LG9jPShlLHQsbixyKT0+e2xldHtzdWJzY3JpYmU6cyx1bnN1YnNjcmliZTp1LHB1Ymxpc2hIYW5kbGVyOmd9PW10LEU9bGwrKywkPWJyKyIuIitFO3JldHVybiBzKCQsbiksZyhfcygpLHtpZDpFLG5hbWU6ZSxhcmdzOnR9LHIpLCgpPT57dSgkKX19LHk9T2JqZWN0LmNyZWF0ZShudWxsKTtmdW5jdGlvbiBEKCl7bXQuc3Vic2NyaWJlKGdpLFUpfWZ1bmN0aW9uIEcoZSx0KXt5W2VdfHwoeVtlXT10KX1mdW5jdGlvbiBVKHtpZDplLG5hbWU6dCxhcmdzOm59LHIpe2xldCBzPWc9PntlJiZtdC5wdWJsaXNoSGFuZGxlcihnaSsiLiIrZSxnLHIpfSx1PXlbdF07dT91KG4scyk6cyh7fSl9bGV0IFE9Si5leHRlbmQocm8oInZpZXciKSx7aW52b2tlT25DYWxsYmFjazpCYSxpbnZva2VWaWV3TWV0aG9kOmJzLGludm9rZVZpZXdNZXRob2RLZWVwQWxpdmU6b2N9KTtmdW5jdGlvbiBlZSgpe2xldHtvbjplfT1tdDtlKHJlLk9OX1JFU0laRSxwZSksZShyZS5PTl9BUFBfRU5URVJfRk9SRUdST1VORCxDZSksZShyZS5PTl9BUFBfRU5URVJfQkFDS0dST1VORCxTZSl9ZnVuY3Rpb24gcGUoZSl7UG4oRnIoKSxyZS5PTl9SRVNJWkUsZSksbXQuaW52b2tlT25DYWxsYmFjaygib25XaW5kb3dSZXNpemUiLGUpfWZ1bmN0aW9uIENlKGUpe2xldCB0PUZyKCk7UG4oVG4oKSxyZS5PTl9TSE9XLGUpLFBuKHQscmUuT05fU0hPVyl9ZnVuY3Rpb24gU2UoKXtQbihUbigpLHJlLk9OX0hJREUpLFBuKEZyKCkscmUuT05fSElERSl9bGV0IEllPVtyZS5PTl9QQUdFX1NDUk9MTCxyZS5PTl9SRUFDSF9CT1RUT01dO2Z1bmN0aW9uIGJlKCl7SWUuZm9yRWFjaChlPT5tdC5zdWJzY3JpYmUoZSxIZShlKSkpfWZ1bmN0aW9uIEhlKGUpe3JldHVybih0LG4pPT57UG4ocGFyc2VJbnQobiksZSx0KX19ZnVuY3Rpb24gX3QoKXtlZSgpLGJlKCl9ZnVuY3Rpb24gTnQoZSl7ZS4kdm09ZSxlLiRtcFR5cGU9ImFwcCI7bGV0IHQ9TG4ucmVmKGNlKCkuZ2V0TG9jYWxlKCkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCIkbG9jYWxlIix7Z2V0KCl7cmV0dXJuIHQudmFsdWV9LHNldChuKXt0LnZhbHVlPW59fSl9ZnVuY3Rpb24gV3QoZSx0KXtlLnJvdXRlPXQucm91dGUsZS4kdm09ZSxlLiRwYWdlPXQsZS4kbXBUeXBlPSJwYWdlIix0Lm1ldGEuaXNUYWJCYXImJihlLiQuX19pc1RhYkJhcj0hMCxlLiQuX19pc0FjdGl2ZT0hMCl9ZnVuY3Rpb24gRXQoKXtyZXR1cm57cGF0aDoiIixxdWVyeTp7fSxzY2VuZToxMDAxLHJlZmVycmVySW5mbzp7YXBwSWQ6IiIsZXh0cmFEYXRhOnt9fX19ZnVuY3Rpb24gaHQoZSx0KXtsZXQgbj1lLiRvcHRpb25zfHx7fTtuLmdsb2JhbERhdGE9Si5leHRlbmQobi5nbG9iYWxEYXRhfHx7fSx0KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiZ2xvYmFsRGF0YSIse2dldCgpe3JldHVybiBuLmdsb2JhbERhdGF9LHNldChyKXtuLmdsb2JhbERhdGE9cn19KX1mdW5jdGlvbiB1dChlKXtpZihlLmluZGV4T2YoIi8vIik9PT0wKXJldHVybiJodHRwczoiK2U7aWYocmUuU0NIRU1FX1JFLnRlc3QoZSl8fHJlLkRBVEFfUkUudGVzdChlKSlyZXR1cm4gZTtpZihDbihlKSlyZXR1cm4iZmlsZTovLyIraG4oZSk7bGV0IHQ9ImZpbGU6Ly8iK2huKCJfd3d3Iik7aWYoZS5pbmRleE9mKCIvIik9PT0wKXJldHVybiBlLnN0YXJ0c1dpdGgoIi9zdG9yYWdlLyIpfHxlLnN0YXJ0c1dpdGgoIi9zZGNhcmQvIil8fGUuaW5jbHVkZXMoIi9Db250YWluZXJzL0RhdGEvQXBwbGljYXRpb24vIik/ImZpbGU6Ly8iK2U6dCtlO2lmKGUuaW5kZXhPZigiLi4vIik9PT0wfHxlLmluZGV4T2YoIi4vIik9PT0wKXtpZih0eXBlb2YgX19pZF9fPT0ic3RyaW5nIilyZXR1cm4gdCt2cyhyZS5hZGRMZWFkaW5nU2xhc2goX19pZF9fKSxlKTt7bGV0IG49RnIoKTtpZihuKXJldHVybiB0K3ZzKHJlLmFkZExlYWRpbmdTbGFzaChuLnJvdXRlKSxlKX19cmV0dXJuIGV9bGV0IGhuPXJlLmNhY2hlU3RyaW5nRnVuY3Rpb24oZT0+bC5pby5jb252ZXJ0TG9jYWxGaWxlU3lzdGVtVVJMKGUpLnJlcGxhY2UoL15cLz9hcHBzXC8vLCIvYW5kcm9pZF9hc3NldC9hcHBzLyIpLnJlcGxhY2UoL1wvJC8sIiIpKTtmdW5jdGlvbiBDbihlKXtyZXR1cm4gZS5pbmRleE9mKCJfd3d3Iik9PT0wfHxlLmluZGV4T2YoIl9kb2MiKT09PTB8fGUuaW5kZXhPZigiX2RvY3VtZW50cyIpPT09MHx8ZS5pbmRleE9mKCJfZG93bmxvYWRzIik9PT0wfWxldCBDdD0ic3VjY2VzcyIsS3Q9ImZhaWwiLGNyPVtDdCxLdCwiY29tcGxldGUiXTtmdW5jdGlvbiBHdChlLHQsbixyKXtpZighZSlyZXR1cm47aWYodHlwZW9mIG49PSJ1bmRlZmluZWQiKXJldHVybiBlW3RdKCk7bGV0WyxzXT15cyhuLHIpO3JldHVybiBPYmplY3Qua2V5cyhzKS5sZW5ndGg/ZVt0XShFcyh0LHMpKTplW3RdKCl9ZnVuY3Rpb24gWXQoZSx0LG4scil7aWYoIWUpcmV0dXJuO2xldFtzLHVdPXlzKG4scik7cmV0dXJuIE9iamVjdC5rZXlzKHUpLmxlbmd0aD9lW3RdKHMsRXModCx1KSk6ZVt0XShzKX1mdW5jdGlvbiBlcihlLHQpe2xldCBuPXlhKGUsdC4kZWwpO3JldHVybiBufHxjb25zb2xlLmVycm9yKCJDYW4gbm90IGZpbmQgYCIrZSsiYCIpfWZ1bmN0aW9uIHlhKGUsdCl7aWYoIWV8fCF0KXJldHVybjtpZih0LmF0dHImJnQuYXR0ci5pZD09PWUpcmV0dXJuIHQ7bGV0IG49dC5jaGlsZHJlbjtpZighIW4pZm9yKGxldCByPTAscz1uLmxlbmd0aDtyPHM7cisrKXtsZXQgdT15YShlLG5bcl0pO2lmKHUpcmV0dXJuIHV9fWZ1bmN0aW9uIHlzKGU9e30sdCl7bGV0IG49T2JqZWN0LmNyZWF0ZShudWxsKSxyPWZ1bmN0aW9uKHUpe2xldCBnPWVbdV07Si5pc0Z1bmN0aW9uKGcpJiYoblt1XT1nLGRlbGV0ZSBlW3VdKX07cmV0dXJuIGNyLmZvckVhY2gociksdCYmdC5mb3JFYWNoKHIpLFtlLG5dfWZ1bmN0aW9uIEVzKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKHIpe2xldCBzPXIudHlwZTtkZWxldGUgci50eXBlO2xldCB1PXRbc107aWYocz09PUN0P3IuZXJyTXNnPWAke2V9Om9rYDpzPT09S3QmJihyLmVyck1zZz1lKyI6ZmFpbCAiKyhyLm1zZz8iICIrci5tc2c6IiIpKSxkZWxldGUgci5jb2RlLGRlbGV0ZSByLm1zZyxKLmlzRnVuY3Rpb24odSkmJnUocikscz09PUN0fHxzPT09S3Qpe2xldCBnPXQuY29tcGxldGU7Si5pc0Z1bmN0aW9uKGcpJiZnKHIpfX19bGV0IGxvO2Z1bmN0aW9uIE1hKCl7cmV0dXJuIGxvfWZ1bmN0aW9uIERhKGUpe2xldCB0PWUuJDtPYmplY3QuZGVmaW5lUHJvcGVydHkodC5jdHgsIiRjaGlsZHJlbiIse2dldCgpe3JldHVybiBIbygpLm1hcChyPT5yLiR2bSl9fSk7bGV0IG49dC5hcHBDb250ZXh0O2xvPUouZXh0ZW5kKG4uYXBwLHttb3VudFBhZ2UocixzLHUpe2xldCBnPUxuLmNyZWF0ZVZOb2RlKHIscyk7Zy5hcHBDb250ZXh0PW4sZy5fX3BhZ2VfY29udGFpbmVyX189dSxMbi5yZW5kZXIoZyx1KTtsZXQgRT1nLmNvbXBvbmVudC5wcm94eTtyZXR1cm4gRS5fX3BhZ2VfY29udGFpbmVyX189dSxFfSx1bm1vdW50UGFnZTpyPT57bGV0e19fcGFnZV9jb250YWluZXJfXzpzfT1yO3MmJihzLmlzVW5tb3VudGVkPSEwLExuLnJlbmRlcihudWxsLHMpKX19KX1sZXQgRmk9W107ZnVuY3Rpb24gTGEoZSl7aWYoIWUuJHBhZ2UubWV0YS5pc05WdWUpcmV0dXJuIEZpLnB1c2goZSk7bGV0IG49RmkuZmluZEluZGV4KHI9PnIuJHBhZ2UuaWQ9PT1lLiRwYWdlLmlkKTtuPi0xP0ZpLnNwbGljZShuLDEsZSk6RmkucHVzaChlKX1mdW5jdGlvbiB6bihlKXtyZXR1cm4gRmkuZmluZCh0PT50LiRwYWdlLmlkPT09ZSl9ZnVuY3Rpb24gSG8oKXtyZXR1cm4gRml9ZnVuY3Rpb24ganMoKXtsZXQgZT1bXTtyZXR1cm4gRmkuZm9yRWFjaCh0PT57dC4kLl9faXNUYWJCYXI/dC4kLl9faXNBY3RpdmUmJmUucHVzaCh0KTplLnB1c2godCl9KSxlfWZ1bmN0aW9uIGNsKCl7bGV0IGU9RnIoKTshZXx8am8oZSl9ZnVuY3Rpb24gam8oZSl7bGV0IHQ9RmkuZmluZEluZGV4KG49Pm49PT1lKTt0IT09LTEmJihlLiRwYWdlLm1ldGEuaXNOVnVlfHxNYSgpLnVubW91bnRQYWdlKGUpLEZpLnNwbGljZSh0LDEpKX1sZXQgZWk9e3BsYXkoZSl7cmV0dXJuIEd0KGUsInBsYXkiKX0scGF1c2UoZSl7cmV0dXJuIEd0KGUsInBhdXNlIil9LHNlZWsoZSx0KXtyZXR1cm4gWXQoZSwic2VlayIsdC5wb3NpdGlvbil9LHN0b3AoZSl7cmV0dXJuIEd0KGUsInN0b3AiKX0sc2VuZERhbm11KGUsdCl7cmV0dXJuIFl0KGUsInNlbmREYW5tdSIsdCl9LHBsYXliYWNrUmF0ZShlLHQpe3JldHVybiBZdChlLCJwbGF5YmFja1JhdGUiLHQucmF0ZSl9LHJlcXVlc3RGdWxsU2NyZWVuKGUsdD17fSl7cmV0dXJuIFl0KGUsInJlcXVlc3RGdWxsU2NyZWVuIix0KX0sZXhpdEZ1bGxTY3JlZW4oZSl7cmV0dXJuIEd0KGUsImV4aXRGdWxsU2NyZWVuIil9LHNob3dTdGF0dXNCYXIoZSl7cmV0dXJuIEd0KGUsInNob3dTdGF0dXNCYXIiKX0saGlkZVN0YXR1c0JhcihlKXtyZXR1cm4gR3QoZSwiaGlkZVN0YXR1c0JhciIpfX07ZnVuY3Rpb24gJG4oZSx0LG4scil7bGV0IHM9em4odCk7aWYocz09bnVsbD92b2lkIDA6cy4kcGFnZS5tZXRhLmlzTlZ1ZSl7bGV0IHU9cy4kdm07cmV0dXJuIGVpW25dKGVyKGUsdSkscil9bXQuaW52b2tlVmlld01ldGhvZCgidmlkZW8uIitlLHt2aWRlb0lkOmUsdHlwZTpuLGRhdGE6cn0sdCl9bGV0IFZyPXtnZXRDZW50ZXJMb2NhdGlvbihlLHQpe3JldHVybiBHdChlLCJnZXRDZW50ZXJMb2NhdGlvbiIsdCl9LG1vdmVUb0xvY2F0aW9uKGUsdCl7cmV0dXJuIFl0KGUsIm1vdmVUb0xvY2F0aW9uIix0KX0sdHJhbnNsYXRlTWFya2VyKGUsdCl7cmV0dXJuIFl0KGUsInRyYW5zbGF0ZU1hcmtlciIsdCxbImFuaW1hdGlvbkVuZCJdKX0saW5jbHVkZVBvaW50cyhlLHQpe3JldHVybiBZdChlLCJpbmNsdWRlUG9pbnRzIix0KX0sZ2V0UmVnaW9uKGUsdCl7cmV0dXJuIEd0KGUsImdldFJlZ2lvbiIsdCl9LGdldFNjYWxlKGUsdCl7cmV0dXJuIEd0KGUsImdldFNjYWxlIix0KX0sYWRkQ3VzdG9tTGF5ZXIoZSx0KXtyZXR1cm4gWXQoZSwiYWRkQ3VzdG9tTGF5ZXIiLHQpfSxyZW1vdmVDdXN0b21MYXllcihlLHQpe3JldHVybiBZdChlLCJyZW1vdmVDdXN0b21MYXllciIsdCl9LGFkZEdyb3VuZE92ZXJsYXkoZSx0KXtyZXR1cm4gWXQoZSwiYWRkR3JvdW5kT3ZlcmxheSIsdCl9LHJlbW92ZUdyb3VuZE92ZXJsYXkoZSx0KXtyZXR1cm4gWXQoZSwicmVtb3ZlR3JvdW5kT3ZlcmxheSIsdCl9LHVwZGF0ZUdyb3VuZE92ZXJsYXkoZSx0KXtyZXR1cm4gWXQoZSwidXBkYXRlR3JvdW5kT3ZlcmxheSIsdCl9LGluaXRNYXJrZXJDbHVzdGVyKGUsdCl7cmV0dXJuIFl0KGUsImluaXRNYXJrZXJDbHVzdGVyIix0KX0sYWRkTWFya2VycyhlLHQpe3JldHVybiBZdChlLCJhZGRNYXJrZXJzIix0KX0scmVtb3ZlTWFya2VycyhlLHQpe3JldHVybiBZdChlLCJyZW1vdmVNYXJrZXJzIix0KX0sbW92ZUFsb25nKGUsdCl7cmV0dXJuIFl0KGUsIm1vdmVBbG9uZyIsdCl9LHNldExvY01hcmtlckljb24oZSx0KXtyZXR1cm4gWXQoZSwic2V0TG9jTWFya2VySWNvbiIsdCl9LG9wZW5NYXBBcHAoZSx0KXtyZXR1cm4gWXQoZSwib3Blbk1hcEFwcCIsdCl9LG9uKGUsdCl7cmV0dXJuIGUub24odC5uYW1lLHQuY2FsbGJhY2spfX07ZnVuY3Rpb24gVmkoZSx0LG4scixzKXtsZXQgdT16bih0KTtpZih1PT1udWxsP3ZvaWQgMDp1LiRwYWdlLm1ldGEuaXNOVnVlKXtsZXQgZz11LiR2bTtyZXR1cm4gVnJbbl0oZXIoZSxnKSxyKX1tdC5pbnZva2VWaWV3TWV0aG9kKCJtYXAuIitlLHt0eXBlOm4sZGF0YTpyfSx0LHMpfWZ1bmN0aW9uIHpvKGUpe3JldHVybmBJbnRlcnNlY3Rpb25PYnNlcnZlci4ke2V9YH1mdW5jdGlvbiAkaSh7cmVxSWQ6ZSxjb21wb25lbnQ6dCxvcHRpb25zOm4sY2FsbGJhY2s6cn0scyl7bGV0IHU9em8oZSk7bXQuaW52b2tlVmlld01ldGhvZCgiYWRkSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLHtyZXFJZDplLGNvbXBvbmVudDp0LiRlbC5ub2RlSWQsb3B0aW9uczpuLGV2ZW50TmFtZTp1fSxzKSxtdC5zdWJzY3JpYmUodSxyKX1mdW5jdGlvbiBXcih7cmVxSWQ6ZSxjb21wb25lbnQ6dH0sbil7bXQuaW52b2tlVmlld01ldGhvZCgicmVtb3ZlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLHtyZXFJZDplLGNvbXBvbmVudDp0LiRlbC5ub2RlSWR9LG4pLG10LnVuc3Vic2NyaWJlKHpvKGUpKX1mdW5jdGlvbiBFcihlKXtyZXR1cm5gTWVkaWFRdWVyeU9ic2VydmVyLiR7ZX1gfWZ1bmN0aW9uIFVpKHtyZXFJZDplLGNvbXBvbmVudDp0LG9wdGlvbnM6bixjYWxsYmFjazpyfSxzKXtsZXQgdT1FcihlKTttdC5pbnZva2VWaWV3TWV0aG9kKCJhZGRNZWRpYVF1ZXJ5T2JzZXJ2ZXIiLHtyZXFJZDplLGNvbXBvbmVudDp0LiRlbC5ub2RlSWQsb3B0aW9uczpuLGV2ZW50TmFtZTp1fSxzKSxtdC5zdWJzY3JpYmUodSxyKX1mdW5jdGlvbiB3cyh7cmVxSWQ6ZSxjb21wb25lbnQ6dH0sbil7bXQuaW52b2tlVmlld01ldGhvZCgicmVtb3ZlTWVkaWFRdWVyeU9ic2VydmVyIix7cmVxSWQ6ZSxjb21wb25lbnQ6dC4kZWwubm9kZUlkfSxuKSxtdC51bnN1YnNjcmliZShFcihlKSl9bGV0IHByPTIwMCxQcj1bInVua25vd24iLCJub25lIiwiZXRoZXJuZXQiLCJ3aWZpIiwiMmciLCIzZyIsIjRnIiwiNWciXSxGYT0iX2RvYy91bmlhcHBfdGVtcCIsSGk9YCR7RmF9XyR7RGF0ZS5ub3coKX1gO2Z1bmN0aW9uIEFvKGUpe2xldCB0PWUuc3BsaXQoIi8iKTtyZXR1cm4gdFt0Lmxlbmd0aC0xXX1mdW5jdGlvbiBqaShlKXtsZXQgdD1lLnNwbGl0KCIuIik7cmV0dXJuIHQubGVuZ3RoPjE/Ii4iK3RbdC5sZW5ndGgtMV06IiJ9bGV0IEVhPSJiYWNrYnV0dG9uIjtmdW5jdGlvbiBpYSgpe2llLm5hdmlnYXRlQmFjayh7ZnJvbToiYmFja2J1dHRvbiIsc3VjY2Vzcygpe319KX1sZXQgY289RXQoKSxUbz1FdCgpO2Z1bmN0aW9uIFdvKCl7cmV0dXJuIEouZXh0ZW5kKHt9LFRvKX1mdW5jdGlvbiBTcygpe3JldHVybiBKLmV4dGVuZCh7fSxjbyl9ZnVuY3Rpb24gWmEoe3BhdGg6ZSxxdWVyeTp0LHJlZmVycmVySW5mbzpufSl7Si5leHRlbmQoY28se3BhdGg6ZSxxdWVyeTp0P3JlLnBhcnNlUXVlcnkodCk6e30scmVmZXJyZXJJbmZvOm58fHt9fSl9ZnVuY3Rpb24genMoe3BhdGg6ZSxxdWVyeTp0LHJlZmVycmVySW5mbzpufSl7cmV0dXJuIEouZXh0ZW5kKFRvLHtwYXRoOmUscXVlcnk6dD9yZS5wYXJzZVF1ZXJ5KHQpOnt9LHJlZmVycmVySW5mbzpufHx7fSxjaGFubmVsOmwucnVudGltZS5jaGFubmVsLGxhdW5jaGVyOmwucnVudGltZS5sYXVuY2hlcn0pLEouZXh0ZW5kKGNvLFRvKSxKLmV4dGVuZCh7fSxUbyl9ZnVuY3Rpb24gemUoKXtsZXQgZT12LnJlcXVpcmVNb2R1bGUoInBsdXMiKTtpZihlLmdldFJlZGlyZWN0SW5mbyl7bGV0e3BhdGg6dCxxdWVyeTpuLGV4dHJhRGF0YTpyLHVzZXJBY3Rpb246cyxmcm9tQXBwaWQ6dX09ZS5nZXRSZWRpcmVjdEluZm8oKXx8e30sZz17YXBwSWQ6dSxleHRyYURhdGE6e319O3JldHVybiByJiYoZy5leHRyYURhdGE9cikse3BhdGg6dHx8IiIscXVlcnk6bj8iPyIrbjoiIixyZWZlcnJlckluZm86Zyx1c2VyQWN0aW9uOnN9fX12YXIgVHQ9e307KGZ1bmN0aW9uKGUpe3ZhciB0PXR5cGVvZiBVaW50OEFycmF5IT0idW5kZWZpbmVkIiYmdHlwZW9mIFVpbnQxNkFycmF5IT0idW5kZWZpbmVkIiYmdHlwZW9mIEludDMyQXJyYXkhPSJ1bmRlZmluZWQiO2Z1bmN0aW9uIG4odSxnKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHUsZyl9ZS5hc3NpZ249ZnVuY3Rpb24odSl7Zm9yKHZhciBnPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtnLmxlbmd0aDspe3ZhciBFPWcuc2hpZnQoKTtpZighIUUpe2lmKHR5cGVvZiBFIT0ib2JqZWN0Iil0aHJvdyBuZXcgVHlwZUVycm9yKEUrIm11c3QgYmUgbm9uLW9iamVjdCIpO2Zvcih2YXIgJCBpbiBFKW4oRSwkKSYmKHVbJF09RVskXSl9fXJldHVybiB1fSxlLnNocmlua0J1Zj1mdW5jdGlvbih1LGcpe3JldHVybiB1Lmxlbmd0aD09PWc/dTp1LnN1YmFycmF5P3Uuc3ViYXJyYXkoMCxnKToodS5sZW5ndGg9Zyx1KX07dmFyIHI9e2FycmF5U2V0OmZ1bmN0aW9uKHUsZyxFLCQsUCl7aWYoZy5zdWJhcnJheSYmdS5zdWJhcnJheSl7dS5zZXQoZy5zdWJhcnJheShFLEUrJCksUCk7cmV0dXJufWZvcih2YXIgTD0wO0w8JDtMKyspdVtQK0xdPWdbRStMXX0sZmxhdHRlbkNodW5rczpmdW5jdGlvbih1KXt2YXIgZyxFLCQsUCxMLEFlO2ZvcigkPTAsZz0wLEU9dS5sZW5ndGg7ZzxFO2crKykkKz11W2ddLmxlbmd0aDtmb3IoQWU9bmV3IFVpbnQ4QXJyYXkoJCksUD0wLGc9MCxFPXUubGVuZ3RoO2c8RTtnKyspTD11W2ddLEFlLnNldChMLFApLFArPUwubGVuZ3RoO3JldHVybiBBZX19LHM9e2FycmF5U2V0OmZ1bmN0aW9uKHUsZyxFLCQsUCl7Zm9yKHZhciBMPTA7TDwkO0wrKyl1W1ArTF09Z1tFK0xdfSxmbGF0dGVuQ2h1bmtzOmZ1bmN0aW9uKHUpe3JldHVybltdLmNvbmNhdC5hcHBseShbXSx1KX19O2Uuc2V0VHlwZWQ9ZnVuY3Rpb24odSl7dT8oZS5CdWY4PVVpbnQ4QXJyYXksZS5CdWYxNj1VaW50MTZBcnJheSxlLkJ1ZjMyPUludDMyQXJyYXksZS5hc3NpZ24oZSxyKSk6KGUuQnVmOD1BcnJheSxlLkJ1ZjE2PUFycmF5LGUuQnVmMzI9QXJyYXksZS5hc3NpZ24oZSxzKSl9LGUuc2V0VHlwZWQodCl9KShUdCk7dmFyIHl0PXt9LGt0PXt9LEx0PXt9LGVuPVR0LE5yPTQsV249MCxncj0xLFhhPTI7ZnVuY3Rpb24gQWkoZSl7Zm9yKHZhciB0PWUubGVuZ3RoOy0tdD49MDspZVt0XT0wfXZhciB3YT0wLFdzPTEsYWM9MixSbD0zLG9hPTI1OCx3cj0yOSx0aT0yNTYsUWE9dGkrMSt3cixDcz0zMCxPcz0xOSxBcz0yKlFhKzEsR289MTUsVmE9MTYsR249NyxVbj0yNTYseGw9MTYsemk9MTcsV2k9MTgsVHM9WzAsMCwwLDAsMCwwLDAsMCwxLDEsMSwxLDIsMiwyLDIsMywzLDMsMyw0LDQsNCw0LDUsNSw1LDUsMF0sSXM9WzAsMCwwLDAsMSwxLDIsMiwzLDMsNCw0LDUsNSw2LDYsNyw3LDgsOCw5LDksMTAsMTAsMTEsMTEsMTIsMTIsMTMsMTNdLGpjPVswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIsMyw3XSxHaT1bMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV0sU3I9NTEyLEdyPW5ldyBBcnJheSgoUWErMikqMik7QWkoR3IpO3ZhciAkYT1uZXcgQXJyYXkoQ3MqMik7QWkoJGEpO3ZhciAkcj1uZXcgQXJyYXkoU3IpO0FpKCRyKTt2YXIgWXI9bmV3IEFycmF5KG9hLVJsKzEpO0FpKFlyKTt2YXIgQmw9bmV3IEFycmF5KHdyKTtBaShCbCk7dmFyIHVsPW5ldyBBcnJheShDcyk7QWkodWwpO2Z1bmN0aW9uIEJuKGUsdCxuLHIscyl7dGhpcy5zdGF0aWNfdHJlZT1lLHRoaXMuZXh0cmFfYml0cz10LHRoaXMuZXh0cmFfYmFzZT1uLHRoaXMuZWxlbXM9cix0aGlzLm1heF9sZW5ndGg9cyx0aGlzLmhhc19zdHJlZT1lJiZlLmxlbmd0aH12YXIgbW4sdmksbWk7ZnVuY3Rpb24gYWEoZSx0KXt0aGlzLmR5bl90cmVlPWUsdGhpcy5tYXhfY29kZT0wLHRoaXMuc3RhdF9kZXNjPXR9ZnVuY3Rpb24gZmwoZSl7cmV0dXJuIGU8MjU2PyRyW2VdOiRyWzI1NisoZT4+PjcpXX1mdW5jdGlvbiBVYShlLHQpe2UucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXQmMjU1LGUucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXQ+Pj44JjI1NX1mdW5jdGlvbiBUaShlLHQsbil7ZS5iaV92YWxpZD5WYS1uPyhlLmJpX2J1Znw9dDw8ZS5iaV92YWxpZCY2NTUzNSxVYShlLGUuYmlfYnVmKSxlLmJpX2J1Zj10Pj5WYS1lLmJpX3ZhbGlkLGUuYmlfdmFsaWQrPW4tVmEpOihlLmJpX2J1Znw9dDw8ZS5iaV92YWxpZCY2NTUzNSxlLmJpX3ZhbGlkKz1uKX1mdW5jdGlvbiBZbyhlLHQsbil7VGkoZSxuW3QqMl0sblt0KjIrMV0pfWZ1bmN0aW9uIGRsKGUsdCl7dmFyIG49MDtkbyBufD1lJjEsZT4+Pj0xLG48PD0xO3doaWxlKC0tdD4wKTtyZXR1cm4gbj4+PjF9ZnVuY3Rpb24gZXMoZSl7ZS5iaV92YWxpZD09PTE2PyhVYShlLGUuYmlfYnVmKSxlLmJpX2J1Zj0wLGUuYmlfdmFsaWQ9MCk6ZS5iaV92YWxpZD49OCYmKGUucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPWUuYmlfYnVmJjI1NSxlLmJpX2J1Zj4+PTgsZS5iaV92YWxpZC09OCl9ZnVuY3Rpb24gdHMoZSx0KXt2YXIgbj10LmR5bl90cmVlLHI9dC5tYXhfY29kZSxzPXQuc3RhdF9kZXNjLnN0YXRpY190cmVlLHU9dC5zdGF0X2Rlc2MuaGFzX3N0cmVlLGc9dC5zdGF0X2Rlc2MuZXh0cmFfYml0cyxFPXQuc3RhdF9kZXNjLmV4dHJhX2Jhc2UsJD10LnN0YXRfZGVzYy5tYXhfbGVuZ3RoLFAsTCxBZSxOZSxSZSxzdCxwdD0wO2ZvcihOZT0wO05lPD1HbztOZSsrKWUuYmxfY291bnRbTmVdPTA7Zm9yKG5bZS5oZWFwW2UuaGVhcF9tYXhdKjIrMV09MCxQPWUuaGVhcF9tYXgrMTtQPEFzO1ArKylMPWUuaGVhcFtQXSxOZT1uW25bTCoyKzFdKjIrMV0rMSxOZT4kJiYoTmU9JCxwdCsrKSxuW0wqMisxXT1OZSwhKEw+cikmJihlLmJsX2NvdW50W05lXSsrLFJlPTAsTD49RSYmKFJlPWdbTC1FXSksc3Q9bltMKjJdLGUub3B0X2xlbis9c3QqKE5lK1JlKSx1JiYoZS5zdGF0aWNfbGVuKz1zdCooc1tMKjIrMV0rUmUpKSk7aWYocHQhPT0wKXtkb3tmb3IoTmU9JC0xO2UuYmxfY291bnRbTmVdPT09MDspTmUtLTtlLmJsX2NvdW50W05lXS0tLGUuYmxfY291bnRbTmUrMV0rPTIsZS5ibF9jb3VudFskXS0tLHB0LT0yfXdoaWxlKHB0PjApO2ZvcihOZT0kO05lIT09MDtOZS0tKWZvcihMPWUuYmxfY291bnRbTmVdO0whPT0wOylBZT1lLmhlYXBbLS1QXSwhKEFlPnIpJiYobltBZSoyKzFdIT09TmUmJihlLm9wdF9sZW4rPShOZS1uW0FlKjIrMV0pKm5bQWUqMl0sbltBZSoyKzFdPU5lKSxMLS0pfX1mdW5jdGlvbiBobChlLHQsbil7dmFyIHI9bmV3IEFycmF5KEdvKzEpLHM9MCx1LGc7Zm9yKHU9MTt1PD1Hbzt1Kyspclt1XT1zPXMrblt1LTFdPDwxO2ZvcihnPTA7Zzw9dDtnKyspe3ZhciBFPWVbZyoyKzFdO0UhPT0wJiYoZVtnKjJdPWRsKHJbRV0rKyxFKSl9fWZ1bmN0aW9uIHNjKCl7dmFyIGUsdCxuLHIscyx1PW5ldyBBcnJheShHbysxKTtmb3Iobj0wLHI9MDtyPHdyLTE7cisrKWZvcihCbFtyXT1uLGU9MDtlPDE8PFRzW3JdO2UrKylZcltuKytdPXI7Zm9yKFlyW24tMV09cixzPTAscj0wO3I8MTY7cisrKWZvcih1bFtyXT1zLGU9MDtlPDE8PElzW3JdO2UrKykkcltzKytdPXI7Zm9yKHM+Pj03O3I8Q3M7cisrKWZvcih1bFtyXT1zPDw3LGU9MDtlPDE8PElzW3JdLTc7ZSsrKSRyWzI1NitzKytdPXI7Zm9yKHQ9MDt0PD1Hbzt0KyspdVt0XT0wO2ZvcihlPTA7ZTw9MTQzOylHcltlKjIrMV09OCxlKyssdVs4XSsrO2Zvcig7ZTw9MjU1OylHcltlKjIrMV09OSxlKyssdVs5XSsrO2Zvcig7ZTw9Mjc5OylHcltlKjIrMV09NyxlKyssdVs3XSsrO2Zvcig7ZTw9Mjg3OylHcltlKjIrMV09OCxlKyssdVs4XSsrO2ZvcihobChHcixRYSsxLHUpLGU9MDtlPENzO2UrKykkYVtlKjIrMV09NSwkYVtlKjJdPWRsKGUsNSk7bW49bmV3IEJuKEdyLFRzLHRpKzEsUWEsR28pLHZpPW5ldyBCbigkYSxJcywwLENzLEdvKSxtaT1uZXcgQm4obmV3IEFycmF5KDApLGpjLDAsT3MsR24pfWZ1bmN0aW9uIHBsKGUpe3ZhciB0O2Zvcih0PTA7dDxRYTt0KyspZS5keW5fbHRyZWVbdCoyXT0wO2Zvcih0PTA7dDxDczt0KyspZS5keW5fZHRyZWVbdCoyXT0wO2Zvcih0PTA7dDxPczt0KyspZS5ibF90cmVlW3QqMl09MDtlLmR5bl9sdHJlZVtVbioyXT0xLGUub3B0X2xlbj1lLnN0YXRpY19sZW49MCxlLmxhc3RfbGl0PWUubWF0Y2hlcz0wfWZ1bmN0aW9uIE1sKGUpe2UuYmlfdmFsaWQ+OD9VYShlLGUuYmlfYnVmKTplLmJpX3ZhbGlkPjAmJihlLnBlbmRpbmdfYnVmW2UucGVuZGluZysrXT1lLmJpX2J1ZiksZS5iaV9idWY9MCxlLmJpX3ZhbGlkPTB9ZnVuY3Rpb24gbGMoZSx0LG4scil7TWwoZSksciYmKFVhKGUsbiksVWEoZSx+bikpLGVuLmFycmF5U2V0KGUucGVuZGluZ19idWYsZS53aW5kb3csdCxuLGUucGVuZGluZyksZS5wZW5kaW5nKz1ufWZ1bmN0aW9uIFBzKGUsdCxuLHIpe3ZhciBzPXQqMix1PW4qMjtyZXR1cm4gZVtzXTxlW3VdfHxlW3NdPT09ZVt1XSYmclt0XTw9cltuXX1mdW5jdGlvbiBOcyhlLHQsbil7Zm9yKHZhciByPWUuaGVhcFtuXSxzPW48PDE7czw9ZS5oZWFwX2xlbiYmKHM8ZS5oZWFwX2xlbiYmUHModCxlLmhlYXBbcysxXSxlLmhlYXBbc10sZS5kZXB0aCkmJnMrKywhUHModCxyLGUuaGVhcFtzXSxlLmRlcHRoKSk7KWUuaGVhcFtuXT1lLmhlYXBbc10sbj1zLHM8PD0xO2UuaGVhcFtuXT1yfWZ1bmN0aW9uIGNjKGUsdCxuKXt2YXIgcixzLHU9MCxnLEU7aWYoZS5sYXN0X2xpdCE9PTApZG8gcj1lLnBlbmRpbmdfYnVmW2UuZF9idWYrdSoyXTw8OHxlLnBlbmRpbmdfYnVmW2UuZF9idWYrdSoyKzFdLHM9ZS5wZW5kaW5nX2J1ZltlLmxfYnVmK3VdLHUrKyxyPT09MD9ZbyhlLHMsdCk6KGc9WXJbc10sWW8oZSxnK3RpKzEsdCksRT1Uc1tnXSxFIT09MCYmKHMtPUJsW2ddLFRpKGUscyxFKSksci0tLGc9ZmwociksWW8oZSxnLG4pLEU9SXNbZ10sRSE9PTAmJihyLT11bFtnXSxUaShlLHIsRSkpKTt3aGlsZSh1PGUubGFzdF9saXQpO1lvKGUsVW4sdCl9ZnVuY3Rpb24gbnMoZSx0KXt2YXIgbj10LmR5bl90cmVlLHI9dC5zdGF0X2Rlc2Muc3RhdGljX3RyZWUscz10LnN0YXRfZGVzYy5oYXNfc3RyZWUsdT10LnN0YXRfZGVzYy5lbGVtcyxnLEUsJD0tMSxQO2ZvcihlLmhlYXBfbGVuPTAsZS5oZWFwX21heD1BcyxnPTA7Zzx1O2crKyluW2cqMl0hPT0wPyhlLmhlYXBbKytlLmhlYXBfbGVuXT0kPWcsZS5kZXB0aFtnXT0wKTpuW2cqMisxXT0wO2Zvcig7ZS5oZWFwX2xlbjwyOylQPWUuaGVhcFsrK2UuaGVhcF9sZW5dPSQ8Mj8rKyQ6MCxuW1AqMl09MSxlLmRlcHRoW1BdPTAsZS5vcHRfbGVuLS0scyYmKGUuc3RhdGljX2xlbi09cltQKjIrMV0pO2Zvcih0Lm1heF9jb2RlPSQsZz1lLmhlYXBfbGVuPj4xO2c+PTE7Zy0tKU5zKGUsbixnKTtQPXU7ZG8gZz1lLmhlYXBbMV0sZS5oZWFwWzFdPWUuaGVhcFtlLmhlYXBfbGVuLS1dLE5zKGUsbiwxKSxFPWUuaGVhcFsxXSxlLmhlYXBbLS1lLmhlYXBfbWF4XT1nLGUuaGVhcFstLWUuaGVhcF9tYXhdPUUsbltQKjJdPW5bZyoyXStuW0UqMl0sZS5kZXB0aFtQXT0oZS5kZXB0aFtnXT49ZS5kZXB0aFtFXT9lLmRlcHRoW2ddOmUuZGVwdGhbRV0pKzEsbltnKjIrMV09bltFKjIrMV09UCxlLmhlYXBbMV09UCsrLE5zKGUsbiwxKTt3aGlsZShlLmhlYXBfbGVuPj0yKTtlLmhlYXBbLS1lLmhlYXBfbWF4XT1lLmhlYXBbMV0sdHMoZSx0KSxobChuLCQsZS5ibF9jb3VudCl9ZnVuY3Rpb24gU2EoZSx0LG4pe3ZhciByLHM9LTEsdSxnPXRbMCoyKzFdLEU9MCwkPTcsUD00O2ZvcihnPT09MCYmKCQ9MTM4LFA9MyksdFsobisxKSoyKzFdPTY1NTM1LHI9MDtyPD1uO3IrKyl1PWcsZz10WyhyKzEpKjIrMV0sISgrK0U8JCYmdT09PWcpJiYoRTxQP2UuYmxfdHJlZVt1KjJdKz1FOnUhPT0wPyh1IT09cyYmZS5ibF90cmVlW3UqMl0rKyxlLmJsX3RyZWVbeGwqMl0rKyk6RTw9MTA/ZS5ibF90cmVlW3ppKjJdKys6ZS5ibF90cmVlW1dpKjJdKyssRT0wLHM9dSxnPT09MD8oJD0xMzgsUD0zKTp1PT09Zz8oJD02LFA9Myk6KCQ9NyxQPTQpKX1mdW5jdGlvbiBrcyhlLHQsbil7dmFyIHIscz0tMSx1LGc9dFswKjIrMV0sRT0wLCQ9NyxQPTQ7Zm9yKGc9PT0wJiYoJD0xMzgsUD0zKSxyPTA7cjw9bjtyKyspaWYodT1nLGc9dFsocisxKSoyKzFdLCEoKytFPCQmJnU9PT1nKSl7aWYoRTxQKWRvIFlvKGUsdSxlLmJsX3RyZWUpO3doaWxlKC0tRSE9PTApO2Vsc2UgdSE9PTA/KHUhPT1zJiYoWW8oZSx1LGUuYmxfdHJlZSksRS0tKSxZbyhlLHhsLGUuYmxfdHJlZSksVGkoZSxFLTMsMikpOkU8PTEwPyhZbyhlLHppLGUuYmxfdHJlZSksVGkoZSxFLTMsMykpOihZbyhlLFdpLGUuYmxfdHJlZSksVGkoZSxFLTExLDcpKTtFPTAscz11LGc9PT0wPygkPTEzOCxQPTMpOnU9PT1nPygkPTYsUD0zKTooJD03LFA9NCl9fWZ1bmN0aW9uIERsKGUpe3ZhciB0O2ZvcihTYShlLGUuZHluX2x0cmVlLGUubF9kZXNjLm1heF9jb2RlKSxTYShlLGUuZHluX2R0cmVlLGUuZF9kZXNjLm1heF9jb2RlKSxucyhlLGUuYmxfZGVzYyksdD1Pcy0xO3Q+PTMmJmUuYmxfdHJlZVtHaVt0XSoyKzFdPT09MDt0LS0pO3JldHVybiBlLm9wdF9sZW4rPTMqKHQrMSkrNSs1KzQsdH1mdW5jdGlvbiBHcyhlLHQsbixyKXt2YXIgcztmb3IoVGkoZSx0LTI1Nyw1KSxUaShlLG4tMSw1KSxUaShlLHItNCw0KSxzPTA7czxyO3MrKylUaShlLGUuYmxfdHJlZVtHaVtzXSoyKzFdLDMpO2tzKGUsZS5keW5fbHRyZWUsdC0xKSxrcyhlLGUuZHluX2R0cmVlLG4tMSl9ZnVuY3Rpb24gZ2woZSl7dmFyIHQ9NDA5MzYyNDQ0NyxuO2ZvcihuPTA7bjw9MzE7bisrLHQ+Pj49MSlpZih0JjEmJmUuZHluX2x0cmVlW24qMl0hPT0wKXJldHVybiBXbjtpZihlLmR5bl9sdHJlZVs5KjJdIT09MHx8ZS5keW5fbHRyZWVbMTAqMl0hPT0wfHxlLmR5bl9sdHJlZVsxMyoyXSE9PTApcmV0dXJuIGdyO2ZvcihuPTMyO248dGk7bisrKWlmKGUuZHluX2x0cmVlW24qMl0hPT0wKXJldHVybiBncjtyZXR1cm4gV259dmFyIHVjPSExO2Z1bmN0aW9uIHpjKGUpe3VjfHwoc2MoKSx1Yz0hMCksZS5sX2Rlc2M9bmV3IGFhKGUuZHluX2x0cmVlLG1uKSxlLmRfZGVzYz1uZXcgYWEoZS5keW5fZHRyZWUsdmkpLGUuYmxfZGVzYz1uZXcgYWEoZS5ibF90cmVlLG1pKSxlLmJpX2J1Zj0wLGUuYmlfdmFsaWQ9MCxwbChlKX1mdW5jdGlvbiBmYyhlLHQsbixyKXtUaShlLCh3YTw8MSkrKHI/MTowKSwzKSxsYyhlLHQsbiwhMCl9ZnVuY3Rpb24gV2MoZSl7VGkoZSxXczw8MSwzKSxZbyhlLFVuLEdyKSxlcyhlKX1mdW5jdGlvbiBHYyhlLHQsbixyKXt2YXIgcyx1LGc9MDtlLmxldmVsPjA/KGUuc3RybS5kYXRhX3R5cGU9PT1YYSYmKGUuc3RybS5kYXRhX3R5cGU9Z2woZSkpLG5zKGUsZS5sX2Rlc2MpLG5zKGUsZS5kX2Rlc2MpLGc9RGwoZSkscz1lLm9wdF9sZW4rMys3Pj4+Myx1PWUuc3RhdGljX2xlbiszKzc+Pj4zLHU8PXMmJihzPXUpKTpzPXU9bis1LG4rNDw9cyYmdCE9PS0xP2ZjKGUsdCxuLHIpOmUuc3RyYXRlZ3k9PT1Ocnx8dT09PXM/KFRpKGUsKFdzPDwxKSsocj8xOjApLDMpLGNjKGUsR3IsJGEpKTooVGkoZSwoYWM8PDEpKyhyPzE6MCksMyksR3MoZSxlLmxfZGVzYy5tYXhfY29kZSsxLGUuZF9kZXNjLm1heF9jb2RlKzEsZysxKSxjYyhlLGUuZHluX2x0cmVlLGUuZHluX2R0cmVlKSkscGwoZSksciYmTWwoZSl9ZnVuY3Rpb24gZGMoZSx0LG4pe3JldHVybiBlLnBlbmRpbmdfYnVmW2UuZF9idWYrZS5sYXN0X2xpdCoyXT10Pj4+OCYyNTUsZS5wZW5kaW5nX2J1ZltlLmRfYnVmK2UubGFzdF9saXQqMisxXT10JjI1NSxlLnBlbmRpbmdfYnVmW2UubF9idWYrZS5sYXN0X2xpdF09biYyNTUsZS5sYXN0X2xpdCsrLHQ9PT0wP2UuZHluX2x0cmVlW24qMl0rKzooZS5tYXRjaGVzKyssdC0tLGUuZHluX2x0cmVlWyhZcltuXSt0aSsxKSoyXSsrLGUuZHluX2R0cmVlW2ZsKHQpKjJdKyspLGUubGFzdF9saXQ9PT1lLmxpdF9idWZzaXplLTF9THQuX3RyX2luaXQ9emMsTHQuX3RyX3N0b3JlZF9ibG9jaz1mYyxMdC5fdHJfZmx1c2hfYmxvY2s9R2MsTHQuX3RyX3RhbGx5PWRjLEx0Ll90cl9hbGlnbj1XYztmdW5jdGlvbiBoYyhlLHQsbixyKXtmb3IodmFyIHM9ZSY2NTUzNXwwLHU9ZT4+PjE2JjY1NTM1fDAsZz0wO24hPT0wOyl7Zz1uPjJlMz8yZTM6bixuLT1nO2RvIHM9cyt0W3IrK118MCx1PXUrc3wwO3doaWxlKC0tZyk7cyU9NjU1MjEsdSU9NjU1MjF9cmV0dXJuIHN8dTw8MTZ8MH12YXIgcGM9aGM7ZnVuY3Rpb24gWWMoKXtmb3IodmFyIGUsdD1bXSxuPTA7bjwyNTY7bisrKXtlPW47Zm9yKHZhciByPTA7cjw4O3IrKyllPWUmMT8zOTg4MjkyMzg0XmU+Pj4xOmU+Pj4xO3Rbbl09ZX1yZXR1cm4gdH12YXIgcWM9WWMoKTtmdW5jdGlvbiBMbChlLHQsbixyKXt2YXIgcz1xYyx1PXIrbjtlXj0tMTtmb3IodmFyIGc9cjtnPHU7ZysrKWU9ZT4+Pjhec1soZV50W2ddKSYyNTVdO3JldHVybiBlXi0xfXZhciB2bD1MbCxScz17MjoibmVlZCBkaWN0aW9uYXJ5IiwxOiJzdHJlYW0gZW5kIiwwOiIiLCItMSI6ImZpbGUgZXJyb3IiLCItMiI6InN0cmVhbSBlcnJvciIsIi0zIjoiZGF0YSBlcnJvciIsIi00IjoiaW5zdWZmaWNpZW50IG1lbW9yeSIsIi01IjoiYnVmZmVyIGVycm9yIiwiLTYiOiJpbmNvbXBhdGlibGUgdmVyc2lvbiJ9LG5pPVR0LElvPUx0LEZsPXBjLHFvPXZsLG1sPVJzLHJzPTAsS2M9MSxZcz0zLHNhPTQscXM9NSxLbz0wLEtzPTEsWWk9LTIsZ2M9LTMsVmw9LTUsSmM9LTEsdmM9MSxKcz0yLG1jPTMsX2M9NCxiYz0wLCRsPTIsWnM9OCx5Yz05LFpjPTE1LFhjPTgsUWM9MjksVWw9MjU2LF9sPVVsKzErUWMsSGE9MzAsWHM9MTksSGw9MipfbCsxLEVjPTE1LGRuPTMsSWk9MjU4LFBvPUlpK2RuKzEsd2M9MzIsYmw9NDIsUXM9NjkseWw9NzMsTm89OTEsbGE9MTAzLGphPTExMyxlbD02NjYsdnI9MSx4cz0yLHphPTMsaXM9NCxTYz0zO2Z1bmN0aW9uIENhKGUsdCl7cmV0dXJuIGUubXNnPW1sW3RdLHR9ZnVuY3Rpb24gRWwoZSl7cmV0dXJuKGU8PDEpLShlPjQ/OTowKX1mdW5jdGlvbiBjYShlKXtmb3IodmFyIHQ9ZS5sZW5ndGg7LS10Pj0wOyllW3RdPTB9ZnVuY3Rpb24gV2EoZSl7dmFyIHQ9ZS5zdGF0ZSxuPXQucGVuZGluZztuPmUuYXZhaWxfb3V0JiYobj1lLmF2YWlsX291dCksbiE9PTAmJihuaS5hcnJheVNldChlLm91dHB1dCx0LnBlbmRpbmdfYnVmLHQucGVuZGluZ19vdXQsbixlLm5leHRfb3V0KSxlLm5leHRfb3V0Kz1uLHQucGVuZGluZ19vdXQrPW4sZS50b3RhbF9vdXQrPW4sZS5hdmFpbF9vdXQtPW4sdC5wZW5kaW5nLT1uLHQucGVuZGluZz09PTAmJih0LnBlbmRpbmdfb3V0PTApKX1mdW5jdGlvbiByaShlLHQpe0lvLl90cl9mbHVzaF9ibG9jayhlLGUuYmxvY2tfc3RhcnQ+PTA/ZS5ibG9ja19zdGFydDotMSxlLnN0cnN0YXJ0LWUuYmxvY2tfc3RhcnQsdCksZS5ibG9ja19zdGFydD1lLnN0cnN0YXJ0LFdhKGUuc3RybSl9ZnVuY3Rpb24gbyhlLHQpe2UucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXR9ZnVuY3Rpb24gYyhlLHQpe2UucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXQ+Pj44JjI1NSxlLnBlbmRpbmdfYnVmW2UucGVuZGluZysrXT10JjI1NX1mdW5jdGlvbiBoKGUsdCxuLHIpe3ZhciBzPWUuYXZhaWxfaW47cmV0dXJuIHM+ciYmKHM9cikscz09PTA/MDooZS5hdmFpbF9pbi09cyxuaS5hcnJheVNldCh0LGUuaW5wdXQsZS5uZXh0X2luLHMsbiksZS5zdGF0ZS53cmFwPT09MT9lLmFkbGVyPUZsKGUuYWRsZXIsdCxzLG4pOmUuc3RhdGUud3JhcD09PTImJihlLmFkbGVyPXFvKGUuYWRsZXIsdCxzLG4pKSxlLm5leHRfaW4rPXMsZS50b3RhbF9pbis9cyxzKX1mdW5jdGlvbiBfKGUsdCl7dmFyIG49ZS5tYXhfY2hhaW5fbGVuZ3RoLHI9ZS5zdHJzdGFydCxzLHUsZz1lLnByZXZfbGVuZ3RoLEU9ZS5uaWNlX21hdGNoLCQ9ZS5zdHJzdGFydD5lLndfc2l6ZS1Qbz9lLnN0cnN0YXJ0LShlLndfc2l6ZS1Qbyk6MCxQPWUud2luZG93LEw9ZS53X21hc2ssQWU9ZS5wcmV2LE5lPWUuc3Ryc3RhcnQrSWksUmU9UFtyK2ctMV0sc3Q9UFtyK2ddO2UucHJldl9sZW5ndGg+PWUuZ29vZF9tYXRjaCYmKG4+Pj0yKSxFPmUubG9va2FoZWFkJiYoRT1lLmxvb2thaGVhZCk7ZG8gaWYocz10LCEoUFtzK2ddIT09c3R8fFBbcytnLTFdIT09UmV8fFBbc10hPT1QW3JdfHxQWysrc10hPT1QW3IrMV0pKXtyKz0yLHMrKztkbzt3aGlsZShQWysrcl09PT1QWysrc10mJlBbKytyXT09PVBbKytzXSYmUFsrK3JdPT09UFsrK3NdJiZQWysrcl09PT1QWysrc10mJlBbKytyXT09PVBbKytzXSYmUFsrK3JdPT09UFsrK3NdJiZQWysrcl09PT1QWysrc10mJlBbKytyXT09PVBbKytzXSYmcjxOZSk7aWYodT1JaS0oTmUtcikscj1OZS1JaSx1Pmcpe2lmKGUubWF0Y2hfc3RhcnQ9dCxnPXUsdT49RSlicmVhaztSZT1QW3IrZy0xXSxzdD1QW3IrZ119fXdoaWxlKCh0PUFlW3QmTF0pPiQmJi0tbiE9PTApO3JldHVybiBnPD1lLmxvb2thaGVhZD9nOmUubG9va2FoZWFkfWZ1bmN0aW9uIEkoZSl7dmFyIHQ9ZS53X3NpemUsbixyLHMsdSxnO2Rve2lmKHU9ZS53aW5kb3dfc2l6ZS1lLmxvb2thaGVhZC1lLnN0cnN0YXJ0LGUuc3Ryc3RhcnQ+PXQrKHQtUG8pKXtuaS5hcnJheVNldChlLndpbmRvdyxlLndpbmRvdyx0LHQsMCksZS5tYXRjaF9zdGFydC09dCxlLnN0cnN0YXJ0LT10LGUuYmxvY2tfc3RhcnQtPXQscj1lLmhhc2hfc2l6ZSxuPXI7ZG8gcz1lLmhlYWRbLS1uXSxlLmhlYWRbbl09cz49dD9zLXQ6MDt3aGlsZSgtLXIpO3I9dCxuPXI7ZG8gcz1lLnByZXZbLS1uXSxlLnByZXZbbl09cz49dD9zLXQ6MDt3aGlsZSgtLXIpO3UrPXR9aWYoZS5zdHJtLmF2YWlsX2luPT09MClicmVhaztpZihyPWgoZS5zdHJtLGUud2luZG93LGUuc3Ryc3RhcnQrZS5sb29rYWhlYWQsdSksZS5sb29rYWhlYWQrPXIsZS5sb29rYWhlYWQrZS5pbnNlcnQ+PWRuKWZvcihnPWUuc3Ryc3RhcnQtZS5pbnNlcnQsZS5pbnNfaD1lLndpbmRvd1tnXSxlLmluc19oPShlLmluc19oPDxlLmhhc2hfc2hpZnReZS53aW5kb3dbZysxXSkmZS5oYXNoX21hc2s7ZS5pbnNlcnQmJihlLmluc19oPShlLmluc19oPDxlLmhhc2hfc2hpZnReZS53aW5kb3dbZytkbi0xXSkmZS5oYXNoX21hc2ssZS5wcmV2W2cmZS53X21hc2tdPWUuaGVhZFtlLmluc19oXSxlLmhlYWRbZS5pbnNfaF09ZyxnKyssZS5pbnNlcnQtLSwhKGUubG9va2FoZWFkK2UuaW5zZXJ0PGRuKSk7KTt9d2hpbGUoZS5sb29rYWhlYWQ8UG8mJmUuc3RybS5hdmFpbF9pbiE9PTApfWZ1bmN0aW9uIEEoZSx0KXt2YXIgbj02NTUzNTtmb3Iobj5lLnBlbmRpbmdfYnVmX3NpemUtNSYmKG49ZS5wZW5kaW5nX2J1Zl9zaXplLTUpOzspe2lmKGUubG9va2FoZWFkPD0xKXtpZihJKGUpLGUubG9va2FoZWFkPT09MCYmdD09PXJzKXJldHVybiB2cjtpZihlLmxvb2thaGVhZD09PTApYnJlYWt9ZS5zdHJzdGFydCs9ZS5sb29rYWhlYWQsZS5sb29rYWhlYWQ9MDt2YXIgcj1lLmJsb2NrX3N0YXJ0K247aWYoKGUuc3Ryc3RhcnQ9PT0wfHxlLnN0cnN0YXJ0Pj1yKSYmKGUubG9va2FoZWFkPWUuc3Ryc3RhcnQtcixlLnN0cnN0YXJ0PXIscmkoZSwhMSksZS5zdHJtLmF2YWlsX291dD09PTApfHxlLnN0cnN0YXJ0LWUuYmxvY2tfc3RhcnQ+PWUud19zaXplLVBvJiYocmkoZSwhMSksZS5zdHJtLmF2YWlsX291dD09PTApKXJldHVybiB2cn1yZXR1cm4gZS5pbnNlcnQ9MCx0PT09c2E/KHJpKGUsITApLGUuc3RybS5hdmFpbF9vdXQ9PT0wP3phOmlzKTooZS5zdHJzdGFydD5lLmJsb2NrX3N0YXJ0JiYocmkoZSwhMSksZS5zdHJtLmF2YWlsX291dD09PTApLHZyKX1mdW5jdGlvbiB4KGUsdCl7Zm9yKHZhciBuLHI7Oyl7aWYoZS5sb29rYWhlYWQ8UG8pe2lmKEkoZSksZS5sb29rYWhlYWQ8UG8mJnQ9PT1ycylyZXR1cm4gdnI7aWYoZS5sb29rYWhlYWQ9PT0wKWJyZWFrfWlmKG49MCxlLmxvb2thaGVhZD49ZG4mJihlLmluc19oPShlLmluc19oPDxlLmhhc2hfc2hpZnReZS53aW5kb3dbZS5zdHJzdGFydCtkbi0xXSkmZS5oYXNoX21hc2ssbj1lLnByZXZbZS5zdHJzdGFydCZlLndfbWFza109ZS5oZWFkW2UuaW5zX2hdLGUuaGVhZFtlLmluc19oXT1lLnN0cnN0YXJ0KSxuIT09MCYmZS5zdHJzdGFydC1uPD1lLndfc2l6ZS1QbyYmKGUubWF0Y2hfbGVuZ3RoPV8oZSxuKSksZS5tYXRjaF9sZW5ndGg+PWRuKWlmKHI9SW8uX3RyX3RhbGx5KGUsZS5zdHJzdGFydC1lLm1hdGNoX3N0YXJ0LGUubWF0Y2hfbGVuZ3RoLWRuKSxlLmxvb2thaGVhZC09ZS5tYXRjaF9sZW5ndGgsZS5tYXRjaF9sZW5ndGg8PWUubWF4X2xhenlfbWF0Y2gmJmUubG9va2FoZWFkPj1kbil7ZS5tYXRjaF9sZW5ndGgtLTtkbyBlLnN0cnN0YXJ0KyssZS5pbnNfaD0oZS5pbnNfaDw8ZS5oYXNoX3NoaWZ0XmUud2luZG93W2Uuc3Ryc3RhcnQrZG4tMV0pJmUuaGFzaF9tYXNrLG49ZS5wcmV2W2Uuc3Ryc3RhcnQmZS53X21hc2tdPWUuaGVhZFtlLmluc19oXSxlLmhlYWRbZS5pbnNfaF09ZS5zdHJzdGFydDt3aGlsZSgtLWUubWF0Y2hfbGVuZ3RoIT09MCk7ZS5zdHJzdGFydCsrfWVsc2UgZS5zdHJzdGFydCs9ZS5tYXRjaF9sZW5ndGgsZS5tYXRjaF9sZW5ndGg9MCxlLmluc19oPWUud2luZG93W2Uuc3Ryc3RhcnRdLGUuaW5zX2g9KGUuaW5zX2g8PGUuaGFzaF9zaGlmdF5lLndpbmRvd1tlLnN0cnN0YXJ0KzFdKSZlLmhhc2hfbWFzaztlbHNlIHI9SW8uX3RyX3RhbGx5KGUsMCxlLndpbmRvd1tlLnN0cnN0YXJ0XSksZS5sb29rYWhlYWQtLSxlLnN0cnN0YXJ0Kys7aWYociYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKSlyZXR1cm4gdnJ9cmV0dXJuIGUuaW5zZXJ0PWUuc3Ryc3RhcnQ8ZG4tMT9lLnN0cnN0YXJ0OmRuLTEsdD09PXNhPyhyaShlLCEwKSxlLnN0cm0uYXZhaWxfb3V0PT09MD96YTppcyk6ZS5sYXN0X2xpdCYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKT92cjp4c31mdW5jdGlvbiB6KGUsdCl7Zm9yKHZhciBuLHIsczs7KXtpZihlLmxvb2thaGVhZDxQbyl7aWYoSShlKSxlLmxvb2thaGVhZDxQbyYmdD09PXJzKXJldHVybiB2cjtpZihlLmxvb2thaGVhZD09PTApYnJlYWt9aWYobj0wLGUubG9va2FoZWFkPj1kbiYmKGUuaW5zX2g9KGUuaW5zX2g8PGUuaGFzaF9zaGlmdF5lLndpbmRvd1tlLnN0cnN0YXJ0K2RuLTFdKSZlLmhhc2hfbWFzayxuPWUucHJldltlLnN0cnN0YXJ0JmUud19tYXNrXT1lLmhlYWRbZS5pbnNfaF0sZS5oZWFkW2UuaW5zX2hdPWUuc3Ryc3RhcnQpLGUucHJldl9sZW5ndGg9ZS5tYXRjaF9sZW5ndGgsZS5wcmV2X21hdGNoPWUubWF0Y2hfc3RhcnQsZS5tYXRjaF9sZW5ndGg9ZG4tMSxuIT09MCYmZS5wcmV2X2xlbmd0aDxlLm1heF9sYXp5X21hdGNoJiZlLnN0cnN0YXJ0LW48PWUud19zaXplLVBvJiYoZS5tYXRjaF9sZW5ndGg9XyhlLG4pLGUubWF0Y2hfbGVuZ3RoPD01JiYoZS5zdHJhdGVneT09PXZjfHxlLm1hdGNoX2xlbmd0aD09PWRuJiZlLnN0cnN0YXJ0LWUubWF0Y2hfc3RhcnQ+NDA5NikmJihlLm1hdGNoX2xlbmd0aD1kbi0xKSksZS5wcmV2X2xlbmd0aD49ZG4mJmUubWF0Y2hfbGVuZ3RoPD1lLnByZXZfbGVuZ3RoKXtzPWUuc3Ryc3RhcnQrZS5sb29rYWhlYWQtZG4scj1Jby5fdHJfdGFsbHkoZSxlLnN0cnN0YXJ0LTEtZS5wcmV2X21hdGNoLGUucHJldl9sZW5ndGgtZG4pLGUubG9va2FoZWFkLT1lLnByZXZfbGVuZ3RoLTEsZS5wcmV2X2xlbmd0aC09MjtkbysrZS5zdHJzdGFydDw9cyYmKGUuaW5zX2g9KGUuaW5zX2g8PGUuaGFzaF9zaGlmdF5lLndpbmRvd1tlLnN0cnN0YXJ0K2RuLTFdKSZlLmhhc2hfbWFzayxuPWUucHJldltlLnN0cnN0YXJ0JmUud19tYXNrXT1lLmhlYWRbZS5pbnNfaF0sZS5oZWFkW2UuaW5zX2hdPWUuc3Ryc3RhcnQpO3doaWxlKC0tZS5wcmV2X2xlbmd0aCE9PTApO2lmKGUubWF0Y2hfYXZhaWxhYmxlPTAsZS5tYXRjaF9sZW5ndGg9ZG4tMSxlLnN0cnN0YXJ0KyssciYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKSlyZXR1cm4gdnJ9ZWxzZSBpZihlLm1hdGNoX2F2YWlsYWJsZSl7aWYocj1Jby5fdHJfdGFsbHkoZSwwLGUud2luZG93W2Uuc3Ryc3RhcnQtMV0pLHImJnJpKGUsITEpLGUuc3Ryc3RhcnQrKyxlLmxvb2thaGVhZC0tLGUuc3RybS5hdmFpbF9vdXQ9PT0wKXJldHVybiB2cn1lbHNlIGUubWF0Y2hfYXZhaWxhYmxlPTEsZS5zdHJzdGFydCsrLGUubG9va2FoZWFkLS19cmV0dXJuIGUubWF0Y2hfYXZhaWxhYmxlJiYocj1Jby5fdHJfdGFsbHkoZSwwLGUud2luZG93W2Uuc3Ryc3RhcnQtMV0pLGUubWF0Y2hfYXZhaWxhYmxlPTApLGUuaW5zZXJ0PWUuc3Ryc3RhcnQ8ZG4tMT9lLnN0cnN0YXJ0OmRuLTEsdD09PXNhPyhyaShlLCEwKSxlLnN0cm0uYXZhaWxfb3V0PT09MD96YTppcyk6ZS5sYXN0X2xpdCYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKT92cjp4c31mdW5jdGlvbiBIKGUsdCl7Zm9yKHZhciBuLHIscyx1LGc9ZS53aW5kb3c7Oyl7aWYoZS5sb29rYWhlYWQ8PUlpKXtpZihJKGUpLGUubG9va2FoZWFkPD1JaSYmdD09PXJzKXJldHVybiB2cjtpZihlLmxvb2thaGVhZD09PTApYnJlYWt9aWYoZS5tYXRjaF9sZW5ndGg9MCxlLmxvb2thaGVhZD49ZG4mJmUuc3Ryc3RhcnQ+MCYmKHM9ZS5zdHJzdGFydC0xLHI9Z1tzXSxyPT09Z1srK3NdJiZyPT09Z1srK3NdJiZyPT09Z1srK3NdKSl7dT1lLnN0cnN0YXJ0K0lpO2RvO3doaWxlKHI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnI9PT1nWysrc10mJnM8dSk7ZS5tYXRjaF9sZW5ndGg9SWktKHUtcyksZS5tYXRjaF9sZW5ndGg+ZS5sb29rYWhlYWQmJihlLm1hdGNoX2xlbmd0aD1lLmxvb2thaGVhZCl9aWYoZS5tYXRjaF9sZW5ndGg+PWRuPyhuPUlvLl90cl90YWxseShlLDEsZS5tYXRjaF9sZW5ndGgtZG4pLGUubG9va2FoZWFkLT1lLm1hdGNoX2xlbmd0aCxlLnN0cnN0YXJ0Kz1lLm1hdGNoX2xlbmd0aCxlLm1hdGNoX2xlbmd0aD0wKToobj1Jby5fdHJfdGFsbHkoZSwwLGUud2luZG93W2Uuc3Ryc3RhcnRdKSxlLmxvb2thaGVhZC0tLGUuc3Ryc3RhcnQrKyksbiYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKSlyZXR1cm4gdnJ9cmV0dXJuIGUuaW5zZXJ0PTAsdD09PXNhPyhyaShlLCEwKSxlLnN0cm0uYXZhaWxfb3V0PT09MD96YTppcyk6ZS5sYXN0X2xpdCYmKHJpKGUsITEpLGUuc3RybS5hdmFpbF9vdXQ9PT0wKT92cjp4c31mdW5jdGlvbiB0ZShlLHQpe2Zvcih2YXIgbjs7KXtpZihlLmxvb2thaGVhZD09PTAmJihJKGUpLGUubG9va2FoZWFkPT09MCkpe2lmKHQ9PT1ycylyZXR1cm4gdnI7YnJlYWt9aWYoZS5tYXRjaF9sZW5ndGg9MCxuPUlvLl90cl90YWxseShlLDAsZS53aW5kb3dbZS5zdHJzdGFydF0pLGUubG9va2FoZWFkLS0sZS5zdHJzdGFydCsrLG4mJihyaShlLCExKSxlLnN0cm0uYXZhaWxfb3V0PT09MCkpcmV0dXJuIHZyfXJldHVybiBlLmluc2VydD0wLHQ9PT1zYT8ocmkoZSwhMCksZS5zdHJtLmF2YWlsX291dD09PTA/emE6aXMpOmUubGFzdF9saXQmJihyaShlLCExKSxlLnN0cm0uYXZhaWxfb3V0PT09MCk/dnI6eHN9ZnVuY3Rpb24gUGUoZSx0LG4scixzKXt0aGlzLmdvb2RfbGVuZ3RoPWUsdGhpcy5tYXhfbGF6eT10LHRoaXMubmljZV9sZW5ndGg9bix0aGlzLm1heF9jaGFpbj1yLHRoaXMuZnVuYz1zfXZhciBkZTtkZT1bbmV3IFBlKDAsMCwwLDAsQSksbmV3IFBlKDQsNCw4LDQseCksbmV3IFBlKDQsNSwxNiw4LHgpLG5ldyBQZSg0LDYsMzIsMzIseCksbmV3IFBlKDQsNCwxNiwxNix6KSxuZXcgUGUoOCwxNiwzMiwzMix6KSxuZXcgUGUoOCwxNiwxMjgsMTI4LHopLG5ldyBQZSg4LDMyLDEyOCwyNTYseiksbmV3IFBlKDMyLDEyOCwyNTgsMTAyNCx6KSxuZXcgUGUoMzIsMjU4LDI1OCw0MDk2LHopXTtmdW5jdGlvbiBmZShlKXtlLndpbmRvd19zaXplPTIqZS53X3NpemUsY2EoZS5oZWFkKSxlLm1heF9sYXp5X21hdGNoPWRlW2UubGV2ZWxdLm1heF9sYXp5LGUuZ29vZF9tYXRjaD1kZVtlLmxldmVsXS5nb29kX2xlbmd0aCxlLm5pY2VfbWF0Y2g9ZGVbZS5sZXZlbF0ubmljZV9sZW5ndGgsZS5tYXhfY2hhaW5fbGVuZ3RoPWRlW2UubGV2ZWxdLm1heF9jaGFpbixlLnN0cnN0YXJ0PTAsZS5ibG9ja19zdGFydD0wLGUubG9va2FoZWFkPTAsZS5pbnNlcnQ9MCxlLm1hdGNoX2xlbmd0aD1lLnByZXZfbGVuZ3RoPWRuLTEsZS5tYXRjaF9hdmFpbGFibGU9MCxlLmluc19oPTB9ZnVuY3Rpb24gVWUoKXt0aGlzLnN0cm09bnVsbCx0aGlzLnN0YXR1cz0wLHRoaXMucGVuZGluZ19idWY9bnVsbCx0aGlzLnBlbmRpbmdfYnVmX3NpemU9MCx0aGlzLnBlbmRpbmdfb3V0PTAsdGhpcy5wZW5kaW5nPTAsdGhpcy53cmFwPTAsdGhpcy5nemhlYWQ9bnVsbCx0aGlzLmd6aW5kZXg9MCx0aGlzLm1ldGhvZD1acyx0aGlzLmxhc3RfZmx1c2g9LTEsdGhpcy53X3NpemU9MCx0aGlzLndfYml0cz0wLHRoaXMud19tYXNrPTAsdGhpcy53aW5kb3c9bnVsbCx0aGlzLndpbmRvd19zaXplPTAsdGhpcy5wcmV2PW51bGwsdGhpcy5oZWFkPW51bGwsdGhpcy5pbnNfaD0wLHRoaXMuaGFzaF9zaXplPTAsdGhpcy5oYXNoX2JpdHM9MCx0aGlzLmhhc2hfbWFzaz0wLHRoaXMuaGFzaF9zaGlmdD0wLHRoaXMuYmxvY2tfc3RhcnQ9MCx0aGlzLm1hdGNoX2xlbmd0aD0wLHRoaXMucHJldl9tYXRjaD0wLHRoaXMubWF0Y2hfYXZhaWxhYmxlPTAsdGhpcy5zdHJzdGFydD0wLHRoaXMubWF0Y2hfc3RhcnQ9MCx0aGlzLmxvb2thaGVhZD0wLHRoaXMucHJldl9sZW5ndGg9MCx0aGlzLm1heF9jaGFpbl9sZW5ndGg9MCx0aGlzLm1heF9sYXp5X21hdGNoPTAsdGhpcy5sZXZlbD0wLHRoaXMuc3RyYXRlZ3k9MCx0aGlzLmdvb2RfbWF0Y2g9MCx0aGlzLm5pY2VfbWF0Y2g9MCx0aGlzLmR5bl9sdHJlZT1uZXcgbmkuQnVmMTYoSGwqMiksdGhpcy5keW5fZHRyZWU9bmV3IG5pLkJ1ZjE2KCgyKkhhKzEpKjIpLHRoaXMuYmxfdHJlZT1uZXcgbmkuQnVmMTYoKDIqWHMrMSkqMiksY2EodGhpcy5keW5fbHRyZWUpLGNhKHRoaXMuZHluX2R0cmVlKSxjYSh0aGlzLmJsX3RyZWUpLHRoaXMubF9kZXNjPW51bGwsdGhpcy5kX2Rlc2M9bnVsbCx0aGlzLmJsX2Rlc2M9bnVsbCx0aGlzLmJsX2NvdW50PW5ldyBuaS5CdWYxNihFYysxKSx0aGlzLmhlYXA9bmV3IG5pLkJ1ZjE2KDIqX2wrMSksY2EodGhpcy5oZWFwKSx0aGlzLmhlYXBfbGVuPTAsdGhpcy5oZWFwX21heD0wLHRoaXMuZGVwdGg9bmV3IG5pLkJ1ZjE2KDIqX2wrMSksY2EodGhpcy5kZXB0aCksdGhpcy5sX2J1Zj0wLHRoaXMubGl0X2J1ZnNpemU9MCx0aGlzLmxhc3RfbGl0PTAsdGhpcy5kX2J1Zj0wLHRoaXMub3B0X2xlbj0wLHRoaXMuc3RhdGljX2xlbj0wLHRoaXMubWF0Y2hlcz0wLHRoaXMuaW5zZXJ0PTAsdGhpcy5iaV9idWY9MCx0aGlzLmJpX3ZhbGlkPTB9ZnVuY3Rpb24gSmUoZSl7dmFyIHQ7cmV0dXJuIWV8fCFlLnN0YXRlP0NhKGUsWWkpOihlLnRvdGFsX2luPWUudG90YWxfb3V0PTAsZS5kYXRhX3R5cGU9JGwsdD1lLnN0YXRlLHQucGVuZGluZz0wLHQucGVuZGluZ19vdXQ9MCx0LndyYXA8MCYmKHQud3JhcD0tdC53cmFwKSx0LnN0YXR1cz10LndyYXA/Ymw6amEsZS5hZGxlcj10LndyYXA9PT0yPzA6MSx0Lmxhc3RfZmx1c2g9cnMsSW8uX3RyX2luaXQodCksS28pfWZ1bmN0aW9uIGd0KGUpe3ZhciB0PUplKGUpO3JldHVybiB0PT09S28mJmZlKGUuc3RhdGUpLHR9ZnVuY3Rpb24gYnQoZSx0KXtyZXR1cm4hZXx8IWUuc3RhdGV8fGUuc3RhdGUud3JhcCE9PTI/WWk6KGUuc3RhdGUuZ3poZWFkPXQsS28pfWZ1bmN0aW9uIGtlKGUsdCxuLHIscyx1KXtpZighZSlyZXR1cm4gWWk7dmFyIGc9MTtpZih0PT09SmMmJih0PTYpLHI8MD8oZz0wLHI9LXIpOnI+MTUmJihnPTIsci09MTYpLHM8MXx8cz55Y3x8biE9PVpzfHxyPDh8fHI+MTV8fHQ8MHx8dD45fHx1PDB8fHU+X2MpcmV0dXJuIENhKGUsWWkpO3I9PT04JiYocj05KTt2YXIgRT1uZXcgVWU7cmV0dXJuIGUuc3RhdGU9RSxFLnN0cm09ZSxFLndyYXA9ZyxFLmd6aGVhZD1udWxsLEUud19iaXRzPXIsRS53X3NpemU9MTw8RS53X2JpdHMsRS53X21hc2s9RS53X3NpemUtMSxFLmhhc2hfYml0cz1zKzcsRS5oYXNoX3NpemU9MTw8RS5oYXNoX2JpdHMsRS5oYXNoX21hc2s9RS5oYXNoX3NpemUtMSxFLmhhc2hfc2hpZnQ9fn4oKEUuaGFzaF9iaXRzK2RuLTEpL2RuKSxFLndpbmRvdz1uZXcgbmkuQnVmOChFLndfc2l6ZSoyKSxFLmhlYWQ9bmV3IG5pLkJ1ZjE2KEUuaGFzaF9zaXplKSxFLnByZXY9bmV3IG5pLkJ1ZjE2KEUud19zaXplKSxFLmxpdF9idWZzaXplPTE8PHMrNixFLnBlbmRpbmdfYnVmX3NpemU9RS5saXRfYnVmc2l6ZSo0LEUucGVuZGluZ19idWY9bmV3IG5pLkJ1ZjgoRS5wZW5kaW5nX2J1Zl9zaXplKSxFLmRfYnVmPTEqRS5saXRfYnVmc2l6ZSxFLmxfYnVmPSgxKzIpKkUubGl0X2J1ZnNpemUsRS5sZXZlbD10LEUuc3RyYXRlZ3k9dSxFLm1ldGhvZD1uLGd0KGUpfWZ1bmN0aW9uIG1lKGUsdCl7cmV0dXJuIGtlKGUsdCxacyxaYyxYYyxiYyl9ZnVuY3Rpb24gTWUoZSx0KXt2YXIgbixyLHMsdTtpZighZXx8IWUuc3RhdGV8fHQ+cXN8fHQ8MClyZXR1cm4gZT9DYShlLFlpKTpZaTtpZihyPWUuc3RhdGUsIWUub3V0cHV0fHwhZS5pbnB1dCYmZS5hdmFpbF9pbiE9PTB8fHIuc3RhdHVzPT09ZWwmJnQhPT1zYSlyZXR1cm4gQ2EoZSxlLmF2YWlsX291dD09PTA/Vmw6WWkpO2lmKHIuc3RybT1lLG49ci5sYXN0X2ZsdXNoLHIubGFzdF9mbHVzaD10LHIuc3RhdHVzPT09YmwpaWYoci53cmFwPT09MillLmFkbGVyPTAsbyhyLDMxKSxvKHIsMTM5KSxvKHIsOCksci5nemhlYWQ/KG8ociwoci5nemhlYWQudGV4dD8xOjApKyhyLmd6aGVhZC5oY3JjPzI6MCkrKHIuZ3poZWFkLmV4dHJhPzQ6MCkrKHIuZ3poZWFkLm5hbWU/ODowKSsoci5nemhlYWQuY29tbWVudD8xNjowKSksbyhyLHIuZ3poZWFkLnRpbWUmMjU1KSxvKHIsci5nemhlYWQudGltZT4+OCYyNTUpLG8ocixyLmd6aGVhZC50aW1lPj4xNiYyNTUpLG8ocixyLmd6aGVhZC50aW1lPj4yNCYyNTUpLG8ocixyLmxldmVsPT09OT8yOnIuc3RyYXRlZ3k+PUpzfHxyLmxldmVsPDI/NDowKSxvKHIsci5nemhlYWQub3MmMjU1KSxyLmd6aGVhZC5leHRyYSYmci5nemhlYWQuZXh0cmEubGVuZ3RoJiYobyhyLHIuZ3poZWFkLmV4dHJhLmxlbmd0aCYyNTUpLG8ocixyLmd6aGVhZC5leHRyYS5sZW5ndGg+PjgmMjU1KSksci5nemhlYWQuaGNyYyYmKGUuYWRsZXI9cW8oZS5hZGxlcixyLnBlbmRpbmdfYnVmLHIucGVuZGluZywwKSksci5nemluZGV4PTAsci5zdGF0dXM9UXMpOihvKHIsMCksbyhyLDApLG8ociwwKSxvKHIsMCksbyhyLDApLG8ocixyLmxldmVsPT09OT8yOnIuc3RyYXRlZ3k+PUpzfHxyLmxldmVsPDI/NDowKSxvKHIsU2MpLHIuc3RhdHVzPWphKTtlbHNle3ZhciBnPVpzKyhyLndfYml0cy04PDw0KTw8OCxFPS0xO3Iuc3RyYXRlZ3k+PUpzfHxyLmxldmVsPDI/RT0wOnIubGV2ZWw8Nj9FPTE6ci5sZXZlbD09PTY/RT0yOkU9MyxnfD1FPDw2LHIuc3Ryc3RhcnQhPT0wJiYoZ3w9d2MpLGcrPTMxLWclMzEsci5zdGF0dXM9amEsYyhyLGcpLHIuc3Ryc3RhcnQhPT0wJiYoYyhyLGUuYWRsZXI+Pj4xNiksYyhyLGUuYWRsZXImNjU1MzUpKSxlLmFkbGVyPTF9aWYoci5zdGF0dXM9PT1RcylpZihyLmd6aGVhZC5leHRyYSl7Zm9yKHM9ci5wZW5kaW5nO3IuZ3ppbmRleDwoci5nemhlYWQuZXh0cmEubGVuZ3RoJjY1NTM1KSYmIShyLnBlbmRpbmc9PT1yLnBlbmRpbmdfYnVmX3NpemUmJihyLmd6aGVhZC5oY3JjJiZyLnBlbmRpbmc+cyYmKGUuYWRsZXI9cW8oZS5hZGxlcixyLnBlbmRpbmdfYnVmLHIucGVuZGluZy1zLHMpKSxXYShlKSxzPXIucGVuZGluZyxyLnBlbmRpbmc9PT1yLnBlbmRpbmdfYnVmX3NpemUpKTspbyhyLHIuZ3poZWFkLmV4dHJhW3IuZ3ppbmRleF0mMjU1KSxyLmd6aW5kZXgrKztyLmd6aGVhZC5oY3JjJiZyLnBlbmRpbmc+cyYmKGUuYWRsZXI9cW8oZS5hZGxlcixyLnBlbmRpbmdfYnVmLHIucGVuZGluZy1zLHMpKSxyLmd6aW5kZXg9PT1yLmd6aGVhZC5leHRyYS5sZW5ndGgmJihyLmd6aW5kZXg9MCxyLnN0YXR1cz15bCl9ZWxzZSByLnN0YXR1cz15bDtpZihyLnN0YXR1cz09PXlsKWlmKHIuZ3poZWFkLm5hbWUpe3M9ci5wZW5kaW5nO2Rve2lmKHIucGVuZGluZz09PXIucGVuZGluZ19idWZfc2l6ZSYmKHIuZ3poZWFkLmhjcmMmJnIucGVuZGluZz5zJiYoZS5hZGxlcj1xbyhlLmFkbGVyLHIucGVuZGluZ19idWYsci5wZW5kaW5nLXMscykpLFdhKGUpLHM9ci5wZW5kaW5nLHIucGVuZGluZz09PXIucGVuZGluZ19idWZfc2l6ZSkpe3U9MTticmVha31yLmd6aW5kZXg8ci5nemhlYWQubmFtZS5sZW5ndGg/dT1yLmd6aGVhZC5uYW1lLmNoYXJDb2RlQXQoci5nemluZGV4KyspJjI1NTp1PTAsbyhyLHUpfXdoaWxlKHUhPT0wKTtyLmd6aGVhZC5oY3JjJiZyLnBlbmRpbmc+cyYmKGUuYWRsZXI9cW8oZS5hZGxlcixyLnBlbmRpbmdfYnVmLHIucGVuZGluZy1zLHMpKSx1PT09MCYmKHIuZ3ppbmRleD0wLHIuc3RhdHVzPU5vKX1lbHNlIHIuc3RhdHVzPU5vO2lmKHIuc3RhdHVzPT09Tm8paWYoci5nemhlYWQuY29tbWVudCl7cz1yLnBlbmRpbmc7ZG97aWYoci5wZW5kaW5nPT09ci5wZW5kaW5nX2J1Zl9zaXplJiYoci5nemhlYWQuaGNyYyYmci5wZW5kaW5nPnMmJihlLmFkbGVyPXFvKGUuYWRsZXIsci5wZW5kaW5nX2J1ZixyLnBlbmRpbmctcyxzKSksV2EoZSkscz1yLnBlbmRpbmcsci5wZW5kaW5nPT09ci5wZW5kaW5nX2J1Zl9zaXplKSl7dT0xO2JyZWFrfXIuZ3ppbmRleDxyLmd6aGVhZC5jb21tZW50Lmxlbmd0aD91PXIuZ3poZWFkLmNvbW1lbnQuY2hhckNvZGVBdChyLmd6aW5kZXgrKykmMjU1OnU9MCxvKHIsdSl9d2hpbGUodSE9PTApO3IuZ3poZWFkLmhjcmMmJnIucGVuZGluZz5zJiYoZS5hZGxlcj1xbyhlLmFkbGVyLHIucGVuZGluZ19idWYsci5wZW5kaW5nLXMscykpLHU9PT0wJiYoci5zdGF0dXM9bGEpfWVsc2Ugci5zdGF0dXM9bGE7aWYoci5zdGF0dXM9PT1sYSYmKHIuZ3poZWFkLmhjcmM/KHIucGVuZGluZysyPnIucGVuZGluZ19idWZfc2l6ZSYmV2EoZSksci5wZW5kaW5nKzI8PXIucGVuZGluZ19idWZfc2l6ZSYmKG8ocixlLmFkbGVyJjI1NSksbyhyLGUuYWRsZXI+PjgmMjU1KSxlLmFkbGVyPTAsci5zdGF0dXM9amEpKTpyLnN0YXR1cz1qYSksci5wZW5kaW5nIT09MCl7aWYoV2EoZSksZS5hdmFpbF9vdXQ9PT0wKXJldHVybiByLmxhc3RfZmx1c2g9LTEsS299ZWxzZSBpZihlLmF2YWlsX2luPT09MCYmRWwodCk8PUVsKG4pJiZ0IT09c2EpcmV0dXJuIENhKGUsVmwpO2lmKHIuc3RhdHVzPT09ZWwmJmUuYXZhaWxfaW4hPT0wKXJldHVybiBDYShlLFZsKTtpZihlLmF2YWlsX2luIT09MHx8ci5sb29rYWhlYWQhPT0wfHx0IT09cnMmJnIuc3RhdHVzIT09ZWwpe3ZhciAkPXIuc3RyYXRlZ3k9PT1Kcz90ZShyLHQpOnIuc3RyYXRlZ3k9PT1tYz9IKHIsdCk6ZGVbci5sZXZlbF0uZnVuYyhyLHQpO2lmKCgkPT09emF8fCQ9PT1pcykmJihyLnN0YXR1cz1lbCksJD09PXZyfHwkPT09emEpcmV0dXJuIGUuYXZhaWxfb3V0PT09MCYmKHIubGFzdF9mbHVzaD0tMSksS287aWYoJD09PXhzJiYodD09PUtjP0lvLl90cl9hbGlnbihyKTp0IT09cXMmJihJby5fdHJfc3RvcmVkX2Jsb2NrKHIsMCwwLCExKSx0PT09WXMmJihjYShyLmhlYWQpLHIubG9va2FoZWFkPT09MCYmKHIuc3Ryc3RhcnQ9MCxyLmJsb2NrX3N0YXJ0PTAsci5pbnNlcnQ9MCkpKSxXYShlKSxlLmF2YWlsX291dD09PTApKXJldHVybiByLmxhc3RfZmx1c2g9LTEsS299cmV0dXJuIHQhPT1zYT9LbzpyLndyYXA8PTA/S3M6KHIud3JhcD09PTI/KG8ocixlLmFkbGVyJjI1NSksbyhyLGUuYWRsZXI+PjgmMjU1KSxvKHIsZS5hZGxlcj4+MTYmMjU1KSxvKHIsZS5hZGxlcj4+MjQmMjU1KSxvKHIsZS50b3RhbF9pbiYyNTUpLG8ocixlLnRvdGFsX2luPj44JjI1NSksbyhyLGUudG90YWxfaW4+PjE2JjI1NSksbyhyLGUudG90YWxfaW4+PjI0JjI1NSkpOihjKHIsZS5hZGxlcj4+PjE2KSxjKHIsZS5hZGxlciY2NTUzNSkpLFdhKGUpLHIud3JhcD4wJiYoci53cmFwPS1yLndyYXApLHIucGVuZGluZyE9PTA/S286S3MpfWZ1bmN0aW9uIHR0KGUpe3ZhciB0O3JldHVybiFlfHwhZS5zdGF0ZT9ZaToodD1lLnN0YXRlLnN0YXR1cyx0IT09YmwmJnQhPT1RcyYmdCE9PXlsJiZ0IT09Tm8mJnQhPT1sYSYmdCE9PWphJiZ0IT09ZWw/Q2EoZSxZaSk6KGUuc3RhdGU9bnVsbCx0PT09amE/Q2EoZSxnYyk6S28pKX1mdW5jdGlvbiBxZShlLHQpe3ZhciBuPXQubGVuZ3RoLHIscyx1LGcsRSwkLFAsTDtpZighZXx8IWUuc3RhdGV8fChyPWUuc3RhdGUsZz1yLndyYXAsZz09PTJ8fGc9PT0xJiZyLnN0YXR1cyE9PWJsfHxyLmxvb2thaGVhZCkpcmV0dXJuIFlpO2ZvcihnPT09MSYmKGUuYWRsZXI9RmwoZS5hZGxlcix0LG4sMCkpLHIud3JhcD0wLG4+PXIud19zaXplJiYoZz09PTAmJihjYShyLmhlYWQpLHIuc3Ryc3RhcnQ9MCxyLmJsb2NrX3N0YXJ0PTAsci5pbnNlcnQ9MCksTD1uZXcgbmkuQnVmOChyLndfc2l6ZSksbmkuYXJyYXlTZXQoTCx0LG4tci53X3NpemUsci53X3NpemUsMCksdD1MLG49ci53X3NpemUpLEU9ZS5hdmFpbF9pbiwkPWUubmV4dF9pbixQPWUuaW5wdXQsZS5hdmFpbF9pbj1uLGUubmV4dF9pbj0wLGUuaW5wdXQ9dCxJKHIpO3IubG9va2FoZWFkPj1kbjspe3M9ci5zdHJzdGFydCx1PXIubG9va2FoZWFkLShkbi0xKTtkbyByLmluc19oPShyLmluc19oPDxyLmhhc2hfc2hpZnReci53aW5kb3dbcytkbi0xXSkmci5oYXNoX21hc2ssci5wcmV2W3Mmci53X21hc2tdPXIuaGVhZFtyLmluc19oXSxyLmhlYWRbci5pbnNfaF09cyxzKys7d2hpbGUoLS11KTtyLnN0cnN0YXJ0PXMsci5sb29rYWhlYWQ9ZG4tMSxJKHIpfXJldHVybiByLnN0cnN0YXJ0Kz1yLmxvb2thaGVhZCxyLmJsb2NrX3N0YXJ0PXIuc3Ryc3RhcnQsci5pbnNlcnQ9ci5sb29rYWhlYWQsci5sb29rYWhlYWQ9MCxyLm1hdGNoX2xlbmd0aD1yLnByZXZfbGVuZ3RoPWRuLTEsci5tYXRjaF9hdmFpbGFibGU9MCxlLm5leHRfaW49JCxlLmlucHV0PVAsZS5hdmFpbF9pbj1FLHIud3JhcD1nLEtvfWt0LmRlZmxhdGVJbml0PW1lLGt0LmRlZmxhdGVJbml0Mj1rZSxrdC5kZWZsYXRlUmVzZXQ9Z3Qsa3QuZGVmbGF0ZVJlc2V0S2VlcD1KZSxrdC5kZWZsYXRlU2V0SGVhZGVyPWJ0LGt0LmRlZmxhdGU9TWUsa3QuZGVmbGF0ZUVuZD10dCxrdC5kZWZsYXRlU2V0RGljdGlvbmFyeT1xZSxrdC5kZWZsYXRlSW5mbz0icGFrbyBkZWZsYXRlIChmcm9tIE5vZGVjYSBwcm9qZWN0KSI7dmFyIG90PXt9LEl0PVR0LGF0PSEwLGk9ITA7dHJ5e1N0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxbMF0pfWNhdGNoKGUpe2F0PSExfXRyeXtTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsbmV3IFVpbnQ4QXJyYXkoMSkpfWNhdGNoKGUpe2k9ITF9Zm9yKHZhciBhPW5ldyBJdC5CdWY4KDI1NiksZj0wO2Y8MjU2O2YrKylhW2ZdPWY+PTI1Mj82OmY+PTI0OD81OmY+PTI0MD80OmY+PTIyND8zOmY+PTE5Mj8yOjE7YVsyNTRdPWFbMjU0XT0xLG90LnN0cmluZzJidWY9ZnVuY3Rpb24oZSl7dmFyIHQsbixyLHMsdSxnPWUubGVuZ3RoLEU9MDtmb3Iocz0wO3M8ZztzKyspbj1lLmNoYXJDb2RlQXQocyksKG4mNjQ1MTIpPT09NTUyOTYmJnMrMTxnJiYocj1lLmNoYXJDb2RlQXQocysxKSwociY2NDUxMik9PT01NjMyMCYmKG49NjU1MzYrKG4tNTUyOTY8PDEwKSsoci01NjMyMCkscysrKSksRSs9bjwxMjg/MTpuPDIwNDg/MjpuPDY1NTM2PzM6NDtmb3IodD1uZXcgSXQuQnVmOChFKSx1PTAscz0wO3U8RTtzKyspbj1lLmNoYXJDb2RlQXQocyksKG4mNjQ1MTIpPT09NTUyOTYmJnMrMTxnJiYocj1lLmNoYXJDb2RlQXQocysxKSwociY2NDUxMik9PT01NjMyMCYmKG49NjU1MzYrKG4tNTUyOTY8PDEwKSsoci01NjMyMCkscysrKSksbjwxMjg/dFt1KytdPW46bjwyMDQ4Pyh0W3UrK109MTkyfG4+Pj42LHRbdSsrXT0xMjh8biY2Myk6bjw2NTUzNj8odFt1KytdPTIyNHxuPj4+MTIsdFt1KytdPTEyOHxuPj4+NiY2Myx0W3UrK109MTI4fG4mNjMpOih0W3UrK109MjQwfG4+Pj4xOCx0W3UrK109MTI4fG4+Pj4xMiY2Myx0W3UrK109MTI4fG4+Pj42JjYzLHRbdSsrXT0xMjh8biY2Myk7cmV0dXJuIHR9O2Z1bmN0aW9uIHAoZSx0KXtpZih0PDY1NTM0JiYoZS5zdWJhcnJheSYmaXx8IWUuc3ViYXJyYXkmJmF0KSlyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLEl0LnNocmlua0J1ZihlLHQpKTtmb3IodmFyIG49IiIscj0wO3I8dDtyKyspbis9U3RyaW5nLmZyb21DaGFyQ29kZShlW3JdKTtyZXR1cm4gbn1vdC5idWYyYmluc3RyaW5nPWZ1bmN0aW9uKGUpe3JldHVybiBwKGUsZS5sZW5ndGgpfSxvdC5iaW5zdHJpbmcyYnVmPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgSXQuQnVmOChlLmxlbmd0aCksbj0wLHI9dC5sZW5ndGg7bjxyO24rKyl0W25dPWUuY2hhckNvZGVBdChuKTtyZXR1cm4gdH0sb3QuYnVmMnN0cmluZz1mdW5jdGlvbihlLHQpe3ZhciBuLHIscyx1LGc9dHx8ZS5sZW5ndGgsRT1uZXcgQXJyYXkoZyoyKTtmb3Iocj0wLG49MDtuPGc7KXtpZihzPWVbbisrXSxzPDEyOCl7RVtyKytdPXM7Y29udGludWV9aWYodT1hW3NdLHU+NCl7RVtyKytdPTY1NTMzLG4rPXUtMTtjb250aW51ZX1mb3IocyY9dT09PTI/MzE6dT09PTM/MTU6Nzt1PjEmJm48Zzspcz1zPDw2fGVbbisrXSY2Myx1LS07aWYodT4xKXtFW3IrK109NjU1MzM7Y29udGludWV9czw2NTUzNj9FW3IrK109czoocy09NjU1MzYsRVtyKytdPTU1Mjk2fHM+PjEwJjEwMjMsRVtyKytdPTU2MzIwfHMmMTAyMyl9cmV0dXJuIHAoRSxyKX0sb3QudXRmOGJvcmRlcj1mdW5jdGlvbihlLHQpe3ZhciBuO2Zvcih0PXR8fGUubGVuZ3RoLHQ+ZS5sZW5ndGgmJih0PWUubGVuZ3RoKSxuPXQtMTtuPj0wJiYoZVtuXSYxOTIpPT09MTI4OyluLS07cmV0dXJuIG48MHx8bj09PTA/dDpuK2FbZVtuXV0+dD9uOnR9O2Z1bmN0aW9uIFMoKXt0aGlzLmlucHV0PW51bGwsdGhpcy5uZXh0X2luPTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLm91dHB1dD1udWxsLHRoaXMubmV4dF9vdXQ9MCx0aGlzLmF2YWlsX291dD0wLHRoaXMudG90YWxfb3V0PTAsdGhpcy5tc2c9IiIsdGhpcy5zdGF0ZT1udWxsLHRoaXMuZGF0YV90eXBlPTIsdGhpcy5hZGxlcj0wfXZhciB3PVMsTj1rdCxWPVR0LEY9b3QscT1ScyxfZT13LHNlPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsbmU9MCxPZT00LERlPTAsWmU9MSxmdD0yLFRlPS0xLGxlPTAsRWU9ODtmdW5jdGlvbiBMZShlKXtpZighKHRoaXMgaW5zdGFuY2VvZiBMZSkpcmV0dXJuIG5ldyBMZShlKTt0aGlzLm9wdGlvbnM9Vi5hc3NpZ24oe2xldmVsOlRlLG1ldGhvZDpFZSxjaHVua1NpemU6MTYzODQsd2luZG93Qml0czoxNSxtZW1MZXZlbDo4LHN0cmF0ZWd5OmxlLHRvOiIifSxlfHx7fSk7dmFyIHQ9dGhpcy5vcHRpb25zO3QucmF3JiZ0LndpbmRvd0JpdHM+MD90LndpbmRvd0JpdHM9LXQud2luZG93Qml0czp0Lmd6aXAmJnQud2luZG93Qml0cz4wJiZ0LndpbmRvd0JpdHM8MTYmJih0LndpbmRvd0JpdHMrPTE2KSx0aGlzLmVycj0wLHRoaXMubXNnPSIiLHRoaXMuZW5kZWQ9ITEsdGhpcy5jaHVua3M9W10sdGhpcy5zdHJtPW5ldyBfZSx0aGlzLnN0cm0uYXZhaWxfb3V0PTA7dmFyIG49Ti5kZWZsYXRlSW5pdDIodGhpcy5zdHJtLHQubGV2ZWwsdC5tZXRob2QsdC53aW5kb3dCaXRzLHQubWVtTGV2ZWwsdC5zdHJhdGVneSk7aWYobiE9PURlKXRocm93IG5ldyBFcnJvcihxW25dKTtpZih0LmhlYWRlciYmTi5kZWZsYXRlU2V0SGVhZGVyKHRoaXMuc3RybSx0LmhlYWRlciksdC5kaWN0aW9uYXJ5KXt2YXIgcjtpZih0eXBlb2YgdC5kaWN0aW9uYXJ5PT0ic3RyaW5nIj9yPUYuc3RyaW5nMmJ1Zih0LmRpY3Rpb25hcnkpOnNlLmNhbGwodC5kaWN0aW9uYXJ5KT09PSJbb2JqZWN0IEFycmF5QnVmZmVyXSI/cj1uZXcgVWludDhBcnJheSh0LmRpY3Rpb25hcnkpOnI9dC5kaWN0aW9uYXJ5LG49Ti5kZWZsYXRlU2V0RGljdGlvbmFyeSh0aGlzLnN0cm0sciksbiE9PURlKXRocm93IG5ldyBFcnJvcihxW25dKTt0aGlzLl9kaWN0X3NldD0hMH19TGUucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLnN0cm0scj10aGlzLm9wdGlvbnMuY2h1bmtTaXplLHMsdTtpZih0aGlzLmVuZGVkKXJldHVybiExO3U9dD09PX5+dD90OnQ9PT0hMD9PZTpuZSx0eXBlb2YgZT09InN0cmluZyI/bi5pbnB1dD1GLnN0cmluZzJidWYoZSk6c2UuY2FsbChlKT09PSJbb2JqZWN0IEFycmF5QnVmZmVyXSI/bi5pbnB1dD1uZXcgVWludDhBcnJheShlKTpuLmlucHV0PWUsbi5uZXh0X2luPTAsbi5hdmFpbF9pbj1uLmlucHV0Lmxlbmd0aDtkb3tpZihuLmF2YWlsX291dD09PTAmJihuLm91dHB1dD1uZXcgVi5CdWY4KHIpLG4ubmV4dF9vdXQ9MCxuLmF2YWlsX291dD1yKSxzPU4uZGVmbGF0ZShuLHUpLHMhPT1aZSYmcyE9PURlKXJldHVybiB0aGlzLm9uRW5kKHMpLHRoaXMuZW5kZWQ9ITAsITE7KG4uYXZhaWxfb3V0PT09MHx8bi5hdmFpbF9pbj09PTAmJih1PT09T2V8fHU9PT1mdCkpJiYodGhpcy5vcHRpb25zLnRvPT09InN0cmluZyI/dGhpcy5vbkRhdGEoRi5idWYyYmluc3RyaW5nKFYuc2hyaW5rQnVmKG4ub3V0cHV0LG4ubmV4dF9vdXQpKSk6dGhpcy5vbkRhdGEoVi5zaHJpbmtCdWYobi5vdXRwdXQsbi5uZXh0X291dCkpKX13aGlsZSgobi5hdmFpbF9pbj4wfHxuLmF2YWlsX291dD09PTApJiZzIT09WmUpO3JldHVybiB1PT09T2U/KHM9Ti5kZWZsYXRlRW5kKHRoaXMuc3RybSksdGhpcy5vbkVuZChzKSx0aGlzLmVuZGVkPSEwLHM9PT1EZSk6KHU9PT1mdCYmKHRoaXMub25FbmQoRGUpLG4uYXZhaWxfb3V0PTApLCEwKX0sTGUucHJvdG90eXBlLm9uRGF0YT1mdW5jdGlvbihlKXt0aGlzLmNodW5rcy5wdXNoKGUpfSxMZS5wcm90b3R5cGUub25FbmQ9ZnVuY3Rpb24oZSl7ZT09PURlJiYodGhpcy5vcHRpb25zLnRvPT09InN0cmluZyI/dGhpcy5yZXN1bHQ9dGhpcy5jaHVua3Muam9pbigiIik6dGhpcy5yZXN1bHQ9Vi5mbGF0dGVuQ2h1bmtzKHRoaXMuY2h1bmtzKSksdGhpcy5jaHVua3M9W10sdGhpcy5lcnI9ZSx0aGlzLm1zZz10aGlzLnN0cm0ubXNnfTtmdW5jdGlvbiBGZShlLHQpe3ZhciBuPW5ldyBMZSh0KTtpZihuLnB1c2goZSwhMCksbi5lcnIpdGhyb3cgbi5tc2d8fHFbbi5lcnJdO3JldHVybiBuLnJlc3VsdH1mdW5jdGlvbiBydChlLHQpe3JldHVybiB0PXR8fHt9LHQucmF3PSEwLEZlKGUsdCl9ZnVuY3Rpb24gT3QoZSx0KXtyZXR1cm4gdD10fHx7fSx0Lmd6aXA9ITAsRmUoZSx0KX15dC5EZWZsYXRlPUxlLHl0LmRlZmxhdGU9RmUseXQuZGVmbGF0ZVJhdz1ydCx5dC5nemlwPU90O3ZhciBYZT17fSxCPXt9LGo9MzAsb2U9MTIseWU9ZnVuY3Rpb24odCxuKXt2YXIgcixzLHUsZyxFLCQsUCxMLEFlLE5lLFJlLHN0LHB0LCR0LFJ0LHNuLE1uLGxuLEF0LGJuLGZuLFp0LEFuLEFyLFh0O3I9dC5zdGF0ZSxzPXQubmV4dF9pbixBcj10LmlucHV0LHU9cysodC5hdmFpbF9pbi01KSxnPXQubmV4dF9vdXQsWHQ9dC5vdXRwdXQsRT1nLShuLXQuYXZhaWxfb3V0KSwkPWcrKHQuYXZhaWxfb3V0LTI1NyksUD1yLmRtYXgsTD1yLndzaXplLEFlPXIud2hhdmUsTmU9ci53bmV4dCxSZT1yLndpbmRvdyxzdD1yLmhvbGQscHQ9ci5iaXRzLCR0PXIubGVuY29kZSxSdD1yLmRpc3Rjb2RlLHNuPSgxPDxyLmxlbmJpdHMpLTEsTW49KDE8PHIuZGlzdGJpdHMpLTE7ZTpkb3twdDwxNSYmKHN0Kz1BcltzKytdPDxwdCxwdCs9OCxzdCs9QXJbcysrXTw8cHQscHQrPTgpLGxuPSR0W3N0JnNuXTt0OmZvcig7Oyl7aWYoQXQ9bG4+Pj4yNCxzdD4+Pj1BdCxwdC09QXQsQXQ9bG4+Pj4xNiYyNTUsQXQ9PT0wKVh0W2crK109bG4mNjU1MzU7ZWxzZSBpZihBdCYxNil7Ym49bG4mNjU1MzUsQXQmPTE1LEF0JiYocHQ8QXQmJihzdCs9QXJbcysrXTw8cHQscHQrPTgpLGJuKz1zdCYoMTw8QXQpLTEsc3Q+Pj49QXQscHQtPUF0KSxwdDwxNSYmKHN0Kz1BcltzKytdPDxwdCxwdCs9OCxzdCs9QXJbcysrXTw8cHQscHQrPTgpLGxuPVJ0W3N0Jk1uXTtuOmZvcig7Oyl7aWYoQXQ9bG4+Pj4yNCxzdD4+Pj1BdCxwdC09QXQsQXQ9bG4+Pj4xNiYyNTUsQXQmMTYpe2lmKGZuPWxuJjY1NTM1LEF0Jj0xNSxwdDxBdCYmKHN0Kz1BcltzKytdPDxwdCxwdCs9OCxwdDxBdCYmKHN0Kz1BcltzKytdPDxwdCxwdCs9OCkpLGZuKz1zdCYoMTw8QXQpLTEsZm4+UCl7dC5tc2c9ImludmFsaWQgZGlzdGFuY2UgdG9vIGZhciBiYWNrIixyLm1vZGU9ajticmVhayBlfWlmKHN0Pj4+PUF0LHB0LT1BdCxBdD1nLUUsZm4+QXQpe2lmKEF0PWZuLUF0LEF0PkFlJiZyLnNhbmUpe3QubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsci5tb2RlPWo7YnJlYWsgZX1pZihadD0wLEFuPVJlLE5lPT09MCl7aWYoWnQrPUwtQXQsQXQ8Ym4pe2JuLT1BdDtkbyBYdFtnKytdPVJlW1p0KytdO3doaWxlKC0tQXQpO1p0PWctZm4sQW49WHR9fWVsc2UgaWYoTmU8QXQpe2lmKFp0Kz1MK05lLUF0LEF0LT1OZSxBdDxibil7Ym4tPUF0O2RvIFh0W2crK109UmVbWnQrK107d2hpbGUoLS1BdCk7aWYoWnQ9MCxOZTxibil7QXQ9TmUsYm4tPUF0O2RvIFh0W2crK109UmVbWnQrK107d2hpbGUoLS1BdCk7WnQ9Zy1mbixBbj1YdH19fWVsc2UgaWYoWnQrPU5lLUF0LEF0PGJuKXtibi09QXQ7ZG8gWHRbZysrXT1SZVtadCsrXTt3aGlsZSgtLUF0KTtadD1nLWZuLEFuPVh0fWZvcig7Ym4+MjspWHRbZysrXT1BbltadCsrXSxYdFtnKytdPUFuW1p0KytdLFh0W2crK109QW5bWnQrK10sYm4tPTM7Ym4mJihYdFtnKytdPUFuW1p0KytdLGJuPjEmJihYdFtnKytdPUFuW1p0KytdKSl9ZWxzZXtadD1nLWZuO2RvIFh0W2crK109WHRbWnQrK10sWHRbZysrXT1YdFtadCsrXSxYdFtnKytdPVh0W1p0KytdLGJuLT0zO3doaWxlKGJuPjIpO2JuJiYoWHRbZysrXT1YdFtadCsrXSxibj4xJiYoWHRbZysrXT1YdFtadCsrXSkpfX1lbHNlIGlmKChBdCY2NCk9PT0wKXtsbj1SdFsobG4mNjU1MzUpKyhzdCYoMTw8QXQpLTEpXTtjb250aW51ZSBufWVsc2V7dC5tc2c9ImludmFsaWQgZGlzdGFuY2UgY29kZSIsci5tb2RlPWo7YnJlYWsgZX1icmVha319ZWxzZSBpZigoQXQmNjQpPT09MCl7bG49JHRbKGxuJjY1NTM1KSsoc3QmKDE8PEF0KS0xKV07Y29udGludWUgdH1lbHNlIGlmKEF0JjMyKXtyLm1vZGU9b2U7YnJlYWsgZX1lbHNle3QubXNnPSJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RoIGNvZGUiLHIubW9kZT1qO2JyZWFrIGV9YnJlYWt9fXdoaWxlKHM8dSYmZzwkKTtibj1wdD4+MyxzLT1ibixwdC09Ym48PDMsc3QmPSgxPDxwdCktMSx0Lm5leHRfaW49cyx0Lm5leHRfb3V0PWcsdC5hdmFpbF9pbj1zPHU/NSsodS1zKTo1LShzLXUpLHQuYXZhaWxfb3V0PWc8JD8yNTcrKCQtZyk6MjU3LShnLSQpLHIuaG9sZD1zdCxyLmJpdHM9cHR9LGFlPVR0LGdlPTE1LFFlPTg1MixHZT01OTIsZXQ9MCxWZT0xLE10PTIseHQ9WzMsNCw1LDYsNyw4LDksMTAsMTEsMTMsMTUsMTcsMTksMjMsMjcsMzEsMzUsNDMsNTEsNTksNjcsODMsOTksMTE1LDEzMSwxNjMsMTk1LDIyNywyNTgsMCwwXSxGdD1bMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTcsMTcsMTcsMTcsMTgsMTgsMTgsMTgsMTksMTksMTksMTksMjAsMjAsMjAsMjAsMjEsMjEsMjEsMjEsMTYsNzIsNzhdLHVuPVsxLDIsMyw0LDUsNyw5LDEzLDE3LDI1LDMzLDQ5LDY1LDk3LDEyOSwxOTMsMjU3LDM4NSw1MTMsNzY5LDEwMjUsMTUzNywyMDQ5LDMwNzMsNDA5Nyw2MTQ1LDgxOTMsMTIyODksMTYzODUsMjQ1NzcsMCwwXSxZbj1bMTYsMTYsMTYsMTYsMTcsMTcsMTgsMTgsMTksMTksMjAsMjAsMjEsMjEsMjIsMjIsMjMsMjMsMjQsMjQsMjUsMjUsMjYsMjYsMjcsMjcsMjgsMjgsMjksMjksNjQsNjRdLHF0PWZ1bmN0aW9uKHQsbixyLHMsdSxnLEUsJCl7dmFyIFA9JC5iaXRzLEw9MCxBZT0wLE5lPTAsUmU9MCxzdD0wLHB0PTAsJHQ9MCxSdD0wLHNuPTAsTW49MCxsbixBdCxibixmbixadCxBbj1udWxsLEFyPTAsWHQscHM9bmV3IGFlLkJ1ZjE2KGdlKzEpLGVmPW5ldyBhZS5CdWYxNihnZSsxKSx0Zj1udWxsLEhnPTAsamcsbmYscmY7Zm9yKEw9MDtMPD1nZTtMKyspcHNbTF09MDtmb3IoQWU9MDtBZTxzO0FlKyspcHNbbltyK0FlXV0rKztmb3Ioc3Q9UCxSZT1nZTtSZT49MSYmcHNbUmVdPT09MDtSZS0tKTtpZihzdD5SZSYmKHN0PVJlKSxSZT09PTApcmV0dXJuIHVbZysrXT0xPDwyNHw2NDw8MTZ8MCx1W2crK109MTw8MjR8NjQ8PDE2fDAsJC5iaXRzPTEsMDtmb3IoTmU9MTtOZTxSZSYmcHNbTmVdPT09MDtOZSsrKTtmb3Ioc3Q8TmUmJihzdD1OZSksUnQ9MSxMPTE7TDw9Z2U7TCsrKWlmKFJ0PDw9MSxSdC09cHNbTF0sUnQ8MClyZXR1cm4tMTtpZihSdD4wJiYodD09PWV0fHxSZSE9PTEpKXJldHVybi0xO2ZvcihlZlsxXT0wLEw9MTtMPGdlO0wrKyllZltMKzFdPWVmW0xdK3BzW0xdO2ZvcihBZT0wO0FlPHM7QWUrKyluW3IrQWVdIT09MCYmKEVbZWZbbltyK0FlXV0rK109QWUpO2lmKHQ9PT1ldD8oQW49dGY9RSxYdD0xOSk6dD09PVZlPyhBbj14dCxBci09MjU3LHRmPUZ0LEhnLT0yNTcsWHQ9MjU2KTooQW49dW4sdGY9WW4sWHQ9LTEpLE1uPTAsQWU9MCxMPU5lLFp0PWcscHQ9c3QsJHQ9MCxibj0tMSxzbj0xPDxzdCxmbj1zbi0xLHQ9PT1WZSYmc24+UWV8fHQ9PT1NdCYmc24+R2UpcmV0dXJuIDE7Zm9yKDs7KXtqZz1MLSR0LEVbQWVdPFh0PyhuZj0wLHJmPUVbQWVdKTpFW0FlXT5YdD8obmY9dGZbSGcrRVtBZV1dLHJmPUFuW0FyK0VbQWVdXSk6KG5mPTMyKzY0LHJmPTApLGxuPTE8PEwtJHQsQXQ9MTw8cHQsTmU9QXQ7ZG8gQXQtPWxuLHVbWnQrKE1uPj4kdCkrQXRdPWpnPDwyNHxuZjw8MTZ8cmZ8MDt3aGlsZShBdCE9PTApO2Zvcihsbj0xPDxMLTE7TW4mbG47KWxuPj49MTtpZihsbiE9PTA/KE1uJj1sbi0xLE1uKz1sbik6TW49MCxBZSsrLC0tcHNbTF09PT0wKXtpZihMPT09UmUpYnJlYWs7TD1uW3IrRVtBZV1dfWlmKEw+c3QmJihNbiZmbikhPT1ibil7Zm9yKCR0PT09MCYmKCR0PXN0KSxadCs9TmUscHQ9TC0kdCxSdD0xPDxwdDtwdCskdDxSZSYmKFJ0LT1wc1twdCskdF0sIShSdDw9MCkpOylwdCsrLFJ0PDw9MTtpZihzbis9MTw8cHQsdD09PVZlJiZzbj5RZXx8dD09PU10JiZzbj5HZSlyZXR1cm4gMTtibj1NbiZmbix1W2JuXT1zdDw8MjR8cHQ8PDE2fFp0LWd8MH19cmV0dXJuIE1uIT09MCYmKHVbWnQrTW5dPUwtJHQ8PDI0fDY0PDwxNnwwKSwkLmJpdHM9c3QsMH0sdm49VHQsX2k9cGMsYW49dmwsT249eWUscG49cXQscWk9MCxiaT0xLHFyPTIsdWE9NCxXPTUsWD02LHdlPTAsJGU9MSxqZT0yLG50PS0yLHZ0PS0zLGl0PS00LGN0PS01LFllPTgsVnQ9MSxEdD0yLFV0PTMsX249NCxLcj01LHRyPTYseWk9NyxmYT04LEJzPTksdGw9MTAsQ3I9MTEsa289MTIsb3M9MTMsUm89MTQsYXM9MTUsbmw9MTYsc3M9MTcsTXM9MTgsR2E9MTksbHM9MjAsWWE9MjEsZXU9MjIsQ2M9MjMsdHU9MjQsbnU9MjUsRGQ9MjYseWY9MjcsTGQ9MjgsRmQ9Mjksa3I9MzAsVmQ9MzEsV3Y9MzIsR3Y9ODUyLFl2PTU5Mixxdj0xNSxLdj1xdjtmdW5jdGlvbiAkZChlKXtyZXR1cm4oZT4+PjI0JjI1NSkrKGU+Pj44JjY1MjgwKSsoKGUmNjUyODApPDw4KSsoKGUmMjU1KTw8MjQpfWZ1bmN0aW9uIEp2KCl7dGhpcy5tb2RlPTAsdGhpcy5sYXN0PSExLHRoaXMud3JhcD0wLHRoaXMuaGF2ZWRpY3Q9ITEsdGhpcy5mbGFncz0wLHRoaXMuZG1heD0wLHRoaXMuY2hlY2s9MCx0aGlzLnRvdGFsPTAsdGhpcy5oZWFkPW51bGwsdGhpcy53Yml0cz0wLHRoaXMud3NpemU9MCx0aGlzLndoYXZlPTAsdGhpcy53bmV4dD0wLHRoaXMud2luZG93PW51bGwsdGhpcy5ob2xkPTAsdGhpcy5iaXRzPTAsdGhpcy5sZW5ndGg9MCx0aGlzLm9mZnNldD0wLHRoaXMuZXh0cmE9MCx0aGlzLmxlbmNvZGU9bnVsbCx0aGlzLmRpc3Rjb2RlPW51bGwsdGhpcy5sZW5iaXRzPTAsdGhpcy5kaXN0Yml0cz0wLHRoaXMubmNvZGU9MCx0aGlzLm5sZW49MCx0aGlzLm5kaXN0PTAsdGhpcy5oYXZlPTAsdGhpcy5uZXh0PW51bGwsdGhpcy5sZW5zPW5ldyB2bi5CdWYxNigzMjApLHRoaXMud29yaz1uZXcgdm4uQnVmMTYoMjg4KSx0aGlzLmxlbmR5bj1udWxsLHRoaXMuZGlzdGR5bj1udWxsLHRoaXMuc2FuZT0wLHRoaXMuYmFjaz0wLHRoaXMud2FzPTB9ZnVuY3Rpb24gVWQoZSl7dmFyIHQ7cmV0dXJuIWV8fCFlLnN0YXRlP250Oih0PWUuc3RhdGUsZS50b3RhbF9pbj1lLnRvdGFsX291dD10LnRvdGFsPTAsZS5tc2c9IiIsdC53cmFwJiYoZS5hZGxlcj10LndyYXAmMSksdC5tb2RlPVZ0LHQubGFzdD0wLHQuaGF2ZWRpY3Q9MCx0LmRtYXg9MzI3NjgsdC5oZWFkPW51bGwsdC5ob2xkPTAsdC5iaXRzPTAsdC5sZW5jb2RlPXQubGVuZHluPW5ldyB2bi5CdWYzMihHdiksdC5kaXN0Y29kZT10LmRpc3RkeW49bmV3IHZuLkJ1ZjMyKFl2KSx0LnNhbmU9MSx0LmJhY2s9LTEsd2UpfWZ1bmN0aW9uIEhkKGUpe3ZhciB0O3JldHVybiFlfHwhZS5zdGF0ZT9udDoodD1lLnN0YXRlLHQud3NpemU9MCx0LndoYXZlPTAsdC53bmV4dD0wLFVkKGUpKX1mdW5jdGlvbiBqZChlLHQpe3ZhciBuLHI7cmV0dXJuIWV8fCFlLnN0YXRlfHwocj1lLnN0YXRlLHQ8MD8obj0wLHQ9LXQpOihuPSh0Pj40KSsxLHQ8NDgmJih0Jj0xNSkpLHQmJih0PDh8fHQ+MTUpKT9udDooci53aW5kb3chPT1udWxsJiZyLndiaXRzIT09dCYmKHIud2luZG93PW51bGwpLHIud3JhcD1uLHIud2JpdHM9dCxIZChlKSl9ZnVuY3Rpb24gemQoZSx0KXt2YXIgbixyO3JldHVybiBlPyhyPW5ldyBKdixlLnN0YXRlPXIsci53aW5kb3c9bnVsbCxuPWpkKGUsdCksbiE9PXdlJiYoZS5zdGF0ZT1udWxsKSxuKTpudH1mdW5jdGlvbiBadihlKXtyZXR1cm4gemQoZSxLdil9dmFyIFdkPSEwLEVmLHdmO2Z1bmN0aW9uIFh2KGUpe2lmKFdkKXt2YXIgdDtmb3IoRWY9bmV3IHZuLkJ1ZjMyKDUxMiksd2Y9bmV3IHZuLkJ1ZjMyKDMyKSx0PTA7dDwxNDQ7KWUubGVuc1t0KytdPTg7Zm9yKDt0PDI1NjspZS5sZW5zW3QrK109OTtmb3IoO3Q8MjgwOyllLmxlbnNbdCsrXT03O2Zvcig7dDwyODg7KWUubGVuc1t0KytdPTg7Zm9yKHBuKGJpLGUubGVucywwLDI4OCxFZiwwLGUud29yayx7Yml0czo5fSksdD0wO3Q8MzI7KWUubGVuc1t0KytdPTU7cG4ocXIsZS5sZW5zLDAsMzIsd2YsMCxlLndvcmsse2JpdHM6NX0pLFdkPSExfWUubGVuY29kZT1FZixlLmxlbmJpdHM9OSxlLmRpc3Rjb2RlPXdmLGUuZGlzdGJpdHM9NX1mdW5jdGlvbiBHZChlLHQsbixyKXt2YXIgcyx1PWUuc3RhdGU7cmV0dXJuIHUud2luZG93PT09bnVsbCYmKHUud3NpemU9MTw8dS53Yml0cyx1LnduZXh0PTAsdS53aGF2ZT0wLHUud2luZG93PW5ldyB2bi5CdWY4KHUud3NpemUpKSxyPj11LndzaXplPyh2bi5hcnJheVNldCh1LndpbmRvdyx0LG4tdS53c2l6ZSx1LndzaXplLDApLHUud25leHQ9MCx1LndoYXZlPXUud3NpemUpOihzPXUud3NpemUtdS53bmV4dCxzPnImJihzPXIpLHZuLmFycmF5U2V0KHUud2luZG93LHQsbi1yLHMsdS53bmV4dCksci09cyxyPyh2bi5hcnJheVNldCh1LndpbmRvdyx0LG4tcixyLDApLHUud25leHQ9cix1LndoYXZlPXUud3NpemUpOih1LnduZXh0Kz1zLHUud25leHQ9PT11LndzaXplJiYodS53bmV4dD0wKSx1LndoYXZlPHUud3NpemUmJih1LndoYXZlKz1zKSkpLDB9ZnVuY3Rpb24gUXYoZSx0KXt2YXIgbixyLHMsdSxnLEUsJCxQLEwsQWUsTmUsUmUsc3QscHQsJHQ9MCxSdCxzbixNbixsbixBdCxibixmbixadCxBbj1uZXcgdm4uQnVmOCg0KSxBcixYdCxwcz1bMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV07aWYoIWV8fCFlLnN0YXRlfHwhZS5vdXRwdXR8fCFlLmlucHV0JiZlLmF2YWlsX2luIT09MClyZXR1cm4gbnQ7bj1lLnN0YXRlLG4ubW9kZT09PWtvJiYobi5tb2RlPW9zKSxnPWUubmV4dF9vdXQscz1lLm91dHB1dCwkPWUuYXZhaWxfb3V0LHU9ZS5uZXh0X2luLHI9ZS5pbnB1dCxFPWUuYXZhaWxfaW4sUD1uLmhvbGQsTD1uLmJpdHMsQWU9RSxOZT0kLFp0PXdlO2U6Zm9yKDs7KXN3aXRjaChuLm1vZGUpe2Nhc2UgVnQ6aWYobi53cmFwPT09MCl7bi5tb2RlPW9zO2JyZWFrfWZvcig7TDwxNjspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fWlmKG4ud3JhcCYyJiZQPT09MzU2MTUpe24uY2hlY2s9MCxBblswXT1QJjI1NSxBblsxXT1QPj4+OCYyNTUsbi5jaGVjaz1hbihuLmNoZWNrLEFuLDIsMCksUD0wLEw9MCxuLm1vZGU9RHQ7YnJlYWt9aWYobi5mbGFncz0wLG4uaGVhZCYmKG4uaGVhZC5kb25lPSExKSwhKG4ud3JhcCYxKXx8KCgoUCYyNTUpPDw4KSsoUD4+OCkpJTMxKXtlLm1zZz0iaW5jb3JyZWN0IGhlYWRlciBjaGVjayIsbi5tb2RlPWtyO2JyZWFrfWlmKChQJjE1KSE9PVllKXtlLm1zZz0idW5rbm93biBjb21wcmVzc2lvbiBtZXRob2QiLG4ubW9kZT1rcjticmVha31pZihQPj4+PTQsTC09NCxmbj0oUCYxNSkrOCxuLndiaXRzPT09MCluLndiaXRzPWZuO2Vsc2UgaWYoZm4+bi53Yml0cyl7ZS5tc2c9ImludmFsaWQgd2luZG93IHNpemUiLG4ubW9kZT1rcjticmVha31uLmRtYXg9MTw8Zm4sZS5hZGxlcj1uLmNoZWNrPTEsbi5tb2RlPVAmNTEyP3RsOmtvLFA9MCxMPTA7YnJlYWs7Y2FzZSBEdDpmb3IoO0w8MTY7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1pZihuLmZsYWdzPVAsKG4uZmxhZ3MmMjU1KSE9PVllKXtlLm1zZz0idW5rbm93biBjb21wcmVzc2lvbiBtZXRob2QiLG4ubW9kZT1rcjticmVha31pZihuLmZsYWdzJjU3MzQ0KXtlLm1zZz0idW5rbm93biBoZWFkZXIgZmxhZ3Mgc2V0IixuLm1vZGU9a3I7YnJlYWt9bi5oZWFkJiYobi5oZWFkLnRleHQ9UD4+OCYxKSxuLmZsYWdzJjUxMiYmKEFuWzBdPVAmMjU1LEFuWzFdPVA+Pj44JjI1NSxuLmNoZWNrPWFuKG4uY2hlY2ssQW4sMiwwKSksUD0wLEw9MCxuLm1vZGU9VXQ7Y2FzZSBVdDpmb3IoO0w8MzI7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1uLmhlYWQmJihuLmhlYWQudGltZT1QKSxuLmZsYWdzJjUxMiYmKEFuWzBdPVAmMjU1LEFuWzFdPVA+Pj44JjI1NSxBblsyXT1QPj4+MTYmMjU1LEFuWzNdPVA+Pj4yNCYyNTUsbi5jaGVjaz1hbihuLmNoZWNrLEFuLDQsMCkpLFA9MCxMPTAsbi5tb2RlPV9uO2Nhc2UgX246Zm9yKDtMPDE2Oyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9bi5oZWFkJiYobi5oZWFkLnhmbGFncz1QJjI1NSxuLmhlYWQub3M9UD4+OCksbi5mbGFncyY1MTImJihBblswXT1QJjI1NSxBblsxXT1QPj4+OCYyNTUsbi5jaGVjaz1hbihuLmNoZWNrLEFuLDIsMCkpLFA9MCxMPTAsbi5tb2RlPUtyO2Nhc2UgS3I6aWYobi5mbGFncyYxMDI0KXtmb3IoO0w8MTY7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1uLmxlbmd0aD1QLG4uaGVhZCYmKG4uaGVhZC5leHRyYV9sZW49UCksbi5mbGFncyY1MTImJihBblswXT1QJjI1NSxBblsxXT1QPj4+OCYyNTUsbi5jaGVjaz1hbihuLmNoZWNrLEFuLDIsMCkpLFA9MCxMPTB9ZWxzZSBuLmhlYWQmJihuLmhlYWQuZXh0cmE9bnVsbCk7bi5tb2RlPXRyO2Nhc2UgdHI6aWYobi5mbGFncyYxMDI0JiYoUmU9bi5sZW5ndGgsUmU+RSYmKFJlPUUpLFJlJiYobi5oZWFkJiYoZm49bi5oZWFkLmV4dHJhX2xlbi1uLmxlbmd0aCxuLmhlYWQuZXh0cmF8fChuLmhlYWQuZXh0cmE9bmV3IEFycmF5KG4uaGVhZC5leHRyYV9sZW4pKSx2bi5hcnJheVNldChuLmhlYWQuZXh0cmEscix1LFJlLGZuKSksbi5mbGFncyY1MTImJihuLmNoZWNrPWFuKG4uY2hlY2sscixSZSx1KSksRS09UmUsdSs9UmUsbi5sZW5ndGgtPVJlKSxuLmxlbmd0aCkpYnJlYWsgZTtuLmxlbmd0aD0wLG4ubW9kZT15aTtjYXNlIHlpOmlmKG4uZmxhZ3MmMjA0OCl7aWYoRT09PTApYnJlYWsgZTtSZT0wO2RvIGZuPXJbdStSZSsrXSxuLmhlYWQmJmZuJiZuLmxlbmd0aDw2NTUzNiYmKG4uaGVhZC5uYW1lKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGZuKSk7d2hpbGUoZm4mJlJlPEUpO2lmKG4uZmxhZ3MmNTEyJiYobi5jaGVjaz1hbihuLmNoZWNrLHIsUmUsdSkpLEUtPVJlLHUrPVJlLGZuKWJyZWFrIGV9ZWxzZSBuLmhlYWQmJihuLmhlYWQubmFtZT1udWxsKTtuLmxlbmd0aD0wLG4ubW9kZT1mYTtjYXNlIGZhOmlmKG4uZmxhZ3MmNDA5Nil7aWYoRT09PTApYnJlYWsgZTtSZT0wO2RvIGZuPXJbdStSZSsrXSxuLmhlYWQmJmZuJiZuLmxlbmd0aDw2NTUzNiYmKG4uaGVhZC5jb21tZW50Kz1TdHJpbmcuZnJvbUNoYXJDb2RlKGZuKSk7d2hpbGUoZm4mJlJlPEUpO2lmKG4uZmxhZ3MmNTEyJiYobi5jaGVjaz1hbihuLmNoZWNrLHIsUmUsdSkpLEUtPVJlLHUrPVJlLGZuKWJyZWFrIGV9ZWxzZSBuLmhlYWQmJihuLmhlYWQuY29tbWVudD1udWxsKTtuLm1vZGU9QnM7Y2FzZSBCczppZihuLmZsYWdzJjUxMil7Zm9yKDtMPDE2Oyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9aWYoUCE9PShuLmNoZWNrJjY1NTM1KSl7ZS5tc2c9ImhlYWRlciBjcmMgbWlzbWF0Y2giLG4ubW9kZT1rcjticmVha31QPTAsTD0wfW4uaGVhZCYmKG4uaGVhZC5oY3JjPW4uZmxhZ3M+PjkmMSxuLmhlYWQuZG9uZT0hMCksZS5hZGxlcj1uLmNoZWNrPTAsbi5tb2RlPWtvO2JyZWFrO2Nhc2UgdGw6Zm9yKDtMPDMyOyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9ZS5hZGxlcj1uLmNoZWNrPSRkKFApLFA9MCxMPTAsbi5tb2RlPUNyO2Nhc2UgQ3I6aWYobi5oYXZlZGljdD09PTApcmV0dXJuIGUubmV4dF9vdXQ9ZyxlLmF2YWlsX291dD0kLGUubmV4dF9pbj11LGUuYXZhaWxfaW49RSxuLmhvbGQ9UCxuLmJpdHM9TCxqZTtlLmFkbGVyPW4uY2hlY2s9MSxuLm1vZGU9a287Y2FzZSBrbzppZih0PT09V3x8dD09PVgpYnJlYWsgZTtjYXNlIG9zOmlmKG4ubGFzdCl7UD4+Pj1MJjcsTC09TCY3LG4ubW9kZT15ZjticmVha31mb3IoO0w8Mzspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fXN3aXRjaChuLmxhc3Q9UCYxLFA+Pj49MSxMLT0xLFAmMyl7Y2FzZSAwOm4ubW9kZT1SbzticmVhaztjYXNlIDE6aWYoWHYobiksbi5tb2RlPWxzLHQ9PT1YKXtQPj4+PTIsTC09MjticmVhayBlfWJyZWFrO2Nhc2UgMjpuLm1vZGU9c3M7YnJlYWs7Y2FzZSAzOmUubXNnPSJpbnZhbGlkIGJsb2NrIHR5cGUiLG4ubW9kZT1rcn1QPj4+PTIsTC09MjticmVhaztjYXNlIFJvOmZvcihQPj4+PUwmNyxMLT1MJjc7TDwzMjspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fWlmKChQJjY1NTM1KSE9PShQPj4+MTZeNjU1MzUpKXtlLm1zZz0iaW52YWxpZCBzdG9yZWQgYmxvY2sgbGVuZ3RocyIsbi5tb2RlPWtyO2JyZWFrfWlmKG4ubGVuZ3RoPVAmNjU1MzUsUD0wLEw9MCxuLm1vZGU9YXMsdD09PVgpYnJlYWsgZTtjYXNlIGFzOm4ubW9kZT1ubDtjYXNlIG5sOmlmKFJlPW4ubGVuZ3RoLFJlKXtpZihSZT5FJiYoUmU9RSksUmU+JCYmKFJlPSQpLFJlPT09MClicmVhayBlO3ZuLmFycmF5U2V0KHMscix1LFJlLGcpLEUtPVJlLHUrPVJlLCQtPVJlLGcrPVJlLG4ubGVuZ3RoLT1SZTticmVha31uLm1vZGU9a287YnJlYWs7Y2FzZSBzczpmb3IoO0w8MTQ7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1pZihuLm5sZW49KFAmMzEpKzI1NyxQPj4+PTUsTC09NSxuLm5kaXN0PShQJjMxKSsxLFA+Pj49NSxMLT01LG4ubmNvZGU9KFAmMTUpKzQsUD4+Pj00LEwtPTQsbi5ubGVuPjI4Nnx8bi5uZGlzdD4zMCl7ZS5tc2c9InRvbyBtYW55IGxlbmd0aCBvciBkaXN0YW5jZSBzeW1ib2xzIixuLm1vZGU9a3I7YnJlYWt9bi5oYXZlPTAsbi5tb2RlPU1zO2Nhc2UgTXM6Zm9yKDtuLmhhdmU8bi5uY29kZTspe2Zvcig7TDwzOyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9bi5sZW5zW3BzW24uaGF2ZSsrXV09UCY3LFA+Pj49MyxMLT0zfWZvcig7bi5oYXZlPDE5OyluLmxlbnNbcHNbbi5oYXZlKytdXT0wO2lmKG4ubGVuY29kZT1uLmxlbmR5bixuLmxlbmJpdHM9NyxBcj17Yml0czpuLmxlbmJpdHN9LFp0PXBuKHFpLG4ubGVucywwLDE5LG4ubGVuY29kZSwwLG4ud29yayxBciksbi5sZW5iaXRzPUFyLmJpdHMsWnQpe2UubXNnPSJpbnZhbGlkIGNvZGUgbGVuZ3RocyBzZXQiLG4ubW9kZT1rcjticmVha31uLmhhdmU9MCxuLm1vZGU9R2E7Y2FzZSBHYTpmb3IoO24uaGF2ZTxuLm5sZW4rbi5uZGlzdDspe2Zvcig7JHQ9bi5sZW5jb2RlW1AmKDE8PG4ubGVuYml0cyktMV0sUnQ9JHQ+Pj4yNCxzbj0kdD4+PjE2JjI1NSxNbj0kdCY2NTUzNSwhKFJ0PD1MKTspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fWlmKE1uPDE2KVA+Pj49UnQsTC09UnQsbi5sZW5zW24uaGF2ZSsrXT1NbjtlbHNle2lmKE1uPT09MTYpe2ZvcihYdD1SdCsyO0w8WHQ7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1pZihQPj4+PVJ0LEwtPVJ0LG4uaGF2ZT09PTApe2UubXNnPSJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0IixuLm1vZGU9a3I7YnJlYWt9Zm49bi5sZW5zW24uaGF2ZS0xXSxSZT0zKyhQJjMpLFA+Pj49MixMLT0yfWVsc2UgaWYoTW49PT0xNyl7Zm9yKFh0PVJ0KzM7TDxYdDspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fVA+Pj49UnQsTC09UnQsZm49MCxSZT0zKyhQJjcpLFA+Pj49MyxMLT0zfWVsc2V7Zm9yKFh0PVJ0Kzc7TDxYdDspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fVA+Pj49UnQsTC09UnQsZm49MCxSZT0xMSsoUCYxMjcpLFA+Pj49NyxMLT03fWlmKG4uaGF2ZStSZT5uLm5sZW4rbi5uZGlzdCl7ZS5tc2c9ImludmFsaWQgYml0IGxlbmd0aCByZXBlYXQiLG4ubW9kZT1rcjticmVha31mb3IoO1JlLS07KW4ubGVuc1tuLmhhdmUrK109Zm59fWlmKG4ubW9kZT09PWtyKWJyZWFrO2lmKG4ubGVuc1syNTZdPT09MCl7ZS5tc2c9ImludmFsaWQgY29kZSAtLSBtaXNzaW5nIGVuZC1vZi1ibG9jayIsbi5tb2RlPWtyO2JyZWFrfWlmKG4ubGVuYml0cz05LEFyPXtiaXRzOm4ubGVuYml0c30sWnQ9cG4oYmksbi5sZW5zLDAsbi5ubGVuLG4ubGVuY29kZSwwLG4ud29yayxBciksbi5sZW5iaXRzPUFyLmJpdHMsWnQpe2UubXNnPSJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RocyBzZXQiLG4ubW9kZT1rcjticmVha31pZihuLmRpc3RiaXRzPTYsbi5kaXN0Y29kZT1uLmRpc3RkeW4sQXI9e2JpdHM6bi5kaXN0Yml0c30sWnQ9cG4ocXIsbi5sZW5zLG4ubmxlbixuLm5kaXN0LG4uZGlzdGNvZGUsMCxuLndvcmssQXIpLG4uZGlzdGJpdHM9QXIuYml0cyxadCl7ZS5tc2c9ImludmFsaWQgZGlzdGFuY2VzIHNldCIsbi5tb2RlPWtyO2JyZWFrfWlmKG4ubW9kZT1scyx0PT09WClicmVhayBlO2Nhc2UgbHM6bi5tb2RlPVlhO2Nhc2UgWWE6aWYoRT49NiYmJD49MjU4KXtlLm5leHRfb3V0PWcsZS5hdmFpbF9vdXQ9JCxlLm5leHRfaW49dSxlLmF2YWlsX2luPUUsbi5ob2xkPVAsbi5iaXRzPUwsT24oZSxOZSksZz1lLm5leHRfb3V0LHM9ZS5vdXRwdXQsJD1lLmF2YWlsX291dCx1PWUubmV4dF9pbixyPWUuaW5wdXQsRT1lLmF2YWlsX2luLFA9bi5ob2xkLEw9bi5iaXRzLG4ubW9kZT09PWtvJiYobi5iYWNrPS0xKTticmVha31mb3Iobi5iYWNrPTA7JHQ9bi5sZW5jb2RlW1AmKDE8PG4ubGVuYml0cyktMV0sUnQ9JHQ+Pj4yNCxzbj0kdD4+PjE2JjI1NSxNbj0kdCY2NTUzNSwhKFJ0PD1MKTspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fWlmKHNuJiYoc24mMjQwKT09PTApe2Zvcihsbj1SdCxBdD1zbixibj1NbjskdD1uLmxlbmNvZGVbYm4rKChQJigxPDxsbitBdCktMSk+PmxuKV0sUnQ9JHQ+Pj4yNCxzbj0kdD4+PjE2JjI1NSxNbj0kdCY2NTUzNSwhKGxuK1J0PD1MKTspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFArPXJbdSsrXTw8TCxMKz04fVA+Pj49bG4sTC09bG4sbi5iYWNrKz1sbn1pZihQPj4+PVJ0LEwtPVJ0LG4uYmFjays9UnQsbi5sZW5ndGg9TW4sc249PT0wKXtuLm1vZGU9RGQ7YnJlYWt9aWYoc24mMzIpe24uYmFjaz0tMSxuLm1vZGU9a287YnJlYWt9aWYoc24mNjQpe2UubXNnPSJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RoIGNvZGUiLG4ubW9kZT1rcjticmVha31uLmV4dHJhPXNuJjE1LG4ubW9kZT1ldTtjYXNlIGV1OmlmKG4uZXh0cmEpe2ZvcihYdD1uLmV4dHJhO0w8WHQ7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1uLmxlbmd0aCs9UCYoMTw8bi5leHRyYSktMSxQPj4+PW4uZXh0cmEsTC09bi5leHRyYSxuLmJhY2srPW4uZXh0cmF9bi53YXM9bi5sZW5ndGgsbi5tb2RlPUNjO2Nhc2UgQ2M6Zm9yKDskdD1uLmRpc3Rjb2RlW1AmKDE8PG4uZGlzdGJpdHMpLTFdLFJ0PSR0Pj4+MjQsc249JHQ+Pj4xNiYyNTUsTW49JHQmNjU1MzUsIShSdDw9TCk7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1pZigoc24mMjQwKT09PTApe2Zvcihsbj1SdCxBdD1zbixibj1NbjskdD1uLmRpc3Rjb2RlW2JuKygoUCYoMTw8bG4rQXQpLTEpPj5sbildLFJ0PSR0Pj4+MjQsc249JHQ+Pj4xNiYyNTUsTW49JHQmNjU1MzUsIShsbitSdDw9TCk7KXtpZihFPT09MClicmVhayBlO0UtLSxQKz1yW3UrK108PEwsTCs9OH1QPj4+PWxuLEwtPWxuLG4uYmFjays9bG59aWYoUD4+Pj1SdCxMLT1SdCxuLmJhY2srPVJ0LHNuJjY0KXtlLm1zZz0iaW52YWxpZCBkaXN0YW5jZSBjb2RlIixuLm1vZGU9a3I7YnJlYWt9bi5vZmZzZXQ9TW4sbi5leHRyYT1zbiYxNSxuLm1vZGU9dHU7Y2FzZSB0dTppZihuLmV4dHJhKXtmb3IoWHQ9bi5leHRyYTtMPFh0Oyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9bi5vZmZzZXQrPVAmKDE8PG4uZXh0cmEpLTEsUD4+Pj1uLmV4dHJhLEwtPW4uZXh0cmEsbi5iYWNrKz1uLmV4dHJhfWlmKG4ub2Zmc2V0Pm4uZG1heCl7ZS5tc2c9ImludmFsaWQgZGlzdGFuY2UgdG9vIGZhciBiYWNrIixuLm1vZGU9a3I7YnJlYWt9bi5tb2RlPW51O2Nhc2UgbnU6aWYoJD09PTApYnJlYWsgZTtpZihSZT1OZS0kLG4ub2Zmc2V0PlJlKXtpZihSZT1uLm9mZnNldC1SZSxSZT5uLndoYXZlJiZuLnNhbmUpe2UubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsbi5tb2RlPWtyO2JyZWFrfVJlPm4ud25leHQ/KFJlLT1uLnduZXh0LHN0PW4ud3NpemUtUmUpOnN0PW4ud25leHQtUmUsUmU+bi5sZW5ndGgmJihSZT1uLmxlbmd0aCkscHQ9bi53aW5kb3d9ZWxzZSBwdD1zLHN0PWctbi5vZmZzZXQsUmU9bi5sZW5ndGg7UmU+JCYmKFJlPSQpLCQtPVJlLG4ubGVuZ3RoLT1SZTtkbyBzW2crK109cHRbc3QrK107d2hpbGUoLS1SZSk7bi5sZW5ndGg9PT0wJiYobi5tb2RlPVlhKTticmVhaztjYXNlIERkOmlmKCQ9PT0wKWJyZWFrIGU7c1tnKytdPW4ubGVuZ3RoLCQtLSxuLm1vZGU9WWE7YnJlYWs7Y2FzZSB5ZjppZihuLndyYXApe2Zvcig7TDwzMjspe2lmKEU9PT0wKWJyZWFrIGU7RS0tLFB8PXJbdSsrXTw8TCxMKz04fWlmKE5lLT0kLGUudG90YWxfb3V0Kz1OZSxuLnRvdGFsKz1OZSxOZSYmKGUuYWRsZXI9bi5jaGVjaz1uLmZsYWdzP2FuKG4uY2hlY2sscyxOZSxnLU5lKTpfaShuLmNoZWNrLHMsTmUsZy1OZSkpLE5lPSQsKG4uZmxhZ3M/UDokZChQKSkhPT1uLmNoZWNrKXtlLm1zZz0iaW5jb3JyZWN0IGRhdGEgY2hlY2siLG4ubW9kZT1rcjticmVha31QPTAsTD0wfW4ubW9kZT1MZDtjYXNlIExkOmlmKG4ud3JhcCYmbi5mbGFncyl7Zm9yKDtMPDMyOyl7aWYoRT09PTApYnJlYWsgZTtFLS0sUCs9clt1KytdPDxMLEwrPTh9aWYoUCE9PShuLnRvdGFsJjQyOTQ5NjcyOTUpKXtlLm1zZz0iaW5jb3JyZWN0IGxlbmd0aCBjaGVjayIsbi5tb2RlPWtyO2JyZWFrfVA9MCxMPTB9bi5tb2RlPUZkO2Nhc2UgRmQ6WnQ9JGU7YnJlYWsgZTtjYXNlIGtyOlp0PXZ0O2JyZWFrIGU7Y2FzZSBWZDpyZXR1cm4gaXQ7Y2FzZSBXdjpkZWZhdWx0OnJldHVybiBudH1yZXR1cm4gZS5uZXh0X291dD1nLGUuYXZhaWxfb3V0PSQsZS5uZXh0X2luPXUsZS5hdmFpbF9pbj1FLG4uaG9sZD1QLG4uYml0cz1MLChuLndzaXplfHxOZSE9PWUuYXZhaWxfb3V0JiZuLm1vZGU8a3ImJihuLm1vZGU8eWZ8fHQhPT11YSkpJiZHZChlLGUub3V0cHV0LGUubmV4dF9vdXQsTmUtZS5hdmFpbF9vdXQpLEFlLT1lLmF2YWlsX2luLE5lLT1lLmF2YWlsX291dCxlLnRvdGFsX2luKz1BZSxlLnRvdGFsX291dCs9TmUsbi50b3RhbCs9TmUsbi53cmFwJiZOZSYmKGUuYWRsZXI9bi5jaGVjaz1uLmZsYWdzP2FuKG4uY2hlY2sscyxOZSxlLm5leHRfb3V0LU5lKTpfaShuLmNoZWNrLHMsTmUsZS5uZXh0X291dC1OZSkpLGUuZGF0YV90eXBlPW4uYml0cysobi5sYXN0PzY0OjApKyhuLm1vZGU9PT1rbz8xMjg6MCkrKG4ubW9kZT09PWxzfHxuLm1vZGU9PT1hcz8yNTY6MCksKEFlPT09MCYmTmU9PT0wfHx0PT09dWEpJiZadD09PXdlJiYoWnQ9Y3QpLFp0fWZ1bmN0aW9uIGVtKGUpe2lmKCFlfHwhZS5zdGF0ZSlyZXR1cm4gbnQ7dmFyIHQ9ZS5zdGF0ZTtyZXR1cm4gdC53aW5kb3cmJih0LndpbmRvdz1udWxsKSxlLnN0YXRlPW51bGwsd2V9ZnVuY3Rpb24gdG0oZSx0KXt2YXIgbjtyZXR1cm4hZXx8IWUuc3RhdGV8fChuPWUuc3RhdGUsKG4ud3JhcCYyKT09PTApP250OihuLmhlYWQ9dCx0LmRvbmU9ITEsd2UpfWZ1bmN0aW9uIG5tKGUsdCl7dmFyIG49dC5sZW5ndGgscixzLHU7cmV0dXJuIWV8fCFlLnN0YXRlfHwocj1lLnN0YXRlLHIud3JhcCE9PTAmJnIubW9kZSE9PUNyKT9udDpyLm1vZGU9PT1DciYmKHM9MSxzPV9pKHMsdCxuLDApLHMhPT1yLmNoZWNrKT92dDoodT1HZChlLHQsbixuKSx1PyhyLm1vZGU9VmQsaXQpOihyLmhhdmVkaWN0PTEsd2UpKX1CLmluZmxhdGVSZXNldD1IZCxCLmluZmxhdGVSZXNldDI9amQsQi5pbmZsYXRlUmVzZXRLZWVwPVVkLEIuaW5mbGF0ZUluaXQ9WnYsQi5pbmZsYXRlSW5pdDI9emQsQi5pbmZsYXRlPVF2LEIuaW5mbGF0ZUVuZD1lbSxCLmluZmxhdGVHZXRIZWFkZXI9dG0sQi5pbmZsYXRlU2V0RGljdGlvbmFyeT1ubSxCLmluZmxhdGVJbmZvPSJwYWtvIGluZmxhdGUgKGZyb20gTm9kZWNhIHByb2plY3QpIjt2YXIgWWQ9e1pfTk9fRkxVU0g6MCxaX1BBUlRJQUxfRkxVU0g6MSxaX1NZTkNfRkxVU0g6MixaX0ZVTExfRkxVU0g6MyxaX0ZJTklTSDo0LFpfQkxPQ0s6NSxaX1RSRUVTOjYsWl9PSzowLFpfU1RSRUFNX0VORDoxLFpfTkVFRF9ESUNUOjIsWl9FUlJOTzotMSxaX1NUUkVBTV9FUlJPUjotMixaX0RBVEFfRVJST1I6LTMsWl9CVUZfRVJST1I6LTUsWl9OT19DT01QUkVTU0lPTjowLFpfQkVTVF9TUEVFRDoxLFpfQkVTVF9DT01QUkVTU0lPTjo5LFpfREVGQVVMVF9DT01QUkVTU0lPTjotMSxaX0ZJTFRFUkVEOjEsWl9IVUZGTUFOX09OTFk6MixaX1JMRTozLFpfRklYRUQ6NCxaX0RFRkFVTFRfU1RSQVRFR1k6MCxaX0JJTkFSWTowLFpfVEVYVDoxLFpfVU5LTk9XTjoyLFpfREVGTEFURUQ6OH07ZnVuY3Rpb24gcm0oKXt0aGlzLnRleHQ9MCx0aGlzLnRpbWU9MCx0aGlzLnhmbGFncz0wLHRoaXMub3M9MCx0aGlzLmV4dHJhPW51bGwsdGhpcy5leHRyYV9sZW49MCx0aGlzLm5hbWU9IiIsdGhpcy5jb21tZW50PSIiLHRoaXMuaGNyYz0wLHRoaXMuZG9uZT0hMX12YXIgaW09cm0sT2M9QixydT1UdCxQdT1vdCxpaT1ZZCxTZj1ScyxvbT13LGFtPWltLHFkPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7ZnVuY3Rpb24gamwoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgamwpKXJldHVybiBuZXcgamwoZSk7dGhpcy5vcHRpb25zPXJ1LmFzc2lnbih7Y2h1bmtTaXplOjE2Mzg0LHdpbmRvd0JpdHM6MCx0bzoiIn0sZXx8e30pO3ZhciB0PXRoaXMub3B0aW9uczt0LnJhdyYmdC53aW5kb3dCaXRzPj0wJiZ0LndpbmRvd0JpdHM8MTYmJih0LndpbmRvd0JpdHM9LXQud2luZG93Qml0cyx0LndpbmRvd0JpdHM9PT0wJiYodC53aW5kb3dCaXRzPS0xNSkpLHQud2luZG93Qml0cz49MCYmdC53aW5kb3dCaXRzPDE2JiYhKGUmJmUud2luZG93Qml0cykmJih0LndpbmRvd0JpdHMrPTMyKSx0LndpbmRvd0JpdHM+MTUmJnQud2luZG93Qml0czw0OCYmKHQud2luZG93Qml0cyYxNSk9PT0wJiYodC53aW5kb3dCaXRzfD0xNSksdGhpcy5lcnI9MCx0aGlzLm1zZz0iIix0aGlzLmVuZGVkPSExLHRoaXMuY2h1bmtzPVtdLHRoaXMuc3RybT1uZXcgb20sdGhpcy5zdHJtLmF2YWlsX291dD0wO3ZhciBuPU9jLmluZmxhdGVJbml0Mih0aGlzLnN0cm0sdC53aW5kb3dCaXRzKTtpZihuIT09aWkuWl9PSyl0aHJvdyBuZXcgRXJyb3IoU2Zbbl0pO2lmKHRoaXMuaGVhZGVyPW5ldyBhbSxPYy5pbmZsYXRlR2V0SGVhZGVyKHRoaXMuc3RybSx0aGlzLmhlYWRlciksdC5kaWN0aW9uYXJ5JiYodHlwZW9mIHQuZGljdGlvbmFyeT09InN0cmluZyI/dC5kaWN0aW9uYXJ5PVB1LnN0cmluZzJidWYodC5kaWN0aW9uYXJ5KTpxZC5jYWxsKHQuZGljdGlvbmFyeSk9PT0iW29iamVjdCBBcnJheUJ1ZmZlcl0iJiYodC5kaWN0aW9uYXJ5PW5ldyBVaW50OEFycmF5KHQuZGljdGlvbmFyeSkpLHQucmF3JiYobj1PYy5pbmZsYXRlU2V0RGljdGlvbmFyeSh0aGlzLnN0cm0sdC5kaWN0aW9uYXJ5KSxuIT09aWkuWl9PSykpKXRocm93IG5ldyBFcnJvcihTZltuXSl9amwucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLnN0cm0scj10aGlzLm9wdGlvbnMuY2h1bmtTaXplLHM9dGhpcy5vcHRpb25zLmRpY3Rpb25hcnksdSxnLEUsJCxQLEw9ITE7aWYodGhpcy5lbmRlZClyZXR1cm4hMTtnPXQ9PT1+fnQ/dDp0PT09ITA/aWkuWl9GSU5JU0g6aWkuWl9OT19GTFVTSCx0eXBlb2YgZT09InN0cmluZyI/bi5pbnB1dD1QdS5iaW5zdHJpbmcyYnVmKGUpOnFkLmNhbGwoZSk9PT0iW29iamVjdCBBcnJheUJ1ZmZlcl0iP24uaW5wdXQ9bmV3IFVpbnQ4QXJyYXkoZSk6bi5pbnB1dD1lLG4ubmV4dF9pbj0wLG4uYXZhaWxfaW49bi5pbnB1dC5sZW5ndGg7ZG97aWYobi5hdmFpbF9vdXQ9PT0wJiYobi5vdXRwdXQ9bmV3IHJ1LkJ1Zjgociksbi5uZXh0X291dD0wLG4uYXZhaWxfb3V0PXIpLHU9T2MuaW5mbGF0ZShuLGlpLlpfTk9fRkxVU0gpLHU9PT1paS5aX05FRURfRElDVCYmcyYmKHU9T2MuaW5mbGF0ZVNldERpY3Rpb25hcnkodGhpcy5zdHJtLHMpKSx1PT09aWkuWl9CVUZfRVJST1ImJkw9PT0hMCYmKHU9aWkuWl9PSyxMPSExKSx1IT09aWkuWl9TVFJFQU1fRU5EJiZ1IT09aWkuWl9PSylyZXR1cm4gdGhpcy5vbkVuZCh1KSx0aGlzLmVuZGVkPSEwLCExO24ubmV4dF9vdXQmJihuLmF2YWlsX291dD09PTB8fHU9PT1paS5aX1NUUkVBTV9FTkR8fG4uYXZhaWxfaW49PT0wJiYoZz09PWlpLlpfRklOSVNIfHxnPT09aWkuWl9TWU5DX0ZMVVNIKSkmJih0aGlzLm9wdGlvbnMudG89PT0ic3RyaW5nIj8oRT1QdS51dGY4Ym9yZGVyKG4ub3V0cHV0LG4ubmV4dF9vdXQpLCQ9bi5uZXh0X291dC1FLFA9UHUuYnVmMnN0cmluZyhuLm91dHB1dCxFKSxuLm5leHRfb3V0PSQsbi5hdmFpbF9vdXQ9ci0kLCQmJnJ1LmFycmF5U2V0KG4ub3V0cHV0LG4ub3V0cHV0LEUsJCwwKSx0aGlzLm9uRGF0YShQKSk6dGhpcy5vbkRhdGEocnUuc2hyaW5rQnVmKG4ub3V0cHV0LG4ubmV4dF9vdXQpKSksbi5hdmFpbF9pbj09PTAmJm4uYXZhaWxfb3V0PT09MCYmKEw9ITApfXdoaWxlKChuLmF2YWlsX2luPjB8fG4uYXZhaWxfb3V0PT09MCkmJnUhPT1paS5aX1NUUkVBTV9FTkQpO3JldHVybiB1PT09aWkuWl9TVFJFQU1fRU5EJiYoZz1paS5aX0ZJTklTSCksZz09PWlpLlpfRklOSVNIPyh1PU9jLmluZmxhdGVFbmQodGhpcy5zdHJtKSx0aGlzLm9uRW5kKHUpLHRoaXMuZW5kZWQ9ITAsdT09PWlpLlpfT0spOihnPT09aWkuWl9TWU5DX0ZMVVNIJiYodGhpcy5vbkVuZChpaS5aX09LKSxuLmF2YWlsX291dD0wKSwhMCl9LGpsLnByb3RvdHlwZS5vbkRhdGE9ZnVuY3Rpb24oZSl7dGhpcy5jaHVua3MucHVzaChlKX0samwucHJvdG90eXBlLm9uRW5kPWZ1bmN0aW9uKGUpe2U9PT1paS5aX09LJiYodGhpcy5vcHRpb25zLnRvPT09InN0cmluZyI/dGhpcy5yZXN1bHQ9dGhpcy5jaHVua3Muam9pbigiIik6dGhpcy5yZXN1bHQ9cnUuZmxhdHRlbkNodW5rcyh0aGlzLmNodW5rcykpLHRoaXMuY2h1bmtzPVtdLHRoaXMuZXJyPWUsdGhpcy5tc2c9dGhpcy5zdHJtLm1zZ307ZnVuY3Rpb24gQ2YoZSx0KXt2YXIgbj1uZXcgamwodCk7aWYobi5wdXNoKGUsITApLG4uZXJyKXRocm93IG4ubXNnfHxTZltuLmVycl07cmV0dXJuIG4ucmVzdWx0fWZ1bmN0aW9uIHNtKGUsdCl7cmV0dXJuIHQ9dHx8e30sdC5yYXc9ITAsQ2YoZSx0KX1YZS5JbmZsYXRlPWpsLFhlLmluZmxhdGU9Q2YsWGUuaW5mbGF0ZVJhdz1zbSxYZS51bmd6aXA9Q2Y7dmFyIGxtPVR0LmFzc2lnbixjbT15dCx1bT1YZSxmbT1ZZCxLZD17fTtsbShLZCxjbSx1bSxmbSk7dmFyIEpkPUtkO2xldCBkbT0idXB4MnB4IixobT1be25hbWU6InVweCIsdHlwZTpbTnVtYmVyLFN0cmluZ10scmVxdWlyZWQ6ITB9XSxwbT0xZS00LGdtPTc1MCxaZD0hMSxPZj0wLFhkPTAsUWQ9OTYwLGVoPTM3NSx0aD03NTA7ZnVuY3Rpb24gdm0oKXtsZXR7cGxhdGZvcm06ZSxwaXhlbFJhdGlvOnQsd2luZG93V2lkdGg6bn09eW8oKTtPZj1uLFhkPXQsWmQ9ZT09PSJpb3MifWZ1bmN0aW9uIEFmKGUsdCl7bGV0IG49TnVtYmVyKGUpO3JldHVybiBpc05hTihuKT90Om59ZnVuY3Rpb24gbW0oKXtsZXQgZT1SLmdsb2JhbFN0eWxlfHx7fTtRZD1BZihlLnJweENhbGNNYXhEZXZpY2VXaWR0aCw5NjApLGVoPUFmKGUucnB4Q2FsY0Jhc2VEZXZpY2VXaWR0aCwzNzUpLHRoPUFmKGUucnB4Q2FsY0Jhc2VEZXZpY2VXaWR0aCw3NTApfWxldCBfbT1CdChkbSwoZSx0KT0+e2lmKE9mPT09MCYmKHZtKCksbW0oKSksZT1OdW1iZXIoZSksZT09PTApcmV0dXJuIDA7bGV0IG49dHx8T2Y7bj1lPT09dGh8fG48PVFkP246ZWg7bGV0IHI9ZS9nbSpuO3JldHVybiByPDAmJihyPS1yKSxyPU1hdGguZmxvb3IocitwbSkscj09PTAmJihYZD09PTF8fCFaZD9yPTE6cj0uNSksZTwwPy1yOnJ9LGhtKSxibT0iYWRkSW50ZXJjZXB0b3IiLHltPSJyZW1vdmVJbnRlcmNlcHRvciIsbmg9W3tuYW1lOiJtZXRob2QiLHR5cGU6W1N0cmluZyxPYmplY3RdLHJlcXVpcmVkOiEwfV0sRW09bmg7ZnVuY3Rpb24gcmgoZSx0KXtPYmplY3Qua2V5cyh0KS5mb3JFYWNoKG49PntKLmlzRnVuY3Rpb24odFtuXSkmJihlW25dPXdtKGVbbl0sdFtuXSkpfSl9ZnVuY3Rpb24gaWgoZSx0KXshZXx8IXR8fE9iamVjdC5rZXlzKHQpLmZvckVhY2gobj0+e2xldCByPWVbbl0scz10W25dO0ouaXNBcnJheShyKSYmSi5pc0Z1bmN0aW9uKHMpJiZKLnJlbW92ZShyLHMpfSl9ZnVuY3Rpb24gd20oZSx0KXtsZXQgbj10P2U/ZS5jb25jYXQodCk6Si5pc0FycmF5KHQpP3Q6W3RdOmU7cmV0dXJuIG4mJlNtKG4pfWZ1bmN0aW9uIFNtKGUpe2xldCB0PVtdO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXQuaW5kZXhPZihlW25dKT09PS0xJiZ0LnB1c2goZVtuXSk7cmV0dXJuIHR9bGV0IENtPUJ0KGJtLChlLHQpPT57Si5pc1N0cmluZyhlKSYmSi5pc1BsYWluT2JqZWN0KHQpP3JoKGRyW2VdfHwoZHJbZV09e30pLHQpOkouaXNQbGFpbk9iamVjdChlKSYmcmgoX3IsZSl9LG5oKSxPbT1CdCh5bSwoZSx0KT0+e0ouaXNTdHJpbmcoZSk/Si5pc1BsYWluT2JqZWN0KHQpP2loKGRyW2VdLHQpOmRlbGV0ZSBkcltlXTpKLmlzUGxhaW5PYmplY3QoZSkmJmloKF9yLGUpfSxFbSksQW09e30sVG09IiRvbiIsb2g9W3tuYW1lOiJldmVudCIsdHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LHtuYW1lOiJjYWxsYmFjayIsdHlwZTpGdW5jdGlvbixyZXF1aXJlZDohMH1dLEltPSIkb25jZSIsUG09b2gsTm09IiRvZmYiLGttPVt7bmFtZToiZXZlbnQiLHR5cGU6W1N0cmluZyxBcnJheV19LHtuYW1lOiJjYWxsYmFjayIsdHlwZTpGdW5jdGlvbn1dLFJtPSIkZW1pdCIseG09W3tuYW1lOiJldmVudCIsdHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9XSx6bD1uZXcgcmUuRW1pdHRlcixCbT1CdChUbSwoZSx0KT0+KHpsLm9uKGUsdCksKCk9PnpsLm9mZihlLHQpKSxvaCksTW09QnQoSW0sKGUsdCk9Pih6bC5vbmNlKGUsdCksKCk9PnpsLm9mZihlLHQpKSxQbSksRG09QnQoTm0sKGUsdCk9PntpZighZSl7emwuZT17fTtyZXR1cm59Si5pc0FycmF5KGUpfHwoZT1bZV0pLGUuZm9yRWFjaChuPT56bC5vZmYobix0KSl9LGttKSxMbT1CdChSbSwoZSwuLi50KT0+e3psLmVtaXQoZSwuLi50KX0seG0pLGFoPVt7bmFtZToiaWQiLHR5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfV0sRm09ImNyZWF0ZVZpZGVvQ29udGV4dCIsVm09ImNyZWF0ZU1hcENvbnRleHQiLCRtPWFoLFVtPSJjcmVhdGVDYW52YXNDb250ZXh0IixIbT1be25hbWU6ImNhbnZhc0lkIix0eXBlOlN0cmluZyxyZXF1aXJlZDohMH0se25hbWU6ImNvbXBvbmVudEluc3RhbmNlIix0eXBlOk9iamVjdH1dLGptPSJjcmVhdGVJbm5lckF1ZGlvQ29udGV4dCIsem09ImNyZWF0ZUxpdmVQdXNoZXJDb250ZXh0IixXbT1haC5jb25jYXQoe25hbWU6ImNvbXBvbmVudEluc3RhbmNlIix0eXBlOk9iamVjdH0pLEdtPVsuNSwuOCwxLDEuMjUsMS41LDJdO2NsYXNzIFRme2NvbnN0cnVjdG9yKHQsbil7dGhpcy5pZD10LHRoaXMucGFnZUlkPW59cGxheSgpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsInBsYXkiKX1wYXVzZSgpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsInBhdXNlIil9c3RvcCgpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsInN0b3AiKX1zZWVrKHQpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsInNlZWsiLHtwb3NpdGlvbjp0fSl9c2VuZERhbm11KHQpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsInNlbmREYW5tdSIsdCl9cGxheWJhY2tSYXRlKHQpe35HbS5pbmRleE9mKHQpfHwodD0xKSwkbih0aGlzLmlkLHRoaXMucGFnZUlkLCJwbGF5YmFja1JhdGUiLHtyYXRlOnR9KX1yZXF1ZXN0RnVsbFNjcmVlbih0PXt9KXskbih0aGlzLmlkLHRoaXMucGFnZUlkLCJyZXF1ZXN0RnVsbFNjcmVlbiIsdCl9ZXhpdEZ1bGxTY3JlZW4oKXskbih0aGlzLmlkLHRoaXMucGFnZUlkLCJleGl0RnVsbFNjcmVlbiIpfXNob3dTdGF0dXNCYXIoKXskbih0aGlzLmlkLHRoaXMucGFnZUlkLCJzaG93U3RhdHVzQmFyIil9aGlkZVN0YXR1c0JhcigpeyRuKHRoaXMuaWQsdGhpcy5wYWdlSWQsImhpZGVTdGF0dXNCYXIiKX19bGV0IFltPUJ0KEZtLChlLHQpPT50P25ldyBUZihlLFFuKHQpKTpuZXcgVGYoZSxRbih6cigpKSkpLHFtPShlLHQpPT57bGV0IG49dC5lcnJNc2d8fCIiO25ldyBSZWdFeHAoIlxcOlxccypmYWlsIikudGVzdChuKT9lLmZhaWwmJmUuZmFpbCh0KTplLnN1Y2Nlc3MmJmUuc3VjY2Vzcyh0KSxlLmNvbXBsZXRlJiZlLmNvbXBsZXRlKHQpfSxLaT0oZSx0LG4scik9PntWaShlLHQsbixyLHM9PntyJiZxbShyLHMpfSl9O2NsYXNzIElme2NvbnN0cnVjdG9yKHQsbil7dGhpcy5pZD10LHRoaXMucGFnZUlkPW59Z2V0Q2VudGVyTG9jYXRpb24odCl7S2kodGhpcy5pZCx0aGlzLnBhZ2VJZCwiZ2V0Q2VudGVyTG9jYXRpb24iLHQpfW1vdmVUb0xvY2F0aW9uKHQpe0tpKHRoaXMuaWQsdGhpcy5wYWdlSWQsIm1vdmVUb0xvY2F0aW9uIix0KX1nZXRTY2FsZSh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJnZXRTY2FsZSIsdCl9Z2V0UmVnaW9uKHQpe0tpKHRoaXMuaWQsdGhpcy5wYWdlSWQsImdldFJlZ2lvbiIsdCl9aW5jbHVkZVBvaW50cyh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJpbmNsdWRlUG9pbnRzIix0KX10cmFuc2xhdGVNYXJrZXIodCl7S2kodGhpcy5pZCx0aGlzLnBhZ2VJZCwidHJhbnNsYXRlTWFya2VyIix0KX0kZ2V0QXBwTWFwKCl7cmV0dXJuIGwubWFwcy5nZXRNYXBCeUlkKHRoaXMucGFnZUlkKyItbWFwLSIrdGhpcy5pZCl9YWRkQ3VzdG9tTGF5ZXIodCl7S2kodGhpcy5pZCx0aGlzLnBhZ2VJZCwiYWRkQ3VzdG9tTGF5ZXIiLHQpfXJlbW92ZUN1c3RvbUxheWVyKHQpe0tpKHRoaXMuaWQsdGhpcy5wYWdlSWQsInJlbW92ZUN1c3RvbUxheWVyIix0KX1hZGRHcm91bmRPdmVybGF5KHQpe0tpKHRoaXMuaWQsdGhpcy5wYWdlSWQsImFkZEdyb3VuZE92ZXJsYXkiLHQpfXJlbW92ZUdyb3VuZE92ZXJsYXkodCl7S2kodGhpcy5pZCx0aGlzLnBhZ2VJZCwicmVtb3ZlR3JvdW5kT3ZlcmxheSIsdCl9dXBkYXRlR3JvdW5kT3ZlcmxheSh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJ1cGRhdGVHcm91bmRPdmVybGF5Iix0KX1pbml0TWFya2VyQ2x1c3Rlcih0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJpbml0TWFya2VyQ2x1c3RlciIsdCl9YWRkTWFya2Vycyh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJhZGRNYXJrZXJzIix0KX1yZW1vdmVNYXJrZXJzKHQpe0tpKHRoaXMuaWQsdGhpcy5wYWdlSWQsInJlbW92ZU1hcmtlcnMiLHQpfW1vdmVBbG9uZyh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJtb3ZlQWxvbmciLHQpfXNldExvY01hcmtlckljb24odCl7S2kodGhpcy5pZCx0aGlzLnBhZ2VJZCwic2V0TG9jTWFya2VySWNvbiIsdCl9b3Blbk1hcEFwcCh0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJvcGVuTWFwQXBwIix0KX1vbih0KXtLaSh0aGlzLmlkLHRoaXMucGFnZUlkLCJvbiIsdCl9fWxldCBLbT1CdChWbSwoZSx0KT0+dD9uZXcgSWYoZSxRbih0KSk6bmV3IElmKGUsUW4oenIoKSkpLCRtKTtmdW5jdGlvbiB3bChlLHQpe3JldHVybiBmdW5jdGlvbihuLHIpe24/cltlXT1NYXRoLnJvdW5kKG4pOnR5cGVvZiB0IT0idW5kZWZpbmVkIiYmKHJbZV09dCl9fWxldCBzaD13bCgid2lkdGgiKSxsaD13bCgiaGVpZ2h0IiksSm09ImNhbnZhc0dldEltYWdlRGF0YSIsY2g9e2Zvcm1hdEFyZ3M6e3g6d2woIngiKSx5OndsKCJ5Iiksd2lkdGg6c2gsaGVpZ2h0OmxofX0sdWg9e2NhbnZhc0lkOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH0seDp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6ITB9LHk6e3R5cGU6TnVtYmVyLHJlcXVpcmVkOiEwfSx3aWR0aDp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6ITB9LGhlaWdodDp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6ITB9fSxabT0iY2FudmFzUHV0SW1hZ2VEYXRhIixYbT1jaCxRbT1KLmV4dGVuZCh7ZGF0YTp7dHlwZTpVaW50OENsYW1wZWRBcnJheSxyZXF1aXJlZDohMH19LHVoLHtoZWlnaHQ6e3R5cGU6TnVtYmVyfX0pLGZoPXtQTkc6InBuZyIsSlBHOiJqcGciLEpQRUc6ImpwZyJ9LGVfPSJjYW52YXNUb1RlbXBGaWxlUGF0aCIsdF89e2Zvcm1hdEFyZ3M6e3g6d2woIngiLDApLHk6d2woInkiLDApLHdpZHRoOnNoLGhlaWdodDpsaCxkZXN0V2lkdGg6d2woImRlc3RXaWR0aCIpLGRlc3RIZWlnaHQ6d2woImRlc3RIZWlnaHQiKSxmaWxlVHlwZShlLHQpe2U9KGV8fCIiKS50b1VwcGVyQ2FzZSgpO2xldCBuPWZoW2VdO258fChuPWZoLlBORyksdC5maWxlVHlwZT1ufSxxdWFsaXR5KGUsdCl7dC5xdWFsaXR5PWUmJmU+MCYmZTwxP2U6MX19fSxuXz17eDpOdW1iZXIseTpOdW1iZXIsd2lkdGg6TnVtYmVyLGhlaWdodDpOdW1iZXIsZGVzdFdpZHRoOk51bWJlcixkZXN0SGVpZ2h0Ok51bWJlcixjYW52YXNJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LGZpbGVUeXBlOlN0cmluZyxxdWFsaXR5Ok51bWJlcn07ZnVuY3Rpb24gTnUoZSx0LG4scixzKXttdC5pbnZva2VWaWV3TWV0aG9kKGBjYW52YXMuJHtlfWAse3R5cGU6bixkYXRhOnJ9LHQsdT0+e3MmJnModSl9KX12YXIgcl89WyJzY2FsZSIsInJvdGF0ZSIsInRyYW5zbGF0ZSIsInNldFRyYW5zZm9ybSIsInRyYW5zZm9ybSJdLGlfPVsiZHJhd0ltYWdlIiwiZmlsbFRleHQiLCJmaWxsIiwic3Ryb2tlIiwiZmlsbFJlY3QiLCJzdHJva2VSZWN0IiwiY2xlYXJSZWN0Iiwic3Ryb2tlVGV4dCJdLG9fPVsic2V0RmlsbFN0eWxlIiwic2V0VGV4dEFsaWduIiwic2V0U3Ryb2tlU3R5bGUiLCJzZXRHbG9iYWxBbHBoYSIsInNldFNoYWRvdyIsInNldEZvbnRTaXplIiwic2V0TGluZUNhcCIsInNldExpbmVKb2luIiwic2V0TGluZVdpZHRoIiwic2V0TWl0ZXJMaW1pdCIsInNldFRleHRCYXNlbGluZSIsInNldExpbmVEYXNoIl07ZnVuY3Rpb24gYV8oZSx0KXtsZXQgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKS5nZXRDb250ZXh0KCIyZCIpO3JldHVybiByLmZvbnQ9dCxyLm1lYXN1cmVUZXh0KGUpLndpZHRofHwwfWxldCBkaD17YWxpY2VibHVlOiIjZjBmOGZmIixhbnRpcXVld2hpdGU6IiNmYWViZDciLGFxdWE6IiMwMGZmZmYiLGFxdWFtYXJpbmU6IiM3ZmZmZDQiLGF6dXJlOiIjZjBmZmZmIixiZWlnZToiI2Y1ZjVkYyIsYmlzcXVlOiIjZmZlNGM0IixibGFjazoiIzAwMDAwMCIsYmxhbmNoZWRhbG1vbmQ6IiNmZmViY2QiLGJsdWU6IiMwMDAwZmYiLGJsdWV2aW9sZXQ6IiM4YTJiZTIiLGJyb3duOiIjYTUyYTJhIixidXJseXdvb2Q6IiNkZWI4ODciLGNhZGV0Ymx1ZToiIzVmOWVhMCIsY2hhcnRyZXVzZToiIzdmZmYwMCIsY2hvY29sYXRlOiIjZDI2OTFlIixjb3JhbDoiI2ZmN2Y1MCIsY29ybmZsb3dlcmJsdWU6IiM2NDk1ZWQiLGNvcm5zaWxrOiIjZmZmOGRjIixjcmltc29uOiIjZGMxNDNjIixjeWFuOiIjMDBmZmZmIixkYXJrYmx1ZToiIzAwMDA4YiIsZGFya2N5YW46IiMwMDhiOGIiLGRhcmtnb2xkZW5yb2Q6IiNiODg2MGIiLGRhcmtncmF5OiIjYTlhOWE5IixkYXJrZ3JleToiI2E5YTlhOSIsZGFya2dyZWVuOiIjMDA2NDAwIixkYXJra2hha2k6IiNiZGI3NmIiLGRhcmttYWdlbnRhOiIjOGIwMDhiIixkYXJrb2xpdmVncmVlbjoiIzU1NmIyZiIsZGFya29yYW5nZToiI2ZmOGMwMCIsZGFya29yY2hpZDoiIzk5MzJjYyIsZGFya3JlZDoiIzhiMDAwMCIsZGFya3NhbG1vbjoiI2U5OTY3YSIsZGFya3NlYWdyZWVuOiIjOGZiYzhmIixkYXJrc2xhdGVibHVlOiIjNDgzZDhiIixkYXJrc2xhdGVncmF5OiIjMmY0ZjRmIixkYXJrc2xhdGVncmV5OiIjMmY0ZjRmIixkYXJrdHVycXVvaXNlOiIjMDBjZWQxIixkYXJrdmlvbGV0OiIjOTQwMGQzIixkZWVwcGluazoiI2ZmMTQ5MyIsZGVlcHNreWJsdWU6IiMwMGJmZmYiLGRpbWdyYXk6IiM2OTY5NjkiLGRpbWdyZXk6IiM2OTY5NjkiLGRvZGdlcmJsdWU6IiMxZTkwZmYiLGZpcmVicmljazoiI2IyMjIyMiIsZmxvcmFsd2hpdGU6IiNmZmZhZjAiLGZvcmVzdGdyZWVuOiIjMjI4YjIyIixmdWNoc2lhOiIjZmYwMGZmIixnYWluc2Jvcm86IiNkY2RjZGMiLGdob3N0d2hpdGU6IiNmOGY4ZmYiLGdvbGQ6IiNmZmQ3MDAiLGdvbGRlbnJvZDoiI2RhYTUyMCIsZ3JheToiIzgwODA4MCIsZ3JleToiIzgwODA4MCIsZ3JlZW46IiMwMDgwMDAiLGdyZWVueWVsbG93OiIjYWRmZjJmIixob25leWRldzoiI2YwZmZmMCIsaG90cGluazoiI2ZmNjliNCIsaW5kaWFucmVkOiIjY2Q1YzVjIixpbmRpZ286IiM0YjAwODIiLGl2b3J5OiIjZmZmZmYwIixraGFraToiI2YwZTY4YyIsbGF2ZW5kZXI6IiNlNmU2ZmEiLGxhdmVuZGVyYmx1c2g6IiNmZmYwZjUiLGxhd25ncmVlbjoiIzdjZmMwMCIsbGVtb25jaGlmZm9uOiIjZmZmYWNkIixsaWdodGJsdWU6IiNhZGQ4ZTYiLGxpZ2h0Y29yYWw6IiNmMDgwODAiLGxpZ2h0Y3lhbjoiI2UwZmZmZiIsbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IiNmYWZhZDIiLGxpZ2h0Z3JheToiI2QzZDNkMyIsbGlnaHRncmV5OiIjZDNkM2QzIixsaWdodGdyZWVuOiIjOTBlZTkwIixsaWdodHBpbms6IiNmZmI2YzEiLGxpZ2h0c2FsbW9uOiIjZmZhMDdhIixsaWdodHNlYWdyZWVuOiIjMjBiMmFhIixsaWdodHNreWJsdWU6IiM4N2NlZmEiLGxpZ2h0c2xhdGVncmF5OiIjNzc4ODk5IixsaWdodHNsYXRlZ3JleToiIzc3ODg5OSIsbGlnaHRzdGVlbGJsdWU6IiNiMGM0ZGUiLGxpZ2h0eWVsbG93OiIjZmZmZmUwIixsaW1lOiIjMDBmZjAwIixsaW1lZ3JlZW46IiMzMmNkMzIiLGxpbmVuOiIjZmFmMGU2IixtYWdlbnRhOiIjZmYwMGZmIixtYXJvb246IiM4MDAwMDAiLG1lZGl1bWFxdWFtYXJpbmU6IiM2NmNkYWEiLG1lZGl1bWJsdWU6IiMwMDAwY2QiLG1lZGl1bW9yY2hpZDoiI2JhNTVkMyIsbWVkaXVtcHVycGxlOiIjOTM3MGRiIixtZWRpdW1zZWFncmVlbjoiIzNjYjM3MSIsbWVkaXVtc2xhdGVibHVlOiIjN2I2OGVlIixtZWRpdW1zcHJpbmdncmVlbjoiIzAwZmE5YSIsbWVkaXVtdHVycXVvaXNlOiIjNDhkMWNjIixtZWRpdW12aW9sZXRyZWQ6IiNjNzE1ODUiLG1pZG5pZ2h0Ymx1ZToiIzE5MTk3MCIsbWludGNyZWFtOiIjZjVmZmZhIixtaXN0eXJvc2U6IiNmZmU0ZTEiLG1vY2Nhc2luOiIjZmZlNGI1IixuYXZham93aGl0ZToiI2ZmZGVhZCIsbmF2eToiIzAwMDA4MCIsb2xkbGFjZToiI2ZkZjVlNiIsb2xpdmU6IiM4MDgwMDAiLG9saXZlZHJhYjoiIzZiOGUyMyIsb3JhbmdlOiIjZmZhNTAwIixvcmFuZ2VyZWQ6IiNmZjQ1MDAiLG9yY2hpZDoiI2RhNzBkNiIscGFsZWdvbGRlbnJvZDoiI2VlZThhYSIscGFsZWdyZWVuOiIjOThmYjk4IixwYWxldHVycXVvaXNlOiIjYWZlZWVlIixwYWxldmlvbGV0cmVkOiIjZGI3MDkzIixwYXBheWF3aGlwOiIjZmZlZmQ1IixwZWFjaHB1ZmY6IiNmZmRhYjkiLHBlcnU6IiNjZDg1M2YiLHBpbms6IiNmZmMwY2IiLHBsdW06IiNkZGEwZGQiLHBvd2RlcmJsdWU6IiNiMGUwZTYiLHB1cnBsZToiIzgwMDA4MCIscmViZWNjYXB1cnBsZToiIzY2MzM5OSIscmVkOiIjZmYwMDAwIixyb3N5YnJvd246IiNiYzhmOGYiLHJveWFsYmx1ZToiIzQxNjllMSIsc2FkZGxlYnJvd246IiM4YjQ1MTMiLHNhbG1vbjoiI2ZhODA3MiIsc2FuZHlicm93bjoiI2Y0YTQ2MCIsc2VhZ3JlZW46IiMyZThiNTciLHNlYXNoZWxsOiIjZmZmNWVlIixzaWVubmE6IiNhMDUyMmQiLHNpbHZlcjoiI2MwYzBjMCIsc2t5Ymx1ZToiIzg3Y2VlYiIsc2xhdGVibHVlOiIjNmE1YWNkIixzbGF0ZWdyYXk6IiM3MDgwOTAiLHNsYXRlZ3JleToiIzcwODA5MCIsc25vdzoiI2ZmZmFmYSIsc3ByaW5nZ3JlZW46IiMwMGZmN2YiLHN0ZWVsYmx1ZToiIzQ2ODJiNCIsdGFuOiIjZDJiNDhjIix0ZWFsOiIjMDA4MDgwIix0aGlzdGxlOiIjZDhiZmQ4Iix0b21hdG86IiNmZjYzNDciLHR1cnF1b2lzZToiIzQwZTBkMCIsdmlvbGV0OiIjZWU4MmVlIix3aGVhdDoiI2Y1ZGViMyIsd2hpdGU6IiNmZmZmZmYiLHdoaXRlc21va2U6IiNmNWY1ZjUiLHllbGxvdzoiI2ZmZmYwMCIseWVsbG93Z3JlZW46IiM5YWNkMzIiLHRyYW5zcGFyZW50OiIjMDAwMDAwMDAifTtmdW5jdGlvbiBQZihlKXtlPWV8fCIjMDAwMDAwIjt2YXIgdD1udWxsO2lmKCh0PS9eIyhbMC05fEEtRnxhLWZdezZ9KSQvLmV4ZWMoZSkpIT1udWxsKXtsZXQgcj1wYXJzZUludCh0WzFdLnNsaWNlKDAsMiksMTYpLHM9cGFyc2VJbnQodFsxXS5zbGljZSgyLDQpLDE2KSx1PXBhcnNlSW50KHRbMV0uc2xpY2UoNCksMTYpO3JldHVybltyLHMsdSwyNTVdfWlmKCh0PS9eIyhbMC05fEEtRnxhLWZdezN9KSQvLmV4ZWMoZSkpIT1udWxsKXtsZXQgcj10WzFdLnNsaWNlKDAsMSkscz10WzFdLnNsaWNlKDEsMiksdT10WzFdLnNsaWNlKDIsMyk7cmV0dXJuIHI9cGFyc2VJbnQocityLDE2KSxzPXBhcnNlSW50KHMrcywxNiksdT1wYXJzZUludCh1K3UsMTYpLFtyLHMsdSwyNTVdfWlmKCh0PS9ecmdiXCgoLispXCkkLy5leGVjKGUpKSE9bnVsbClyZXR1cm4gdFsxXS5zcGxpdCgiLCIpLm1hcChmdW5jdGlvbihyKXtyZXR1cm4gTWF0aC5taW4oMjU1LHBhcnNlSW50KHIudHJpbSgpKSl9KS5jb25jYXQoMjU1KTtpZigodD0vXnJnYmFcKCguKylcKSQvLmV4ZWMoZSkpIT1udWxsKXJldHVybiB0WzFdLnNwbGl0KCIsIikubWFwKGZ1bmN0aW9uKHIscyl7cmV0dXJuIHM9PT0zP01hdGguZmxvb3IoMjU1KnBhcnNlRmxvYXQoci50cmltKCkpKTpNYXRoLm1pbigyNTUscGFyc2VJbnQoci50cmltKCkpKX0pO3ZhciBuPWUudG9Mb3dlckNhc2UoKTtpZihKLmhhc093bihkaCxuKSl7dD0vXiMoWzAtOXxBLUZ8YS1mXXs2LDh9KSQvLmV4ZWMoZGhbbl0pO2xldCByPXBhcnNlSW50KHRbMV0uc2xpY2UoMCwyKSwxNikscz1wYXJzZUludCh0WzFdLnNsaWNlKDIsNCksMTYpLHU9cGFyc2VJbnQodFsxXS5zbGljZSg0LDYpLDE2KSxnPXBhcnNlSW50KHRbMV0uc2xpY2UoNiw4KSwxNik7cmV0dXJuIGc9Zz49MD9nOjI1NSxbcixzLHUsZ119cmV0dXJuIGNvbnNvbGUuZXJyb3IoInVuc3VwcG9ydGVkIGNvbG9yOiIrZSksWzAsMCwwLDI1NV19Y2xhc3MgaGh7Y29uc3RydWN0b3IodCxuKXt0aGlzLnR5cGU9dCx0aGlzLmRhdGE9bix0aGlzLmNvbG9yU3RvcD1bXX1hZGRDb2xvclN0b3AodCxuKXt0aGlzLmNvbG9yU3RvcC5wdXNoKFt0LFBmKG4pXSl9fWNsYXNzIHNfe2NvbnN0cnVjdG9yKHQsbil7dGhpcy50eXBlPSJwYXR0ZXJuIix0aGlzLmRhdGE9dCx0aGlzLmNvbG9yU3RvcD1ufX1jbGFzcyBsX3tjb25zdHJ1Y3Rvcih0KXt0aGlzLndpZHRoPXR9fWNsYXNzIGl1e2NvbnN0cnVjdG9yKHQsbil7dGhpcy5pZD10LHRoaXMucGFnZUlkPW4sdGhpcy5hY3Rpb25zPVtdLHRoaXMucGF0aD1bXSx0aGlzLnN1YnBhdGg9W10sdGhpcy5kcmF3aW5nU3RhdGU9W10sdGhpcy5zdGF0ZT17bGluZURhc2g6WzAsMF0sc2hhZG93T2Zmc2V0WDowLHNoYWRvd09mZnNldFk6MCxzaGFkb3dCbHVyOjAsc2hhZG93Q29sb3I6WzAsMCwwLDBdLGZvbnQ6IjEwcHggc2Fucy1zZXJpZiIsZm9udFNpemU6MTAsZm9udFdlaWdodDoibm9ybWFsIixmb250U3R5bGU6Im5vcm1hbCIsZm9udEZhbWlseToic2Fucy1zZXJpZiJ9fWRyYXcodD0hMSxuKXt2YXIgcj1bLi4udGhpcy5hY3Rpb25zXTt0aGlzLmFjdGlvbnM9W10sdGhpcy5wYXRoPVtdLE51KHRoaXMuaWQsdGhpcy5wYWdlSWQsImFjdGlvbnNDaGFuZ2VkIix7YWN0aW9uczpyLHJlc2VydmU6dH0sbil9Y3JlYXRlTGluZWFyR3JhZGllbnQodCxuLHIscyl7cmV0dXJuIG5ldyBoaCgibGluZWFyIixbdCxuLHIsc10pfWNyZWF0ZUNpcmN1bGFyR3JhZGllbnQodCxuLHIpe3JldHVybiBuZXcgaGgoInJhZGlhbCIsW3QsbixyXSl9Y3JlYXRlUGF0dGVybih0LG4pe2lmKG49PT12b2lkIDApY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIGV4ZWN1dGUgJ2NyZWF0ZVBhdHRlcm4nIG9uICdDYW52YXNDb250ZXh0JzogMiBhcmd1bWVudHMgcmVxdWlyZWQsIGJ1dCBvbmx5IDEgcHJlc2VudC4iKTtlbHNlIGlmKFsicmVwZWF0IiwicmVwZWF0LXgiLCJyZXBlYXQteSIsIm5vLXJlcGVhdCJdLmluZGV4T2Yobik8MCljb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gZXhlY3V0ZSAnY3JlYXRlUGF0dGVybicgb24gJ0NhbnZhc0NvbnRleHQnOiBUaGUgcHJvdmlkZWQgdHlwZSAoJyIrbisiJykgaXMgbm90IG9uZSBvZiAncmVwZWF0JywgJ25vLXJlcGVhdCcsICdyZXBlYXQteCcsIG9yICdyZXBlYXQteScuIik7ZWxzZSByZXR1cm4gbmV3IHNfKHQsbil9bWVhc3VyZVRleHQodCl7bGV0IG49dGhpcy5zdGF0ZS5mb250LHI9MDt7bGV0IHM9bC53ZWJ2aWV3LmFsbCgpLmZpbmQodT0+dS5nZXRVUkwoKS5lbmRzV2l0aCgid3d3L19fdW5pYXBwdmlldy5odG1sIikpO3MmJihyPU51bWJlcihzLmV2YWxKU1N5bmMoYCgke2FfLnRvU3RyaW5nKCl9KSgke0pTT04uc3RyaW5naWZ5KHQpfSwke0pTT04uc3RyaW5naWZ5KG4pfSlgKSkpfXJldHVybiBuZXcgbF8ocil9c2F2ZSgpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNhdmUiLGRhdGE6W119KSx0aGlzLmRyYXdpbmdTdGF0ZS5wdXNoKHRoaXMuc3RhdGUpfXJlc3RvcmUoKXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOiJyZXN0b3JlIixkYXRhOltdfSksdGhpcy5zdGF0ZT10aGlzLmRyYXdpbmdTdGF0ZS5wb3AoKXx8e2xpbmVEYXNoOlswLDBdLHNoYWRvd09mZnNldFg6MCxzaGFkb3dPZmZzZXRZOjAsc2hhZG93Qmx1cjowLHNoYWRvd0NvbG9yOlswLDAsMCwwXSxmb250OiIxMHB4IHNhbnMtc2VyaWYiLGZvbnRTaXplOjEwLGZvbnRXZWlnaHQ6Im5vcm1hbCIsZm9udFN0eWxlOiJub3JtYWwiLGZvbnRGYW1pbHk6InNhbnMtc2VyaWYifX1iZWdpblBhdGgoKXt0aGlzLnBhdGg9W10sdGhpcy5zdWJwYXRoPVtdLHRoaXMucGF0aC5wdXNoKHttZXRob2Q6ImJlZ2luUGF0aCIsZGF0YTpbXX0pfW1vdmVUbyh0LG4pe3RoaXMucGF0aC5wdXNoKHttZXRob2Q6Im1vdmVUbyIsZGF0YTpbdCxuXX0pLHRoaXMuc3VicGF0aD1bW3Qsbl1dfWxpbmVUbyh0LG4pe3RoaXMucGF0aC5sZW5ndGg9PT0wJiZ0aGlzLnN1YnBhdGgubGVuZ3RoPT09MD90aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJtb3ZlVG8iLGRhdGE6W3Qsbl19KTp0aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJsaW5lVG8iLGRhdGE6W3Qsbl19KSx0aGlzLnN1YnBhdGgucHVzaChbdCxuXSl9cXVhZHJhdGljQ3VydmVUbyh0LG4scixzKXt0aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJxdWFkcmF0aWNDdXJ2ZVRvIixkYXRhOlt0LG4scixzXX0pLHRoaXMuc3VicGF0aC5wdXNoKFtyLHNdKX1iZXppZXJDdXJ2ZVRvKHQsbixyLHMsdSxnKXt0aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJiZXppZXJDdXJ2ZVRvIixkYXRhOlt0LG4scixzLHUsZ119KSx0aGlzLnN1YnBhdGgucHVzaChbdSxnXSl9YXJjKHQsbixyLHMsdSxnPSExKXt0aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJhcmMiLGRhdGE6W3QsbixyLHMsdSxnXX0pLHRoaXMuc3VicGF0aC5wdXNoKFt0LG5dKX1yZWN0KHQsbixyLHMpe3RoaXMucGF0aC5wdXNoKHttZXRob2Q6InJlY3QiLGRhdGE6W3QsbixyLHNdfSksdGhpcy5zdWJwYXRoPVtbdCxuXV19YXJjVG8odCxuLHIscyx1KXt0aGlzLnBhdGgucHVzaCh7bWV0aG9kOiJhcmNUbyIsZGF0YTpbdCxuLHIscyx1XX0pLHRoaXMuc3VicGF0aC5wdXNoKFtyLHNdKX1jbGlwKCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoiY2xpcCIsZGF0YTpbLi4udGhpcy5wYXRoXX0pfWNsb3NlUGF0aCgpe3RoaXMucGF0aC5wdXNoKHttZXRob2Q6ImNsb3NlUGF0aCIsZGF0YTpbXX0pLHRoaXMuc3VicGF0aC5sZW5ndGgmJih0aGlzLnN1YnBhdGg9W3RoaXMuc3VicGF0aC5zaGlmdCgpXSl9Y2xlYXJBY3Rpb25zKCl7dGhpcy5hY3Rpb25zPVtdLHRoaXMucGF0aD1bXSx0aGlzLnN1YnBhdGg9W119Z2V0QWN0aW9ucygpe3ZhciB0PVsuLi50aGlzLmFjdGlvbnNdO3JldHVybiB0aGlzLmNsZWFyQWN0aW9ucygpLHR9c2V0IGxpbmVEYXNoT2Zmc2V0KHQpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldExpbmVEYXNoT2Zmc2V0IixkYXRhOlt0XX0pfXNldCBnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24odCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0R2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIixkYXRhOlt0XX0pfXNldCBzaGFkb3dCbHVyKHQpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldFNoYWRvd0JsdXIiLGRhdGE6W3RdfSl9c2V0IHNoYWRvd0NvbG9yKHQpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldFNoYWRvd0NvbG9yIixkYXRhOlt0XX0pfXNldCBzaGFkb3dPZmZzZXRYKHQpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldFNoYWRvd09mZnNldFgiLGRhdGE6W3RdfSl9c2V0IHNoYWRvd09mZnNldFkodCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0U2hhZG93T2Zmc2V0WSIsZGF0YTpbdF19KX1zZXQgZm9udCh0KXt2YXIgbj10aGlzO3RoaXMuc3RhdGUuZm9udD10O3ZhciByPXQubWF0Y2goL14oKFtcd1wtXStccykqKShcZCtyP3B4KShcLyhcZCtcLj9cZCoocj9weCk/KSk/XHMrKC4qKS8pO2lmKHIpe3ZhciBzPXJbMV0udHJpbSgpLnNwbGl0KC9ccy8pLHU9cGFyc2VGbG9hdChyWzNdKSxnPXJbN10sRT1bXTtzLmZvckVhY2goZnVuY3Rpb24oUCxMKXtbIml0YWxpYyIsIm9ibGlxdWUiLCJub3JtYWwiXS5pbmRleE9mKFApPi0xPyhFLnB1c2goe21ldGhvZDoic2V0Rm9udFN0eWxlIixkYXRhOltQXX0pLG4uc3RhdGUuZm9udFN0eWxlPVApOlsiYm9sZCIsIm5vcm1hbCJdLmluZGV4T2YoUCk+LTE/KEUucHVzaCh7bWV0aG9kOiJzZXRGb250V2VpZ2h0IixkYXRhOltQXX0pLG4uc3RhdGUuZm9udFdlaWdodD1QKTpMPT09MD8oRS5wdXNoKHttZXRob2Q6InNldEZvbnRTdHlsZSIsZGF0YTpbIm5vcm1hbCJdfSksbi5zdGF0ZS5mb250U3R5bGU9Im5vcm1hbCIpOkw9PT0xJiYkKCl9KSxzLmxlbmd0aD09PTEmJiQoKSxzPUUubWFwKGZ1bmN0aW9uKFApe3JldHVybiBQLmRhdGFbMF19KS5qb2luKCIgIiksdGhpcy5zdGF0ZS5mb250U2l6ZT11LHRoaXMuc3RhdGUuZm9udEZhbWlseT1nLHRoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldEZvbnQiLGRhdGE6W2Ake3N9ICR7dX1weCAke2d9YF19KX1lbHNlIGNvbnNvbGUud2FybigiRmFpbGVkIHRvIHNldCAnZm9udCcgb24gJ0NhbnZhc0NvbnRleHQnOiBpbnZhbGlkIGZvcm1hdC4iKTtmdW5jdGlvbiAkKCl7RS5wdXNoKHttZXRob2Q6InNldEZvbnRXZWlnaHQiLGRhdGE6WyJub3JtYWwiXX0pLG4uc3RhdGUuZm9udFdlaWdodD0ibm9ybWFsIn19Z2V0IGZvbnQoKXtyZXR1cm4gdGhpcy5zdGF0ZS5mb250fXNldCBmaWxsU3R5bGUodCl7dGhpcy5zZXRGaWxsU3R5bGUodCl9c2V0IHN0cm9rZVN0eWxlKHQpe3RoaXMuc2V0U3Ryb2tlU3R5bGUodCl9c2V0IGdsb2JhbEFscGhhKHQpe3Q9TWF0aC5mbG9vcigyNTUqcGFyc2VGbG9hdCh0KSksdGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0R2xvYmFsQWxwaGEiLGRhdGE6W3RdfSl9c2V0IHRleHRBbGlnbih0KXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOiJzZXRUZXh0QWxpZ24iLGRhdGE6W3RdfSl9c2V0IGxpbmVDYXAodCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0TGluZUNhcCIsZGF0YTpbdF19KX1zZXQgbGluZUpvaW4odCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0TGluZUpvaW4iLGRhdGE6W3RdfSl9c2V0IGxpbmVXaWR0aCh0KXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOiJzZXRMaW5lV2lkdGgiLGRhdGE6W3RdfSl9c2V0IG1pdGVyTGltaXQodCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDoic2V0TWl0ZXJMaW1pdCIsZGF0YTpbdF19KX1zZXQgdGV4dEJhc2VsaW5lKHQpe3RoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6InNldFRleHRCYXNlbGluZSIsZGF0YTpbdF19KX19bGV0IGNfPXJlLm9uY2UoKCk9PntbLi4ucl8sLi4uaV9dLmZvckVhY2goZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChuKXtzd2l0Y2gobil7Y2FzZSJmaWxsIjpjYXNlInN0cm9rZSI6cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDpuKyJQYXRoIixkYXRhOlsuLi50aGlzLnBhdGhdfSl9O2Nhc2UiZmlsbFJlY3QiOnJldHVybiBmdW5jdGlvbihyLHMsdSxnKXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOiJmaWxsUGF0aCIsZGF0YTpbe21ldGhvZDoicmVjdCIsZGF0YTpbcixzLHUsZ119XX0pfTtjYXNlInN0cm9rZVJlY3QiOnJldHVybiBmdW5jdGlvbihyLHMsdSxnKXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOiJzdHJva2VQYXRoIixkYXRhOlt7bWV0aG9kOiJyZWN0IixkYXRhOltyLHMsdSxnXX1dfSl9O2Nhc2UiZmlsbFRleHQiOmNhc2Uic3Ryb2tlVGV4dCI6cmV0dXJuIGZ1bmN0aW9uKHIscyx1LGcpe3ZhciBFPVtyLnRvU3RyaW5nKCkscyx1XTt0eXBlb2YgZz09Im51bWJlciImJkUucHVzaChnKSx0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOm4sZGF0YTpFfSl9O2Nhc2UiZHJhd0ltYWdlIjpyZXR1cm4gZnVuY3Rpb24ocixzLHUsZyxFLCQsUCxMLEFlKXtBZT09PXZvaWQgMCYmKCQ9cyxQPXUsTD1nLEFlPUUscz12b2lkIDAsdT12b2lkIDAsZz12b2lkIDAsRT12b2lkIDApO3ZhciBOZTtmdW5jdGlvbiBSZShzdCl7cmV0dXJuIHR5cGVvZiBzdD09Im51bWJlciJ9TmU9UmUocykmJlJlKHUpJiZSZShnKSYmUmUoRSk/W3IsJCxQLEwsQWUscyx1LGcsRV06UmUoTCkmJlJlKEFlKT9bciwkLFAsTCxBZV06W3IsJCxQXSx0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOm4sZGF0YTpOZX0pfTtkZWZhdWx0OnJldHVybiBmdW5jdGlvbiguLi5yKXt0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOm4sZGF0YTpyfSl9fX1pdS5wcm90b3R5cGVbZV09dChlKX0pLG9fLmZvckVhY2goZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChuKXtzd2l0Y2gobil7Y2FzZSJzZXRGaWxsU3R5bGUiOmNhc2Uic2V0U3Ryb2tlU3R5bGUiOnJldHVybiBmdW5jdGlvbihyKXt0eXBlb2YgciE9Im9iamVjdCI/dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDpuLGRhdGE6WyJub3JtYWwiLFBmKHIpXX0pOnRoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6bixkYXRhOltyLnR5cGUsci5kYXRhLHIuY29sb3JTdG9wXX0pfTtjYXNlInNldEdsb2JhbEFscGhhIjpyZXR1cm4gZnVuY3Rpb24ocil7cj1NYXRoLmZsb29yKDI1NSpwYXJzZUZsb2F0KHIpKSx0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOm4sZGF0YTpbcl19KX07Y2FzZSJzZXRTaGFkb3ciOnJldHVybiBmdW5jdGlvbihyLHMsdSxnKXtnPVBmKGcpLHRoaXMuYWN0aW9ucy5wdXNoKHttZXRob2Q6bixkYXRhOltyLHMsdSxnXX0pLHRoaXMuc3RhdGUuc2hhZG93Qmx1cj11LHRoaXMuc3RhdGUuc2hhZG93Q29sb3I9Zyx0aGlzLnN0YXRlLnNoYWRvd09mZnNldFg9cix0aGlzLnN0YXRlLnNoYWRvd09mZnNldFk9c307Y2FzZSJzZXRMaW5lRGFzaCI6cmV0dXJuIGZ1bmN0aW9uKHIscyl7cj1yfHxbMCwwXSxzPXN8fDAsdGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDpuLGRhdGE6W3Isc119KSx0aGlzLnN0YXRlLmxpbmVEYXNoPXJ9O2Nhc2Uic2V0Rm9udFNpemUiOnJldHVybiBmdW5jdGlvbihyKXt0aGlzLnN0YXRlLmZvbnQ9dGhpcy5zdGF0ZS5mb250LnJlcGxhY2UoL1xkK1wuP1xkKnB4LyxyKyJweCIpLHRoaXMuc3RhdGUuZm9udFNpemU9cix0aGlzLmFjdGlvbnMucHVzaCh7bWV0aG9kOm4sZGF0YTpbcl19KX07ZGVmYXVsdDpyZXR1cm4gZnVuY3Rpb24oLi4ucil7dGhpcy5hY3Rpb25zLnB1c2goe21ldGhvZDpuLGRhdGE6cn0pfX19aXUucHJvdG90eXBlW2VdPXQoZSl9KX0pLHVfPUJ0KFVtLChlLHQpPT57aWYoY18oKSx0KXJldHVybiBuZXcgaXUoZSxRbih0KSk7bGV0IG49UW4oenIoKSk7aWYobilyZXR1cm4gbmV3IGl1KGUsbik7bXQuZW1pdChyZS5PTl9FUlJPUiwiY3JlYXRlQ2FudmFzQ29udGV4dDpmYWlsIil9LEhtKSxmXz14ZShKbSwoe2NhbnZhc0lkOmUseDp0LHk6bix3aWR0aDpyLGhlaWdodDpzfSx7cmVzb2x2ZTp1LHJlamVjdDpnfSk9PntsZXQgRT1Rbih6cigpKTtpZighRSl7ZygpO3JldHVybn1mdW5jdGlvbiAkKFApe2lmKFAuZXJyTXNnJiZQLmVyck1zZy5pbmRleE9mKCJmYWlsIikhPT0tMSl7ZygiIixQKTtyZXR1cm59bGV0IEw9UC5kYXRhO0wmJkwubGVuZ3RoJiYoUC5jb21wcmVzc2VkJiYoTD1KZC5pbmZsYXRlUmF3KEwpKSxQLmRhdGE9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KEwpKSxkZWxldGUgUC5jb21wcmVzc2VkLHUoUCl9TnUoZSxFLCJnZXRJbWFnZURhdGEiLHt4OnQseTpuLHdpZHRoOnIsaGVpZ2h0OnN9LCQpfSx1aCxjaCksZF89eGUoWm0sKHtjYW52YXNJZDplLGRhdGE6dCx4Om4seTpyLHdpZHRoOnMsaGVpZ2h0OnV9LHtyZXNvbHZlOmcscmVqZWN0OkV9KT0+e3ZhciAkPVFuKHpyKCkpO2lmKCEkKXtFKCk7cmV0dXJufWxldCBQLEw9KCk9PntOdShlLCQsInB1dEltYWdlRGF0YSIse2RhdGE6dCx4Om4seTpyLHdpZHRoOnMsaGVpZ2h0OnUsY29tcHJlc3NlZDpQfSxBZT0+e2lmKEFlLmVyck1zZyYmQWUuZXJyTXNnLmluZGV4T2YoImZhaWwiKSE9PS0xKXtFKCk7cmV0dXJufWcoQWUpfSl9O2wub3MubmFtZSE9PSJpT1MifHx0eXBlb2YgX19XRUVYX0RFVlRPT0xfXz09ImJvb2xlYW4iPyh0PUpkLmRlZmxhdGVSYXcodCx7dG86InN0cmluZyJ9KSxQPSEwKTp0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQpLEwoKX0sUW0sWG0pLGhfPXhlKGVfLCh7eDplPTAseTp0PTAsd2lkdGg6bixoZWlnaHQ6cixkZXN0V2lkdGg6cyxkZXN0SGVpZ2h0OnUsY2FudmFzSWQ6ZyxmaWxlVHlwZTpFLHF1YWxpdHk6JH0se3Jlc29sdmU6UCxyZWplY3Q6TH0pPT57dmFyIEFlPVFuKHpyKCkpO2lmKCFBZSl7TCgpO3JldHVybn1sZXQgTmU9YCR7SGl9L2NhbnZhc2A7TnUoZyxBZSwidG9UZW1wRmlsZVBhdGgiLHt4OmUseTp0LHdpZHRoOm4saGVpZ2h0OnIsZGVzdFdpZHRoOnMsZGVzdEhlaWdodDp1LGZpbGVUeXBlOkUscXVhbGl0eTokLGRpcm5hbWU6TmV9LFJlPT57aWYoUmUuZXJyTXNnJiZSZS5lcnJNc2cuaW5kZXhPZigiZmFpbCIpIT09LTEpe0woIiIsUmUpO3JldHVybn1QKFJlKX0pfSxuXyx0XykscGg9WyJvbkNhbnBsYXkiLCJvblBsYXkiLCJvblBhdXNlIiwib25TdG9wIiwib25FbmRlZCIsIm9uVGltZVVwZGF0ZSIsIm9uRXJyb3IiLCJvbldhaXRpbmciLCJvblNlZWtpbmciLCJvblNlZWtlZCJdLHBfPVsib2ZmQ2FucGxheSIsIm9mZlBsYXkiLCJvZmZQYXVzZSIsIm9mZlN0b3AiLCJvZmZFbmRlZCIsIm9mZlRpbWVVcGRhdGUiLCJvZmZFcnJvciIsIm9mZldhaXRpbmciLCJvZmZTZWVraW5nIiwib2ZmU2Vla2VkIl0sZ189e3RocmVzaG9sZHM6WzBdLGluaXRpYWxSYXRpbzowLG9ic2VydmVBbGw6ITF9LHZfPVsidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Il0sbV89MTtmdW5jdGlvbiBnaChlPXt9KXtyZXR1cm4gdl8ubWFwKHQ9PmAke051bWJlcihlW3RdKXx8MH1weGApLmpvaW4oIiAiKX1jbGFzcyB2aHtjb25zdHJ1Y3Rvcih0LG4pe3RoaXMuX3BhZ2VJZD1Rbih0KSx0aGlzLl9jb21wb25lbnQ9dCx0aGlzLl9vcHRpb25zPUouZXh0ZW5kKHt9LGdfLG4pfXJlbGF0aXZlVG8odCxuKXtyZXR1cm4gdGhpcy5fb3B0aW9ucy5yZWxhdGl2ZVRvU2VsZWN0b3I9dCx0aGlzLl9vcHRpb25zLnJvb3RNYXJnaW49Z2gobiksdGhpc31yZWxhdGl2ZVRvVmlld3BvcnQodCl7cmV0dXJuIHRoaXMuX29wdGlvbnMucmVsYXRpdmVUb1NlbGVjdG9yPXZvaWQgMCx0aGlzLl9vcHRpb25zLnJvb3RNYXJnaW49Z2godCksdGhpc31vYnNlcnZlKHQsbil7IUouaXNGdW5jdGlvbihuKXx8KHRoaXMuX29wdGlvbnMuc2VsZWN0b3I9dCx0aGlzLl9yZXFJZD1tXysrLCRpKHtyZXFJZDp0aGlzLl9yZXFJZCxjb21wb25lbnQ6dGhpcy5fY29tcG9uZW50LG9wdGlvbnM6dGhpcy5fb3B0aW9ucyxjYWxsYmFjazpufSx0aGlzLl9wYWdlSWQpKX1kaXNjb25uZWN0KCl7dGhpcy5fcmVxSWQmJldyKHtyZXFJZDp0aGlzLl9yZXFJZCxjb21wb25lbnQ6dGhpcy5fY29tcG9uZW50fSx0aGlzLl9wYWdlSWQpfX1sZXQgX189QnQoImNyZWF0ZUludGVyc2VjdGlvbk9ic2VydmVyIiwoZSx0KT0+KGU9cmUucmVzb2x2ZUNvbXBvbmVudEluc3RhbmNlKGUpLGUmJiFRbihlKSYmKHQ9ZSxlPW51bGwpLGU/bmV3IHZoKGUsdCk6bmV3IHZoKHpyKCksdCkpKSxiXz0xO2NsYXNzIG1oe2NvbnN0cnVjdG9yKHQpe3RoaXMuX3BhZ2VJZD10LiRwYWdlJiZ0LiRwYWdlLmlkLHRoaXMuX2NvbXBvbmVudD10fW9ic2VydmUodCxuKXshSi5pc0Z1bmN0aW9uKG4pfHwodGhpcy5fcmVxSWQ9Yl8rKyxVaSh7cmVxSWQ6dGhpcy5fcmVxSWQsY29tcG9uZW50OnRoaXMuX2NvbXBvbmVudCxvcHRpb25zOnQsY2FsbGJhY2s6bn0sdGhpcy5fcGFnZUlkKSl9ZGlzY29ubmVjdCgpe3RoaXMuX3JlcUlkJiZ3cyh7cmVxSWQ6dGhpcy5fcmVxSWQsY29tcG9uZW50OnRoaXMuX2NvbXBvbmVudH0sdGhpcy5fcGFnZUlkKX19bGV0IHlfPUJ0KCJjcmVhdGVNZWRpYVF1ZXJ5T2JzZXJ2ZXIiLGU9PihlPXJlLnJlc29sdmVDb21wb25lbnRJbnN0YW5jZShlKSxlJiYhUW4oZSkmJihlPW51bGwpLGU/bmV3IG1oKGUpOm5ldyBtaCh6cigpKSkpLEVfPTAsTmY9e307ZnVuY3Rpb24gd18oZSx0LG4scil7bGV0IHM9e29wdGlvbnM6cn0sdT1yJiYoInN1Y2Nlc3MiaW4gcnx8ImZhaWwiaW4gcnx8ImNvbXBsZXRlImluIHIpO2lmKHUpe2xldCBnPVN0cmluZyhFXysrKTtzLmNhbGxiYWNrSWQ9ZyxOZltnXT1yfW10Lmludm9rZVZpZXdNZXRob2QoYGVkaXRvci4ke2V9YCx7dHlwZTpuLGRhdGE6c30sdCwoe2NhbGxiYWNrSWQ6ZyxkYXRhOkV9KT0+e3UmJihyZS5jYWxsT3B0aW9ucyhOZltnXSxFKSxkZWxldGUgTmZbZ10pfSl9Y2xhc3MgU197Y29uc3RydWN0b3IodCxuKXt0aGlzLmlkPXQsdGhpcy5wYWdlSWQ9bn1mb3JtYXQodCxuKXt0aGlzLl9leGVjKCJmb3JtYXQiLHtuYW1lOnQsdmFsdWU6bn0pfWluc2VydERpdmlkZXIoKXt0aGlzLl9leGVjKCJpbnNlcnREaXZpZGVyIil9aW5zZXJ0SW1hZ2UodCl7dGhpcy5fZXhlYygiaW5zZXJ0SW1hZ2UiLHQpfWluc2VydFRleHQodCl7dGhpcy5fZXhlYygiaW5zZXJ0VGV4dCIsdCl9c2V0Q29udGVudHModCl7dGhpcy5fZXhlYygic2V0Q29udGVudHMiLHQpfWdldENvbnRlbnRzKHQpe3RoaXMuX2V4ZWMoImdldENvbnRlbnRzIix0KX1jbGVhcih0KXt0aGlzLl9leGVjKCJjbGVhciIsdCl9cmVtb3ZlRm9ybWF0KHQpe3RoaXMuX2V4ZWMoInJlbW92ZUZvcm1hdCIsdCl9dW5kbyh0KXt0aGlzLl9leGVjKCJ1bmRvIix0KX1yZWRvKHQpe3RoaXMuX2V4ZWMoInJlZG8iLHQpfWJsdXIodCl7dGhpcy5fZXhlYygiYmx1ciIsdCl9Z2V0U2VsZWN0aW9uVGV4dCh0KXt0aGlzLl9leGVjKCJnZXRTZWxlY3Rpb25UZXh0Iix0KX1zY3JvbGxJbnRvVmlldyh0KXt0aGlzLl9leGVjKCJzY3JvbGxJbnRvVmlldyIsdCl9X2V4ZWModCxuKXt3Xyh0aGlzLmlkLHRoaXMucGFnZUlkLHQsbil9fWxldCBDXz17Y2FudmFzOml1LG1hcDpJZix2aWRlbzpUZixlZGl0b3I6U199O2Z1bmN0aW9uIF9oKGUpe2lmKGUmJmUuY29udGV4dEluZm8pe2xldHtpZDp0LHR5cGU6bixwYWdlOnJ9PWUuY29udGV4dEluZm8scz1DX1tuXTtlLmNvbnRleHQ9bmV3IHModCxyKSxkZWxldGUgZS5jb250ZXh0SW5mb319Y2xhc3Mga2Z7Y29uc3RydWN0b3IodCxuLHIscyl7dGhpcy5fc2VsZWN0b3JRdWVyeT10LHRoaXMuX2NvbXBvbmVudD1uLHRoaXMuX3NlbGVjdG9yPXIsdGhpcy5fc2luZ2xlPXN9Ym91bmRpbmdDbGllbnRSZWN0KHQpe3JldHVybiB0aGlzLl9zZWxlY3RvclF1ZXJ5Ll9wdXNoKHRoaXMuX3NlbGVjdG9yLHRoaXMuX2NvbXBvbmVudCx0aGlzLl9zaW5nbGUse2lkOiEwLGRhdGFzZXQ6ITAscmVjdDohMCxzaXplOiEwfSx0KSx0aGlzLl9zZWxlY3RvclF1ZXJ5fWZpZWxkcyh0LG4pe3JldHVybiB0aGlzLl9zZWxlY3RvclF1ZXJ5Ll9wdXNoKHRoaXMuX3NlbGVjdG9yLHRoaXMuX2NvbXBvbmVudCx0aGlzLl9zaW5nbGUsdCxuKSx0aGlzLl9zZWxlY3RvclF1ZXJ5fXNjcm9sbE9mZnNldCh0KXtyZXR1cm4gdGhpcy5fc2VsZWN0b3JRdWVyeS5fcHVzaCh0aGlzLl9zZWxlY3Rvcix0aGlzLl9jb21wb25lbnQsdGhpcy5fc2luZ2xlLHtpZDohMCxkYXRhc2V0OiEwLHNjcm9sbE9mZnNldDohMH0sdCksdGhpcy5fc2VsZWN0b3JRdWVyeX1jb250ZXh0KHQpe3JldHVybiB0aGlzLl9zZWxlY3RvclF1ZXJ5Ll9wdXNoKHRoaXMuX3NlbGVjdG9yLHRoaXMuX2NvbXBvbmVudCx0aGlzLl9zaW5nbGUse2NvbnRleHQ6ITB9LHQpLHRoaXMuX3NlbGVjdG9yUXVlcnl9bm9kZSh0KXtyZXR1cm4gdGhpcy5fc2VsZWN0b3JRdWVyeX19Y2xhc3MgT197Y29uc3RydWN0b3IodCl7dGhpcy5fY29tcG9uZW50PXZvaWQgMCx0aGlzLl9wYWdlPXQsdGhpcy5fcXVldWU9W10sdGhpcy5fcXVldWVDYj1bXX1leGVjKHQpe3JldHVybiBJcih0aGlzLl9wYWdlLHRoaXMuX3F1ZXVlLG49PntsZXQgcj10aGlzLl9xdWV1ZUNiO24uZm9yRWFjaCgocyx1KT0+e0ouaXNBcnJheShzKT9zLmZvckVhY2goX2gpOl9oKHMpO2xldCBnPXJbdV07Si5pc0Z1bmN0aW9uKGcpJiZnLmNhbGwodGhpcyxzKX0pLEouaXNGdW5jdGlvbih0KSYmdC5jYWxsKHRoaXMsbil9KSx0aGlzLl9ub2Rlc1JlZn1pbih0KXtyZXR1cm4gdGhpcy5fY29tcG9uZW50PXJlLnJlc29sdmVDb21wb25lbnRJbnN0YW5jZSh0KSx0aGlzfXNlbGVjdCh0KXtyZXR1cm4gdGhpcy5fbm9kZXNSZWY9bmV3IGtmKHRoaXMsdGhpcy5fY29tcG9uZW50LHQsITApfXNlbGVjdEFsbCh0KXtyZXR1cm4gdGhpcy5fbm9kZXNSZWY9bmV3IGtmKHRoaXMsdGhpcy5fY29tcG9uZW50LHQsITEpfXNlbGVjdFZpZXdwb3J0KCl7cmV0dXJuIHRoaXMuX25vZGVzUmVmPW5ldyBrZih0aGlzLG51bGwsIiIsITApfV9wdXNoKHQsbixyLHMsdSl7dGhpcy5fcXVldWUucHVzaCh7Y29tcG9uZW50Om4sc2VsZWN0b3I6dCxzaW5nbGU6cixmaWVsZHM6c30pLHRoaXMuX3F1ZXVlQ2IucHVzaCh1KX19bGV0IEFfPUJ0KCJjcmVhdGVTZWxlY3RvclF1ZXJ5IixlPT4oZT1yZS5yZXNvbHZlQ29tcG9uZW50SW5zdGFuY2UoZSksZSYmIVFuKGUpJiYoZT1udWxsKSxuZXcgT18oZXx8enIoKSkpKSxUXz0iY3JlYXRlQW5pbWF0aW9uIixJXz17Zm9ybWF0QXJnczp7fX0sUF89e2R1cmF0aW9uOk51bWJlcix0aW1pbmdGdW5jdGlvbjpTdHJpbmcsZGVsYXk6TnVtYmVyLHRyYW5zZm9ybU9yaWdpbjpTdHJpbmd9LE5fPXtkdXJhdGlvbjo0MDAsdGltaW5nRnVuY3Rpb246ImxpbmVhciIsZGVsYXk6MCx0cmFuc2Zvcm1PcmlnaW46IjUwJSA1MCUgMCJ9O2NsYXNzIGJoe2NvbnN0cnVjdG9yKHQpe3RoaXMuYWN0aW9ucz1bXSx0aGlzLmN1cnJlbnRUcmFuc2Zvcm09e30sdGhpcy5jdXJyZW50U3RlcEFuaW1hdGVzPVtdLHRoaXMub3B0aW9uPUouZXh0ZW5kKHt9LE5fLHQpfV9nZXRPcHRpb24odCl7bGV0IG49e3RyYW5zaXRpb246Si5leHRlbmQoe30sdGhpcy5vcHRpb24sdCksdHJhbnNmb3JtT3JpZ2luOiIifTtyZXR1cm4gbi50cmFuc2Zvcm1PcmlnaW49bi50cmFuc2l0aW9uLnRyYW5zZm9ybU9yaWdpbixkZWxldGUgbi50cmFuc2l0aW9uLnRyYW5zZm9ybU9yaWdpbixufV9wdXNoQW5pbWF0ZXModCxuKXt0aGlzLmN1cnJlbnRTdGVwQW5pbWF0ZXMucHVzaCh7dHlwZTp0LGFyZ3M6bn0pfV9jb252ZXJUeXBlKHQpe3JldHVybiB0LnJlcGxhY2UoL1tBLVpdL2csbj0+YC0ke24udG9Mb3dlckNhc2UoKX1gKX1fZ2V0VmFsdWUodCl7cmV0dXJuIHR5cGVvZiB0PT0ibnVtYmVyIj9gJHt0fXB4YDp0fWV4cG9ydCgpe2xldCB0PXRoaXMuYWN0aW9ucztyZXR1cm4gdGhpcy5hY3Rpb25zPVtdLHthY3Rpb25zOnR9fXN0ZXAodCl7cmV0dXJuIHRoaXMuY3VycmVudFN0ZXBBbmltYXRlcy5mb3JFYWNoKG49PntuLnR5cGUhPT0ic3R5bGUiP3RoaXMuY3VycmVudFRyYW5zZm9ybVtuLnR5cGVdPW46dGhpcy5jdXJyZW50VHJhbnNmb3JtW2Ake24udHlwZX0uJHtuLmFyZ3NbMF19YF09bn0pLHRoaXMuYWN0aW9ucy5wdXNoKHthbmltYXRlczpPYmplY3QudmFsdWVzKHRoaXMuY3VycmVudFRyYW5zZm9ybSksb3B0aW9uOnRoaXMuX2dldE9wdGlvbih0KX0pLHRoaXMuY3VycmVudFN0ZXBBbmltYXRlcz1bXSx0aGlzfX1sZXQga189cmUub25jZSgoKT0+e2xldCBlPVsibWF0cml4IiwibWF0cml4M2QiLCJyb3RhdGUiLCJyb3RhdGUzZCIsInJvdGF0ZVgiLCJyb3RhdGVZIiwicm90YXRlWiIsInNjYWxlIiwic2NhbGUzZCIsInNjYWxlWCIsInNjYWxlWSIsInNjYWxlWiIsInNrZXciLCJza2V3WCIsInNrZXdZIiwidHJhbnNsYXRlIiwidHJhbnNsYXRlM2QiLCJ0cmFuc2xhdGVYIiwidHJhbnNsYXRlWSIsInRyYW5zbGF0ZVoiXSx0PVsib3BhY2l0eSIsImJhY2tncm91bmRDb2xvciJdLG49WyJ3aWR0aCIsImhlaWdodCIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSJdO2UuY29uY2F0KHQsbikuZm9yRWFjaChyPT57YmgucHJvdG90eXBlW3JdPWZ1bmN0aW9uKC4uLnMpe3JldHVybiB0LmNvbmNhdChuKS5pbmNsdWRlcyhyKT90aGlzLl9wdXNoQW5pbWF0ZXMoInN0eWxlIixbdGhpcy5fY29udmVyVHlwZShyKSxuLmluY2x1ZGVzKHIpP3RoaXMuX2dldFZhbHVlKHNbMF0pOnNbMF1dKTp0aGlzLl9wdXNoQW5pbWF0ZXMocixzKSx0aGlzfX0pfSksUl89QnQoVF8sZT0+KGtfKCksbmV3IGJoKGUpKSxQXyxJXykseWg9Im9uVGFiQmFyTWlkQnV0dG9uVGFwIix4Xz1Kbih5aCwoKT0+e30pLEJfPSJvbldpbmRvd1Jlc2l6ZSIsTV89Im9mZldpbmRvd1Jlc2l6ZSIsRF89Sm4oQl8sKCk9Pnt9KSxMXz1vcihNXywoKT0+e30pLEVoPSJzZXRMb2NhbGUiLEZfPSJnZXRMb2NhbGUiLHdoPSJvbkxvY2FsZUNoYW5nZSIsb3U9QnQoRl8sKCk9PntsZXQgZT1Ubih7YWxsb3dEZWZhdWx0OiEwfSk7cmV0dXJuIGUmJmUuJHZtP2UuJHZtLiRsb2NhbGU6Y2UoKS5nZXRMb2NhbGUoKX0pLFZfPUpuKHdoLCgpPT57fSksJF89QnQoRWgsZT0+e2xldCB0PVRuKCk7cmV0dXJuIHQmJnQuJHZtLiRsb2NhbGUhPT1lPyh0LiR2bS4kbG9jYWxlPWUscW4oKS5mb3JFYWNoKHM9PnttdC5wdWJsaXNoSGFuZGxlcihFaCxlLHMuJHBhZ2UuaWQpfSksdi5yZXF1aXJlTW9kdWxlKCJwbHVzIikuc2V0TGFuZ3VhZ2UoZSksbXQuaW52b2tlT25DYWxsYmFjayh3aCx7bG9jYWxlOmV9KSwhMCk6ITF9KSxVXz14ZSgic2V0UGFnZU1ldGEiLChlLHtyZXNvbHZlOnR9KT0+e3Qod24oenIoKSxlKSl9KSxTaD0iZ2V0U2VsZWN0ZWRUZXh0UmFuZ2UiLEhfPXhlKFNoLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e210Lmludm9rZVZpZXdNZXRob2QoU2gse30sTmEoKSxyPT57dHlwZW9mIHIuZW5kPT0idW5kZWZpbmVkIiYmdHlwZW9mIHIuc3RhcnQ9PSJ1bmRlZmluZWQiP24oIm5vIGZvY3VzZWQiKTp0KHIpfSl9KSxrdT17W3JlLk9OX1VOSEFORExFX1JFSkVDVElPTl06W10sW3JlLk9OX1BBR0VfTk9UX0ZPVU5EXTpbXSxbcmUuT05fRVJST1JdOltdLFtyZS5PTl9TSE9XXTpbXSxbcmUuT05fSElERV06W119O2Z1bmN0aW9uIGF1KGUsdCl7bGV0IG49VG4oe2FsbG93RGVmYXVsdDohMH0pO2lmKG4mJm4uJHZtKXJldHVybiBMbi5pbmplY3RIb29rKGUsdCxuLiR2bS4kKTtrdVtlXS5wdXNoKHQpfWZ1bmN0aW9uIGpfKGUpe09iamVjdC5rZXlzKGt1KS5mb3JFYWNoKHQ9PntrdVt0XS5mb3JFYWNoKG49PntMbi5pbmplY3RIb29rKHQsbixlKX0pfSl9ZnVuY3Rpb24gc3UoZSx0KXtsZXQgbj1Ubih7YWxsb3dEZWZhdWx0OiEwfSk7aWYobiYmbi4kdm0pcmV0dXJuIE5sKG4uJHZtLGUsdCk7Si5yZW1vdmUoa3VbZV0sdCl9ZnVuY3Rpb24gel8oZSl7YXUocmUuT05fVU5IQU5ETEVfUkVKRUNUSU9OLGUpfWZ1bmN0aW9uIFdfKGUpe3N1KHJlLk9OX1VOSEFORExFX1JFSkVDVElPTixlKX1mdW5jdGlvbiBHXyhlKXthdShyZS5PTl9QQUdFX05PVF9GT1VORCxlKX1mdW5jdGlvbiBZXyhlKXtzdShyZS5PTl9QQUdFX05PVF9GT1VORCxlKX1mdW5jdGlvbiBxXyhlKXthdShyZS5PTl9FUlJPUixlKX1mdW5jdGlvbiBLXyhlKXtzdShyZS5PTl9FUlJPUixlKX1mdW5jdGlvbiBKXyhlKXthdShyZS5PTl9TSE9XLGUpfWZ1bmN0aW9uIFpfKGUpe3N1KHJlLk9OX1NIT1csZSl9ZnVuY3Rpb24gWF8oZSl7YXUocmUuT05fSElERSxlKX1mdW5jdGlvbiBRXyhlKXtzdShyZS5PTl9ISURFLGUpfWxldCBlYj1CdCgiZ2V0RW50ZXJPcHRpb25zU3luYyIsKCk9PlNzKCkpLHRiPUJ0KCJnZXRMYXVuY2hPcHRpb25zU3luYyIsKCk9PldvKCkpLGx1LFJmLHhmLENoO2Z1bmN0aW9uIE9oKGUpe3RyeXtyZXR1cm4gSlNPTi5wYXJzZShlKX1jYXRjaCh0KXt9cmV0dXJuIGV9ZnVuY3Rpb24gQmYoZSl7aWYoZS50eXBlPT09ImVuYWJsZWQiKXhmPSEwLENoPWUub2ZmbGluZTtlbHNlIGlmKGUudHlwZT09PSJjbGllbnRJZCIpbHU9ZS5jaWQsUmY9ZS5lcnJNc2csQWgobHUsZS5lcnJNc2cpO2Vsc2UgaWYoZS50eXBlPT09InB1c2hNc2ciKXtsZXQgdD17dHlwZToicmVjZWl2ZSIsZGF0YTpPaChlLm1lc3NhZ2UpfTtmb3IobGV0IG49MDtuPFNsLmxlbmd0aCYmKFNsW25dKHQpLCF0LnN0b3BwZWQpO24rKyk7fWVsc2UgZS50eXBlPT09ImNsaWNrIiYmU2wuZm9yRWFjaCh0PT57dCh7dHlwZToiY2xpY2siLGRhdGE6T2goZS5tZXNzYWdlKX0pfSl9bGV0IE1mPVtdO2Z1bmN0aW9uIEFoKGUsdCl7TWYuZm9yRWFjaChuPT57bihlLHQpfSksTWYubGVuZ3RoPTB9bGV0IG5iPXhlKCJnZXRQdXNoQ2xpZW50SWQiLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2lmKENoKXtsLnB1c2guZ2V0Q2xpZW50SW5mb0FzeW5jKHI9Pnt0KHtjaWQ6ci5jbGllbnRpZH0pfSxyPT57bihyLmNvZGUrIjogIityLm1lc3NhZ2UpfSk7cmV0dXJufVByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCk9Pnt0eXBlb2YgeGY9PSJ1bmRlZmluZWQiJiYoeGY9ITEsbHU9IiIsUmY9InVuaVB1c2ggaXMgbm90IGVuYWJsZWQiKSxNZi5wdXNoKChyLHMpPT57cj90KHtjaWQ6cn0pOm4ocyl9KSx0eXBlb2YgbHUhPSJ1bmRlZmluZWQiJiZBaChsdSxSZil9KX0pLFNsPVtdLFRoPSExLHJiPWU9PntTbC5pbmRleE9mKGUpPT09LTEmJlNsLnB1c2goZSksVGh8fChUaD0hMCxsLnB1c2guYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHQ9PntCZih7dHlwZToiY2xpY2siLG1lc3NhZ2U6dH0pfSksbC5wdXNoLmFkZEV2ZW50TGlzdGVuZXIoInJlY2VpdmUiLHQ9PntCZih7dHlwZToicHVzaE1zZyIsbWVzc2FnZTp0fSl9KSl9LGliPWU9PntpZighZSlTbC5sZW5ndGg9MDtlbHNle2xldCB0PVNsLmluZGV4T2YoZSk7dD4tMSYmU2wuc3BsaWNlKHQsMSl9fSxvYj0iY2FuSVVzZSIsYWI9W3tuYW1lOiJzY2hlbWEiLHR5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfV0sc2I9ImdldEJhY2tncm91bmRBdWRpb01hbmFnZXIiLGxiPSJtYWtlUGhvbmVDYWxsIixjYj17cGhvbmVOdW1iZXI6U3RyaW5nfSx1Yj0iYWRkUGhvbmVDb250YWN0IixmYj17Zm9ybWF0QXJnczp7Zmlyc3ROYW1lKGUpe2lmKCFlKXJldHVybiJhZGRQaG9uZUNvbnRhY3Q6ZmFpbCBwYXJhbWV0ZXIgZXJyb3I6IHBhcmFtZXRlci5maXJzdE5hbWUgc2hvdWxkIG5vdCBiZSBlbXB0eTsifX19LGRiPXtmaXJzdE5hbWU6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxwaG90b0ZpbGVQYXRoOlN0cmluZyxuaWNrTmFtZTpTdHJpbmcsbGFzdE5hbWU6U3RyaW5nLG1pZGRsZU5hbWU6U3RyaW5nLHJlbWFyazpTdHJpbmcsbW9iaWxlUGhvbmVOdW1iZXI6U3RyaW5nLHdlQ2hhdE51bWJlcjpTdHJpbmcsYWRkcmVzc0NvdW50cnk6U3RyaW5nLGFkZHJlc3NTdGF0ZTpTdHJpbmcsYWRkcmVzc0NpdHk6U3RyaW5nLGFkZHJlc3NTdHJlZXQ6U3RyaW5nLGFkZHJlc3NQb3N0YWxDb2RlOlN0cmluZyxvcmdhbml6YXRpb246U3RyaW5nLHRpdGxlOlN0cmluZyx3b3JrRmF4TnVtYmVyOlN0cmluZyx3b3JrUGhvbmVOdW1iZXI6U3RyaW5nLGhvc3ROdW1iZXI6U3RyaW5nLGVtYWlsOlN0cmluZyx1cmw6U3RyaW5nLHdvcmtBZGRyZXNzQ291bnRyeTpTdHJpbmcsd29ya0FkZHJlc3NTdGF0ZTpTdHJpbmcsd29ya0FkZHJlc3NDaXR5OlN0cmluZyx3b3JrQWRkcmVzc1N0cmVldDpTdHJpbmcsd29ya0FkZHJlc3NQb3N0YWxDb2RlOlN0cmluZyxob21lRmF4TnVtYmVyOlN0cmluZyxob21lUGhvbmVOdW1iZXI6U3RyaW5nLGhvbWVBZGRyZXNzQ291bnRyeTpTdHJpbmcsaG9tZUFkZHJlc3NTdGF0ZTpTdHJpbmcsaG9tZUFkZHJlc3NDaXR5OlN0cmluZyxob21lQWRkcmVzc1N0cmVldDpTdHJpbmcsaG9tZUFkZHJlc3NQb3N0YWxDb2RlOlN0cmluZ30saGI9ImdldENsaXBib2FyZERhdGEiLHBiPSJzZXRDbGlwYm9hcmREYXRhIixnYj17Zm9ybWF0QXJnczp7c2hvd1RvYXN0OiEwfSxiZWZvcmVJbnZva2UoKXt6dCgpfSxiZWZvcmVTdWNjZXNzKGUsdCl7aWYoIXQuc2hvd1RvYXN0KXJldHVybjtsZXR7dDpufT1jZSgpLHI9bigidW5pLnNldENsaXBib2FyZERhdGEuc3VjY2VzcyIpO3ImJmllLnNob3dUb2FzdCh7dGl0bGU6cixpY29uOiJzdWNjZXNzIixtYXNrOiExfSl9fSx2Yj17ZGF0YTp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LHNob3dUb2FzdDp7dHlwZTpCb29sZWFufX0sSWg9Im9uQWNjZWxlcm9tZXRlciIsbWI9Im9mZkFjY2VsZXJvbWV0ZXIiLF9iPSJzdGFydEFjY2VsZXJvbWV0ZXIiLGJiPSJzdG9wQWNjZWxlcm9tZXRlciIsUGg9Im9uQ29tcGFzcyIseWI9Im9mZkNvbXBhc3MiLEViPSJzdGFydENvbXBhc3MiLHdiPSJzdG9wQ29tcGFzcyIsU2I9InZpYnJhdGVTaG9ydCIsQ2I9InZpYnJhdGVMb25nIixOaD0ib25CbHVldG9vdGhEZXZpY2VGb3VuZCIsa2g9Im9uQmx1ZXRvb3RoQWRhcHRlclN0YXRlQ2hhbmdlIixSaD0ib25CTEVDb25uZWN0aW9uU3RhdGVDaGFuZ2UiLHhoPSJvbkJMRUNoYXJhY3RlcmlzdGljVmFsdWVDaGFuZ2UiLE9iPSJzdGFydEJsdWV0b290aERldmljZXNEaXNjb3ZlcnkiLEFiPXtzZXJ2aWNlczpBcnJheSxhbGxvd0R1cGxpY2F0ZXNLZXk6Qm9vbGVhbixpbnRlcnZhbDpOdW1iZXJ9LFRiPSJnZXRDb25uZWN0ZWRCbHVldG9vdGhEZXZpY2VzIixJYj17c2VydmljZXM6e3R5cGU6QXJyYXkscmVxdWlyZWQ6ITB9fSxQYj0iY3JlYXRlQkxFQ29ubmVjdGlvbiIsTmI9e2RldmljZUlkOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LGtiPSJjbG9zZUJMRUNvbm5lY3Rpb24iLFJiPXtkZXZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSx4Yj0iZ2V0QkxFRGV2aWNlU2VydmljZXMiLEJiPXtkZXZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSxNYj0iZ2V0QkxFRGV2aWNlQ2hhcmFjdGVyaXN0aWNzIixEYj17ZGV2aWNlSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxzZXJ2aWNlSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sTGI9Im5vdGlmeUJMRUNoYXJhY3RlcmlzdGljVmFsdWVDaGFuZ2UiLEZiPXtkZXZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LHNlcnZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LGNoYXJhY3RlcmlzdGljSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxzdGF0ZTp7dHlwZTpCb29sZWFuLHJlcXVpcmVkOiEwfX0sVmI9InJlYWRCTEVDaGFyYWN0ZXJpc3RpY1ZhbHVlIiwkYj17ZGV2aWNlSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxzZXJ2aWNlSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxjaGFyYWN0ZXJpc3RpY0lkOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LFViPSJ3cml0ZUJMRUNoYXJhY3RlcmlzdGljVmFsdWUiLEhiPXtkZXZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LHNlcnZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LGNoYXJhY3RlcmlzdGljSWQ6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSx2YWx1ZTp7dHlwZTpBcnJheSxyZXF1aXJlZDohMH19LGpiPSJzZXRCTEVNVFUiLHpiPXtkZXZpY2VJZDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LG10dTp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6ITB9fSxXYj0iZ2V0QkxFRGV2aWNlUlNTSSIsR2I9e2RldmljZUlkOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LEJoPSJvbkJlYWNvblVwZGF0ZSIsTWg9Im9uQmVhY29uU2VydmljZUNoYW5nZSIsWWI9ImdldEJlYWNvbnMiLHFiPSJzdGFydEJlYWNvbkRpc2NvdmVyeSIsS2I9e3V1aWRzOnt0eXBlOkFycmF5LHJlcXVpcmVkOiEwfX0sSmI9InN0b3BCZWFjb25EaXNjb3ZlcnkiLFpiPSJnZXRTY3JlZW5CcmlnaHRuZXNzIixYYj0ic2V0U2NyZWVuQnJpZ2h0bmVzcyIsUWI9InNldEtlZXBTY3JlZW5PbiIsZXk9ImNoZWNrSXNTdXBwb3J0U290ZXJBdXRoZW50aWNhdGlvbiIsdHk9ImNoZWNrSXNTb3RlckVucm9sbGVkSW5EZXZpY2UiLG55PVsiZmluZ2VyUHJpbnQiLCJmYWNpYWwiLCJzcGVlY2giXSxyeT17Zm9ybWF0QXJnczp7Y2hlY2tBdXRoTW9kZShlLHQpe2lmKCFlfHwhbnkuaW5jbHVkZXMoZSkpcmV0dXJuImNoZWNrQXV0aE1vZGUgXHU1ODZCXHU1MTk5XHU5NTE5XHU4QkVGIn19fSxpeT17Y2hlY2tBdXRoTW9kZTpTdHJpbmd9LG95PSJzdGFydFNvdGVyQXV0aGVudGljYXRpb24iLGF5PXtmb3JtYXRBcmdzOntyZXF1ZXN0QXV0aE1vZGVzKGUsdCl7aWYoIWUuaW5jbHVkZXMoImZpbmdlclByaW50IikmJiFlLmluY2x1ZGVzKCJmYWNpYWwiKSlyZXR1cm4icmVxdWVzdEF1dGhNb2RlcyBcdTU4NkJcdTUxOTlcdTk1MTlcdThCRUYifX19LHN5PXtyZXF1ZXN0QXV0aE1vZGVzOnt0eXBlOkFycmF5LHJlcXVpcmVkOiEwfSxjaGFsbGVuZ2U6U3RyaW5nLGF1dGhDb250ZW50OlN0cmluZ30sbHk9InNjYW5Db2RlIixjeT17b25seUZyb21DYW1lcmE6Qm9vbGVhbixzY2FuVHlwZTpBcnJheSxhdXRvRGVjb2RlQ2hhclNldDpCb29sZWFuLHNvdW5kOlN0cmluZyxhdXRvWm9vbTpCb29sZWFufSx1eT1bImRlZmF1bHQiLCJub25lIl0sZnk9e2Zvcm1hdEFyZ3M6e3NvdW5kKGUsdCl7dXkuaW5jbHVkZXMoZSl8fCh0LnNvdW5kPSJub25lIil9LGF1dG9ab29tKGUsdCl7dHlwZW9mIGU9PSJ1bmRlZmluZWQiJiYodC5hdXRvWm9vbT0hMCl9fX0sZHk9ImdldFN5c3RlbVNldHRpbmciLGh5PSJnZXRBcHBBdXRob3JpemVTZXR0aW5nIixweT0ib3BlbkFwcEF1dGhvcml6ZVNldHRpbmciLGd5PSJnZXRTdG9yYWdlIixEaD17a2V5Ont0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LHZ5PSJnZXRTdG9yYWdlU3luYyIsTGg9W3tuYW1lOiJrZXkiLHR5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfV0sbXk9InNldFN0b3JhZ2UiLF95PXtrZXk6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxkYXRhOntyZXF1aXJlZDohMH19LGJ5PSJzZXRTdG9yYWdlU3luYyIseXk9W3tuYW1lOiJrZXkiLHR5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSx7bmFtZToiZGF0YSIscmVxdWlyZWQ6ITB9XSxGaD0icmVtb3ZlU3RvcmFnZSIsRXk9RGgsd3k9TGgsU3k9InNhdmVGaWxlIixDeT17Zm9ybWF0QXJnczp7dGVtcEZpbGVQYXRoKGUsdCl7dC50ZW1wRmlsZVBhdGg9dXQoZSl9fX0sT3k9e3RlbXBGaWxlUGF0aDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSxBeT0iZ2V0U2F2ZWRGaWxlTGlzdCIsVHk9InJlbW92ZVNhdmVkRmlsZSIsSXk9e2Zvcm1hdEFyZ3M6e2ZpbGVQYXRoKGUsdCl7dC5maWxlUGF0aD11dChlKX19fSxQeT17ZmlsZVBhdGg6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sTnk9ImdldEZpbGVJbmZvIixreT17Zm9ybWF0QXJnczp7ZmlsZVBhdGgoZSx0KXt0LmZpbGVQYXRoPXV0KGUpfX19LFJ5PXtmaWxlUGF0aDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSx4eT0iZ2V0U2F2ZWRGaWxlSW5mbyIsQnk9e2Zvcm1hdEFyZ3M6e2ZpbGVQYXRoKGUsdCl7dC5maWxlUGF0aD11dChlKX19fSxNeT17ZmlsZVBhdGg6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sRHk9Im9wZW5Eb2N1bWVudCIsTHk9e2Zvcm1hdEFyZ3M6e2ZpbGVQYXRoKGUsdCl7dC5maWxlUGF0aD11dChlKX19fSxGeT17ZmlsZVBhdGg6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxmaWxlVHlwZTpTdHJpbmd9LFZ5PSJoaWRlS2V5Ym9hcmQiLCR5PSJzaG93S2V5Ym9hcmQiLFV5PSJjaG9vc2VMb2NhdGlvbiIsSHk9e2tleXdvcmQ6U3RyaW5nLGxhdGl0dWRlOk51bWJlcixsb25naXR1ZGU6TnVtYmVyfSxqeT0iZ2V0TG9jYXRpb24iLFZoPVsid2dzODQiLCJnY2owMiJdLHp5PXtmb3JtYXRBcmdzOnt0eXBlKGUsdCl7ZT0oZXx8IiIpLnRvTG93ZXJDYXNlKCksVmguaW5kZXhPZihlKT09PS0xP3QudHlwZT1WaFswXTp0LnR5cGU9ZX0sYWx0aXR1ZGUoZSx0KXt0LmFsdGl0dWRlPWV8fCExfX19LFd5PXt0eXBlOlN0cmluZyxhbHRpdHVkZTpCb29sZWFufSxHeT0ib3BlbkxvY2F0aW9uIiwkaD0oZSx0KT0+e2lmKHQ9PT12b2lkIDApcmV0dXJuYCR7ZX0gc2hvdWxkIG5vdCBiZSBlbXB0eS5gO2lmKHR5cGVvZiB0IT0ibnVtYmVyIil7bGV0IG49dHlwZW9mIHQ7cmV0dXJuIG49blswXS50b1VwcGVyQ2FzZSgpK24uc3Vic3RyaW5nKDEpLGBFeHBlY3RlZCBOdW1iZXIsIGdvdCAke259IHdpdGggdmFsdWUgJHtKU09OLnN0cmluZ2lmeSh0KX0uYH19LFl5PXtmb3JtYXRBcmdzOntsYXRpdHVkZShlLHQpe2xldCBuPSRoKCJsYXRpdHVkZSIsZSk7aWYobilyZXR1cm4gbjt0LmxhdGl0dWRlPWV9LGxvbmdpdHVkZShlLHQpe2xldCBuPSRoKCJsb25naXR1ZGUiLGUpO2lmKG4pcmV0dXJuIG47dC5sb25naXR1ZGU9ZX0sc2NhbGUoZSx0KXtlPU1hdGguZmxvb3IoZSksdC5zY2FsZT1lPj01JiZlPD0xOD9lOjE4fX19LHF5PXtsYXRpdHVkZTpOdW1iZXIsbG9uZ2l0dWRlOk51bWJlcixzY2FsZTpOdW1iZXIsbmFtZTpTdHJpbmcsYWRkcmVzczpTdHJpbmd9LEt5PSJjaG9vc2VJbWFnZSIsSnk9e2Zvcm1hdEFyZ3M6e2NvdW50KGUsdCl7KCFlfHxlPD0wKSYmKHQuY291bnQ9OSl9LHNpemVUeXBlKGUsdCl7dC5zaXplVHlwZT1nbihlLEhyKX0sc291cmNlVHlwZShlLHQpe3Quc291cmNlVHlwZT1nbihlLHJyKX0sZXh0ZW5zaW9uKGUsdCl7aWYoZSBpbnN0YW5jZW9mIEFycmF5JiZlLmxlbmd0aD09PTApcmV0dXJuInBhcmFtIGV4dGVuc2lvbiBzaG91bGQgbm90IGJlIGVtcHR5LiI7ZXx8KHQuZXh0ZW5zaW9uPVsiKiJdKX19fSxaeT17Y291bnQ6TnVtYmVyLHNpemVUeXBlOltBcnJheSxTdHJpbmddLHNvdXJjZVR5cGU6QXJyYXksZXh0ZW5zaW9uOkFycmF5fSxYeT0iY2hvb3NlVmlkZW8iLFF5PXtmb3JtYXRBcmdzOntzb3VyY2VUeXBlKGUsdCl7dC5zb3VyY2VUeXBlPWduKGUscnIpfSxjb21wcmVzc2VkOiEwLG1heER1cmF0aW9uOjYwLGNhbWVyYToiYmFjayIsZXh0ZW5zaW9uKGUsdCl7aWYoZSBpbnN0YW5jZW9mIEFycmF5JiZlLmxlbmd0aD09PTApcmV0dXJuInBhcmFtIGV4dGVuc2lvbiBzaG91bGQgbm90IGJlIGVtcHR5LiI7ZXx8KHQuZXh0ZW5zaW9uPVsiKiJdKX19fSxlMD17c291cmNlVHlwZTpBcnJheSxjb21wcmVzc2VkOkJvb2xlYW4sbWF4RHVyYXRpb246TnVtYmVyLGNhbWVyYTpTdHJpbmcsZXh0ZW5zaW9uOkFycmF5fSx0MD0iZ2V0SW1hZ2VJbmZvIixuMD17Zm9ybWF0QXJnczp7c3JjKGUsdCl7dC5zcmM9dXQoZSl9fX0scjA9e3NyYzp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSxpMD0icHJldmlld0ltYWdlIixvMD17Zm9ybWF0QXJnczp7dXJscyhlLHQpe3QudXJscz1lLm1hcChuPT5KLmlzU3RyaW5nKG4pJiZuP3V0KG4pOiIiKX0sY3VycmVudChlLHQpe3R5cGVvZiBlPT0ibnVtYmVyIj90LmN1cnJlbnQ9ZT4wJiZlPHQudXJscy5sZW5ndGg/ZTowOkouaXNTdHJpbmcoZSkmJmUmJih0LmN1cnJlbnQ9dXQoZSkpfX19LGEwPXt1cmxzOnt0eXBlOkFycmF5LHJlcXVpcmVkOiEwfSxjdXJyZW50Ont0eXBlOltOdW1iZXIsU3RyaW5nXX19LHMwPSJjbG9zZVByZXZpZXdJbWFnZSIsbDA9ImdldFZpZGVvSW5mbyIsYzA9e2Zvcm1hdEFyZ3M6e3NyYyhlLHQpe3Quc3JjPXV0KGUpfX19LHUwPXtzcmM6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sZjA9InNhdmVJbWFnZVRvUGhvdG9zQWxidW0iLGQwPXtmb3JtYXRBcmdzOntmaWxlUGF0aChlLHQpe3QuZmlsZVBhdGg9dXQoZSl9fX0saDA9e2ZpbGVQYXRoOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LHAwPSJzYXZlVmlkZW9Ub1Bob3Rvc0FsYnVtIixnMD17Zm9ybWF0QXJnczp7ZmlsZVBhdGgoZSx0KXt0LmZpbGVQYXRoPXV0KGUpfX19LHYwPXtmaWxlUGF0aDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSxtMD0iZ2V0UmVjb3JkZXJNYW5hZ2VyIixfMD0iY29tcHJlc3NJbWFnZSIsYjA9e2Zvcm1hdEFyZ3M6e3NyYyhlLHQpe3Quc3JjPXV0KGUpfX19LHkwPXtzcmM6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sRTA9ImNvbXByZXNzVmlkZW8iLHcwPXtmb3JtYXRBcmdzOntzcmMoZSx0KXt0LnNyYz11dChlKX19fSxTMD17c3JjOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH0scXVhbGl0eTpTdHJpbmcsYml0cmF0ZTpOdW1iZXIsZnBzOk51bWJlcixyZXNvbHV0aW9uOk51bWJlcn0sQzA9InJlcXVlc3QiLE8wPXtKU09OOiJqc29uIn0sQTA9WyJ0ZXh0IiwiYXJyYXlidWZmZXIiXSxUMD0idGV4dCIsVWg9ZW5jb2RlVVJJQ29tcG9uZW50O2Z1bmN0aW9uIEkwKGUsdCl7bGV0IG49ZS5zcGxpdCgiIyIpLHI9blsxXXx8IiI7bj1uWzBdLnNwbGl0KCI/Iik7bGV0IHM9blsxXXx8IiI7ZT1uWzBdO2xldCB1PXMuc3BsaXQoIiYiKS5maWx0ZXIoRT0+RSksZz17fTt1LmZvckVhY2goRT0+e2xldCAkPUUuc3BsaXQoIj0iKTtnWyRbMF1dPSRbMV19KTtmb3IobGV0IEUgaW4gdClpZihKLmhhc093bih0LEUpKXtsZXQgJD10W0VdO3R5cGVvZiAkPT0idW5kZWZpbmVkInx8JD09PW51bGw/JD0iIjpKLmlzUGxhaW5PYmplY3QoJCkmJigkPUpTT04uc3RyaW5naWZ5KCQpKSxnW1VoKEUpXT1VaCgkKX1yZXR1cm4gcz1PYmplY3Qua2V5cyhnKS5tYXAoRT0+YCR7RX09JHtnW0VdfWApLmpvaW4oIiYiKSxlKyhzPyI/IitzOiIiKSsocj8iIyIrcjoiIil9bGV0IFAwPXttZXRob2Q6U3RyaW5nLGRhdGE6W09iamVjdCxTdHJpbmcsQXJyYXksQXJyYXlCdWZmZXJdLHVybDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9LGhlYWRlcjpPYmplY3QsZGF0YVR5cGU6U3RyaW5nLHJlc3BvbnNlVHlwZTpTdHJpbmcsd2l0aENyZWRlbnRpYWxzOkJvb2xlYW59LE4wPXtmb3JtYXRBcmdzOnttZXRob2QoZSx0KXt0Lm1ldGhvZD1qdCgoZXx8IiIpLnRvVXBwZXJDYXNlKCksbm4pfSxkYXRhKGUsdCl7dC5kYXRhPWV8fCIifSx1cmwoZSx0KXt0Lm1ldGhvZD09PW5uWzBdJiZKLmlzUGxhaW5PYmplY3QodC5kYXRhKSYmT2JqZWN0LmtleXModC5kYXRhKS5sZW5ndGgmJih0LnVybD1JMChlLHQuZGF0YSkpfSxoZWFkZXIoZSx0KXtsZXQgbj10LmhlYWRlcj1lfHx7fTt0Lm1ldGhvZCE9PW5uWzBdJiYoT2JqZWN0LmtleXMobikuZmluZChyPT5yLnRvTG93ZXJDYXNlKCk9PT0iY29udGVudC10eXBlIil8fChuWyJDb250ZW50LVR5cGUiXT0iYXBwbGljYXRpb24vanNvbiIpKX0sZGF0YVR5cGUoZSx0KXt0LmRhdGFUeXBlPShlfHxPMC5KU09OKS50b0xvd2VyQ2FzZSgpfSxyZXNwb25zZVR5cGUoZSx0KXt0LnJlc3BvbnNlVHlwZT0oZXx8IiIpLnRvTG93ZXJDYXNlKCksQTAuaW5kZXhPZih0LnJlc3BvbnNlVHlwZSk9PT0tMSYmKHQucmVzcG9uc2VUeXBlPVQwKX19fSxrMD0iY29uZmlnTVRMUyIsUjA9e2NlcnRpZmljYXRlczp7dHlwZTpBcnJheSxyZXF1aXJlZDohMH19LHgwPXtmb3JtYXRBcmdzOntjZXJ0aWZpY2F0ZXMoZSl7aWYoZS5zb21lKHQ9PkoudG9SYXdUeXBlKHQuaG9zdCkhPT0iU3RyaW5nIikpcmV0dXJuIlx1NTNDMlx1NjU3MFx1OTE0RFx1N0Y2RVx1OTUxOVx1OEJFRlx1RkYwQ1x1OEJGN1x1Nzg2RVx1OEJBNFx1NTQwRVx1OTFDRFx1OEJENSJ9fX0sQjA9ImRvd25sb2FkRmlsZSIsTTA9e2Zvcm1hdEFyZ3M6e2hlYWRlcihlLHQpe3QuaGVhZGVyPWV8fHt9fX19LEQwPXt1cmw6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxoZWFkZXI6T2JqZWN0LHRpbWVvdXQ6TnVtYmVyfSxMMD0idXBsb2FkRmlsZSIsRjA9e2Zvcm1hdEFyZ3M6e2ZpbGVQYXRoKGUsdCl7ZSYmKHQuZmlsZVBhdGg9dXQoZSkpfSxoZWFkZXIoZSx0KXt0LmhlYWRlcj1lfHx7fX0sZm9ybURhdGEoZSx0KXt0LmZvcm1EYXRhPWV8fHt9fX19LFYwPXt1cmw6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxmaWxlczpBcnJheSxmaWxlUGF0aDpTdHJpbmcsbmFtZTpTdHJpbmcsaGVhZGVyOk9iamVjdCxmb3JtRGF0YTpPYmplY3QsdGltZW91dDpOdW1iZXJ9LCQwPSJjb25uZWN0U29ja2V0IixVMD17Zm9ybWF0QXJnczp7aGVhZGVyKGUsdCl7dC5oZWFkZXI9ZXx8e319LG1ldGhvZChlLHQpe3QubWV0aG9kPWp0KChlfHwiIikudG9VcHBlckNhc2UoKSxubil9LHByb3RvY29scyhlLHQpe0ouaXNTdHJpbmcoZSkmJih0LnByb3RvY29scz1bZV0pfX19LEgwPXt1cmw6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxoZWFkZXI6e3R5cGU6T2JqZWN0fSxtZXRob2Q6U3RyaW5nLHByb3RvY29sczpbQXJyYXksU3RyaW5nXX0sajA9InNlbmRTb2NrZXRNZXNzYWdlIix6MD17ZGF0YTpbU3RyaW5nLEFycmF5QnVmZmVyXX0sVzA9ImNsb3NlU29ja2V0IixHMD17Y29kZTpOdW1iZXIscmVhc29uOlN0cmluZ30sWTA9InN0YXJ0TG9jYXRpb25VcGRhdGUiLEhoPSJvbkxvY2F0aW9uQ2hhbmdlIixxMD0ic3RvcExvY2F0aW9uVXBkYXRlIixLMD0ib2ZmTG9jYXRpb25DaGFuZ2UiLEowPSJvZmZMb2NhdGlvbkNoYW5nZUVycm9yIixqaD0ib25Mb2NhdGlvbkNoYW5nZUVycm9yIix6aD1bIndnczg0IiwiZ2NqMDIiXSxaMD17dHlwZTpTdHJpbmd9LFgwPXtmb3JtYXRBcmdzOnt0eXBlKGUsdCl7ZT0oZXx8IiIpLnRvTG93ZXJDYXNlKCksemguaW5kZXhPZihlKT09PS0xP3QudHlwZT16aFsxXTp0LnR5cGU9ZX19fTtmdW5jdGlvbiBRMChlKXtpZighSi5pc1N0cmluZyhlKSlyZXR1cm4gZTtsZXQgdD1lLmluZGV4T2YoIj8iKTtpZih0PT09LTEpcmV0dXJuIGU7bGV0IG49ZS5zbGljZSh0KzEpLnRyaW0oKS5yZXBsYWNlKC9eKFw/fCN8JikvLCIiKTtpZighbilyZXR1cm4gZTtlPWUuc2xpY2UoMCx0KTtsZXQgcj1bXTtyZXR1cm4gbi5zcGxpdCgiJiIpLmZvckVhY2gocz0+e2xldCB1PXMucmVwbGFjZSgvXCsvZywiICIpLnNwbGl0KCI9IiksZz11LnNoaWZ0KCksRT11Lmxlbmd0aD4wP3Uuam9pbigiPSIpOiIiO3IucHVzaChnKyI9IitlbmNvZGVVUklDb21wb25lbnQoRSkpfSksci5sZW5ndGg/ZSsiPyIrci5qb2luKCImIik6ZX1sZXQgZUU9WyJzbGlkZS1pbi1yaWdodCIsInNsaWRlLWluLWxlZnQiLCJzbGlkZS1pbi10b3AiLCJzbGlkZS1pbi1ib3R0b20iLCJmYWRlLWluIiwiem9vbS1vdXQiLCJ6b29tLWZhZGUtb3V0IiwicG9wLWluIiwibm9uZSJdLHRFPVsic2xpZGUtb3V0LXJpZ2h0Iiwic2xpZGUtb3V0LWxlZnQiLCJzbGlkZS1vdXQtdG9wIiwic2xpZGUtb3V0LWJvdHRvbSIsImZhZGUtb3V0Iiwiem9vbS1pbiIsInpvb20tZmFkZS1pbiIsInBvcC1vdXQiLCJub25lIl0sQWM9e3VybDp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITB9fSxEZj0ibmF2aWdhdGVUbyIsTGY9InJlZGlyZWN0VG8iLFdoPSJyZUxhdW5jaCIsUnU9InN3aXRjaFRhYiIsbkU9Im5hdmlnYXRlQmFjayIsRmY9InByZWxvYWRQYWdlIixHaD0idW5QcmVsb2FkUGFnZSIsckU9Si5leHRlbmQoe30sQWMsWWgoZUUpKSxpRT1KLmV4dGVuZCh7ZGVsdGE6e3R5cGU6TnVtYmVyfX0sWWgodEUpKSxvRT1BYyxhRT1BYyxzRT1BYyxsRT1BYyxjRT1BYyx1RT1CdShEZiksZkU9QnUoTGYpLGRFPUJ1KFdoKSxoRT1CdShSdSkscEU9e2Zvcm1hdEFyZ3M6e2RlbHRhKGUsdCl7ZT1wYXJzZUludChlKyIiKXx8MSx0LmRlbHRhPU1hdGgubWluKHFuKCkubGVuZ3RoLTEsZSl9fX07ZnVuY3Rpb24gWWgoZSl7cmV0dXJue2FuaW1hdGlvblR5cGU6e3R5cGU6U3RyaW5nLHZhbGlkYXRvcih0KXtpZih0JiZlLmluZGV4T2YodCk9PT0tMSlyZXR1cm4iYCIrdCsiYCBpcyBub3Qgc3VwcG9ydGVkIGZvciBgYW5pbWF0aW9uVHlwZWAgKHN1cHBvcnRlZCB2YWx1ZXMgYXJlOiBgIitlLmpvaW4oImB8YCIpKyJgKSJ9fSxhbmltYXRpb25EdXJhdGlvbjp7dHlwZTpOdW1iZXJ9fX1sZXQgeHU7ZnVuY3Rpb24gZ0UoKXt4dT0iIn1mdW5jdGlvbiBCdShlKXtyZXR1cm57Zm9ybWF0QXJnczp7dXJsOnZFKGUpfSxiZWZvcmVBbGw6Z0V9fWZ1bmN0aW9uIHZFKGUpe3JldHVybiBmdW5jdGlvbihuLHIpe2lmKCFuKXJldHVybidNaXNzaW5nIHJlcXVpcmVkIGFyZ3M6ICJ1cmwiJztuPW9sKG4pO2xldCBzPW4uc3BsaXQoIj8iKVswXSx1PWFvKHMsITApO2lmKCF1KXJldHVybiJwYWdlIGAiK24rImAgaXMgbm90IGZvdW5kIjtpZihlPT09RGZ8fGU9PT1MZil7aWYodS5tZXRhLmlzVGFiQmFyKXJldHVybmBjYW4gbm90ICR7ZX0gYSB0YWJiYXIgcGFnZWB9ZWxzZSBpZihlPT09UnUmJiF1Lm1ldGEuaXNUYWJCYXIpcmV0dXJuImNhbiBub3Qgc3dpdGNoIHRvIG5vLXRhYkJhciBwYWdlIjtpZigoZT09PVJ1fHxlPT09RmYpJiZ1Lm1ldGEuaXNUYWJCYXImJnIub3BlblR5cGUhPT0iYXBwTGF1bmNoIiYmKG49cyksdS5tZXRhLmlzRW50cnkmJihuPW4ucmVwbGFjZSh1LmFsaWFzLCIvIikpLHIudXJsPVEwKG4pLGUhPT1HaCl7aWYoZT09PUZmKXtpZighdS5tZXRhLmlzTlZ1ZSlyZXR1cm4iY2FuIG5vdCBwcmVsb2FkIHZ1ZSBwYWdlIjtpZih1Lm1ldGEuaXNUYWJCYXIpe2xldCBnPXFuKCksRT11LnBhdGguc2xpY2UoMSk7aWYoZy5maW5kKCQ9PiQucm91dGU9PT1FKSlyZXR1cm4idGFiQmFyIHBhZ2UgYCIrRSsiYCBhbHJlYWR5IGV4aXN0cyJ9cmV0dXJufWlmKHh1PT09biYmci5vcGVuVHlwZSE9PSJhcHBMYXVuY2giKXJldHVybmAke3h1fSBsb2NrZWRgO1IucmVhZHkmJih4dT1uKX19fWxldCBtRT0iaGlkZUxvYWRpbmciLF9FPSJoaWRlVG9hc3QiLHFoPSJsb2FkRm9udEZhY2UiLGJFPXtmYW1pbHk6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxzb3VyY2U6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxkZXNjOk9iamVjdH0seUU9WyIjZmZmZmZmIiwiIzAwMDAwMCJdLEVFPSJzZXROYXZpZ2F0aW9uQmFyQ29sb3IiLHdFPXtmb3JtYXRBcmdzOnthbmltYXRpb24oZSx0KXtlfHwoZT17ZHVyYXRpb246MCx0aW1pbmdGdW5jOiJsaW5lYXIifSksdC5hbmltYXRpb249e2R1cmF0aW9uOmUuZHVyYXRpb258fDAsdGltaW5nRnVuYzplLnRpbWluZ0Z1bmN8fCJsaW5lYXIifX19fSxTRT17ZnJvbnRDb2xvcjp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6ITAsdmFsaWRhdG9yKGUpe2lmKHlFLmluZGV4T2YoZSk9PT0tMSlyZXR1cm5gaW52YWxpZCBmcm9udENvbG9yICIke2V9ImB9fSxiYWNrZ3JvdW5kQ29sb3I6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxhbmltYXRpb246T2JqZWN0fSxDRT0ic2V0TmF2aWdhdGlvbkJhclRpdGxlIixPRT17dGl0bGU6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sQUU9InNob3dOYXZpZ2F0aW9uQmFyTG9hZGluZyIsVEU9ImhpZGVOYXZpZ2F0aW9uQmFyTG9hZGluZyIsS2g9InBhZ2VTY3JvbGxUbyIsSUU9e3Njcm9sbFRvcDpOdW1iZXIsc2VsZWN0b3I6U3RyaW5nLGR1cmF0aW9uOk51bWJlcn0sUEU9e2Zvcm1hdEFyZ3M6e2R1cmF0aW9uOjMwMH19LE5FPSJzaG93QWN0aW9uU2hlZXQiLGtFPXtpdGVtTGlzdDp7dHlwZTpBcnJheSxyZXF1aXJlZDohMH0sdGl0bGU6U3RyaW5nLGl0ZW1Db2xvcjpTdHJpbmcscG9wb3ZlcjpPYmplY3R9LFJFPXtmb3JtYXRBcmdzOntpdGVtQ29sb3I6IiMwMDAifX0seEU9InNob3dMb2FkaW5nIixCRT17dGl0bGU6U3RyaW5nLG1hc2s6Qm9vbGVhbn0sTUU9e2Zvcm1hdEFyZ3M6e3RpdGxlOiIiLG1hc2s6ITF9fSxERT0ic2hvd01vZGFsIixMRT17dGl0bGU6U3RyaW5nLGNvbnRlbnQ6U3RyaW5nLHNob3dDYW5jZWw6Qm9vbGVhbixjYW5jZWxUZXh0OlN0cmluZyxjYW5jZWxDb2xvcjpTdHJpbmcsY29uZmlybVRleHQ6U3RyaW5nLGNvbmZpcm1Db2xvcjpTdHJpbmd9LEZFPXtiZWZvcmVJbnZva2UoKXtZKCl9LGZvcm1hdEFyZ3M6e3RpdGxlOiIiLGNvbnRlbnQ6IiIscGxhY2Vob2xkZXJUZXh0OiIiLHNob3dDYW5jZWw6ITAsZWRpdGFibGU6ITEsY2FuY2VsVGV4dChlLHQpe2lmKCFKLmhhc093bih0LCJjYW5jZWxUZXh0Iikpe2xldHt0Om59PWNlKCk7dC5jYW5jZWxUZXh0PW4oInVuaS5zaG93TW9kYWwuY2FuY2VsIil9fSxjYW5jZWxDb2xvcjoiIzAwMCIsY29uZmlybVRleHQoZSx0KXtpZighSi5oYXNPd24odCwiY29uZmlybVRleHQiKSl7bGV0e3Q6bn09Y2UoKTt0LmNvbmZpcm1UZXh0PW4oInVuaS5zaG93TW9kYWwuY29uZmlybSIpfX0sY29uZmlybUNvbG9yOnJlLlBSSU1BUllfQ09MT1J9fSxWRT0ic2hvd1RvYXN0IiwkRT1bInN1Y2Nlc3MiLCJsb2FkaW5nIiwibm9uZSIsImVycm9yIl0sVUU9e3RpdGxlOlN0cmluZyxpY29uOlN0cmluZyxpbWFnZTpTdHJpbmcsZHVyYXRpb246TnVtYmVyLG1hc2s6Qm9vbGVhbn0sSEU9e2Zvcm1hdEFyZ3M6e3RpdGxlOiIiLGljb24oZSx0KXt0Lmljb249anQoZSwkRSl9LGltYWdlKGUsdCl7ZT90LmltYWdlPXV0KGUpOnQuaW1hZ2U9IiJ9LGR1cmF0aW9uOjE1MDAsbWFzazohMX19LGpFPSJzdGFydFB1bGxEb3duUmVmcmVzaCIsekU9InN0b3BQdWxsRG93blJlZnJlc2giLGN1PXtpbmRleDp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6ITB9fSxDbD17YmVmb3JlSW52b2tlKCl7bGV0IGU9UGEoKTtpZihlJiYhZS5pc1RhYkJhcilyZXR1cm4ibm90IFRhYkJhciBwYWdlIn0sZm9ybWF0QXJnczp7aW5kZXgoZSl7aWYoIVIudGFiQmFyLmxpc3RbZV0pcmV0dXJuInRhYmJhciBpdGVtIG5vdCBmb3VuZCJ9fX0sV0U9InNldFRhYkJhckl0ZW0iLEdFPUouZXh0ZW5kKHt0ZXh0OlN0cmluZyxpY29uUGF0aDpTdHJpbmcsc2VsZWN0ZWRJY29uUGF0aDpTdHJpbmcscGFnZVBhdGg6U3RyaW5nfSxjdSksWUU9e2JlZm9yZUludm9rZTpDbC5iZWZvcmVJbnZva2UsZm9ybWF0QXJnczpKLmV4dGVuZCh7cGFnZVBhdGgoZSx0KXtlJiYodC5wYWdlUGF0aD1yZS5yZW1vdmVMZWFkaW5nU2xhc2goZSkpfX0sQ2wuZm9ybWF0QXJncyl9LHFFPSJzZXRUYWJCYXJTdHlsZSIsS0U9e2NvbG9yOlN0cmluZyxzZWxlY3RlZENvbG9yOlN0cmluZyxiYWNrZ3JvdW5kQ29sb3I6U3RyaW5nLGJhY2tncm91bmRJbWFnZTpTdHJpbmcsYmFja2dyb3VuZFJlcGVhdDpTdHJpbmcsYm9yZGVyU3R5bGU6U3RyaW5nfSxKRT0vXihsaW5lYXJ8cmFkaWFsKS1ncmFkaWVudFwoLis/XCk7PyQvLFpFPXtiZWZvcmVJbnZva2U6Q2wuYmVmb3JlSW52b2tlLGZvcm1hdEFyZ3M6e2JhY2tncm91bmRJbWFnZShlLHQpe2UmJiFKRS50ZXN0KGUpJiYodC5iYWNrZ3JvdW5kSW1hZ2U9dXQoZSkpfSxib3JkZXJTdHlsZShlLHQpe2UmJih0LmJvcmRlclN0eWxlPWU9PT0id2hpdGUiPyJ3aGl0ZSI6ImJsYWNrIil9fX0sWEU9ImhpZGVUYWJCYXIiLEpoPXthbmltYXRpb246Qm9vbGVhbn0sUUU9InNob3dUYWJCYXIiLGV3PUpoLHR3PSJoaWRlVGFiQmFyUmVkRG90Iixudz1jdSxydz1DbCxpdz0ic2hvd1RhYkJhclJlZERvdCIsb3c9Y3UsYXc9Q2wsc3c9InJlbW92ZVRhYkJhckJhZGdlIixsdz1jdSxjdz1DbCx1dz0ic2V0VGFiQmFyQmFkZ2UiLGZ3PUouZXh0ZW5kKHt0ZXh0Ont0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LGN1KSxkdz17YmVmb3JlSW52b2tlOkNsLmJlZm9yZUludm9rZSxmb3JtYXRBcmdzOkouZXh0ZW5kKHt0ZXh0KGUsdCl7cmUuZ2V0TGVuKGUpPj00JiYodC50ZXh0PSIuLi4iKX19LENsLmZvcm1hdEFyZ3MpfSxodz0iZ2V0UHJvdmlkZXIiLHB3PXtzZXJ2aWNlOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH19LGd3PSJsb2dpbiIsdnc9e3Byb3ZpZGVyOlN0cmluZyxzY29wZXM6W1N0cmluZyxBcnJheV0sdGltZW91dDpOdW1iZXIsdW5pdmVyaWZ5U3R5bGU6T2JqZWN0LG9ubHlBdXRob3JpemU6Qm9vbGVhbn0sbXc9ImdldFVzZXJJbmZvIixfdz17cHJvdmlkZXI6U3RyaW5nLHdpdGhDcmVkZW50aWFsczpCb29sZWFuLHRpbWVvdXQ6TnVtYmVyLGxhbmc6U3RyaW5nfSxidz0iZ2dldFVzZXJQcm9maWxlZ2V0VXNlclByb2ZpbGUiLHl3PXtwcm92aWRlcjpTdHJpbmcsd2l0aENyZWRlbnRpYWxzOkJvb2xlYW4sdGltZW91dDpOdW1iZXIsbGFuZzpTdHJpbmd9LEV3PSJwcmVMb2dpbiIsd3c9e1VOSVZFUklGWToidW5pdmVyaWZ5In0sU3c9e2Zvcm1hdEFyZ3M6e3Byb3ZpZGVyKGUsdCl7aWYoT2JqZWN0LnZhbHVlcyh3dykuaW5kZXhPZihTdHJpbmcoZSkpPDApcmV0dXJuInByb3ZpZGVyIGVycm9yIn19fSxDdz17cHJvdmlkZXI6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX0sT3c9ImNsb3NlQXV0aFZpZXciLEF3PSJnZXRDaGVja0JveFN0YXRlIixUdz0iZ2V0VW5pdmVyaWZ5TWFuYWdlciIsSXc9InNoYXJlIixaaD1bIldYU2NlbmVTZXNzaW9uIiwiV1hTY2VuZVRpbWVsaW5lIiwiV1hTY2VuZUZhdm9yaXRlIl0sUHc9e2Zvcm1hdEFyZ3M6e3NjZW5lKGUsdCl7bGV0e3Byb3ZpZGVyOm4sb3BlbkN1c3RvbWVyU2VydmljZUNoYXQ6cn09dDtpZihuPT09IndlaXhpbiImJiFyJiYoIWV8fCFaaC5pbmNsdWRlcyhlKSkpcmV0dXJuYFx1NTIwNlx1NEVBQlx1NTIzMFx1NUZBRVx1NEZFMVx1NjVGNlx1RkYwQ3NjZW5lXHU1RkM1XHU5ODdCXHU0RTNBXHU0RUU1XHU0RTBCXHU1MTc2XHU0RTJEXHU0RTAwXHU0RTJBXHVGRjFBJHtaaC5qb2luKCJcdTMwMDEiKX1gfSxzdW1tYXJ5KGUsdCl7aWYodC50eXBlPT09MSYmIWUpcmV0dXJuIlx1NTIwNlx1NEVBQlx1N0VBRlx1NjU4N1x1NjcyQ1x1NjVGNlx1RkYwQ3N1bW1hcnlcdTVGQzVcdTU4NkIifSxocmVmKGUsdCl7aWYodC50eXBlPT09MCYmIWUpcmV0dXJuIlx1NTIwNlx1NEVBQlx1NTZGRVx1NjU4N1x1NjVGNlx1RkYwQ2hyZWZcdTVGQzVcdTU4NkIifSxpbWFnZVVybChlLHQpe2lmKFswLDIsNV0uaW5jbHVkZXMoTnVtYmVyKHQudHlwZSkpJiYhZSlyZXR1cm4iXHU1MjA2XHU0RUFCXHU1NkZFXHU2NTg3XHUzMDAxXHU3RUFGXHU1NkZFXHU3MjQ3XHUzMDAxXHU1QzBGXHU3QTBCXHU1RThGXHU2NUY2XHVGRjBDaW1hZ2VVcmxcdTVGQzVcdTU4NkJcdUZGMENcdTYzQThcdTgzNTBcdTRGN0ZcdTc1MjhcdTVDMEZcdTRFOEUyMEtiXHU3Njg0XHU1NkZFXHU3MjQ3In0sbWVkaWFVcmwoZSx0KXtpZihbMyw0XS5pbmNsdWRlcyhOdW1iZXIodC50eXBlKSkmJiFlKXJldHVybiJcdTUyMDZcdTRFQUJcdTk3RjNcdTRFNTBcdTMwMDFcdTg5QzZcdTk4OTFcdTY1RjZcdUZGMENtZWRpYVVybFx1NUZDNVx1NTg2QiJ9LG1pbmlQcm9ncmFtKGUsdCl7aWYodC50eXBlPT09NSYmIWUpcmV0dXJuIlx1NTIwNlx1NEVBQlx1NUMwRlx1N0EwQlx1NUU4Rlx1NjVGNlx1RkYwQ21pbmlQcm9ncmFtXHU1RkM1XHU1ODZCIn0sY29ycGlkKGUsdCl7aWYodC5vcGVuQ3VzdG9tZXJTZXJ2aWNlQ2hhdCYmIWUpcmV0dXJuIlx1NEY3Rlx1NzUyOFx1NjI1M1x1NUYwMFx1NUJBMlx1NjcwRFx1NTI5Rlx1ODBGRFx1NjVGNiBjb3JwaWQgXHU1RkM1XHU1ODZCIn0sY3VzdG9tZXJVcmwoZSx0KXtpZih0Lm9wZW5DdXN0b21lclNlcnZpY2VDaGF0JiYhZSlyZXR1cm4iXHU0RjdGXHU3NTI4XHU2MjUzXHU1RjAwXHU1QkEyXHU2NzBEXHU1MjlGXHU4MEZEXHU2NUY2IGN1c3RvbWVyVXJsIFx1NUZDNVx1NTg2QiJ9fX0sTnc9e3Byb3ZpZGVyOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH0sdHlwZTpOdW1iZXIsdGl0bGU6U3RyaW5nLHNjZW5lOlN0cmluZyxzdW1tYXJ5OlN0cmluZyxocmVmOlN0cmluZyxpbWFnZVVybDpTdHJpbmcsbWVkaWFVcmw6U3RyaW5nLG1pbmlQcm9ncmFtOk9iamVjdH0sa3c9InNoYXJlV2l0aFN5c3RlbSIsWGg9WyJ0ZXh0IiwiaW1hZ2UiXSxSdz17Zm9ybWF0QXJnczp7dHlwZShlLHQpe2lmKGUmJiFYaC5pbmNsdWRlcyhlKSlyZXR1cm4iXHU1MjA2XHU0RUFCXHU1M0MyXHU2NTcwIHR5cGUgXHU0RTBEXHU2QjYzXHU3ODZFXHUzMDAyXHU1M0VBXHU2NTJGXHU2MzAxdGV4dFx1MzAwMWltYWdlIjt0LnR5cGU9anQoZSxYaCl9fX0seHc9e3R5cGU6U3RyaW5nLHN1bW1hcnk6U3RyaW5nLGhyZWY6U3RyaW5nLGltYWdlVXJsOlN0cmluZ30sQnc9InJlcXVlc3RQYXltZW50IixNdz17cHJvdmlkZXI6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfSxvcmRlckluZm86e3R5cGU6W1N0cmluZyxPYmplY3RdLHJlcXVpcmVkOiEwfSx0aW1lU3RhbXA6U3RyaW5nLG5vbmNlU3RyOlN0cmluZyxwYWNrYWdlOlN0cmluZyxzaWduVHlwZTpTdHJpbmcscGF5U2lnbjpTdHJpbmd9LER3PSJjcmVhdGVQdXNoTWVzc2FnZSIsTHc9e2Zvcm1hdEFyZ3M6e2NvbnRlbnQoZSl7aWYoIWUpcmV0dXJuImNvbnRlbnQgaXMgcmVxdWlyZWQifX19LEZ3PSJjcmVhdGVSZXdhcmRlZFZpZGVvQWQiLFZ3PXtmb3JtYXRBcmdzOnthZHBpZDoiIixhZFVuaXRJZDoiIn19LCR3PXthZHBpZDpTdHJpbmcsYWRVbml0SWQ6U3RyaW5nfSxVdz0iY3JlYXRlRnVsbFNjcmVlblZpZGVvQWQiLEh3PXtmb3JtYXRBcmdzOnthZHBpZDoiIn19LGp3PXthZHBpZDpTdHJpbmd9LHp3PSJjcmVhdGVJbnRlcnN0aXRpYWxBZCIsV3c9e2Zvcm1hdEFyZ3M6e2FkcGlkOiIiLGFkVW5pdElkOiIifX0sR3c9e2FkcGlkOlN0cmluZyxhZFVuaXRJZDpTdHJpbmd9LFl3PSJjcmVhdGVJbnRlcmFjdGl2ZUFkIixxdz17Zm9ybWF0QXJnczp7YWRwaWQoZSx0KXtpZighZSlyZXR1cm4iYWRwaWQgc2hvdWxkIG5vdCBiZSBlbXB0eS4iO2UmJih0LmFkcGlkPWUpfSxwcm92aWRlcihlLHQpe2lmKCFlKXJldHVybiJwcm92aWRlciBzaG91bGQgbm90IGJlIGVtcHR5LiI7ZSYmKHQucHJvdmlkZXI9ZSl9fX0sS3c9e2FkcGlkOnt0eXBlOlN0cmluZyxyZXF1aXJlZDohMH0scHJvdmlkZXI6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOiEwfX07ZnVuY3Rpb24gV2woZSx0KXtyZXR1cm4gZnVuY3Rpb24ocil7ZGVsZXRlIHIuY29kZSxkZWxldGUgci5tZXNzYWdlLEouaXNGdW5jdGlvbih0KSYmKHI9dChyKSksZShyKX19ZnVuY3Rpb24gT3IoZSx0KXtyZXR1cm4gZnVuY3Rpb24ocil7cj1yfHx7fSx0PXIubWVzc2FnZXx8dHx8IiIsZGVsZXRlIHIubWVzc2FnZSxlKHQsSi5leHRlbmQoe2NvZGU6MH0scikpfX1mdW5jdGlvbiBUYyhlLHQpe3JldHVybiBmdW5jdGlvbigpe2UoKShmdW5jdGlvbihyKXtyJiYoZGVsZXRlIHIuY29kZSxkZWxldGUgci5tZXNzYWdlKSxtdC5pbnZva2VPbkNhbGxiYWNrKHQscil9KX19ZnVuY3Rpb24gUGkoZSx0LG4pe3JldHVybiBmdW5jdGlvbihyLHtyZXNvbHZlOnMscmVqZWN0OnV9KXtlKCkoSi5leHRlbmQoe30sSi5pc0Z1bmN0aW9uKHQpP3Qocik6cix7c3VjY2VzczpXbChzLG4pLGZhaWw6T3IodSl9KSl9fWZ1bmN0aW9uIHV1KGU9IiIpe2lmKCEoUi50YWJCYXImJkouaXNBcnJheShSLnRhYkJhci5saXN0KSkpcmV0dXJuITE7dHJ5e2lmKCFlKXtsZXQgbj1xbigpO2lmKCFuLmxlbmd0aClyZXR1cm4hMTtsZXQgcj1uW24ubGVuZ3RoLTFdO3JldHVybiByP3IuJHBhZ2UubWV0YS5pc1RhYkJhcjohMX0vXlwvLy50ZXN0KGUpfHwoZT1yZS5hZGRMZWFkaW5nU2xhc2goZSkpO2xldCB0PWFvKGUpO3JldHVybiB0JiZ0Lm1ldGEuaXNUYWJCYXJ9Y2F0Y2godCl7fXJldHVybiExfWxldCBjcz0iX19UWVBFIixKdz0idW5pLXN0b3JhZ2Uta2V5cyI7ZnVuY3Rpb24gVmYoZSl7bGV0IHQ9WyJvYmplY3QiLCJzdHJpbmciLCJudW1iZXIiLCJib29sZWFuIiwidW5kZWZpbmVkIl07dHJ5e2xldCBuPUouaXNTdHJpbmcoZSk/SlNPTi5wYXJzZShlKTplLHI9bi50eXBlO2lmKHQuaW5kZXhPZihyKT49MCl7bGV0IHM9T2JqZWN0LmtleXMobik7aWYocy5sZW5ndGg9PT0yJiYiZGF0YSJpbiBuKXtpZih0eXBlb2Ygbi5kYXRhPT09cilyZXR1cm4gbi5kYXRhO2lmKHI9PT0ib2JqZWN0IiYmL15cZHs0fS1cZHsyfS1cZHsyfVRcZHsyfVw6XGR7Mn1cOlxkezJ9XC5cZHszfVokLy50ZXN0KG4uZGF0YSkpcmV0dXJuIG5ldyBEYXRlKG4uZGF0YSl9ZWxzZSBpZihzLmxlbmd0aD09PTEpcmV0dXJuIiJ9fWNhdGNoKG4pe319bGV0IFp3PUJ0KGJ5LChlLHQpPT57bGV0IG49dHlwZW9mIHQscj1uPT09InN0cmluZyI/dDpKU09OLnN0cmluZ2lmeSh7dHlwZTpuLGRhdGE6dH0pO3RyeXtuPT09InN0cmluZyImJlZmKHIpIT09dm9pZCAwP2wuc3RvcmFnZS5zZXRJdGVtKGUrY3Msbik6bC5zdG9yYWdlLnJlbW92ZUl0ZW0oZStjcyksbC5zdG9yYWdlLnNldEl0ZW0oZSxyKX1jYXRjaChzKXt9fSx5eSksWHc9eGUobXksKHtrZXk6ZSxkYXRhOnR9LHtyZXNvbHZlOm4scmVqZWN0OnJ9KT0+e2xldCBzPXR5cGVvZiB0LHU9cz09PSJzdHJpbmciP3Q6SlNPTi5zdHJpbmdpZnkoe3R5cGU6cyxkYXRhOnR9KTt0cnl7bGV0IGc9bC5zdG9yYWdlO3M9PT0ic3RyaW5nIiYmVmYodSkhPT12b2lkIDA/Zy5zZXRJdGVtQXN5bmMoZStjcyxzKTpnLnJlbW92ZUl0ZW1Bc3luYyhlK2NzKSxnLnNldEl0ZW1Bc3luYyhlLHUsbixPcihyKSl9Y2F0Y2goZyl7cihnLm1lc3NhZ2UpfX0sX3kpO2Z1bmN0aW9uICRmKGUsdCl7bGV0IG49dDtpZihlIT09InN0cmluZyJ8fGU9PT0ic3RyaW5nIiYmdD09PSd7InR5cGUiOiJ1bmRlZmluZWQifScpdHJ5e2xldCByPUpTT04ucGFyc2UodCkscz1WZihyKTtpZihzIT09dm9pZCAwKW49cztlbHNlIGlmKGUmJihuPXIsSi5pc1N0cmluZyhyKSkpe3I9SlNPTi5wYXJzZShyKTtsZXQgdT10eXBlb2Ygcjt1PT09Im51bWJlciImJmU9PT0iZGF0ZSI/bj1uZXcgRGF0ZShyKTp1PT09KFsibnVsbCIsImFycmF5Il0uaW5kZXhPZihlKTwwP2U6Im9iamVjdCIpJiYobj1yKX19Y2F0Y2gocil7fXJldHVybiBufWxldCBRdz1CdCh2eSxlPT57bGV0IHQ9bC5zdG9yYWdlLmdldEl0ZW0oZSkscj0obC5zdG9yYWdlLmdldEl0ZW0oZStjcyl8fCIiKS50b0xvd2VyQ2FzZSgpO3JldHVybiBKLmlzU3RyaW5nKHQpPyRmKHIsdCk6IiJ9LExoKSxlUz14ZShneSwoe2tleTplfSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1sLnN0b3JhZ2U7ci5nZXRJdGVtQXN5bmMoZSxmdW5jdGlvbihzKXtyLmdldEl0ZW1Bc3luYyhlK2NzLGZ1bmN0aW9uKHUpe2xldCBFPSh1LmRhdGF8fCIiKS50b0xvd2VyQ2FzZSgpO3Qoe2RhdGE6JGYoRSxzLmRhdGEpfSl9LGZ1bmN0aW9uKCl7dCh7ZGF0YTokZigiIixzLmRhdGEpfSl9KX0sT3IobikpfSxEaCksdFM9QnQoRmgsZT0+e2wuc3RvcmFnZS5yZW1vdmVJdGVtKGUrY3MpLGwuc3RvcmFnZS5yZW1vdmVJdGVtKGUpfSx3eSksblM9eGUoRmgsKHtrZXk6ZX0se3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bC5zdG9yYWdlLnJlbW92ZUl0ZW1Bc3luYyhlK2NzKSxsLnN0b3JhZ2UucmVtb3ZlSXRlbUFzeW5jKGUsdCxPcihuKSl9LEV5KSxyUz1CdCgiY2xlYXJTdG9yYWdlU3luYyIsKCk9PntsLnN0b3JhZ2UuY2xlYXIoKX0pLGlTPXhlKCJjbGVhclN0b3JhZ2UiLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2wuc3RvcmFnZS5jbGVhckFzeW5jKHQsT3IobikpfSksUWg9QnQoImdldFN0b3JhZ2VJbmZvU3luYyIsKCk9PntsZXQgZT1sLnN0b3JhZ2UuZ2V0TGVuZ3RoKCl8fDAsdD1bXSxuPTA7Zm9yKGxldCByPTA7cjxlO3IrKyl7bGV0IHM9bC5zdG9yYWdlLmtleShyKTtpZihzIT09SncmJihzLmluZGV4T2YoY3MpPDB8fHMuaW5kZXhPZihjcykrY3MubGVuZ3RoIT09cy5sZW5ndGgpKXtsZXQgdT1sLnN0b3JhZ2UuZ2V0SXRlbShzKTtuKz1zLmxlbmd0aCt1Lmxlbmd0aCx0LnB1c2gocyl9fXJldHVybntrZXlzOnQsY3VycmVudFNpemU6TWF0aC5jZWlsKG4qMi8xMDI0KSxsaW1pdFNpemU6TnVtYmVyLk1BWF9WQUxVRX19KSxvUz14ZSgiZ2V0U3RvcmFnZUluZm8iLChlLHtyZXNvbHZlOnR9KT0+e3QoUWgoKSl9KSxhUz14ZShOeSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsLmlvLmdldEZpbGVJbmZvKEouZXh0ZW5kKGUse3N1Y2Nlc3M6V2wodCksZmFpbDpPcihuKX0pKX0sUnksa3kpLHNTPTAsZXA9InVuaWFwcF9zYXZlIixsUz1gX2RvYy8ke2VwfWA7ZnVuY3Rpb24gY1MoZSx0KXt0PXR8fGZ1bmN0aW9uKCl7fSxsLmlvLnJlcXVlc3RGaWxlU3lzdGVtKGwuaW8uUFJJVkFURV9ET0Msbj0+e24ucm9vdC5nZXREaXJlY3RvcnkoZXAse2NyZWF0ZTohMH0sZSx0KX0sdCl9bGV0IHVTPXhlKFN5LCh7dGVtcEZpbGVQYXRoOmV9LHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2xldCByPU9yKG4pLHM9YCR7RGF0ZS5ub3coKX0ke3NTKyt9JHtqaShlKX1gO2wuaW8ucmVzb2x2ZUxvY2FsRmlsZVN5c3RlbVVSTChlLHU9PntjUyhnPT57dS5jb3B5VG8oZyxzLCgpPT57bGV0IEU9bFMrIi8iK3M7dCh7c2F2ZWRGaWxlUGF0aDpFfSl9LHIpfSxyKX0scil9LE95LEN5KSxmUz0idW5pYXBwX3NhdmUiO2Z1bmN0aW9uIGRTKGUsdCl7dD10fHxmdW5jdGlvbigpe30sbC5pby5yZXF1ZXN0RmlsZVN5c3RlbShsLmlvLlBSSVZBVEVfRE9DLG49PntuLnJvb3QuZ2V0RGlyZWN0b3J5KGZTLHtjcmVhdGU6ITB9LGUsdCl9LHQpfWxldCBoUz14ZShBeSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1PcihuKTtkUyhzPT57dmFyIHU9cy5jcmVhdGVSZWFkZXIoKSxnPVtdO3UucmVhZEVudHJpZXMoRT0+e0UmJkUubGVuZ3RoP0UuZm9yRWFjaCgkPT57JC5nZXRNZXRhZGF0YShQPT57Zy5wdXNoKHtmaWxlUGF0aDpsLmlvLmNvbnZlcnRBYnNvbHV0ZUZpbGVTeXN0ZW0oJC5mdWxsUGF0aCksY3JlYXRlVGltZTpQLm1vZGlmaWNhdGlvblRpbWUuZ2V0VGltZSgpLHNpemU6UC5zaXplfSksZy5sZW5ndGg9PT1FLmxlbmd0aCYmdCh7ZmlsZUxpc3Q6Z30pfSxyLCExKX0pOnQoe2ZpbGVMaXN0Omd9KX0scil9LHIpfSkscFM9eGUoeHksKHtmaWxlUGF0aDplfSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1PcihuKTtsLmlvLnJlc29sdmVMb2NhbEZpbGVTeXN0ZW1VUkwoZSxzPT57cy5nZXRNZXRhZGF0YSh1PT57dCh7Y3JlYXRlVGltZTp1Lm1vZGlmaWNhdGlvblRpbWUuZ2V0VGltZSgpLHNpemU6dS5zaXplfSl9LHIsITEpfSxyKX0sTXksQnkpLGdTPXhlKFR5LCh7ZmlsZVBhdGg6ZX0se3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9T3Iobik7bC5pby5yZXNvbHZlTG9jYWxGaWxlU3lzdGVtVVJMKGUscz0+e3MucmVtb3ZlKCgpPT57dCgpfSxyKX0scil9LFB5LEl5KSx2Uz14ZShEeSwoe2ZpbGVQYXRoOmUsZmlsZVR5cGU6dH0se3Jlc29sdmU6bixyZWplY3Q6cn0pPT57bGV0IHM9T3Iocik7bC5ydW50aW1lLm9wZW5Eb2N1bWVudCh1dChlKSx2b2lkIDAsbixzKX0sRnksTHkpLG1TPUJ0KG9iLGU9PiEhSi5oYXNPd24oaWUsZSksYWIpLGZ1LHRwPWwubmF2aWdhdG9yLnNldFN0YXR1c0JhclN0eWxlO2Z1bmN0aW9uIF9TKGUpe3RwPWV9ZnVuY3Rpb24gbnAoZSl7ZnU9ZSx0cChlKX1sLm5hdmlnYXRvci5zZXRTdGF0dXNCYXJTdHlsZT1ucDtmdW5jdGlvbiBEcyhlKXtpZighZSl7bGV0IHQ9RnIoKTtpZighdHx8KGU9dC4kcGFnZS5zdGF0dXNCYXJTdHlsZSwhZXx8ZT09PWZ1KSlyZXR1cm59ZSE9PWZ1JiYoZnU9ZSxsLm5hdmlnYXRvci5zZXRTdGF0dXNCYXJTdHlsZShlKSl9ZnVuY3Rpb24gcnAoZSl7bXQub24ocmUuT05fVEhFTUVfQ0hBTkdFLGUpfWZ1bmN0aW9uIGJTKGUpe210Lm9mZihyZS5PTl9USEVNRV9DSEFOR0UsZSl9ZnVuY3Rpb24geVMoKXtyZXR1cm4gaXAoKT09PSJkYXJrIj8ibGlnaHQiOiJkYXJrIn1mdW5jdGlvbiBpcCgpe3JldHVybiBsLm5hdmlnYXRvci5nZXRVSVN0eWxlKCl9ZnVuY3Rpb24gRVMoKXtpZihSLmRhcmttb2RlKXtsZXQgZT15UygpO0RzKGUpLEhvKCkuZm9yRWFjaChuPT57bi4kcGFnZS5zdGF0dXNCYXJTdHlsZT1lfSl9fWZ1bmN0aW9uIFVmKGUpe2lmKFIuZGFya21vZGUpe2xldCB0PXt9LG49bC5uYXZpZ2F0b3IuZ2V0VUlTdHlsZSgpLHI9aHUoKTtyZXR1cm4gciYmci5ob3N0VGhlbWUmJihuPXIuaG9zdFRoZW1lKSx0PXJlLm5vcm1hbGl6ZVN0eWxlcyhlLFIudGhlbWVDb25maWcsbiksdH1yZXR1cm4gZX1mdW5jdGlvbiB3UyhlLHQpe2lmKFIuZGFya21vZGUpe2xldCBuPSgpPT57bGV0e2xpc3Q6cj1bXSxjb2xvcjpzLHNlbGVjdGVkQ29sb3I6dSxiYWNrZ3JvdW5kQ29sb3I6Zyxib3JkZXJTdHlsZTpFfT1VZih0KTtlJiZlLnNldFRhYkJhclN0eWxlKHtjb2xvcjpzLHNlbGVjdGVkQ29sb3I6dSxiYWNrZ3JvdW5kQ29sb3I6Zyxib3JkZXJTdHlsZTpFfSksZSYmZS5zZXRUYWJCYXJJdGVtcyh7bGlzdDpyLm1hcCgkPT4oe2ljb25QYXRoOiQuaWNvblBhdGgsc2VsZWN0ZWRJY29uUGF0aDokLnNlbGVjdGVkSWNvblBhdGgsdmlzaWJsZTokLnZpc2libGV9KSl9KX07bigpLHJwKG4pfX1mdW5jdGlvbiBvcChlLHQpe2lmKFIuZGFya21vZGUpe2xldCBuPSgpPT57bGV0IHI9dCgpO3IuYW5pbWF0aW9uQWxwaGFCR0NvbG9yLHIuYmFja2dyb3VuZCxyLmJhY2tncm91bmRDb2xvckJvdHRvbSxyLmJhY2tncm91bmRDb2xvclRvcDt2YXIgcz1yLnRpdGxlTlZpZXc7dHlwZW9mIHMhPSJ1bmRlZmluZWQiJiZ0eXBlb2Ygcz09Im9iamVjdCImJihzLmJhY2tncm91bmRDb2xvcixzLnRpdGxlQ29sb3IpLGUmJmUuc2V0U3R5bGUocil9O3JwKG4pLGUuYWRkRXZlbnRMaXN0ZW5lcigiY2xvc2UiLCgpPT5iUyhuKSl9fWxldCBkdSxIZj0hMCx1cjtmdW5jdGlvbiBTUyhlLHQsbil7IXVyfHwoZT09PSJub25lIj8odXIuaGlkZVRhYkJhclJlZERvdCh7aW5kZXg6dH0pLHVyLnJlbW92ZVRhYkJhckJhZGdlKHtpbmRleDp0fSkpOmU9PT0idGV4dCI/dXIuc2V0VGFiQmFyQmFkZ2Uoe2luZGV4OnQsdGV4dDpufSk6ZT09PSJyZWREb3QiJiZ1ci5zaG93VGFiQmFyUmVkRG90KHtpbmRleDp0fSkpfWZ1bmN0aW9uIENTKGUpe3VyJiZ1ci5zZXRUYWJCYXJJdGVtcyhlKX1mdW5jdGlvbiBPUyhlLHQsbixyLHMsdSl7bGV0IGc9e2luZGV4OmV9O2lmKHQhPT12b2lkIDAmJihnLnRleHQ9dCksbiYmKGcuaWNvblBhdGg9dXQobikpLHImJihnLnNlbGVjdGVkSWNvblBhdGg9dXQocikpLHUhPT12b2lkIDAmJihnLmljb25mb250PXUpLHMhPT12b2lkIDApe2cudmlzaWJsZT1kdS5saXN0W2VdLnZpc2libGU9cyxkZWxldGUgZy5pbmRleDtsZXQgRT1kdS5saXN0Lm1hcCgkPT4oe3Zpc2libGU6JC52aXNpYmxlfSkpO0VbZV09ZyxDUyh7bGlzdDpFfSl9ZWxzZSB1ciYmdXIuc2V0VGFiQmFySXRlbShnKX1mdW5jdGlvbiBBUyhlKXt1ciYmdXIuc2V0VGFiQmFyU3R5bGUoZSl9ZnVuY3Rpb24gVFMoZSl7SGY9ITEsdXImJnVyLmhpZGVUYWJCYXIoe2FuaW1hdGlvbjplfSl9ZnVuY3Rpb24gSVMoZSl7SGY9ITAsdXImJnVyLnNob3dUYWJCYXIoe2FuaW1hdGlvbjplfSl9bGV0IE11PVtdO3ZhciBOaT17aWQ6IjAiLGluaXQoZSx0KXtlJiZlLmxpc3QubGVuZ3RoJiYoZHU9ZSk7dHJ5e3VyPXYucmVxdWlyZU1vZHVsZSgidW5pLXRhYnZpZXciKX1jYXRjaChuKXtjb25zb2xlLmxvZyhgdW5pLnJlcXVpcmVOYXRpdmVQbHVnaW4oInVuaS10YWJ2aWV3IikgZXJyb3IgJHtufWApfXVyLm9uTWFza0NsaWNrKCgpPT57TXUuZm9yRWFjaChuPT57bigpfSl9KSx1ciYmdXIub25DbGljaygoe2luZGV4Om59KT0+e3QoZHUubGlzdFtuXSxuKX0pLHVyJiZ1ci5vbk1pZEJ1dHRvbkNsaWNrKCgpPT5tdC5pbnZva2VPbkNhbGxiYWNrKHloKSksd1ModXIsZSl9LGluZGV4T2YoZSl7bGV0IHQ9dGhpcy5jb25maWcsbj10JiZ0Lmxpc3QmJnQubGlzdC5sZW5ndGg7aWYobil7Zm9yKGxldCByPTA7cjxuO3IrKylpZih0Lmxpc3Rbcl0ucGFnZVBhdGg9PT1lfHx0Lmxpc3Rbcl0ucGFnZVBhdGg9PT1gJHtlfS5odG1sYClyZXR1cm4gcn1yZXR1cm4tMX0sc3dpdGNoVGFiKGUpe2xldCB0PXRoaXMuaW5kZXhPZihlKTtyZXR1cm4gdD49MD8odXImJnVyLnN3aXRjaFNlbGVjdCh7aW5kZXg6dH0pLCEwKTohMX0sc2V0VGFiQmFyQmFkZ2U6U1Msc2V0VGFiQmFySXRlbTpPUyxzZXRUYWJCYXJTdHlsZTpBUyxoaWRlVGFiQmFyOlRTLHNob3dUYWJCYXI6SVMsYXBwZW5kKGUpe3VyJiZ1ci5hcHBlbmQoe2lkOmUuaWR9LCh7Y29kZTp0fSk9Pnt0IT09MCYmaygoKT0+e3RoaXMuYXBwZW5kKGUpfSwyMCl9KX0sZ2V0IGNvbmZpZygpe3JldHVybiBkdXx8Ui50YWJCYXJ9LGdldCB2aXNpYmxlKCl7cmV0dXJuIEhmfSxnZXQgaGVpZ2h0KCl7bGV0IGU9dGhpcy5jb25maWc7cmV0dXJuKGUmJmUuaGVpZ2h0P3BhcnNlRmxvYXQoZS5oZWlnaHQpOnJlLlRBQkJBUl9IRUlHSFQpK2wubmF2aWdhdG9yLmdldFNhZmVBcmVhSW5zZXRzKCkuZGV2aWNlQm90dG9tfSxnZXQgY292ZXIoKXtsZXQgZT10aGlzLmNvbmZpZztyZXR1cm4gZSYmWyJleHRyYWxpZ2h0IiwibGlnaHQiLCJkYXJrIl0uaW5kZXhPZihlLmJsdXJFZmZlY3QpPj0wfSxzZXRTdHlsZSh7bWFzazplfSl7dXIuc2V0TWFzayh7Y29sb3I6ZX0pfSxhZGRFdmVudExpc3RlbmVyKGUsdCl7TXUucHVzaCh0KX0scmVtb3ZlRXZlbnRMaXN0ZW5lcihlLHQpe2xldCBuPU11LmluZGV4T2YodCk7TXUuc3BsaWNlKG4sMSl9fTtmdW5jdGlvbiBEdSgpe2xldCBlPUZyKCk7cmV0dXJuIGU/ZS4kZ2V0QXBwV2VidmlldygpOm51bGx9ZnVuY3Rpb24gYXAoZSl7cmV0dXJuIGU/ZS4kZ2V0QXBwV2VidmlldygpOkR1KCl9bGV0IHNwPW51bGw7ZnVuY3Rpb24gbHAoKXtyZXR1cm4gc3B9ZnVuY3Rpb24gamYoZSl7c3A9ZX1mdW5jdGlvbiB6Zigpe3JldHVybiBsLm5hdmlnYXRvci5pc0ltbWVyc2VkU3RhdHVzYmFyKCk/TWF0aC5yb3VuZChsLm9zLm5hbWU9PT0iaU9TIj9sLm5hdmlnYXRvci5nZXRTYWZlQXJlYUluc2V0cygpLnRvcDpsLm5hdmlnYXRvci5nZXRTdGF0dXNiYXJIZWlnaHQoKSk6MH1mdW5jdGlvbiBjcCgpe2xldCBlPWwubmF2aWdhdG9yLmdldFN0YXR1c0JhclN0eWxlKCk7cmV0dXJuIGU9PT0iVUlTdGF0dXNCYXJTdHlsZUJsYWNrVHJhbnNsdWNlbnQifHxlPT09IlVJU3RhdHVzQmFyU3R5bGVCbGFja09wYXF1ZSJ8fGU9PT0ibnVsbCI/ZT0ibGlnaHQiOmU9PT0iVUlTdGF0dXNCYXJTdHlsZURlZmF1bHQiJiYoZT0iZGFyayIpLGV9ZnVuY3Rpb24gUFMoKXtsZXR7cmVzb2x1dGlvbldpZHRoOmUscmVzb2x1dGlvbkhlaWdodDp0fT1sLnNjcmVlbi5nZXRDdXJyZW50U2l6ZSgpfHx7cmVzb2x1dGlvbldpZHRoOjAscmVzb2x1dGlvbkhlaWdodDowfTtyZXR1cm57c2NyZWVuV2lkdGg6TWF0aC5yb3VuZChlKSxzY3JlZW5IZWlnaHQ6TWF0aC5yb3VuZCh0KX19bGV0IHVwPUJ0KCJnZXRXaW5kb3dJbmZvIiwoKT0+e2xldCBlPWwub3MubmFtZS50b0xvd2VyQ2FzZSgpPT09ImlvcyIse3NjcmVlbldpZHRoOnQsc2NyZWVuSGVpZ2h0Om59PVBTKCkscj16ZigpLHMsdT17aGVpZ2h0OjAsY292ZXI6ITF9LGc9RHUoKTtpZihnKXtsZXQgc3Q9Zy5nZXRTdHlsZSgpLHB0PXN0JiZzdC50aXRsZU5WaWV3O3B0JiZwdC50eXBlJiZwdC50eXBlIT09Im5vbmUiJiYodS5oZWlnaHQ9cHQudHlwZT09PSJ0cmFuc3BhcmVudCI/MDpyK3JlLk5BVkJBUl9IRUlHSFQsdS5jb3Zlcj1wdC50eXBlPT09InRyYW5zcGFyZW50Inx8cHQudHlwZT09PSJmbG9hdCIpLHM9Zy5nZXRTYWZlQXJlYUluc2V0cygpfWVsc2Ugcz1sLm5hdmlnYXRvci5nZXRTYWZlQXJlYUluc2V0cygpO2xldCBFPXtoZWlnaHQ6MCxjb3ZlcjohMX07dXUoKSYmKEUuaGVpZ2h0PU5pLnZpc2libGU/TmkuaGVpZ2h0OjAsRS5jb3Zlcj1OaS5jb3Zlcik7bGV0ICQ9dS5jb3Zlcj91LmhlaWdodDowLFA9RS5jb3Zlcj9FLmhlaWdodDowLEw9bi11LmhlaWdodC1FLmhlaWdodCxBZT1uLSh1LmNvdmVyPzA6dS5oZWlnaHQpLShFLmNvdmVyPzA6RS5oZWlnaHQpLE5lPXQ7KCFFLmhlaWdodHx8RS5jb3ZlcikmJiFzLmJvdHRvbSYmcy5kZXZpY2VCb3R0b20mJihMLT1zLmRldmljZUJvdHRvbSxBZS09cy5kZXZpY2VCb3R0b20pLHM9ZT9zOntsZWZ0OjAscmlnaHQ6MCx0b3A6dS5oZWlnaHQmJiF1LmNvdmVyPzA6cixib3R0b206MH07bGV0IFJlPXtsZWZ0OnMubGVmdCxyaWdodDpOZS1zLnJpZ2h0LHRvcDpzLnRvcCxib3R0b206QWUtcy5ib3R0b20sd2lkdGg6TmUtcy5sZWZ0LXMucmlnaHQsaGVpZ2h0OkFlLXMudG9wLXMuYm90dG9tfTtyZXR1cm57cGl4ZWxSYXRpbzpsLnNjcmVlbi5zY2FsZSxzY3JlZW5XaWR0aDp0LHNjcmVlbkhlaWdodDpuLHdpbmRvd1dpZHRoOk5lLHdpbmRvd0hlaWdodDpMLHN0YXR1c0JhckhlaWdodDpyLHNhZmVBcmVhOlJlLHNhZmVBcmVhSW5zZXRzOnt0b3A6cy50b3AscmlnaHQ6cy5yaWdodCxib3R0b206cy5ib3R0b20sbGVmdDpzLmxlZnR9LHdpbmRvd1RvcDokLHdpbmRvd0JvdHRvbTpQLHNjcmVlblRvcDpuLUx9fSksdXMsTHU9ITA7ZnVuY3Rpb24gaHUoKXtpZighTHUpcmV0dXJuO2xldHtnZXRTeXN0ZW1JbmZvU3luYzplfT12LnJlcXVpcmVNb2R1bGUoInBsdXMiKTtpZih1cz1lKCksSi5pc1N0cmluZyh1cykpdHJ5e3VzPUpTT04ucGFyc2UodXMpfWNhdGNoKHQpe31yZXR1cm4gdXN9bGV0IGZwPUJ0KCJnZXREZXZpY2VJbmZvIiwoKT0+e2h1KCk7bGV0e2RldmljZUJyYW5kOmU9IiIsZGV2aWNlTW9kZWw6dCxvc05hbWU6bixvc1ZlcnNpb246cixkZXZpY2VPcmllbnRhdGlvbjpzLGRldmljZVR5cGU6dSxkZXZpY2VJZDpnfT11cyxFPWUudG9Mb3dlckNhc2UoKSwkPW4udG9Mb3dlckNhc2UoKTtyZXR1cm57YnJhbmQ6RSxkZXZpY2VCcmFuZDpFLGRldmljZU1vZGVsOnQsZGV2aWNlUGl4ZWxSYXRpbzpsLnNjcmVlbi5zY2FsZSxkZXZpY2VJZDpnLGRldmljZU9yaWVudGF0aW9uOnMsZGV2aWNlVHlwZTp1LG1vZGVsOnQscGxhdGZvcm06JCxzeXN0ZW06YCR7JD09PSJpb3MiPyJpT1MiOiJBbmRyb2lkIn0gJHtyfWB9fSksZHA9QnQoImdldEFwcEJhc2VJbmZvIiwoKT0+e2h1KCk7bGV0e2hvc3RQYWNrYWdlTmFtZTplLGhvc3ROYW1lOnQsaG9zdFZlcnNpb246bixob3N0TGFuZ3VhZ2U6cixvc0xhbmd1YWdlOnMsaG9zdFRoZW1lOnUsYXBwSWQ6ZyxhcHBOYW1lOkUsYXBwVmVyc2lvbjokLGFwcFZlcnNpb25Db2RlOlAsYXBwV2d0VmVyc2lvbjpMfT11cztyZXR1cm57YXBwSWQ6ZyxhcHBOYW1lOkUsYXBwVmVyc2lvbjokLGFwcFZlcnNpb25Db2RlOlAsYXBwV2d0VmVyc2lvbjpMLGFwcExhbmd1YWdlOm91P291KCk6cyxlbmFibGVEZWJ1ZzohMSxob3N0UGFja2FnZU5hbWU6ZSxob3N0TmFtZTp0LGhvc3RWZXJzaW9uOm4saG9zdExhbmd1YWdlOnIsaG9zdFRoZW1lOnUsaG9zdEZvbnRTaXplU2V0dGluZzp2b2lkIDAsaG9zdFNES1ZlcnNpb246dm9pZCAwLGxhbmd1YWdlOnMsU0RLVmVyc2lvbjoiIix0aGVtZTppcCgpLHZlcnNpb246bC5ydW50aW1lLmlubmVyVmVyc2lvbn19KSxocD1CdCgiZ2V0U3lzdGVtSW5mb1N5bmMiLCgpPT57THU9ITAsaHUoKSxMdT0hMTtsZXQgZT11cCgpLHQ9ZnAoKSxuPWRwKCk7THU9ITA7bGV0IHI9e2ZvbnRTaXplU2V0dGluZzpuLmhvc3RGb250U2l6ZVNldHRpbmcsb3NOYW1lOnVzLm9zTmFtZS50b0xvd2VyQ2FzZSgpfTt1cy5ob3N0TmFtZSYmKHIuaG9zdFNES1ZlcnNpb249dXMudW5pUnVudGltZVZlcnNpb24pO2xldCBzPUouZXh0ZW5kKHVzLGUsdCxuLHIpO3JldHVybiBkZWxldGUgcy5zY3JlZW5Ub3AsZGVsZXRlIHMuZW5hYmxlRGVidWcsUi5kYXJrbW9kZXx8ZGVsZXRlIHMudGhlbWUscmUuc29ydE9iamVjdChzKX0pLE5TPXhlKCJnZXRTeXN0ZW1JbmZvIiwoZSx7cmVzb2x2ZTp0fSk9PnQoaHAoKSkpLEljPW51bGwsa1M9Sm4oUGgsKCk9PntwcCgpfSksUlM9b3IoeWIsKCk9PntncCgpfSkscHA9eGUoRWIsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57SWN8fChJYz1sLm9yaWVudGF0aW9uLndhdGNoT3JpZW50YXRpb24ocj0+e210Lmludm9rZU9uQ2FsbGJhY2soUGgse2RpcmVjdGlvbjpyLm1hZ25ldGljSGVhZGluZ30pfSxyPT57bihyLm1lc3NhZ2UpLEljPW51bGx9LHtmcmVxdWVuY3k6cHJ9KSksayh0LHByKX0pLGdwPXhlKHdiLChlLHtyZXNvbHZlOnR9KT0+e0ljJiYobC5vcmllbnRhdGlvbi5jbGVhcldhdGNoKEljKSxJYz1udWxsKSx0KCl9KSx4Uz14ZShTYiwoZSx7cmVzb2x2ZTp0fSk9PntsLmRldmljZS52aWJyYXRlKDE1KSx0KCl9KSxCUz14ZShDYiwoZSx7cmVzb2x2ZTp0fSk9PntsLmRldmljZS52aWJyYXRlKDQwMCksdCgpfSksUGM9bnVsbCxNUz1KbihJaCwoKT0+e3ZwKCl9KSxEUz1vcihtYiwoKT0+e21wKCl9KSx2cD14ZShfYiwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntQY3x8KFBjPWwuYWNjZWxlcm9tZXRlci53YXRjaEFjY2VsZXJhdGlvbihyPT57bXQuaW52b2tlT25DYWxsYmFjayhJaCx7eDpyJiZyLnhBeGlzfHwwLHk6ciYmci55QXhpc3x8MCx6OnImJnIuekF4aXN8fDB9KX0scj0+e1BjPW51bGwsbihgc3RhcnRBY2NlbGVyb21ldGVyOmZhaWwgJHtyLm1lc3NhZ2V9YCl9LHtmcmVxdWVuY3k6cHJ9KSksayh0LHByKX0pLG1wPXhlKGJiLChlLHtyZXNvbHZlOnR9KT0+e1BjJiYobC5hY2NlbGVyb21ldGVyLmNsZWFyV2F0Y2goUGMpLFBjPW51bGwpLHQoKX0pLExTPUpuKE5oLFRjKCgpPT5sLmJsdWV0b290aC5vbkJsdWV0b290aERldmljZUZvdW5kLmJpbmQobC5ibHVldG9vdGgpLE5oKSksRlM9Sm4oa2gsVGMoKCk9PmwuYmx1ZXRvb3RoLm9uQmx1ZXRvb3RoQWRhcHRlclN0YXRlQ2hhbmdlLmJpbmQobC5ibHVldG9vdGgpLGtoKSksVlM9Sm4oUmgsVGMoKCk9PmwuYmx1ZXRvb3RoLm9uQkxFQ29ubmVjdGlvblN0YXRlQ2hhbmdlLmJpbmQobC5ibHVldG9vdGgpLFJoKSksJFM9Sm4oeGgsVGMoKCk9PmwuYmx1ZXRvb3RoLm9uQkxFQ2hhcmFjdGVyaXN0aWNWYWx1ZUNoYW5nZS5iaW5kKGwuYmx1ZXRvb3RoKSx4aCkpLFVTPXhlKCJvcGVuQmx1ZXRvb3RoQWRhcHRlciIsUGkoKCk9PmwuYmx1ZXRvb3RoLm9wZW5CbHVldG9vdGhBZGFwdGVyLmJpbmQobC5ibHVldG9vdGgpKSksSFM9eGUoImNsb3NlQmx1ZXRvb3RoQWRhcHRlciIsUGkoKCk9PmwuYmx1ZXRvb3RoLmNsb3NlQmx1ZXRvb3RoQWRhcHRlci5iaW5kKGwuYmx1ZXRvb3RoKSkpLGpTPXhlKCJnZXRCbHVldG9vdGhBZGFwdGVyU3RhdGUiLFBpKCgpPT5sLmJsdWV0b290aC5nZXRCbHVldG9vdGhBZGFwdGVyU3RhdGUuYmluZChsLmJsdWV0b290aCkpKSx6Uz14ZShPYixQaSgoKT0+bC5ibHVldG9vdGguc3RhcnRCbHVldG9vdGhEZXZpY2VzRGlzY292ZXJ5LmJpbmQobC5ibHVldG9vdGgpKSxBYiksV1M9eGUoInN0b3BCbHVldG9vdGhEZXZpY2VzRGlzY292ZXJ5IixQaSgoKT0+bC5ibHVldG9vdGguc3RvcEJsdWV0b290aERldmljZXNEaXNjb3ZlcnkuYmluZChsLmJsdWV0b290aCkpKSxHUz14ZSgiZ2V0Qmx1ZXRvb3RoRGV2aWNlcyIsUGkoKCk9PmwuYmx1ZXRvb3RoLmdldEJsdWV0b290aERldmljZXMuYmluZChsLmJsdWV0b290aCkpKSxZUz14ZShUYixQaSgoKT0+bC5ibHVldG9vdGguZ2V0Q29ubmVjdGVkQmx1ZXRvb3RoRGV2aWNlcy5iaW5kKGwuYmx1ZXRvb3RoKSksSWIpLHFTPXhlKFBiLFBpKCgpPT5sLmJsdWV0b290aC5jcmVhdGVCTEVDb25uZWN0aW9uLmJpbmQobC5ibHVldG9vdGgpKSxOYiksS1M9eGUoa2IsUGkoKCk9PmwuYmx1ZXRvb3RoLmNsb3NlQkxFQ29ubmVjdGlvbi5iaW5kKGwuYmx1ZXRvb3RoKSksUmIpLEpTPXhlKHhiLFBpKCgpPT5sLmJsdWV0b290aC5nZXRCTEVEZXZpY2VTZXJ2aWNlcy5iaW5kKGwuYmx1ZXRvb3RoKSksQmIpLFpTPXhlKE1iLFBpKCgpPT5sLmJsdWV0b290aC5nZXRCTEVEZXZpY2VDaGFyYWN0ZXJpc3RpY3MuYmluZChsLmJsdWV0b290aCkpLERiKSxYUz14ZShMYixQaSgoKT0+bC5ibHVldG9vdGgubm90aWZ5QkxFQ2hhcmFjdGVyaXN0aWNWYWx1ZUNoYW5nZS5iaW5kKGwuYmx1ZXRvb3RoKSksRmIpLFFTPXhlKFZiLFBpKCgpPT5sLmJsdWV0b290aC5yZWFkQkxFQ2hhcmFjdGVyaXN0aWNWYWx1ZS5iaW5kKGwuYmx1ZXRvb3RoKSksJGIpLGVDPXhlKFViLFBpKCgpPT5sLmJsdWV0b290aC53cml0ZUJMRUNoYXJhY3RlcmlzdGljVmFsdWUuYmluZChsLmJsdWV0b290aCkpLEhiKSx0Qz14ZShqYixQaSgoKT0+bC5ibHVldG9vdGguc2V0QkxFTVRVLmJpbmQobC5ibHVldG9vdGgpKSx6YiksbkM9eGUoV2IsUGkoKCk9PmwuYmx1ZXRvb3RoLmdldEJMRURldmljZVJTU0kuYmluZChsLmJsdWV0b290aCkpLEdiKSxyQz1KbihCaCxUYygoKT0+bC5pYmVhY29uLm9uQmVhY29uVXBkYXRlLmJpbmQobC5pYmVhY29uKSxCaCkpLGlDPUpuKE1oLFRjKCgpPT5sLmliZWFjb24ub25CZWFjb25TZXJ2aWNlQ2hhbmdlLmJpbmQobC5pYmVhY29uKSxNaCkpLG9DPXhlKFliLFBpKCgpPT5sLmliZWFjb24uZ2V0QmVhY29ucy5iaW5kKGwuaWJlYWNvbikpKSxhQz14ZShxYixQaSgoKT0+bC5pYmVhY29uLnN0YXJ0QmVhY29uRGlzY292ZXJ5LmJpbmQobC5pYmVhY29uKSksS2IpLHNDPXhlKEpiLFBpKCgpPT5sLmliZWFjb24uc3RvcEJlYWNvbkRpc2NvdmVyeS5iaW5kKGwuaWJlYWNvbikpKSxsQz14ZShsYiwoe3Bob25lTnVtYmVyOmV9LHtyZXNvbHZlOnR9KT0+KGwuZGV2aWNlLmRpYWwoZSksdCgpKSxjYiksY0M9e25hbWU6e2dpdmVuTmFtZToiZmlyc3ROYW1lIixtaWRkbGVOYW1lOiJtaWRkbGVOYW1lIixmYW1pbHlOYW1lOiJsYXN0TmFtZSJ9LG5pY2tuYW1lOiJuaWNrTmFtZSIscGhvdG9zOnt0eXBlOiJ1cmwiLHZhbHVlOiJwaG90b0ZpbGVQYXRoIn0sbm90ZToicmVtYXJrIixwaG9uZU51bWJlcnM6W3t0eXBlOiJtb2JpbGUiLHZhbHVlOiJtb2JpbGVQaG9uZU51bWJlciJ9LHt0eXBlOiJ3b3JrIix2YWx1ZToid29ya1Bob25lTnVtYmVyIn0se3R5cGU6ImNvbXBhbnkiLHZhbHVlOiJob3N0TnVtYmVyIn0se3R5cGU6ImhvbWUgZmF4Iix2YWx1ZToiaG9tZUZheE51bWJlciJ9LHt0eXBlOiJ3b3JrIGZheCIsdmFsdWU6IndvcmtGYXhOdW1iZXIifV0sZW1haWxzOlt7dHlwZToiaG9tZSIsdmFsdWU6ImVtYWlsIn1dLHVybHM6W3t0eXBlOiJvdGhlciIsdmFsdWU6InVybCJ9XSxvcmdhbml6YXRpb25zOlt7dHlwZToiY29tcGFueSIsbmFtZToib3JnYW5pemF0aW9uIix0aXRsZToidGl0bGUifV0saW1zOlt7dHlwZToib3RoZXIiLHZhbHVlOiJ3ZUNoYXROdW1iZXIifV0sYWRkcmVzc2VzOlt7dHlwZToib3RoZXIiLHByZWZlcnJlZDohMCxjb3VudHJ5OiJhZGRyZXNzQ291bnRyeSIscmVnaW9uOiJhZGRyZXNzU3RhdGUiLGxvY2FsaXR5OiJhZGRyZXNzQ2l0eSIsc3RyZWV0QWRkcmVzczoiYWRkcmVzc1N0cmVldCIscG9zdGFsQ29kZToiYWRkcmVzc1Bvc3RhbENvZGUifSx7dHlwZToiaG9tZSIsY291bnRyeToiaG9tZUFkZHJlc3NDb3VudHJ5IixyZWdpb246ImhvbWVBZGRyZXNzU3RhdGUiLGxvY2FsaXR5OiJob21lQWRkcmVzc0NpdHkiLHN0cmVldEFkZHJlc3M6ImhvbWVBZGRyZXNzU3RyZWV0Iixwb3N0YWxDb2RlOiJob21lQWRkcmVzc1Bvc3RhbENvZGUifSx7dHlwZToiY29tcGFueSIsY291bnRyeToid29ya0FkZHJlc3NDb3VudHJ5IixyZWdpb246IndvcmtBZGRyZXNzU3RhdGUiLGxvY2FsaXR5OiJ3b3JrQWRkcmVzc0NpdHkiLHN0cmVldEFkZHJlc3M6IndvcmtBZGRyZXNzU3RyZWV0Iixwb3N0YWxDb2RlOiJ3b3JrQWRkcmVzc1Bvc3RhbENvZGUifV19LHVDPVsidHlwZSIsInByZWZlcnJlZCJdO2Z1bmN0aW9uIFdmKGUsdCxuKXtsZXQgcj0wO3JldHVybiBPYmplY3Qua2V5cyhuKS5mb3JFYWNoKHM9PntsZXQgdT1uW3NdO3R5cGVvZiB1IT09Im9iamVjdCI/dUMuaW5kZXhPZihzKSE9PS0xP2Vbc109bltzXTp0eXBlb2YgdFt1XSE9InVuZGVmaW5lZCI/KHIrKyxlW3NdPXRbdV0pOmRlbGV0ZSBlW3NdOnUgaW5zdGFuY2VvZiBBcnJheT8oZVtzXT1bXSx1LmZvckVhY2goRT0+e2xldCAkPXt9O1dmKCQsdCxFKSYmZVtzXS5wdXNoKCQpfSksZVtzXS5sZW5ndGg/cisrOmRlbGV0ZSBlW3NdKTooZVtzXT17fSxXZihlW3NdLHQsdSk/cisrOmRlbGV0ZSBlW3NdKX0pLHJ9bGV0IGZDPXhlKHViLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+eyFlLnBob3RvRmlsZVBhdGgmJihlLnBob3RvRmlsZVBhdGg9IiIpLGwuY29udGFjdHMuZ2V0QWRkcmVzc0Jvb2sobC5jb250YWN0cy5BRERSRVNTQk9PS19QSE9ORSxyPT57bGV0IHM9ci5jcmVhdGUoKTtXZihzLGUsY0MpLHMuc2F2ZSgoKT0+dCgpLHU9Pm4oKSl9LHI9Pm4oKSl9LGRiLGZiKTtmdW5jdGlvbiBPYShlKXtyZXR1cm4gdHlwZW9mIHYhPSJ1bmRlZmluZWQiP3YucmVxdWlyZU1vZHVsZShlKTpfX3JlcXVpcmVOYXRpdmVQbHVnaW5fXyhlKX1mdW5jdGlvbiBfcChlLHQsbil7cmV0dXJuIE9hKCJwbHVzIikuc2VuZE5hdGl2ZUV2ZW50KGUsdCxuKX1sZXQgZEM9eGUoaGIsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57T2EoImNsaXBib2FyZCIpLmdldFN0cmluZyhzPT57cy5yZXN1bHQ9PT0ic3VjY2VzcyI/dCh7ZGF0YTpzLmRhdGF9KTpuKCJnZXRDbGlwYm9hcmREYXRhOmZhaWwiKX0pfSksaEM9eGUocGIsKGUse3Jlc29sdmU6dH0pPT57T2EoImNsaXBib2FyZCIpLnNldFN0cmluZyhlLmRhdGEpLHQoKX0sdmIsZ2IpLGJwPSJvbk5ldHdvcmtTdGF0dXNDaGFuZ2UiO2Z1bmN0aW9uIHlwKCl7RXAoKS50aGVuKCh7bmV0d29ya1R5cGU6ZX0pPT57bXQuaW52b2tlT25DYWxsYmFjayhicCx7aXNDb25uZWN0ZWQ6ZSE9PSJub25lIixuZXR3b3JrVHlwZTplfSl9KX1sZXQgcEM9Sm4oYnAsKCk9PntsLmdsb2JhbEV2ZW50LmFkZEV2ZW50TGlzdGVuZXIoIm5ldGNoYW5nZSIseXApfSksZ0M9b3IoIm9mZk5ldHdvcmtTdGF0dXNDaGFuZ2UiLCgpPT57bC5nbG9iYWxFdmVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJuZXRjaGFuZ2UiLHlwKX0pLEVwPXhlKCJnZXROZXR3b3JrVHlwZSIsKGUse3Jlc29sdmU6dH0pPT57bGV0IG49UHJbbC5uZXR3b3JraW5mby5nZXRDdXJyZW50VHlwZSgpXXx8InVua25vd24iO3JldHVybiB0KHtuZXR3b3JrVHlwZTpufSl9KTtmdW5jdGlvbiB3cCgpe2lmKGwub3MubmFtZS50b0xvd2VyQ2FzZSgpIT09ImlvcyIpcmV0dXJuITE7bGV0IHQ9T2EoImZhY2VJRCIpO3JldHVybiEhKHQmJnQuaXNTdXBwb3J0KCkpfWZ1bmN0aW9uIFNwKCl7cmV0dXJuISEobC5maW5nZXJwcmludCYmbC5maW5nZXJwcmludC5pc1N1cHBvcnQoKSl9bGV0IENwPWU9PntsZXQgdD1bXTtyZXR1cm4gU3AoKSYmdC5wdXNoKCJmaW5nZXJQcmludCIpLHdwKCkmJnQucHVzaCgiZmFjaWFsIiksZSYmZSh7c3VwcG9ydE1vZGU6dH0pLHtzdXBwb3J0TW9kZTp0LGVyck1zZzoiY2hlY2tJc1N1cHBvcnRTb3RlckF1dGhlbnRpY2F0aW9uOm9rIn19LHZDPXhlKGV5LChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e0NwKHQpfSksT3A9KHtjaGVja0F1dGhNb2RlOmUscmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj0odSxnKT0+biYmbih1LGcpLHM9dT0+dCYmdCh1KTtpZihlPT09ImZpbmdlclByaW50Iil7aWYoU3AoKSl7bGV0IHU9bC5maW5nZXJwcmludC5pc0tleWd1YXJkU2VjdXJlKCkmJmwuZmluZ2VycHJpbnQuaXNFbnJvbGxlZEZpbmdlcnByaW50cygpO3JldHVybiBzKHtpc0Vucm9sbGVkOnV9KSx7aXNFbnJvbGxlZDp1LGVyck1zZzoiY2hlY2tJc1NvdGVyRW5yb2xsZWRJbkRldmljZTpvayJ9fXJldHVybiByKCJub3Qgc3VwcG9ydCIse2lzRW5yb2xsZWQ6ITF9KSx7aXNFbnJvbGxlZDohMSxlcnJNc2c6ImNoZWNrSXNTb3RlckVucm9sbGVkSW5EZXZpY2U6ZmFpbCBub3Qgc3VwcG9ydCJ9fWVsc2UgaWYoZT09PSJmYWNpYWwiKXtpZih3cCgpKXtsZXQgdT1PYSgiZmFjZUlEIiksZz11JiZ1LmlzS2V5Z3VhcmRTZWN1cmUoKSYmdS5pc0Vucm9sbGVkRmFjZUlEKCk7cmV0dXJuIHMoe2lzRW5yb2xsZWQ6Z30pLHtpc0Vucm9sbGVkOmcsZXJyTXNnOiJjaGVja0lzU290ZXJFbnJvbGxlZEluRGV2aWNlOm9rIn19cmV0dXJuIHIoIm5vdCBzdXBwb3J0Iix7aXNFbnJvbGxlZDohMX0pLHtpc0Vucm9sbGVkOiExLGVyck1zZzoiY2hlY2tJc1NvdGVyRW5yb2xsZWRJbkRldmljZTpmYWlsIG5vdCBzdXBwb3J0In19cmV0dXJuIHIoIm5vdCBzdXBwb3J0Iix7aXNFbnJvbGxlZDohMX0pLHtpc0Vucm9sbGVkOiExLGVyck1zZzoiY2hlY2tJc1NvdGVyRW5yb2xsZWRJbkRldmljZTpmYWlsIG5vdCBzdXBwb3J0In19LG1DPXhlKHR5LCh7Y2hlY2tBdXRoTW9kZTplfSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntPcCh7Y2hlY2tBdXRoTW9kZTplLHJlc29sdmU6dCxyZWplY3Q6bn0pfSxpeSxyeSksX0M9eGUob3ksKHtyZXF1ZXN0QXV0aE1vZGVzOmUsY2hhbGxlbmdlOnQ9ITEsYXV0aENvbnRlbnQ6bn0se3Jlc29sdmU6cixyZWplY3Q6c30pPT57WG4oKTtsZXR7dDp1fT1jZSgpLHtzdXBwb3J0TW9kZTpnfT1DcCgpO2lmKCFnLmxlbmd0aClyZXR1cm4gcygibm90IHN1cHBvcnQiLHthdXRoTW9kZToiZmluZ2VyUHJpbnQiLGVyckNvZGU6OTAwMDF9KTtsZXQgRT1bXTtpZihlLmZvckVhY2goc3Q9PntnLmluZGV4T2Yoc3QpPi0xJiZFLnB1c2goc3QpfSksIUUubGVuZ3RoKXJldHVybiBzKCJzdGFydFNvdGVyQXV0aGVudGljYXRpb246ZmFpbCBubyBjb3JyZXNwb25kaW5nIG1vZGUiLHthdXRoTW9kZToiZmluZ2VyUHJpbnQiLGVyckNvZGU6OTAwMDN9KTtsZXQgJD1bXTtpZihFLmZvckVhY2goc3Q9PntPcCh7Y2hlY2tBdXRoTW9kZTpzdH0pLmlzRW5yb2xsZWQmJiQucHVzaChzdCl9KSwhJC5sZW5ndGgpcmV0dXJuIHMoYHN0YXJ0U290ZXJBdXRoZW50aWNhdGlvbjpmYWlsIG5vICR7RVswXX0gZW5yb2xsZWRgLHthdXRoTW9kZTpFWzBdLGVyckNvZGU6OTAwMTF9KTtsZXQgUD0kWzBdLEw9bnVsbCxBZSxOZT1ufHx1KCJ1bmkuc3RhcnRTb3RlckF1dGhlbnRpY2F0aW9uLmF1dGhDb250ZW50IiksUmU9c3Q9PntsZXR7Y29kZTpwdH09c3QsJHQ9e2F1dGhNb2RlOlB9LFJ0PXs0OigpPT57TD8oQyhBZSksTC5zZXRUaXRsZSgiXHU2NUUwXHU2Q0Q1XHU4QkM2XHU1MjJCIiksQWU9aygoKT0+e0wmJkwuc2V0VGl0bGUoTmUpfSwxZTMpKTpzKCIiLEouZXh0ZW5kKCR0LHtlcnJDb2RlOjkwMDA5fSkpfSw1OigpPT57bC5uYXRpdmVVSS5jbG9zZVdhaXRpbmcoKSxzKCJhdXRoZW50aWNhdGUgZnJlZXplLiBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyIixKLmV4dGVuZCgkdCx7ZXJyQ29kZTo5MDAxMH0pKX0sNjooKT0+e2wubmF0aXZlVUkuY2xvc2VXYWl0aW5nKCkscygiY2FuY2VsIixKLmV4dGVuZCgkdCx7ZXJyQ29kZTo5MDAwOH0pKX19O3B0JiZSdFtwdF0/UnRbcHRdKCk6KGwubmF0aXZlVUkuY2xvc2VXYWl0aW5nKCkscygiIixKLmV4dGVuZCgkdCx7ZXJyQ29kZTo5MDAwN30pKSl9O1A9PT0iZmluZ2VyUHJpbnQiPyhsLm9zLm5hbWUudG9Mb3dlckNhc2UoKT09PSJhbmRyb2lkIiYmKEw9bC5uYXRpdmVVSS5zaG93V2FpdGluZyhOZSksTC5vbmNsb3NlPWZ1bmN0aW9uKCl7bC5maW5nZXJwcmludC5jYW5jZWwoKX0pLGwuZmluZ2VycHJpbnQuYXV0aGVudGljYXRlKCgpPT57bC5uYXRpdmVVSS5jbG9zZVdhaXRpbmcoKSxyKHthdXRoTW9kZTpQLGVyckNvZGU6MH0pfSxSZSx7bWVzc2FnZTpOZX0pKTpQPT09ImZhY2lhbCImJk9hKCJmYWNlSUQiKS5hdXRoZW50aWNhdGUoe21lc3NhZ2U6TmV9LHB0PT57cHQudHlwZT09PSJzdWNjZXNzIiYmcHQuY29kZT09PTA/cih7YXV0aE1vZGU6UCxlcnJDb2RlOjB9KTpSZShwdCl9KX0sc3ksYXkpLGJDPXhlKGx5LChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e1NuKCk7bGV0e3Q6cn09Y2UoKSx1PWNwKCkhPT0ibGlnaHQiLGcsRT0hMSwkPUhzKHt1cmw6Il9fdW5pYXBwc2NhbiIsZGF0YTpPYmplY3QuYXNzaWduKHt9LGUse21lc3NhZ2VzOntmYWlsOnIoInVuaS5zY2FuQ29kZS5mYWlsIiksImZsYXNoLm9uIjpyKCJ1bmkuc2NhbkNvZGUuZmxhc2gub24iKSwiZmxhc2gub2ZmIjpyKCJ1bmkuc2NhbkNvZGUuZmxhc2gub2ZmIil9fSksc3R5bGU6e2FuaW1hdGlvblR5cGU6ZS5hbmltYXRpb25UeXBlfHwicG9wLWluIix0aXRsZU5WaWV3OnthdXRvQmFja0J1dHRvbjohMCx0eXBlOiJmbG9hdCIsdGl0bGVUZXh0OmUudGl0bGVUZXh0fHxyKCJ1bmkuc2NhbkNvZGUudGl0bGUiKSx0aXRsZUNvbG9yOiIjZmZmZmZmIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkiLGJ1dHRvbnM6ZS5vbmx5RnJvbUNhbWVyYT9bXTpbe3RleHQ6ZS5hbGJ1bVRleHR8fHIoInVuaS5zY2FuQ29kZS5hbGJ1bSIpLGZvbnRTaXplOiIxN3B4Iix3aWR0aDoiNjBweCIsb25jbGljazooKT0+eyQuc2VuZE1lc3NhZ2Uoe3R5cGU6ImdhbGxlcnkifSl9fV19LHBvcEdlc3R1cmU6ImNsb3NlIixiYWNrZ3JvdW5kOiIjMDAwMDAwIixiYWNrQnV0dG9uQXV0b0NvbnRyb2w6ImNsb3NlIn0sb25NZXNzYWdlKHtldmVudDpQLGRldGFpbDpMfSl7Zz1MLEU9UD09PSJtYXJrZWQifSxvbkNsb3NlKCl7dSYmbC5uYXZpZ2F0b3Iuc2V0U3RhdHVzQmFyU3R5bGUoImRhcmsiKSxnP0U/KGRlbGV0ZSBnLm1lc3NhZ2UsdChnKSk6bihnLm1lc3NhZ2UpOm4oImNhbmNlbCIpfX0pO3UmJihsLm5hdmlnYXRvci5zZXRTdGF0dXNCYXJTdHlsZSgibGlnaHQiKSwkLndlYnZpZXcuYWRkRXZlbnRMaXN0ZW5lcigicG9wR2VzdHVyZSIsKHt0eXBlOlAscmVzdWx0Okx9KT0+e1A9PT0ic3RhcnQiP2wubmF2aWdhdG9yLnNldFN0YXR1c0JhclN0eWxlKCJkYXJrIik6UD09PSJlbmQiJiYhTCYmbC5uYXZpZ2F0b3Iuc2V0U3RhdHVzQmFyU3R5bGUoImxpZ2h0Iil9KSl9LGN5LGZ5KSxBcD1lPT57bXQuaW52b2tlT25DYWxsYmFjayhyZS5PTl9USEVNRV9DSEFOR0UsZSl9LHlDPUpuKHJlLk9OX1RIRU1FX0NIQU5HRSwoKT0+e210Lm9uKHJlLk9OX1RIRU1FX0NIQU5HRSxBcCl9KSxFQz1vcihyZS5PRkZfVEhFTUVfQ0hBTkdFLCgpPT57bXQub2ZmKHJlLk9OX1RIRU1FX0NIQU5HRSxBcCl9KSx3Qz14ZShaYiwoZSx7cmVzb2x2ZTp0fSk9PntsZXQgbj1sLnNjcmVlbi5nZXRCcmlnaHRuZXNzKCExKTt0KHt2YWx1ZTpufSl9KSxTQz14ZShYYiwoZSx7cmVzb2x2ZTp0fSk9PntsLnNjcmVlbi5zZXRCcmlnaHRuZXNzKGUudmFsdWUsITEpLHQoKX0pLENDPXhlKFFiLChlLHtyZXNvbHZlOnR9KT0+e2wuZGV2aWNlLnNldFdha2Vsb2NrKCEhZS5rZWVwU2NyZWVuT24pLHQoKX0pLE9DPUJ0KGR5LCgpPT57bGV0e2dldFN5c3RlbVNldHRpbmc6ZX09di5yZXF1aXJlTW9kdWxlKCJwbHVzIiksdD1lKCk7dHJ5e3R5cGVvZiB0PT0ic3RyaW5nIiYmKHQ9SlNPTi5wYXJzZSh0KSl9Y2F0Y2gobil7fXJldHVybiB0fSksVHA9QnQoaHksKCk9PntsZXR7Z2V0QXBwQXV0aG9yaXplU2V0dGluZzplfT12LnJlcXVpcmVNb2R1bGUoInBsdXMiKSx0PWUoKTt0cnl7dHlwZW9mIHQ9PSJzdHJpbmciJiYodD1KU09OLnBhcnNlKHQpKX1jYXRjaChuKXt9Zm9yKGxldCBuIGluIHQpSi5oYXNPd24odCxuKSYmdFtuXT09PSJ1bmRlZmluZWQiJiYodFtuXT12b2lkIDApO3JldHVybiB0fSksQUM9eGUocHksKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0e29wZW5BcHBBdXRob3JpemVTZXR0aW5nOnJ9PXYucmVxdWlyZU1vZHVsZSgicGx1cyIpO3IodT0+e3UudHlwZT09PSJzdWNjZXNzIj90KCk6bigpfSl9KSxUQz14ZSh0MCwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1IaSsiL2Rvd25sb2FkLyI7bC5pby5nZXRJbWFnZUluZm8oSi5leHRlbmQoZSx7c2F2ZVBhdGg6cixmaWxlbmFtZTpyLHN1Y2Nlc3M6V2wodCksZmFpbDpPcihuKX0pKX0scjAsbjApLElDPXhlKGwwLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2wuaW8uZ2V0VmlkZW9JbmZvKHtmaWxlUGF0aDplLnNyYyxzdWNjZXNzOnI9Pnt0KHtvcmllbnRhdGlvbjpyLm9yaWVudGF0aW9uLHR5cGU6ci50eXBlLGR1cmF0aW9uOnIuZHVyYXRpb24sc2l6ZTpyLnNpemUsaGVpZ2h0OnIuaGVpZ2h0LHdpZHRoOnIud2lkdGgsZnBzOnIuZnBzfHwzMCxiaXRyYXRlOnIuYml0cmF0ZX0pfSxmYWlsOk9yKG4pfSl9LHUwLGMwKSxQQz14ZShpMCwoe2N1cnJlbnQ6ZT0wLGluZGljYXRvcjp0PSJudW1iZXIiLGxvb3A6bj0hMSx1cmxzOnIsbG9uZ1ByZXNzQWN0aW9uczpzfSx7cmVzb2x2ZTp1LHJlamVjdDpnfSk9PntsdCgpO2xldHt0OkV9PWNlKCk7cj1yLm1hcChQPT51dChQKSk7bGV0ICQ9TnVtYmVyKGUpO2lzTmFOKCQpPyhlPXIuaW5kZXhPZih1dChlKSksZT1lPDA/MDplKTplPSQsbC5uYXRpdmVVSS5wcmV2aWV3SW1hZ2Uocix7Y3VycmVudDplLGluZGljYXRvcjp0LGxvb3A6bixvbkxvbmdQcmVzczpmdW5jdGlvbihQKXtsZXQgTD1bXSxBZT0iIixOZT1zJiZKLmlzUGxhaW5PYmplY3Qocyk7TmU/KEw9cy5pdGVtTGlzdD9zLml0ZW1MaXN0OltdLEFlPXMuaXRlbUNvbG9yP3MuaXRlbUNvbG9yOiIjMDAwMDAwIik6KEw9W0UoInVuaS5wcmV2aWV3SW1hZ2UuYnV0dG9uLnNhdmUiKV0sQWU9IiMwMDAwMDAiKTtsZXQgUmU9e2J1dHRvbnM6TC5tYXAoc3Q9Pih7dGl0bGU6c3QsY29sb3I6QWV9KSksY2FuY2VsOkUoInVuaS5wcmV2aWV3SW1hZ2UuY2FuY2VsIil9O2wubmF0aXZlVUkuYWN0aW9uU2hlZXQoUmUsc3Q9PntpZihzdC5pbmRleD4wKXtpZihOZSl7Si5pc0Z1bmN0aW9uKHMuc3VjY2VzcykmJnMuc3VjY2Vzcyh7dGFwSW5kZXg6c3QuaW5kZXgtMSxpbmRleDpQLmluZGV4fSk7cmV0dXJufWwuZ2FsbGVyeS5zYXZlKFAudXJsLCgpPT57bC5uYXRpdmVVSS50b2FzdChFKCJ1bmkucHJldmlld0ltYWdlLnNhdmUuc3VjY2VzcyIpKX0sZnVuY3Rpb24oKXtsLm5hdGl2ZVVJLnRvYXN0KEUoInVuaS5wcmV2aWV3SW1hZ2Uuc2F2ZS5mYWlsIikpfSl9ZWxzZSBOZSYmSi5pc0Z1bmN0aW9uKHMuZmFpbCkmJnMuZmFpbCh7ZXJyTXNnOiJzaG93QWN0aW9uU2hlZXQ6ZmFpbCBjYW5jZWwifSl9KX19KSx1KCl9LGEwLG8wKSxOQz14ZShzMCwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9Pnt0cnl7bC5uYXRpdmVVSS5jbG9zZVByZXZpZXdJbWFnZSgpLHQoKX1jYXRjaChyKXtuKCl9fSksR2YsTmM9ITEsWWYsa2M9KGUsdD17fSk9PntrQyhKLmV4dGVuZCh7c3RhdGU6ZX0sdCkpfSxwdT17c3RhcnQoe2R1cmF0aW9uOmU9NmU0LHNhbXBsZVJhdGU6dCxudW1iZXJPZkNoYW5uZWxzOm4sZW5jb2RlQml0UmF0ZTpyLGZvcm1hdDpzPSJtcDMiLGZyYW1lU2l6ZTp1fT17fSl7aWYoTmMpcmV0dXJuIGtjKCJzdGFydCIpO0dmPWwuYXVkaW8uZ2V0UmVjb3JkZXIoKSxHZi5yZWNvcmQoe2Zvcm1hdDpzLHNhbXBsZXJhdGU6dD9TdHJpbmcodCk6dm9pZCAwLGZpbGVuYW1lOkhpKyIvcmVjb3JkZXIvIn0sZz0+a2MoInN0b3AiLHt0ZW1wRmlsZVBhdGg6Z30pLGc9PmtjKCJlcnJvciIse2Vyck1zZzpnLm1lc3NhZ2V9KSksWWY9aygoKT0+e3B1LnN0b3AoKX0sZSksa2MoInN0YXJ0IiksTmM9ITB9LHN0b3AoKXtOYyYmKEdmLnN0b3AoKSxOYz0hMSxZZiYmQyhZZikpfSxwYXVzZSgpe05jJiZrYygiZXJyb3IiLHtlcnJNc2c6IlVuc3VwcG9ydGVkIG9wZXJhdGlvbjogcGF1c2UifSl9LHJlc3VtZSgpe05jJiZrYygiZXJyb3IiLHtlcnJNc2c6IlVuc3VwcG9ydGVkIG9wZXJhdGlvbjogcmVzdW1lIn0pfX0sR2w9e3BhdXNlOm51bGwscmVzdW1lOm51bGwsc3RhcnQ6bnVsbCxzdG9wOm51bGwsZXJyb3I6bnVsbH07ZnVuY3Rpb24ga0MoZSl7bGV0IHQ9ZS5zdGF0ZTtkZWxldGUgZS5zdGF0ZSxkZWxldGUgZS5lcnJNc2csdCYmSi5pc0Z1bmN0aW9uKEdsW3RdKSYmR2xbdF0oZSl9Y2xhc3MgUkN7Y29uc3RydWN0b3IoKXt9b25FcnJvcih0KXtHbC5lcnJvcj10fW9uRnJhbWVSZWNvcmRlZCh0KXt9b25JbnRlcnJ1cHRpb25CZWdpbih0KXt9b25JbnRlcnJ1cHRpb25FbmQodCl7fW9uUGF1c2UodCl7R2wucGF1c2U9dH1vblJlc3VtZSh0KXtHbC5yZXN1bWU9dH1vblN0YXJ0KHQpe0dsLnN0YXJ0PXR9b25TdG9wKHQpe0dsLnN0b3A9dH1wYXVzZSgpe3B1LnBhdXNlKCl9cmVzdW1lKCl7cHUucmVzdW1lKCl9c3RhcnQodD17fSl7cHUuc3RhcnQodCl9c3RvcCgpe3B1LnN0b3AoKX19bGV0IElwLHhDPUJ0KG0wLCgpPT5JcHx8KElwPW5ldyBSQykpLEJDPXhlKHAwLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2wuZ2FsbGVyeS5zYXZlKGUuZmlsZVBhdGgsV2wodCksT3IobikpfSx2MCxnMCksTUM9eGUoZjAsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bC5nYWxsZXJ5LnNhdmUoZS5maWxlUGF0aCxXbCh0KSxPcihuKSl9LGgwLGQwKSxEQz14ZShfMCwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1gJHtIaX0vY29tcHJlc3NlZC8ke0RhdGUubm93KCl9XyR7QW8oZS5zcmMpfWAse2NvbXByZXNzZWRXaWR0aDpzLGNvbXByZXNzZWRIZWlnaHQ6dX09ZTt0eXBlb2Ygcz09Im51bWJlciImJihlLndpZHRoPXMrInB4IiksdHlwZW9mIHU9PSJudW1iZXIiJiYoZS5oZWlnaHQ9dSsicHgiKSxsLnppcC5jb21wcmVzc0ltYWdlKEouZXh0ZW5kKHt9LGUse2RzdDpyfSksKCk9Pnt0KHt0ZW1wRmlsZVBhdGg6cn0pfSxuKX0seTAsYjApLExDPXhlKEUwLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2xldCByPWAke0hpfS9jb21wcmVzc2VkLyR7RGF0ZS5ub3coKX1fJHtBbyhlLnNyYyl9YDtsLnppcC5jb21wcmVzc1ZpZGVvKEouZXh0ZW5kKHt9LGUse2ZpbGVuYW1lOnJ9KSxzPT57dCh7dGVtcEZpbGVQYXRoOnIsc2l6ZTpzLnNpemV9KX0sbil9LFMwLHcwKTtmdW5jdGlvbiBGQyhlKXtyZXR1cm4gbmV3IFByb21pc2UoKHQsbik9PntsLmlvLnJlc29sdmVMb2NhbEZpbGVTeXN0ZW1VUkwoZSxmdW5jdGlvbihyKXtyLmdldE1ldGFkYXRhKHQsbiwhMSl9LG4pfSl9bGV0IFZDPXhlKEt5LCh7Y291bnQ6ZSxzaXplVHlwZTp0LHNvdXJjZVR5cGU6bixjcm9wOnJ9PXt9LHtyZXNvbHZlOnMscmVqZWN0OnV9KT0+e3VlKCk7bGV0e3Q6Z309Y2UoKSxFPU9yKHUpO2Z1bmN0aW9uICQoQWUpe2xldCBOZT1bXSxSZT1bXTtQcm9taXNlLmFsbChBZS5tYXAoc3Q9PkZDKHN0KSkpLnRoZW4oc3Q9PntzdC5mb3JFYWNoKChwdCwkdCk9PntsZXQgUnQ9QWVbJHRdO1JlLnB1c2goUnQpLE5lLnB1c2goe3BhdGg6UnQsc2l6ZTpwdC5zaXplfSl9KSxzKHt0ZW1wRmlsZVBhdGhzOlJlLHRlbXBGaWxlczpOZX0pfSkuY2F0Y2goRSl9ZnVuY3Rpb24gUCgpe2wuY2FtZXJhLmdldENhbWVyYSgpLmNhcHR1cmVJbWFnZShOZT0+JChbTmVdKSxFLHtmaWxlbmFtZTpIaSsiL2NhbWVyYS8iLHJlc29sdXRpb246ImhpZ2giLGNyb3A6cixzaXplVHlwZTp0fSl9ZnVuY3Rpb24gTCgpe2wuZ2FsbGVyeS5waWNrKCh7ZmlsZXM6QWV9KT0+JChBZSksRSx7bWF4aW11bTplLG11bHRpcGxlOiEwLHN5c3RlbTohMSxmaWxlbmFtZTpIaSsiL2dhbGxlcnkvIixwZXJtaXNzaW9uQWxlcnQ6ITAsY3JvcDpyLHNpemVUeXBlOnR9KX1pZihuLmxlbmd0aD09PTEpe2lmKG4uaW5jbHVkZXMoImFsYnVtIikpe0woKTtyZXR1cm59ZWxzZSBpZihuLmluY2x1ZGVzKCJjYW1lcmEiKSl7UCgpO3JldHVybn19bC5uYXRpdmVVSS5hY3Rpb25TaGVldCh7Y2FuY2VsOmcoInVuaS5jaG9vc2VJbWFnZS5jYW5jZWwiKSxidXR0b25zOlt7dGl0bGU6ZygidW5pLmNob29zZUltYWdlLnNvdXJjZVR5cGUuY2FtZXJhIil9LHt0aXRsZTpnKCJ1bmkuY2hvb3NlSW1hZ2Uuc291cmNlVHlwZS5hbGJ1bSIpfV19LEFlPT57c3dpdGNoKEFlLmluZGV4KXtjYXNlIDE6UCgpO2JyZWFrO2Nhc2UgMjpMKCk7YnJlYWs7ZGVmYXVsdDpFKCk7YnJlYWt9fSl9LFp5LEp5KSwkQz14ZShYeSwoe3NvdXJjZVR5cGU6ZSxjb21wcmVzc2VkOnQsbWF4RHVyYXRpb246bixjYW1lcmE6cn0se3Jlc29sdmU6cyxyZWplY3Q6dX0pPT57QmUoKTtsZXR7dDpnfT1jZSgpLEU9T3IodSk7ZnVuY3Rpb24gJChBZSl7bC5pby5nZXRWaWRlb0luZm8oe2ZpbGVQYXRoOkFlLHN1Y2Nlc3MoTmUpe2xldCBSZT17ZXJyTXNnOiJjaG9vc2VWaWRlbzpvayIsdGVtcEZpbGVQYXRoOkFlLHNpemU6TmUuc2l6ZSxkdXJhdGlvbjpOZS5kdXJhdGlvbix3aWR0aDpOZS53aWR0aCxoZWlnaHQ6TmUuaGVpZ2h0fTtzKFJlKX0sZmFpbDpFfSl9ZnVuY3Rpb24gUCgpe2wuZ2FsbGVyeS5waWNrKCh7ZmlsZXM6QWV9KT0+JChBZVswXSksRSx7ZmlsdGVyOiJ2aWRlbyIsc3lzdGVtOiExLG11bHRpcGxlOiEwLG1heGltdW06MSxmaWxlbmFtZTpIaSsiL2dhbGxlcnkvIixwZXJtaXNzaW9uQWxlcnQ6ITAsdmlkZW9Db21wcmVzczp0fSl9ZnVuY3Rpb24gTCgpe2wuY2FtZXJhLmdldENhbWVyYSgpLnN0YXJ0VmlkZW9DYXB0dXJlKCQsRSx7aW5kZXg6cj09PSJmcm9udCI/IjIiOiIxIix2aWRlb01heGltdW1EdXJhdGlvbjpuLGZpbGVuYW1lOkhpKyIvY2FtZXJhLyIsdmlkZW9Db21wcmVzczp0fSl9aWYoZS5sZW5ndGg9PT0xKXtpZihlLmluY2x1ZGVzKCJhbGJ1bSIpKXtQKCk7cmV0dXJufWVsc2UgaWYoZS5pbmNsdWRlcygiY2FtZXJhIikpe0woKTtyZXR1cm59fWwubmF0aXZlVUkuYWN0aW9uU2hlZXQoe2NhbmNlbDpnKCJ1bmkuY2hvb3NlVmlkZW8uY2FuY2VsIiksYnV0dG9uczpbe3RpdGxlOmcoInVuaS5jaG9vc2VWaWRlby5zb3VyY2VUeXBlLmNhbWVyYSIpfSx7dGl0bGU6ZygidW5pLmNob29zZVZpZGVvLnNvdXJjZVR5cGUuYWxidW0iKX1dfSxBZT0+e3N3aXRjaChBZS5pbmRleCl7Y2FzZSAxOkwoKTticmVhaztjYXNlIDI6UCgpO2JyZWFrO2RlZmF1bHQ6RSgpO2JyZWFrfX0pfSxlMCxReSksVUM9eGUoJHksKGUse3Jlc29sdmU6dH0pPT57bC5rZXkuc2hvd1NvZnRLZXlib3JkKCksdCgpfSksSEM9eGUoVnksKGUse3Jlc29sdmU6dH0pPT57bC5rZXkuaGlkZVNvZnRLZXlib3JkKCksdCgpfSk7ZnVuY3Rpb24gUHAoZSl7bXQuaW52b2tlT25DYWxsYmFjayhyZS5PTl9LRVlCT0FSRF9IRUlHSFRfQ0hBTkdFLGUpfWxldCBqQz1KbihyZS5PTl9LRVlCT0FSRF9IRUlHSFRfQ0hBTkdFLCgpPT57bXQub24ocmUuT05fS0VZQk9BUkRfSEVJR0hUX0NIQU5HRSxQcCl9KSx6Qz1vcihyZS5PTl9LRVlCT0FSRF9IRUlHSFRfQ0hBTkdFLCgpPT57bXQub2ZmKHJlLk9OX0tFWUJPQVJEX0hFSUdIVF9DSEFOR0UsUHApfSk7Y2xhc3MgV0N7Y29uc3RydWN0b3IodCl7dGhpcy5fY2FsbGJhY2tzPVtdLHRoaXMuX2Rvd25sb2FkZXI9dCx0LmFkZEV2ZW50TGlzdGVuZXIoInN0YXRlY2hhbmdlZCIsKG4scik9PntuLmRvd25sb2FkZWRTaXplJiZuLnRvdGFsU2l6ZSYmdGhpcy5fY2FsbGJhY2tzLmZvckVhY2gocz0+e3Moe3Byb2dyZXNzOk1hdGgucm91bmQobi5kb3dubG9hZGVkU2l6ZS9uLnRvdGFsU2l6ZSoxMDApLHRvdGFsQnl0ZXNXcml0dGVuOm4uZG93bmxvYWRlZFNpemUsdG90YWxCeXRlc0V4cGVjdGVkVG9Xcml0ZTpuLnRvdGFsU2l6ZX0pfSl9KX1hYm9ydCgpe3RoaXMuX2Rvd25sb2FkZXIuYWJvcnQoKX1vblByb2dyZXNzVXBkYXRlKHQpeyFKLmlzRnVuY3Rpb24odCl8fHRoaXMuX2NhbGxiYWNrcy5wdXNoKHQpfW9mZlByb2dyZXNzVXBkYXRlKHQpe2xldCBuPXRoaXMuX2NhbGxiYWNrcy5pbmRleE9mKHQpO24+PTAmJnRoaXMuX2NhbGxiYWNrcy5zcGxpY2UobiwxKX1vbkhlYWRlcnNSZWNlaXZlZCh0KXt0aHJvdyBuZXcgRXJyb3IoIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuIil9b2ZmSGVhZGVyc1JlY2VpdmVkKHQpe3Rocm93IG5ldyBFcnJvcigiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC4iKX19bGV0IEdDPWNpKEIwLCh7dXJsOmUsaGVhZGVyOnQsdGltZW91dDpufSx7cmVzb2x2ZTpyLHJlamVjdDpzfSk9PntuPShufHxSLm5ldHdvcmtUaW1lb3V0JiZSLm5ldHdvcmtUaW1lb3V0LnJlcXVlc3R8fDYwKjFlMykvMWUzO2xldCB1PWwuZG93bmxvYWRlci5jcmVhdGVEb3dubG9hZChlLHt0aW1lb3V0Om4sZmlsZW5hbWU6SGkrIi9kb3dubG9hZC8iLHJldHJ5OjAscmV0cnlJbnRlcnZhbDowfSwoRSwkKT0+eyQ/cih7dGVtcEZpbGVQYXRoOkUuZmlsZW5hbWUsc3RhdHVzQ29kZTokfSk6cyhgc3RhdHVzQ29kZTogJHskfWApfSksZz1uZXcgV0ModSk7Zm9yKGxldCBFIGluIHQpSi5oYXNPd24odCxFKSYmdS5zZXRSZXF1ZXN0SGVhZGVyKEUsdFtFXSk7cmV0dXJuIHUuc3RhcnQoKSxnfSxEMCxNMCksWUM9ZT0+e2xldCB0PWVbIlNldC1Db29raWUiXXx8ZVsic2V0LWNvb2tpZSJdLG49W107aWYoIXQpcmV0dXJuW107dFswXT09PSJbIiYmdFt0Lmxlbmd0aC0xXT09PSJdIiYmKHQ9dC5zbGljZSgxLC0xKSk7bGV0IHI9dC5zcGxpdCgiOyIpO2ZvcihsZXQgcz0wO3M8ci5sZW5ndGg7cysrKXJbc10uaW5kZXhPZigiRXhwaXJlcz0iKSE9PS0xfHxyW3NdLmluZGV4T2YoImV4cGlyZXM9IikhPT0tMT9uLnB1c2gocltzXS5yZXBsYWNlKCIsIiwiIikpOm4ucHVzaChyW3NdKTtyZXR1cm4gbj1uLmpvaW4oIjsiKS5zcGxpdCgiLCIpLG59O2Z1bmN0aW9uIHFDKGUsdCl7aWYoSi5pc1N0cmluZyhlLmRhdGEpJiZlLmRhdGEuY2hhckNvZGVBdCgwKT09PTY1Mjc5JiYoZS5kYXRhPWUuZGF0YS5zbGljZSgxKSksZS5zdGF0dXNDb2RlPXBhcnNlSW50KFN0cmluZyhlLnN0YXR1c0NvZGUpLDEwKSxKLmlzUGxhaW5PYmplY3QoZS5oZWFkZXIpJiYoZS5oZWFkZXI9T2JqZWN0LmtleXMoZS5oZWFkZXIpLnJlZHVjZShmdW5jdGlvbihuLHIpe2xldCBzPWUuaGVhZGVyW3JdO3JldHVybiBKLmlzQXJyYXkocyk/bltyXT1zLmpvaW4oIiwiKTpKLmlzU3RyaW5nKHMpJiYobltyXT1zKSxufSx7fSkpLHQuZGF0YVR5cGUmJnQuZGF0YVR5cGUudG9Mb3dlckNhc2UoKT09PSJqc29uIil0cnl7ZS5kYXRhPUpTT04ucGFyc2UoZS5kYXRhKX1jYXRjaChuKXt9cmV0dXJuIGV9Y2xhc3MgS0N7Y29uc3RydWN0b3IodCl7dGhpcy5fcmVxdWVzdFRhc2s9dH1hYm9ydCgpe3RoaXMuX3JlcXVlc3RUYXNrLmFib3J0KCl9b2ZmSGVhZGVyc1JlY2VpdmVkKCl7fW9uSGVhZGVyc1JlY2VpdmVkKCl7fX1sZXQgSkM9Y2koQzAsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0e2hlYWRlcjpyLG1ldGhvZDpzLGRhdGE6dSx0aW1lb3V0OmcsdXJsOkUscmVzcG9uc2VUeXBlOiQsc3NsVmVyaWZ5OlAsZmlyc3RJcHY0OkwsdGxzOkFlfT1lLE5lO2ZvcihsZXQgQXQgaW4gcilpZihBdC50b0xvd2VyQ2FzZSgpPT09ImNvbnRlbnQtdHlwZSIpe05lPXJbQXRdO2JyZWFrfXMhPT0iR0VUIiYmTmUuaW5kZXhPZigiYXBwbGljYXRpb24vanNvbiIpPT09MCYmSi5pc1BsYWluT2JqZWN0KHUpJiYodT1KU09OLnN0cmluZ2lmeSh1KSk7bGV0IFJlPU9hKCJzdHJlYW0iKSxzdD17fSxwdCwkdCxSdD0hMTtmb3IobGV0IEF0IGluIHIpaWYoIVJ0JiZBdC50b0xvd2VyQ2FzZSgpPT09ImNvbnRlbnQtdHlwZSIpe2lmKFJ0PSEwLHN0WyJDb250ZW50LVR5cGUiXT1yW0F0XSxzIT09IkdFVCImJnJbQXRdLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpPT09MCYmIUouaXNTdHJpbmcodSkmJiEodSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSl7bGV0IGJuPVtdO2ZvcihsZXQgZm4gaW4gdSlKLmhhc093bih1LGZuKSYmYm4ucHVzaChlbmNvZGVVUklDb21wb25lbnQoZm4pKyI9IitlbmNvZGVVUklDb21wb25lbnQodVtmbl0pKTt1PWJuLmpvaW4oIiYiKX19ZWxzZSBzdFtBdF09cltBdF07IVJ0JiZzPT09IlBPU1QiJiYoc3RbIkNvbnRlbnQtVHlwZSJdPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiKSxnJiYocHQ9aygoKT0+eyR0PSEwLG4oInRpbWVvdXQiKX0sZysyMDApKTtsZXQgc249e21ldGhvZDpzLHVybDpFLnRyaW0oKSxoZWFkZXJzOnN0LHR5cGU6JD09PSJhcnJheWJ1ZmZlciI/ImJhc2U2NCI6InRleHQiLHRpbWVvdXQ6Z3x8NmU1LHNzbFZlcmlmeTohUCxmaXJzdElwdjQ6TCx0bHM6QWV9LE1uPSExO3MhPT0iR0VUIiYmKHRvU3RyaW5nLmNhbGwodSk9PT0iW29iamVjdCBBcnJheUJ1ZmZlcl0iP01uPSEwOnNuLmJvZHk9Si5pc1N0cmluZyh1KT91OkpTT04uc3RyaW5naWZ5KHUpKTtsZXQgbG49KHtvazpBdCxzdGF0dXM6Ym4sZGF0YTpmbixoZWFkZXJzOlp0LGVycm9yTXNnOkFufSk9PntpZigkdClyZXR1cm47cHQmJkMocHQpO2xldCBBcj1ibjtpZihBcj4wKXQocUMoe2RhdGE6QXQmJiQ9PT0iYXJyYXlidWZmZXIiP1FvKGZuKTpmbixzdGF0dXNDb2RlOkFyLGhlYWRlcjpadCxjb29raWVzOllDKFp0KX0sZSkpO2Vsc2V7bGV0IFh0PSJhYm9ydCBzdGF0dXNDb2RlOiIrQXI7QW4mJihYdD1YdCsiICIrQW4pLG4oWHQpfX07cmV0dXJuIE1uP1JlLmZldGNoV2l0aEFycmF5QnVmZmVyKHsiQHR5cGUiOiJiaW5hcnkiLGJhc2U2NDpEaSh1KX0sc24sbG4pOlJlLmZldGNoKHNuLGxuKSxuZXcgS0Moe2Fib3J0KCl7JHQ9ITAscHQmJkMocHQpLG4oImFib3J0Iil9fSl9LFAwLE4wKSxaQz14ZShrMCwoe2NlcnRpZmljYXRlczplfSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntPYSgic3RyZWFtIikuY29uZmlnTVRMUyhlLCh7dHlwZTpzLGNvZGU6dSxtZXNzYWdlOmd9KT0+e3N3aXRjaChzKXtjYXNlInN1Y2Nlc3MiOnQoe2NvZGU6dX0pO2JyZWFrO2Nhc2UiZmFpbCI6bihnLHtjb2RlOnV9KTticmVha319KX0sUjAseDApLFJjPVtdLHhjPXt9LHFmPXtvcGVuOiIiLGNsb3NlOiIiLGVycm9yOiIiLG1lc3NhZ2U6IiJ9LGd1O2Z1bmN0aW9uIFhDKGUpe2xldCB0PVN0cmluZyhEYXRlLm5vdygpKSxuO3RyeXtndXx8KGd1PU9hKCJ1bmktd2ViU29ja2V0IiksUUMoZ3UpKSxndS5XZWJTb2NrZXQoe2lkOnQsdXJsOmUudXJsLHByb3RvY29sOkouaXNBcnJheShlLnByb3RvY29scyk/ZS5wcm90b2NvbHMuam9pbigiLCIpOmUucHJvdG9jb2xzLGhlYWRlcjplLmhlYWRlcn0pfWNhdGNoKHIpe249cn1yZXR1cm57c29ja2V0Omd1LHNvY2tldElkOnQsZXJyTXNnOm59fWZ1bmN0aW9uIFFDKGUpe2Uub25vcGVuKHQ9PntsZXQgbj14Y1t0LmlkXTshbnx8bi5fc29ja2V0T25PcGVuKCl9KSxlLm9ubWVzc2FnZSh0PT57bGV0IG49eGNbdC5pZF07IW58fG4uX3NvY2tldE9uTWVzc2FnZSh0KX0pLGUub25lcnJvcih0PT57bGV0IG49eGNbdC5pZF07IW58fG4uX3NvY2tldE9uRXJyb3IoKX0pLGUub25jbG9zZSh0PT57bGV0IG49eGNbdC5pZF07IW58fG4uX3NvY2tldE9uQ2xvc2UoKX0pfWNsYXNzIGVPe2NvbnN0cnVjdG9yKHQsbil7dGhpcy5pZD1uLHRoaXMuX3NvY2tldD10LHRoaXMuX2NhbGxiYWNrcz17b3BlbjpbXSxjbG9zZTpbXSxlcnJvcjpbXSxtZXNzYWdlOltdfSx0aGlzLkNMT1NFRD0zLHRoaXMuQ0xPU0lORz0yLHRoaXMuQ09OTkVDVElORz0wLHRoaXMuT1BFTj0xLHRoaXMucmVhZHlTdGF0ZT10aGlzLkNMT1NFRCwhIXRoaXMuX3NvY2tldH1fc29ja2V0T25PcGVuKCl7dGhpcy5yZWFkeVN0YXRlPXRoaXMuT1BFTix0aGlzLnNvY2tldFN0YXRlQ2hhbmdlKCJvcGVuIil9X3NvY2tldE9uTWVzc2FnZSh0KXt0aGlzLnNvY2tldFN0YXRlQ2hhbmdlKCJtZXNzYWdlIix7ZGF0YTp0eXBlb2YgdC5kYXRhPT0ib2JqZWN0Ij9Rbyh0LmRhdGEuYmFzZTY0KTp0LmRhdGF9KX1fc29ja2V0T25FcnJvcigpe3RoaXMuc29ja2V0U3RhdGVDaGFuZ2UoImVycm9yIiksdGhpcy5vbkVycm9yT3JDbG9zZSgpfV9zb2NrZXRPbkNsb3NlKCl7dGhpcy5zb2NrZXRTdGF0ZUNoYW5nZSgiY2xvc2UiKSx0aGlzLm9uRXJyb3JPckNsb3NlKCl9b25FcnJvck9yQ2xvc2UoKXt0aGlzLnJlYWR5U3RhdGU9dGhpcy5DTE9TRUQsZGVsZXRlIHhjW3RoaXMuaWRdO2xldCB0PVJjLmluZGV4T2YodGhpcyk7dD49MCYmUmMuc3BsaWNlKHQsMSl9c29ja2V0U3RhdGVDaGFuZ2UodCxuPXt9KXtsZXQgcj10PT09Im1lc3NhZ2UiP246e307dGhpcz09PVJjWzBdJiZxZlt0XSYmbXQuaW52b2tlT25DYWxsYmFjayhxZlt0XSxyKSx0aGlzLl9jYWxsYmFja3NbdF0uZm9yRWFjaChzPT57Si5pc0Z1bmN0aW9uKHMpJiZzKHIpfSl9c2VuZCh0LG49ITApe3RoaXMucmVhZHlTdGF0ZSE9PXRoaXMuT1BFTiYmcmUuY2FsbE9wdGlvbnModCwic2VuZFNvY2tldE1lc3NhZ2U6ZmFpbCBXZWJTb2NrZXQgaXMgbm90IGNvbm5lY3RlZCIpO3RyeXt0aGlzLl9zb2NrZXQuc2VuZCh7aWQ6dGhpcy5pZCxkYXRhOnR5cGVvZiB0LmRhdGE9PSJvYmplY3QiP3siQHR5cGUiOiJiaW5hcnkiLGJhc2U2NDpEaSh0LmRhdGEpfTp0LmRhdGF9KSxuJiZyZS5jYWxsT3B0aW9ucyh0LCJzZW5kU29ja2V0TWVzc2FnZTpvayIpfWNhdGNoKHIpe24mJnJlLmNhbGxPcHRpb25zKHQsYHNlbmRTb2NrZXRNZXNzYWdlOmZhaWwgJHtyfWApfX1jbG9zZSh0LG49ITApe3RoaXMucmVhZHlTdGF0ZT10aGlzLkNMT1NJTkc7dHJ5e3RoaXMuX3NvY2tldC5jbG9zZShKLmV4dGVuZCh7aWQ6dGhpcy5pZCxhcmdzOnR9KSksbiYmcmUuY2FsbE9wdGlvbnModCwiY2xvc2VTb2NrZXQ6b2siKX1jYXRjaChyKXtuJiZyZS5jYWxsT3B0aW9ucyh0LGBjbG9zZVNvY2tldDpmYWlsICR7cn1gKX19b25PcGVuKHQpe3RoaXMuX2NhbGxiYWNrcy5vcGVuLnB1c2godCl9b25DbG9zZSh0KXt0aGlzLl9jYWxsYmFja3MuY2xvc2UucHVzaCh0KX1vbkVycm9yKHQpe3RoaXMuX2NhbGxiYWNrcy5lcnJvci5wdXNoKHQpfW9uTWVzc2FnZSh0KXt0aGlzLl9jYWxsYmFja3MubWVzc2FnZS5wdXNoKHQpfX1sZXQgdE89Y2koJDAsKHt1cmw6ZSxwcm90b2NvbHM6dCxoZWFkZXI6bixtZXRob2Q6cn0se3Jlc29sdmU6cyxyZWplY3Q6dX0pPT57bGV0e3NvY2tldDpnLHNvY2tldElkOkUsZXJyTXNnOiR9PVhDKHt1cmw6ZSxwcm90b2NvbHM6dCxoZWFkZXI6bixtZXRob2Q6cn0pLFA9bmV3IGVPKGcsRSk7cmV0dXJuICQ/aygoKT0+e3UoJCl9LDApOihSYy5wdXNoKFApLHhjW0VdPVApLGsoKCk9PntzKCl9LDApLFB9LEgwLFUwKSxuTz14ZShqMCwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1SY1swXTtpZighcnx8ci5yZWFkeVN0YXRlIT09ci5PUEVOKXtuKCJXZWJTb2NrZXQgaXMgbm90IGNvbm5lY3RlZCIpO3JldHVybn1yLnNlbmQoe2RhdGE6ZS5kYXRhfSwhMSksdCgpfSx6MCksck89eGUoVzAsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9UmNbMF07aWYoIXIpe24oIldlYlNvY2tldCBpcyBub3QgY29ubmVjdGVkIik7cmV0dXJufXIucmVhZHlTdGF0ZT1yLkNMT1NJTkcsci5jbG9zZShlLCExKSx0KCl9LEcwKTtmdW5jdGlvbiBGdShlKXtsZXQgdD1gb25Tb2NrZXQke0ouY2FwaXRhbGl6ZShlKX1gO3JldHVybiBKbih0LCgpPT57cWZbZV09dH0pfWxldCBpTz1GdSgib3BlbiIpLG9PPUZ1KCJlcnJvciIpLGFPPUZ1KCJtZXNzYWdlIiksc089RnUoImNsb3NlIik7Y2xhc3MgbE97Y29uc3RydWN0b3IodCl7dGhpcy5fY2FsbGJhY2tzPVtdLHRoaXMuX3VwbG9hZGVyPXQsdC5hZGRFdmVudExpc3RlbmVyKCJzdGF0ZWNoYW5nZWQiLChuLHIpPT57bi51cGxvYWRlZFNpemUmJm4udG90YWxTaXplJiZ0aGlzLl9jYWxsYmFja3MuZm9yRWFjaChzPT57cyh7cHJvZ3Jlc3M6cGFyc2VJbnQoU3RyaW5nKG4udXBsb2FkZWRTaXplL24udG90YWxTaXplKjEwMCkpLHRvdGFsQnl0ZXNTZW50Om4udXBsb2FkZWRTaXplLHRvdGFsQnl0ZXNFeHBlY3RlZFRvU2VuZDpuLnRvdGFsU2l6ZX0pfSl9KX1hYm9ydCgpe3RoaXMuX3VwbG9hZGVyLmFib3J0KCl9b25Qcm9ncmVzc1VwZGF0ZSh0KXshSi5pc0Z1bmN0aW9uKHQpfHx0aGlzLl9jYWxsYmFja3MucHVzaCh0KX1vbkhlYWRlcnNSZWNlaXZlZCgpe31vZmZQcm9ncmVzc1VwZGF0ZSh0KXtsZXQgbj10aGlzLl9jYWxsYmFja3MuaW5kZXhPZih0KTtuPj0wJiZ0aGlzLl9jYWxsYmFja3Muc3BsaWNlKG4sMSl9b2ZmSGVhZGVyc1JlY2VpdmVkKCl7fX1sZXQgY089Y2koTDAsKHt1cmw6ZSx0aW1lb3V0OnQsaGVhZGVyOm4sZm9ybURhdGE6cixmaWxlczpzLGZpbGVQYXRoOnUsbmFtZTpnfSx7cmVzb2x2ZTpFLHJlamVjdDokfSk9Pnt0PSh0fHxSLm5ldHdvcmtUaW1lb3V0JiZSLm5ldHdvcmtUaW1lb3V0LnVwbG9hZEZpbGV8fDYwKjFlMykvMWUzO2xldCBQPWwudXBsb2FkZXIuY3JlYXRlVXBsb2FkKGUse3RpbWVvdXQ6dCxyZXRyeTowLHJldHJ5SW50ZXJ2YWw6MH0sKEFlLE5lKT0+e05lP0Uoe2RhdGE6QWUucmVzcG9uc2VUZXh0LHN0YXR1c0NvZGU6TmV9KTokKGBzdGF0dXNDb2RlOiAke05lfWApfSk7Zm9yKGxldCBBZSBpbiBuKUouaGFzT3duKG4sQWUpJiZQLnNldFJlcXVlc3RIZWFkZXIoQWUsU3RyaW5nKG5bQWVdKSk7Zm9yKGxldCBBZSBpbiByKUouaGFzT3duKHIsQWUpJiZQLmFkZERhdGEoQWUsU3RyaW5nKHJbQWVdKSk7cyYmcy5sZW5ndGg/cy5mb3JFYWNoKEFlPT57UC5hZGRGaWxlKHV0KEFlLnVyaSkse2tleTpBZS5uYW1lfHwiZmlsZSJ9KX0pOlAuYWRkRmlsZSh1dCh1KSx7a2V5Omd9KTtsZXQgTD1uZXcgbE8oUCk7cmV0dXJuIFAuc3RhcnQoKSxMfSxWMCxGMCksT2w9e30sdU89WyJwbGF5IiwiY2FucGxheSIsImVuZGVkIiwic3RvcCIsIndhaXRpbmciLCJzZWVraW5nIiwic2Vla2VkIiwicGF1c2UiXSxOcD0icGxheWJhY2siLGZPPTIwMCxkTz1lPT57bGV0IHQ9T2xbZV07IXR8fHQuaW5pdFN0YXRlQ2hhZ2V8fCh0LmluaXRTdGF0ZUNoYWdlPSEwLHQuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLG49PntrcCh7c3RhdGU6ImVycm9yIixhdWRpb0lkOmUsZXJyTXNnOiJNZWRpYUVycm9yIixlcnJDb2RlOm4uY29kZX0pfSksdU8uZm9yRWFjaChuPT57dC5hZGRFdmVudExpc3RlbmVyKG4sKCk9PntuPT09InBsYXkiP3QuaXNTdG9wcGVkPSExOm49PT0ic3RvcCImJih0LmlzU3RvcHBlZD0hMCksa3Aoe3N0YXRlOm4sYXVkaW9JZDplfSl9KX0pKX07ZnVuY3Rpb24gaE8oKXtsZXQgZT1gJHtEYXRlLm5vdygpfSR7TWF0aC5yYW5kb20oKX1gLHQ9T2xbZV09bC5hdWRpby5jcmVhdGVQbGF5ZXIoIiIpO3JldHVybiB0LnNyYz0iIix0LnZvbHVtZT0xLHQuc3RhcnRUaW1lPTAsdC5zZXRTZXNzaW9uQ2F0ZWdvcnkoTnApLHtlcnJNc2c6ImNyZWF0ZUF1ZGlvSW5zdGFuY2U6b2siLGF1ZGlvSWQ6ZX19ZnVuY3Rpb24gcE8oe2F1ZGlvSWQ6ZSxzcmM6dCxzdGFydFRpbWU6bixhdXRvcGxheTpyPSExLGxvb3A6cz0hMSxvYmV5TXV0ZVN3aXRjaDp1LHZvbHVtZTpnLHNlc3Npb25DYXRlZ29yeTpFPU5wLHBsYXliYWNrUmF0ZTokfSl7bGV0IFA9T2xbZV07aWYoUCl7bGV0IEw9e2xvb3A6cyxhdXRvcGxheTpyfTtpZih0KXtsZXQgQWU9dXQodCk7UC5zcmMhPT1BZSYmKFAuc3JjPUwuc3JjPUFlKX1uJiYoUC5zdGFydFRpbWU9TC5zdGFydFRpbWU9biksdHlwZW9mIGc9PSJudW1iZXIiJiYoUC52b2x1bWU9TC52b2x1bWU9ZyksUC5zZXRTdHlsZXMoTCksRSYmUC5zZXRTZXNzaW9uQ2F0ZWdvcnkoRSksJCYmUC5wbGF5YmFja1JhdGUmJlAucGxheWJhY2tSYXRlKCQpLGRPKGUpfXJldHVybntlcnJNc2c6InNldEF1ZGlvU3RhdGU6b2sifX1mdW5jdGlvbiBnTyh7YXVkaW9JZDplfSl7bGV0IHQ9T2xbZV07aWYoIXQpcmV0dXJue2Vyck1zZzoiZ2V0QXVkaW9TdGF0ZTpmYWlsIn07bGV0e3NyYzpuLHN0YXJ0VGltZTpyLHZvbHVtZTpzfT10O3JldHVybntlcnJNc2c6ImdldEF1ZGlvU3RhdGU6b2siLGR1cmF0aW9uOjFlMyoodC5nZXREdXJhdGlvbigpfHwwKSxjdXJyZW50VGltZTp0LmlzU3RvcHBlZD8wOjFlMyp0LmdldFBvc2l0aW9uKCkscGF1c2VkOnQuaXNQYXVzZWQoKSxzcmM6bix2b2x1bWU6cyxzdGFydFRpbWU6MWUzKnIsYnVmZmVyZWQ6MWUzKnQuZ2V0QnVmZmVyZWQoKX19ZnVuY3Rpb24gdk8oe29wZXJhdGlvblR5cGU6ZSxhdWRpb0lkOnQsY3VycmVudFRpbWU6bn0pe2xldCByPU9sW3RdO3N3aXRjaChlKXtjYXNlInBsYXkiOmNhc2UicGF1c2UiOmNhc2Uic3RvcCI6cltlPT09InBsYXkiJiZyLmlzUGF1c2VkKCk/InJlc3VtZSI6ZV0oKTticmVhaztjYXNlInNlZWsiOnR5cGVvZiBuIT0idW5kZWZpbmVkIiYmci5zZWVrVG8obi8xZTMpO2JyZWFrfXJldHVybntlcnJNc2c6Im9wZXJhdGVBdWRpbzpvayJ9fWxldCBLZj1PYmplY3QuY3JlYXRlKG51bGwpLGtwPSh7c3RhdGU6ZSxhdWRpb0lkOnQsZXJyTXNnOm4sZXJyQ29kZTpyfSk9PntsZXQgcz1LZlt0XTtpZihzKWlmKFpmKHMsZSxuLHIpLGU9PT0icGxheSIpe2xldCB1PXMuY3VycmVudFRpbWU7WmYocywidGltZVVwZGF0ZSIpLHMuX190aW1pbmc9ZCgoKT0+e3MuY3VycmVudFRpbWUhPT11JiZaZihzLCJ0aW1lVXBkYXRlIil9LGZPKX1lbHNlKGU9PT0icGF1c2UifHxlPT09InN0b3AifHxlPT09ImVycm9yIikmJm0ocy5fX3RpbWluZyl9LG1PPVt7bmFtZToic3JjIixjYWNoZTohMH0se25hbWU6InN0YXJ0VGltZSIsZGVmYXVsdDowLGNhY2hlOiEwfSx7bmFtZToiYXV0b3BsYXkiLGRlZmF1bHQ6ITEsY2FjaGU6ITB9LHtuYW1lOiJsb29wIixkZWZhdWx0OiExLGNhY2hlOiEwfSx7bmFtZToib2JleU11dGVTd2l0Y2giLGRlZmF1bHQ6ITAscmVhZG9ubHk6ITAsY2FjaGU6ITB9LHtuYW1lOiJkdXJhdGlvbiIscmVhZG9ubHk6ITB9LHtuYW1lOiJjdXJyZW50VGltZSIscmVhZG9ubHk6ITB9LHtuYW1lOiJwYXVzZWQiLHJlYWRvbmx5OiEwfSx7bmFtZToiYnVmZmVyZWQiLHJlYWRvbmx5OiEwfSx7bmFtZToidm9sdW1lIn0se25hbWU6InBsYXliYWNrUmF0ZSIsY2FjaGU6ITB9XTtjbGFzcyBKZntjb25zdHJ1Y3Rvcih0KXt0aGlzLmlkPXQsdGhpcy5fY2FsbGJhY2tzPXt9LHRoaXMuX29wdGlvbnM9e30scGguZm9yRWFjaChuPT57dGhpcy5fY2FsbGJhY2tzW25dPVtdfSksbU8uZm9yRWFjaChuPT57bGV0IHI9bi5uYW1lO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLHIse2dldDooKT0+e2xldCBzPW4uY2FjaGU/dGhpcy5fb3B0aW9uczpnTyh7YXVkaW9JZDp0aGlzLmlkfSksdT1yIGluIHM/c1tyXTpuLmRlZmF1bHQ7cmV0dXJuIHR5cGVvZiB1PT0ibnVtYmVyIiYmciE9PSJ2b2x1bWUiP3UvMWUzOnV9LHNldDpuLnJlYWRvbmx5P3ZvaWQgMDpzPT57dGhpcy5fb3B0aW9uc1tyXT1zLHBPKEouZXh0ZW5kKHt9LHRoaXMuX29wdGlvbnMse2F1ZGlvSWQ6dGhpcy5pZH0pKX19KX0pLF9PKCl9cGxheSgpe3RoaXMuX29wZXJhdGUoInBsYXkiKX1wYXVzZSgpe3RoaXMuX29wZXJhdGUoInBhdXNlIil9c3RvcCgpe3RoaXMuX29wZXJhdGUoInN0b3AiKX1zZWVrKHQpe3RoaXMuX29wZXJhdGUoInNlZWsiLHtjdXJyZW50VGltZTp0KjFlM30pfWRlc3Ryb3koKXttKHRoaXMuX190aW1pbmcpLE9sW3RoaXMuaWRdJiYoT2xbdGhpcy5pZF0uY2xvc2UoKSxkZWxldGUgT2xbdGhpcy5pZF0pLGRlbGV0ZSBLZlt0aGlzLmlkXX1fb3BlcmF0ZSh0LG4pe3ZPKEouZXh0ZW5kKHt9LG4se2F1ZGlvSWQ6dGhpcy5pZCxvcGVyYXRpb25UeXBlOnR9KSl9fWxldCBfTz1yZS5vbmNlKCgpPT57cGguZm9yRWFjaChlPT57SmYucHJvdG90eXBlW2VdPWZ1bmN0aW9uKHQpe0ouaXNGdW5jdGlvbih0KSYmdGhpcy5fY2FsbGJhY2tzW2VdLnB1c2godCl9fSkscF8uZm9yRWFjaChlPT57SmYucHJvdG90eXBlW2VdPWZ1bmN0aW9uKHQpe2xldCBuPXRoaXMuX2NhbGxiYWNrc1tlXSxyPW4uaW5kZXhPZih0KTtyPj0wJiZuLnNwbGljZShyLDEpfX0pfSk7ZnVuY3Rpb24gWmYoZSx0LG4scil7bGV0IHM9YG9uJHtKLmNhcGl0YWxpemUodCl9YDtlLl9jYWxsYmFja3Nbc10uZm9yRWFjaCh1PT57Si5pc0Z1bmN0aW9uKHUpJiZ1KHQ9PT0iZXJyb3IiP3tlcnJNc2c6bixlcnJDb2RlOnJ9Ont9KX0pfWxldCBiTz1CdChqbSwoKT0+e2xldHthdWRpb0lkOmV9PWhPKCksdD1uZXcgSmYoZSk7cmV0dXJuIEtmW2VdPXQsdH0pLHlPPVsiY2FucGxheSIsInBsYXkiLCJwYXVzZSIsInN0b3AiLCJlbmRlZCIsInRpbWVVcGRhdGUiLCJwcmV2IiwibmV4dCIsImVycm9yIiwid2FpdGluZyJdLFJwPXtjYW5wbGF5OltdLHBsYXk6W10scGF1c2U6W10sc3RvcDpbXSxlbmRlZDpbXSx0aW1lVXBkYXRlOltdLHByZXY6W10sbmV4dDpbXSxlcnJvcjpbXSx3YWl0aW5nOltdfSx0bixYZj1udWxsLEVPPTI1MCx3Tz1bInBsYXkiLCJwYXVzZSIsImVuZGVkIiwic3RvcCIsImNhbnBsYXkiXTtmdW5jdGlvbiBTTygpe1Z1KCksWWwoe3N0YXRlOiJ0aW1lVXBkYXRlIn0pLFhmPWQoKCk9PntZbCh7c3RhdGU6InRpbWVVcGRhdGUifSl9LEVPKX1mdW5jdGlvbiBWdSgpe1hmIT09bnVsbCYmbShYZil9ZnVuY3Rpb24gQ08oKXtpZih0bilyZXR1cm47bGV0IGU9bXQuaW52b2tlT25DYWxsYmFjazt0bj1sLmF1ZGlvLmNyZWF0ZVBsYXllcih7YXV0b3BsYXk6ITAsYmFja2dyb3VuZENvbnRyb2w6ITB9KSx0bi5zcmM9dG4udGl0bGU9dG4uZXBuYW1lPXRuLnNpbmdlcj10bi5jb3ZlckltZ1VybD10bi53ZWJVcmw9IiIsdG4uc3RhcnRUaW1lPTAsd08uZm9yRWFjaCh0PT57dG4uYWRkRXZlbnRMaXN0ZW5lcih0LCgpPT57dD09PSJwbGF5Ij8odG4uaXNTdG9wcGVkPSExLFNPKCkpOnQ9PT0ic3RvcCImJih0bi5pc1N0b3BwZWQ9ITApLCh0PT09InBhdXNlInx8dD09PSJlbmRlZCJ8fHQ9PT0ic3RvcCIpJiZWdSgpO2xldCBuPWBvbk11c2ljJHt0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKX1gO2Uobix7ZGF0YVVybDp0bi5zcmMsZXJyTXNnOmAke259Om9rYH0pLFlsKHtzdGF0ZTp0LGRhdGFVcmw6dG4uc3JjfSl9KX0pLHRuLmFkZEV2ZW50TGlzdGVuZXIoIndhaXRpbmciLCgpPT57VnUoKSxZbCh7c3RhdGU6IndhaXRpbmciLGRhdGFVcmw6dG4uc3JjfSl9KSx0bi5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsdD0+e1Z1KCksZSgib25NdXNpY0Vycm9yIix7ZGF0YVVybDp0bi5zcmMsZXJyTXNnOiJFcnJvcjoiK3QubWVzc2FnZX0pLFlsKHtzdGF0ZToiZXJyb3IiLGRhdGFVcmw6dG4uc3JjLGVyck1zZzp0Lm1lc3NhZ2UsZXJyQ29kZTp0LmNvZGV9KX0pLHRuLmFkZEV2ZW50TGlzdGVuZXIoInByZXYiLCgpPT57WWwoe3N0YXRlOiJwcmV2In0pfSksdG4uYWRkRXZlbnRMaXN0ZW5lcigibmV4dCIsKCk9PntZbCh7c3RhdGU6Im5leHQifSl9KX1mdW5jdGlvbiBPTygpe2xldCBlPXtkdXJhdGlvbjowLGN1cnJlbnRUaW1lOjAscGF1c2VkOiExLHNyYzoiIixidWZmZXJlZDowLHRpdGxlOiIiLGVwbmFtZToiIixzaW5nZXI6IiIsY292ZXJJbWdVcmw6IiIsd2ViVXJsOiIiLHN0YXJ0VGltZTowLGVyck1zZzoiZ2V0QmFja2dyb3VuZEF1ZGlvU3RhdGU6b2sifTtpZih0bil7bGV0IHQ9e2R1cmF0aW9uOnRuLmdldER1cmF0aW9uKCl8fDAsY3VycmVudFRpbWU6dG4uaXNTdG9wcGVkPzA6dG4uZ2V0UG9zaXRpb24oKSxwYXVzZWQ6dG4uaXNQYXVzZWQoKSxzcmM6dG4uc3JjLGJ1ZmZlcmVkOnRuLmdldEJ1ZmZlcmVkKCksdGl0bGU6dG4udGl0bGUsZXBuYW1lOnRuLmVwbmFtZSxzaW5nZXI6dG4uc2luZ2VyLGNvdmVySW1nVXJsOnRuLmNvdmVySW1nVXJsLHdlYlVybDp0bi53ZWJVcmwsc3RhcnRUaW1lOnRuLnN0YXJ0VGltZX07ZT1KLmV4dGVuZChlLHQpfXJldHVybiBlfWZ1bmN0aW9uIHhwKGUsdCl7Q08oKTtsZXQgbj1bInNyYyIsInN0YXJ0VGltZSIsImNvdmVySW1nVXJsIiwid2ViVXJsIiwic2luZ2VyIiwiZXBuYW1lIiwidGl0bGUiXTtpZih0PT09InBsYXliYWNrUmF0ZSIpe2xldCBzPWVbdF07dG4ucGxheWJhY2tSYXRlJiZ0bi5wbGF5YmFja1JhdGUocGFyc2VGbG9hdChzKSk7cmV0dXJufWxldCByPXt9O09iamVjdC5rZXlzKGUpLmZvckVhY2gocz0+e2lmKG4uaW5kZXhPZihzKT49MCl7bGV0IHU9ZVtzXTtzPT09blswXSYmdSYmKHU9dXQodSkpLHRuW3NdPXJbc109dX19KSx0bi5zZXRTdHlsZXMocil9ZnVuY3Rpb24gQU8oe29wZXJhdGlvblR5cGU6ZSxzcmM6dCxwb3NpdGlvbjpuLGFwaTpyPSJvcGVyYXRlTXVzaWNQbGF5ZXIiLHRpdGxlOnMsY292ZXJJbWdVcmw6dX0pe3ZhciBnPVsicmVzdW1lIiwicGF1c2UiLCJzdG9wIl07cmV0dXJuIGcuaW5kZXhPZihlKT4wP3RuJiZ0bltlXSgpOmU9PT0icGxheSI/KHhwKHtzcmM6dCxzdGFydFRpbWU6bix0aXRsZTpzLGNvdmVySW1nVXJsOnV9KSx0bi5wbGF5KCkpOmU9PT0ic2VlayImJnRuJiZ0bi5zZWVrVG8obikse2Vyck1zZzpgJHtyfTpva2B9fWZ1bmN0aW9uIFRPKHtvcGVyYXRpb25UeXBlOmUsc3JjOnQsc3RhcnRUaW1lOm4sY3VycmVudFRpbWU6cn0pe3JldHVybiBBTyh7b3BlcmF0aW9uVHlwZTplLHNyYzp0LHBvc2l0aW9uOm58fHJ8fDAsYXBpOiJvcGVyYXRlQmFja2dyb3VuZEF1ZGlvIn0pfWZ1bmN0aW9uIFlsKHtzdGF0ZTplLGVyck1zZzp0LGVyckNvZGU6bixkYXRhVXJsOnJ9KXtScFtlXS5mb3JFYWNoKHM9PntKLmlzRnVuY3Rpb24ocykmJnMoZT09PSJlcnJvciI/e2Vyck1zZzp0LGVyckNvZGU6bn06e30pfSl9bGV0IElPPXJlLm9uY2UoKCk9Pnt5Ty5mb3JFYWNoKGU9PntCcC5wcm90b3R5cGVbYG9uJHtKLmNhcGl0YWxpemUoZSl9YF09ZnVuY3Rpb24odCl7UnBbZV0ucHVzaCh0KX19KX0pLFBPPVt7bmFtZToiZHVyYXRpb24iLHJlYWRvbmx5OiEwfSx7bmFtZToiY3VycmVudFRpbWUiLHJlYWRvbmx5OiEwfSx7bmFtZToicGF1c2VkIixyZWFkb25seTohMH0se25hbWU6InNyYyIsY2FjaGU6ITB9LHtuYW1lOiJzdGFydFRpbWUiLGRlZmF1bHQ6MCxjYWNoZTohMH0se25hbWU6ImJ1ZmZlcmVkIixyZWFkb25seTohMH0se25hbWU6InRpdGxlIixjYWNoZTohMH0se25hbWU6ImVwbmFtZSIsY2FjaGU6ITB9LHtuYW1lOiJzaW5nZXIiLGNhY2hlOiEwfSx7bmFtZToiY292ZXJJbWdVcmwiLGNhY2hlOiEwfSx7bmFtZToid2ViVXJsIixjYWNoZTohMH0se25hbWU6InByb3RvY29sIixyZWFkb25seTohMCxkZWZhdWx0OiJodHRwIn0se25hbWU6InBsYXliYWNrUmF0ZSIsZGVmYXVsdDoxLGNhY2hlOiEwfV07Y2xhc3MgQnB7Y29uc3RydWN0b3IoKXt0aGlzLl9vcHRpb25zPXt9LFBPLmZvckVhY2godD0+e2xldCBuPXQubmFtZTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxuLHtnZXQ6KCk9PntsZXQgcj10LmNhY2hlP3RoaXMuX29wdGlvbnM6T08oKTtyZXR1cm4gbiBpbiByP3Jbbl06dC5kZWZhdWx0fSxzZXQ6dC5yZWFkb25seT92b2lkIDA6cj0+e3RoaXMuX29wdGlvbnNbbl09cix4cCh0aGlzLl9vcHRpb25zLG4pfX0pfSksSU8oKX1wbGF5KCl7dGhpcy5fb3BlcmF0ZSgicGxheSIpfXBhdXNlKCl7dGhpcy5fb3BlcmF0ZSgicGF1c2UiKX1zdG9wKCl7dGhpcy5fb3BlcmF0ZSgic3RvcCIpfXNlZWsodCl7dGhpcy5fb3BlcmF0ZSgic2VlayIse2N1cnJlbnRUaW1lOnR9KX1fb3BlcmF0ZSh0LG4pe1RPKEouZXh0ZW5kKHt9LG4se29wZXJhdGlvblR5cGU6dH0pKX19bGV0IE1wLE5PPUJ0KHNiLCgpPT5NcHx8KE1wPW5ldyBCcCkpO2NsYXNzIGtPe2NvbnN0cnVjdG9yKHQsbil7dGhpcy5pZD10LHRoaXMuY3R4PW59c3RhcnQodCl7cmV0dXJuIEd0KHRoaXMuY3R4LCJzdGFydCIsdCl9c3RvcCh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInN0b3AiLHQpfXBhdXNlKHQpe3JldHVybiBHdCh0aGlzLmN0eCwicGF1c2UiLHQpfXJlc3VtZSh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInJlc3VtZSIsdCl9c3dpdGNoQ2FtZXJhKHQpe3JldHVybiBHdCh0aGlzLmN0eCwic3dpdGNoQ2FtZXJhIix0KX1zbmFwc2hvdCh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInNuYXBzaG90Iix0KX10b2dnbGVUb3JjaCh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInRvZ2dsZVRvcmNoIix0KX1wbGF5QkdNKHQpe3JldHVybiBZdCh0aGlzLmN0eCwicGxheUJHTSIsdCl9c3RvcEJHTSh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInN0b3BCR00iLHQpfXBhdXNlQkdNKHQpe3JldHVybiBHdCh0aGlzLmN0eCwicGF1c2VCR00iLHQpfXJlc3VtZUJHTSh0KXtyZXR1cm4gR3QodGhpcy5jdHgsInJlc3VtZUJHTSIsdCl9c2V0QkdNVm9sdW1lKHQpe3JldHVybiBZdCh0aGlzLmN0eCwic2V0QkdNVm9sdW1lIix0KX1zdGFydFByZXZpZXcodCl7cmV0dXJuIEd0KHRoaXMuY3R4LCJzdGFydFByZXZpZXciLHQpfXN0b3BQcmV2aWV3KHQpe3JldHVybiBHdCh0aGlzLmN0eCwic3RvcFByZXZpZXciLHQpfX1mdW5jdGlvbiBBbChlLHQsbixyKXttdC5pbnZva2VWaWV3TWV0aG9kKCJsaXZlcHVzaGVyLiIrZSx7bGl2ZVB1c2hlcklkOmUsdHlwZTpuLGRhdGE6cn0sdCl9Y2xhc3MgUk97Y29uc3RydWN0b3IodCxuKXt0aGlzLmlkPXQsdGhpcy5wYWdlSWQ9bn1zdGFydCgpe0FsKHRoaXMuaWQsdGhpcy5wYWdlSWQsInN0YXJ0Iil9c3RvcCgpe0FsKHRoaXMuaWQsdGhpcy5wYWdlSWQsInN0b3AiKX1wYXVzZSgpe0FsKHRoaXMuaWQsdGhpcy5wYWdlSWQsInBhdXNlIil9cmVzdW1lKCl7QWwodGhpcy5pZCx0aGlzLnBhZ2VJZCwicmVzdW1lIil9c3dpdGNoQ2FtZXJhKCl7QWwodGhpcy5pZCx0aGlzLnBhZ2VJZCwic3dpdGNoQ2FtZXJhIil9c3RhcnRQcmV2aWV3KCl7QWwodGhpcy5pZCx0aGlzLnBhZ2VJZCwicHJldmlldyIpfXN0b3BQcmV2aWV3KCl7QWwodGhpcy5pZCx0aGlzLnBhZ2VJZCwic3RvcCIpfXNuYXBzaG90KCl7QWwodGhpcy5pZCx0aGlzLnBhZ2VJZCwic25hcHNob3QiKX19bGV0IHhPPUJ0KHptLChlLHQpPT57aWYodC4kcGFnZS5tZXRhLmlzTlZ1ZSl7aWYoIXQpcmV0dXJuIGNvbnNvbGUud2FybigidW5pLmNyZWF0ZUxpdmVQdXNoZXJDb250ZXh0OiAyIGFyZ3VtZW50cyByZXF1aXJlZCwgYnV0IG9ubHkgMSBwcmVzZW50Iik7bGV0IG49ZXIoZSx0KTtyZXR1cm4gbj9uZXcga08oZSxuKTpjb25zb2xlLndhcm4oIkNhbiBub3QgZmluZCBgIitlKyJgIil9cmV0dXJuIG5ldyBSTyhlLHQuJHBhZ2UuaWQpfSxXbSksSmk9My4xNDE1OTI2NTM1ODk3OTMsJHU9NjM3ODI0NSxVdT0uMDA2NjkzNDIxNjIyOTY1OTQzO2Z1bmN0aW9uIEJPKGUsdCl7aWYodD0rdCxlPStlLERwKGUsdCkpcmV0dXJuW2UsdF07bGV0IG49THAoZS0xMDUsdC0zNSkscj1GcChlLTEwNSx0LTM1KSxzPXQvMTgwKkppLHU9TWF0aC5zaW4ocyk7dT0xLVV1KnUqdTtsZXQgZz1NYXRoLnNxcnQodSk7bj1uKjE4MC8oJHUqKDEtVXUpLyh1KmcpKkppKSxyPXIqMTgwLygkdS9nKk1hdGguY29zKHMpKkppKTtsZXQgRT10K24sJD1lK3I7cmV0dXJuW2UqMi0kLHQqMi1FXX1mdW5jdGlvbiBNTyhlLHQpe2lmKHQ9K3QsZT0rZSxEcChlLHQpKXJldHVybltlLHRdO2xldCBuPUxwKGUtMTA1LHQtMzUpLHI9RnAoZS0xMDUsdC0zNSkscz10LzE4MCpKaSx1PU1hdGguc2luKHMpO3U9MS1VdSp1KnU7bGV0IGc9TWF0aC5zcXJ0KHUpO249bioxODAvKCR1KigxLVV1KS8odSpnKSpKaSkscj1yKjE4MC8oJHUvZypNYXRoLmNvcyhzKSpKaSk7bGV0IEU9dCtuO3JldHVybltlK3IsRV19bGV0IERwPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU8NzIuMDA0fHxlPjEzNy44MzQ3fHx0PC44MjkzfHx0PjU1LjgyNzF8fCExfSxMcD1mdW5jdGlvbihlLHQpe2xldCBuPS0xMDArMiplKzMqdCsuMip0KnQrLjEqZSp0Ky4yKk1hdGguc3FydChNYXRoLmFicyhlKSk7cmV0dXJuIG4rPSgyMCpNYXRoLnNpbig2KmUqSmkpKzIwKk1hdGguc2luKDIqZSpKaSkpKjIvMyxuKz0oMjAqTWF0aC5zaW4odCpKaSkrNDAqTWF0aC5zaW4odC8zKkppKSkqMi8zLG4rPSgxNjAqTWF0aC5zaW4odC8xMipKaSkrMzIwKk1hdGguc2luKHQqSmkvMzApKSoyLzMsbn0sRnA9ZnVuY3Rpb24oZSx0KXtsZXQgbj0zMDArZSsyKnQrLjEqZSplKy4xKmUqdCsuMSpNYXRoLnNxcnQoTWF0aC5hYnMoZSkpO3JldHVybiBuKz0oMjAqTWF0aC5zaW4oNiplKkppKSsyMCpNYXRoLnNpbigyKmUqSmkpKSoyLzMsbis9KDIwKk1hdGguc2luKGUqSmkpKzQwKk1hdGguc2luKGUvMypKaSkpKjIvMyxuKz0oMTUwKk1hdGguc2luKGUvMTIqSmkpKzMwMCpNYXRoLnNpbihlLzMwKkppKSkqMi8zLG59O2Z1bmN0aW9uIFZwKGUsdCxuKXtsZXQgcj10LmNvb3JkcztpZihlIT09dC5jb29yZHNUeXBlKXtsZXQgcztlPT09Indnczg0Ij9zPUJPKHIubG9uZ2l0dWRlLHIubGF0aXR1ZGUpOmU9PT0iZ2NqMDIiJiYocz1NTyhyLmxvbmdpdHVkZSxyLmxhdGl0dWRlKSkscyYmKHIubG9uZ2l0dWRlPXNbMF0sci5sYXRpdHVkZT1zWzFdKX1uKHt0eXBlOmUsYWx0aXR1ZGU6ci5hbHRpdHVkZXx8MCxsYXRpdHVkZTpyLmxhdGl0dWRlLGxvbmdpdHVkZTpyLmxvbmdpdHVkZSxzcGVlZDpyLnNwZWVkLGFjY3VyYWN5OnIuYWNjdXJhY3ksYWRkcmVzczp0LmFkZHJlc3MsZXJyTXNnOiJnZXRMb2NhdGlvbjpvayJ9KX1sZXQgRE89eGUoanksKHt0eXBlOmU9Indnczg0IixnZW9jb2RlOnQ9ITEsYWx0aXR1ZGU6bj0hMSxoaWdoQWNjdXJhY3lFeHBpcmVUaW1lOnIsaXNIaWdoQWNjdXJhY3k6cz0hMX0se3Jlc29sdmU6dSxyZWplY3Q6Z30pPT57bC5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oRT0+e1ZwKGUsRSx1KX0sRT0+e2lmKEUuY29kZT09PTE1MDEpe1ZwKGUsRSx1KTtyZXR1cm59ZygiZ2V0TG9jYXRpb246ZmFpbCAiK0UubWVzc2FnZSl9LHtnZW9jb2RlOnQsZW5hYmxlSGlnaEFjY3VyYWN5OnN8fG4sdGltZW91dDpyLGNvb3Jkc1R5cGU6ZX0pfSxXeSx6eSksTE89eGUoVXksKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHM9Y3AoKSE9PSJsaWdodCIsdSxnPUhzKHt1cmw6Il9fdW5pYXBwY2hvb3NlbG9jYXRpb24iLGRhdGE6Si5leHRlbmQoe30sZSx7bG9jYWxlOm91KCl9KSxzdHlsZTp7YW5pbWF0aW9uVHlwZTplLmFuaW1hdGlvblR5cGV8fCJzbGlkZS1pbi1ib3R0b20iLHRpdGxlTlZpZXc6ITEscG9wR2VzdHVyZToiY2xvc2UiLHNjcm9sbEluZGljYXRvcjoibm9uZSJ9LG9uTWVzc2FnZSh7ZXZlbnQ6RSxkZXRhaWw6JH0pe0U9PT0ic2VsZWN0ZWQiJiYodT0kKX0sb25DbG9zZSgpe3MmJmwubmF2aWdhdG9yLnNldFN0YXR1c0JhclN0eWxlKCJkYXJrIiksdT90KHUpOm4oImNhbmNlbCIpfX0pO3MmJihsLm5hdmlnYXRvci5zZXRTdGF0dXNCYXJTdHlsZSgibGlnaHQiKSxnLndlYnZpZXcuYWRkRXZlbnRMaXN0ZW5lcigicG9wR2VzdHVyZSIsKHt0eXBlOkUscmVzdWx0OiR9KT0+e0U9PT0ic3RhcnQiP2wubmF2aWdhdG9yLnNldFN0YXR1c0JhclN0eWxlKCJkYXJrIik6RT09PSJlbmQiJiYhJCYmbC5uYXZpZ2F0b3Iuc2V0U3RhdHVzQmFyU3R5bGUoImxpZ2h0Iil9KSl9LEh5KSxGTz14ZShHeSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PihIcyh7dXJsOiJfX3VuaWFwcG9wZW5sb2NhdGlvbiIsZGF0YTpKLmV4dGVuZCh7fSxlLHtsb2NhbGU6b3UoKX0pLHN0eWxlOnt0aXRsZU5WaWV3Ont0eXBlOiJ0cmFuc3BhcmVudCJ9LHBvcEdlc3R1cmU6ImNsb3NlIixiYWNrQnV0dG9uQXV0b0NvbnRyb2w6ImNsb3NlIn0sb25DbG9zZSgpe24oImNhbmNlbCIpfX0pLHQoKSkscXksWXkpLEh1PSExLHZ1PTAsVk89eGUoWTAsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57dnU9dnV8fGwuZ2VvbG9jYXRpb24ud2F0Y2hQb3NpdGlvbihyPT57SHU9ITAsbXQuaW52b2tlT25DYWxsYmFjayhIaCxyLmNvb3Jkcyl9LHI9PntIdXx8KG4oci5tZXNzYWdlKSxIdT0hMCksbXQuaW52b2tlT25DYWxsYmFjayhqaCx7ZXJyTXNnOmBvbkxvY2F0aW9uQ2hhbmdlOmZhaWwgJHtyLm1lc3NhZ2V9YH0pfSx7Y29vcmRzVHlwZTplPT1udWxsP3ZvaWQgMDplLnR5cGV9KSxrKHQsMTAwKX0sWjAsWDApLCRPPXhlKHEwLChlLHtyZXNvbHZlOnR9KT0+e3Z1JiYobC5nZW9sb2NhdGlvbi5jbGVhcldhdGNoKHZ1KSxIdT0hMSx2dT0wKSx0KCl9KSxVTz1KbihIaCwoKT0+e30pLEhPPW9yKEswLCgpPT57fSksak89Sm4oamgsKCk9Pnt9KSx6Tz1vcihKMCwoKT0+e30pLFdPPXhlKERFLCh7dGl0bGU6ZT0iIixjb250ZW50OnQ9IiIsc2hvd0NhbmNlbDpuPSEwLGNhbmNlbFRleHQ6cixjYW5jZWxDb2xvcjpzLGNvbmZpcm1UZXh0OnUsY29uZmlybUNvbG9yOmcsZWRpdGFibGU6RT0hMSxwbGFjZWhvbGRlclRleHQ6JD0iIn09e30se3Jlc29sdmU6UH0pPT57bGV0IEw9bj9bcix1XTpbdV0sQWU9RT8kOkw7dD10fHwiICIsbC5uYXRpdmVVSVtFPyJwcm9tcHQiOiJjb25maXJtIl0odCxOZT0+e2lmKG4pe2xldCBSZT1OZS5pbmRleD09PTEsc3Q9e2NvbmZpcm06UmUsY2FuY2VsOk5lLmluZGV4PT09MHx8TmUuaW5kZXg9PT0tMX07UmUmJkUmJihzdC5jb250ZW50PU5lLnZhbHVlKSxQKHN0KX1lbHNle2xldCBSZT17Y29uZmlybTpOZS5pbmRleD09PTAsY2FuY2VsOiExfTtFJiYoUmUuY29udGVudD1OZS52YWx1ZSksUChSZSl9fSxlLEFlLEwpfSxMRSxGRSksR089e2xpZ2h0OntpdGVtQ29sb3I6IiMwMDAwMDAifSxkYXJrOntpdGVtQ29sb3I6InJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KSJ9fSxZTz14ZShORSwoe2l0ZW1MaXN0OmU9W10saXRlbUNvbG9yOnQsdGl0bGU6bj0iIixwb3BvdmVyOnJ9LHtyZXNvbHZlOnMscmVqZWN0OnV9KT0+e3Q9PT0iIzAwMCImJlIuZGFya21vZGUmJih0PUdPW2wubmF2aWdhdG9yLmdldFVJU3R5bGUoKV0uaXRlbUNvbG9yKSxLKCk7bGV0e3Q6Z309Y2UoKSxFPXt0aXRsZTpuLGNhbmNlbDpnKCJ1bmkuc2hvd0FjdGlvblNoZWV0LmNhbmNlbCIpLGJ1dHRvbnM6ZS5tYXAoJD0+KHt0aXRsZTokLGNvbG9yOnR9KSl9O2wubmF0aXZlVUkuYWN0aW9uU2hlZXQoSi5leHRlbmQoRSx7cG9wb3ZlcjpyfSksJD0+eyQuaW5kZXg+MD9zKHt0YXBJbmRleDokLmluZGV4LTF9KTp1KCJzaG93QWN0aW9uU2hlZXQ6ZmFpbCBjYW5jZWwiKX0pfSxrRSxSRSksbXUsUWY9ITEsanU9IiIsenUscU89eGUoeEUsKGUsdCk9PiRwKEouZXh0ZW5kKHt9LGUse3R5cGU6ImxvYWRpbmciLGljb246ImxvYWRpbmcifSksdCksQkUsTUUpLCRwPSh7dGl0bGU6ZT0iIixpY29uOnQ9InN1Y2Nlc3MiLGltYWdlOm49IiIsZHVyYXRpb246cj0xNTAwLG1hc2s6cz0hMSxwb3NpdGlvbjp1LHR5cGU6Zz0idG9hc3QiLHN0eWxlOkV9LHtyZXNvbHZlOiQscmVqZWN0OlB9KT0+e2lmKFd1KCIiKSxqdT1nLFsidG9wIiwiY2VudGVyIiwiYm90dG9tIl0uaW5jbHVkZXMoU3RyaW5nKHUpKSlsLm5hdGl2ZVVJLnRvYXN0KGUse3ZlcnRpY2FsQWxpZ246dX0pLFFmPSEwO2Vsc2V7dCYmIX5bInN1Y2Nlc3MiLCJsb2FkaW5nIiwiZXJyb3IiLCJub25lIl0uaW5kZXhPZih0KSYmKHQ9InN1Y2Nlc3MiKTtsZXQgTD17bW9kYWw6cyxiYWNrOiJ0cmFuc21pdCIscGFkZGluZzoiMTBweCIsc2l6ZToiMTZweCJ9OyFuJiYoIXR8fHQ9PT0ibm9uZSIpP0wubG9hZGluZz17ZGlzcGxheToibm9uZSJ9OihMLndpZHRoPSIxNDBweCIsTC5oZWlnaHQ9IjExMnB4Iiksbj9MLmxvYWRpbmc9e2Rpc3BsYXk6ImJsb2NrIixoZWlnaHQ6IjU1cHgiLGljb246bixpbnRlcnZhbDpyfTpbInN1Y2Nlc3MiLCJlcnJvciJdLmluZGV4T2YodCkhPT0tMSYmKEwubG9hZGluZz17ZGlzcGxheToiYmxvY2siLGhlaWdodDoiNTVweCIsaWNvbjp0PT09InN1Y2Nlc3MiPyJfX3VuaWFwcHN1Y2Nlc3MucG5nIjoiX191bmlhcHBlcnJvci5wbmciLGludGVydmFsOnJ9KTt0cnl7bXU9bC5uYXRpdmVVSS5zaG93V2FpdGluZyhlLEouZXh0ZW5kKEwsRSkpfWNhdGNoKEFlKXtQKGAke0FlfWApfX1yZXR1cm4ganU9PT0idG9hc3QiJiYoenU9aygoKT0+e1d1KCIiKX0scikpLCQoKX0sS089eGUoVkUsJHAsVUUsSEUpLEpPPXhlKF9FLChlLHQpPT5XdSgidG9hc3QiLHQpKSxaTz14ZShtRSwoZSx0KT0+V3UoImxvYWRpbmciLHQpKTtmdW5jdGlvbiBXdShlPSJ0b2FzdCIsdCl7cmV0dXJuIGUmJmUhPT1qdXx8KHp1JiYoQyh6dSksenU9bnVsbCksUWY/bC5uYXRpdmVVSS5jbG9zZVRvYXN0KCk6bXUmJm11LmNsb3NlJiZtdS5jbG9zZSgpLG11PW51bGwsUWY9ITEsanU9IiIpLHQmJnQucmVzb2x2ZSgpfWxldCBYTz14ZShqRSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1scCgpO2lmKHImJnIuZW5kUHVsbFRvUmVmcmVzaCgpLHI9RHUoKSwhcilyZXR1cm4gbigpO3IuYmVnaW5QdWxsVG9SZWZyZXNoKCksamYociksdCgpfSksUU89eGUoekUsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9bHAoKXx8RHUoKTtpZighcilyZXR1cm4gbigpO3IuZW5kUHVsbFRvUmVmcmVzaCgpLGpmKG51bGwpLHQoKX0pLGVBPXhlKHFoLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2xldCByPVFuKHpyKCkpO210Lmludm9rZVZpZXdNZXRob2QocWgsZSxyLHM9PntzP24ocyk6dCgpfSl9LGJFKSx0QT14ZShLaCwoZSx7cmVzb2x2ZTp0fSk9PntsZXQgbj1Rbih6cigpKTttdC5pbnZva2VWaWV3TWV0aG9kKEtoLGUsbix0KX0sSUUsUEUpLG5BPXhlKENFLCh7X19wYWdlX186ZSx0aXRsZTp0fSx7cmVzb2x2ZTpuLHJlamVjdDpyfSk9PntsZXQgcz1hcChlKTtpZihzKXtsZXQgdT1zLmdldFN0eWxlKCk7dSYmdS50aXRsZU5WaWV3JiZzLnNldFN0eWxlKHt0aXRsZU5WaWV3Ont0aXRsZVRleHQ6dH19KSxuKCl9ZWxzZSByKCl9LE9FKSxyQT14ZShBRSwoZSx7cmVzb2x2ZTp0fSk9PntsLm5hdGl2ZVVJLnNob3dXYWl0aW5nKCIiLHttb2RhbDohMX0pLHQoKX0pLGlBPXhlKFRFLChlLHtyZXNvbHZlOnR9KT0+e2wubmF0aXZlVUkuY2xvc2VXYWl0aW5nKCksdCgpfSk7ZnVuY3Rpb24gb0EoZSl7bGV0IHQ9cW4oKTshdC5sZW5ndGh8fCh0W3QubGVuZ3RoLTFdLiRwYWdlLnN0YXR1c0JhclN0eWxlPWUpfWxldCBhQT14ZShFRSwoe19fcGFnZV9fOmUsZnJvbnRDb2xvcjp0LGJhY2tncm91bmRDb2xvcjpufSx7cmVzb2x2ZTpyLHJlamVjdDpzfSk9PntsZXQgdT1hcChlKTtpZih1KXtsZXQgZz17fTt0JiYoZy50aXRsZUNvbG9yPXQpLG4mJihnLmJhY2tncm91bmRDb2xvcj1uKTtsZXQgRT10PT09IiMwMDAwMDAiPyJkYXJrIjoibGlnaHQiO2wubmF2aWdhdG9yLnNldFN0YXR1c0JhclN0eWxlKEUpLG9BKEUpO2xldCAkPXUuZ2V0U3R5bGUoKTskJiYkLnRpdGxlTlZpZXcmJigkLnRpdGxlTlZpZXcuYXV0b0JhY2tCdXR0b24mJihnLmJhY2tCdXR0b249Zy5iYWNrQnV0dG9ufHx7fSxnLmJhY2tCdXR0b24uY29sb3I9dCksdS5zZXRTdHlsZSh7dGl0bGVOVmlldzpnfSkpLHIoKX1lbHNlIHMoKX0sU0Usd0UpLHNBPXhlKHV3LCh7aW5kZXg6ZSx0ZXh0OnR9LHtyZXNvbHZlOm4scmVqZWN0OnJ9KT0+e05pLnNldFRhYkJhckJhZGdlKCJ0ZXh0IixlLHQpLG4oKX0sZncsZHcpLGxBPXhlKFdFLCh7aW5kZXg6ZSx0ZXh0OnQsaWNvblBhdGg6bixzZWxlY3RlZEljb25QYXRoOnIscGFnZVBhdGg6cyx2aXNpYmxlOnUsaWNvbmZvbnQ6Z30se3Jlc29sdmU6RX0pPT57aWYoTmkuc2V0VGFiQmFySXRlbShlLHQsbixyLHUsZykscyl7bGV0ICQ9Ui50YWJCYXIubGlzdFtlXTtpZigkKXtsZXQgUD0kLnBhZ2VQYXRoLEw9cmUucmVtb3ZlTGVhZGluZ1NsYXNoKHMpO0whPT1QJiZhbChlLFAsTCl9fUUoKX0sR0UsWUUpLGNBPXhlKHFFLChlPXt9LHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2lmKCF1dSgpKXJldHVybiBuKCJub3QgVGFiQmFyIHBhZ2UiKTtlLmJvcmRlclN0eWxlPXJlLm5vcm1hbGl6ZVRhYkJhclN0eWxlcyhlLmJvcmRlclN0eWxlKSxOaS5zZXRUYWJCYXJTdHlsZShlKSx0KCl9LEtFLFpFKSx1QT14ZShYRSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1lJiZlLmFuaW1hdGlvbjtpZighdXUoKSlyZXR1cm4gbigibm90IFRhYkJhciBwYWdlIik7TmkuaGlkZVRhYkJhcihCb29sZWFuKHIpKSx0KCl9LEpoKSxmQT14ZShRRSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1lJiZlLmFuaW1hdGlvbjtpZighdXUoKSlyZXR1cm4gbigibm90IFRhYkJhciBwYWdlIik7Tmkuc2hvd1RhYkJhcihCb29sZWFuKHIpKSx0KCl9LGV3KSxkQT14ZShpdywoe2luZGV4OmV9LHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e05pLnNldFRhYkJhckJhZGdlKCJyZWREb3QiLGUpLHQoKX0sb3csYXcpLFVwPWU9Pk5pLnNldFRhYkJhckJhZGdlKCJub25lIixlKSxoQT14ZShzdywoe2luZGV4OmV9LHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e1VwKGUpLHQoKX0sbHcsY3cpLHBBPXhlKHR3LCh7aW5kZXg6ZX0se3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57VXAoZSksdCgpfSxudyxydyksSHA9InZkU3luYyIsZ0E9Il9fdW5pYXBwX19zZXJ2aWNlIixCYz0ib25XZWJ2aWV3UmVhZHkiLHZBPTAsbUE9IndlYnZpZXdJbnNlcnRlZCIsX0E9IndlYnZpZXdSZW1vdmVkIixqcD0iVW5pQXBwU3ViTlZ1ZSI7Y2xhc3MgYkF7Y29uc3RydWN0b3IodCxuKXt0aGlzLmNhbGxiYWNrcz1bXTtsZXQgcj10aGlzLndlYnZpZXc9bC53ZWJ2aWV3LmdldFdlYnZpZXdCeUlkKHQpO2lmKHRoaXMuaXNTdWI9bnx8ITEsci5fX3VuaWFwcF9tYXNrX2lkKXtsZXQgcz10aGlzLm1hc2tXZWJ2aWV3PXIuX191bmlhcHBfbWFza19pZD09PSIwIj97c2V0U3R5bGUoe21hc2s6Z30pe09hKCJ1bmktdGFidmlldyIpLnNldE1hc2soe2NvbG9yOmd9KX19Omwud2Vidmlldy5nZXRXZWJ2aWV3QnlJZChyLl9fdW5pYXBwX21hc2tfaWQpLHU9ZnVuY3Rpb24oKXtzLnNldFN0eWxlKHttYXNrOiJub25lIn0pfTtyLmFkZEV2ZW50TGlzdGVuZXIoImhpZGUiLHUpLHIuYWRkRXZlbnRMaXN0ZW5lcigiY2xvc2UiLHUpfX1zaG93KC4uLnQpe2lmKHRoaXMubWFza1dlYnZpZXcpe2xldCBuPXRoaXMud2Vidmlldy5fX3VuaWFwcF9tYXNrO3RoaXMubWFza1dlYnZpZXcuc2V0U3R5bGUoe21hc2s6bn0pfXRoaXMud2Vidmlldy5zaG93KC4uLnQpfWhpZGUoLi4udCl7dGhpcy53ZWJ2aWV3LmhpZGUoLi4udCl9c2V0U3R5bGUodCl7dGhpcy53ZWJ2aWV3LnNldFN0eWxlKHQpfWluaXRNZXNzYWdlKCl7aWYodGhpcy5tZXNzYWdlUmVhZHkpcmV0dXJuO3RoaXMubWVzc2FnZVJlYWR5PSEwO2xldCB0PXI9PntpZihyLmRhdGEmJnIuZGF0YS50eXBlPT09anApe2xldCBzPXIuZGF0YS50YXJnZXQ7cy5pZD09PXRoaXMud2Vidmlldy5pZCYmcy5pc1N1Yj09PXRoaXMuaXNTdWImJnRoaXMuY2FsbGJhY2tzLmZvckVhY2godT0+e3Uoe29yaWdpbjp0aGlzLndlYnZpZXcuX191bmlhcHBfaG9zdCxkYXRhOnIuZGF0YS5kYXRhfSl9KX19O09hKCJnbG9iYWxFdmVudCIpLmFkZEV2ZW50TGlzdGVuZXIoInBsdXNNZXNzYWdlIix0KSx0aGlzLndlYnZpZXcuYWRkRXZlbnRMaXN0ZW5lcigiY2xvc2UiLCgpPT57dGhpcy5jYWxsYmFja3MubGVuZ3RoPTB9KX1wb3N0TWVzc2FnZSh0KXtsLndlYnZpZXcucG9zdE1lc3NhZ2VUb1VuaU5WaWV3KHt0eXBlOmpwLGRhdGE6dCx0YXJnZXQ6e2lkOnRoaXMud2Vidmlldy5pZCxpc1N1YjohdGhpcy5pc1N1Yn19LGdBKX1vbk1lc3NhZ2UodCl7dGhpcy5pbml0TWVzc2FnZSgpLHRoaXMuY2FsbGJhY2tzLnB1c2godCl9fWxldCB5QT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgYkEoZSx0KX07ZnVuY3Rpb24gRUEoZSx0LG4scixzLHUsZyl7bCE9PW4mJihUPUxuPWUsdj10LGw9bixfUyhsLm5hdmlnYXRvci5zZXRTdGF0dXNCYXJTdHlsZSksbC5uYXZpZ2F0b3Iuc2V0U3RhdHVzQmFyU3R5bGU9bnAsaz1yLEM9cyxkPXUsbT1nKSxSLnNlcnZpY2VSZWFkeT0hMH1mdW5jdGlvbiB3QSgpe2xldCBlPVsiQXJyYXlCdWZmZXIiLCJJbnQ4QXJyYXkiLCJVaW50OEFycmF5IiwiVWludDhDbGFtcGVkQXJyYXkiLCJJbnQxNkFycmF5IiwiVWludDE2QXJyYXkiLCJJbnQzMkFycmF5IiwiVWludDMyQXJyYXkiLCJGbG9hdDMyQXJyYXkiLCJGbG9hdDY0QXJyYXkiLCJCaWdJbnQ2NEFycmF5IiwiQmlnVWludDY0QXJyYXkiXSx0PXt9O2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtsZXQgcj1lW25dO3Rbcl09Z2xvYmFsW3JdfXJldHVybiB0fWZ1bmN0aW9uIFNBKGUpe0ouZXh0ZW5kKGdsb2JhbCxlKX1sZXQgenA9e29hdXRoKGUpe2wub2F1dGguZ2V0U2VydmljZXModD0+e3Q9dDtsZXQgbj1bXTt0LmZvckVhY2goKHtpZDpyfSk9PntuLnB1c2gocil9KSxlKG51bGwsbix0KX0sdD0+e3Q9dCxlKHQpfSl9LHNoYXJlKGUpe2wuc2hhcmUuZ2V0U2VydmljZXModD0+e3Q9dDtsZXQgbj1bXTt0LmZvckVhY2goKHtpZDpyfSk9PntuLnB1c2gocil9KSxlKG51bGwsbix0KX0sdD0+e2UodCl9KX0scGF5bWVudChlKXtsLnBheW1lbnQuZ2V0Q2hhbm5lbHModD0+e2xldCBuPVtdO3QuZm9yRWFjaCgoe2lkOnJ9KT0+e24ucHVzaChyKX0pLGUobnVsbCxuLHQpfSx0PT57ZSh0KX0pfSxwdXNoKGUpe2lmKHR5cGVvZiB2IT0idW5kZWZpbmVkInx8dHlwZW9mIGwhPSJ1bmRlZmluZWQiKXtsZXQgdD1sLnB1c2guZ2V0Q2xpZW50SW5mbygpO2UobnVsbCxbdC5pZF0sW3RdKX1lbHNlIGUobnVsbCxbXSl9fSxDQT14ZShodywoe3NlcnZpY2U6ZX0se3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57enBbZV0/enBbZV0oKHIscz1bXSx1PVtdKT0+e3I/bihyLm1lc3NhZ2UpOnQoe3NlcnZpY2U6ZSxwcm92aWRlcjpzLHByb3ZpZGVyczp1Lm1hcChnPT4odHlwZW9mIGcuc2VydmljZVJlYWR5PT0iYm9vbGVhbiImJihnLmlzQXBwRXhpc3Q9Zy5zZXJ2aWNlUmVhZHkpLHR5cGVvZiBnLm5hdGl2ZUNsaWVudD09ImJvb2xlYW4iJiYoZy5pc0FwcEV4aXN0PWcubmF0aXZlQ2xpZW50KSxnKSl9KX0pOm4oInNlcnZpY2Ugbm90IGZvdW5kIil9LHB3KSxHdTtmdW5jdGlvbiBfdShlKXtyZXR1cm4gbmV3IFByb21pc2UoKHQsbik9PntsLm9hdXRoLmdldFNlcnZpY2VzKHI9PntsZXQgcz1yLmZpbmQoKHtpZDp1fSk9PnU9PT1lKTtzP3Qocyk6bihuZXcgRXJyb3IoInByb3ZpZGVyIG5vdCBmaW5kIikpfSxuKX0pfWxldCBXcD14ZShndywoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1lLnByb3ZpZGVyfHwid2VpeGluIixzPU9yKG4pLHU9cj09PSJhcHBsZSIsZz11P3tzY29wZToiZW1haWwifTplLnVuaXZlcmlmeVN0eWxlP3t1bml2ZXJpZnlTdHlsZTpUQShlLnVuaXZlcmlmeVN0eWxlLHMpfTp7fTtfdShyKS50aGVuKEU9PntmdW5jdGlvbiAkKCl7aWYoZS5vbmx5QXV0aG9yaXplJiZyPT09IndlaXhpbiIpe0UuYXV0aG9yaXplKCh7Y29kZTpQfSk9Pnt0KHtjb2RlOlAsYXV0aFJlc3VsdDoiIn0pfSxzKTtyZXR1cm59RS5sb2dpbihQPT57bGV0IEw9UC50YXJnZXQuYXV0aFJlc3VsdCxBZT1QLnRhcmdldC5hcHBsZUluZm87dCh7Y29kZTpMLmNvZGUsYXV0aFJlc3VsdDpMLGFwcGxlSW5mbzpBZX0pfSxzLGcpfXV8fHI9PT0idW5pdmVyaWZ5Ij8kKCk6RS5sb2dvdXQoJCwkKX0pLmNhdGNoKHMpfSx2dyksR3A9KGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9ZS5wcm92aWRlcnx8IndlaXhpbiIscz1PcihuKTtfdShyKS50aGVuKHU9Pnt1LmdldFVzZXJJbmZvKGc9PntsZXQgRT17bmlja05hbWU6IiJ9O2lmKHI9PT0id2VpeGluIil7bGV0IFA9dS51c2VySW5mbztQJiYoRT17b3BlbklkOlAub3BlbmlkLG5pY2tOYW1lOlAubmlja25hbWUsZ2VuZGVyOlAuc2V4LGNpdHk6UC5jaXR5LHByb3ZpbmNlOlAucHJvdmluY2UsY291bnRyeTpQLmNvdW50cnksYXZhdGFyVXJsOlAuaGVhZGltZ3VybCx1bmlvbklkOlAudW5pb25pZH0pfWVsc2UgaWYocj09PSJhcHBsZSIpe2xldCBQPXUuYXBwbGVJbmZvO1AmJihFPXtvcGVuSWQ6UC51c2VyLGZ1bGxOYW1lOlAuZnVsbE5hbWUsZW1haWw6UC5lbWFpbCxhdXRob3JpemF0aW9uQ29kZTpQLmF1dGhvcml6YXRpb25Db2RlLGlkZW50aXR5VG9rZW46UC5pZGVudGl0eVRva2VuLHJlYWxVc2VyU3RhdHVzOlAucmVhbFVzZXJTdGF0dXN9KX1lbHNlIEU9dS51c2VySW5mbyxFJiYoRS5vcGVuSWQ9RS5vcGVuSWR8fEUub3BlbmlkfHx1LmF1dGhSZXN1bHQub3BlbmlkLEUubmlja05hbWU9RS5uaWNrTmFtZXx8RS5uaWNrbmFtZSxFLmF2YXRhclVybD1FLmF2YXRhclVybHx8RS5oZWFkaW1ndXJsKTtsZXQgJD17fTtlLmRhdGEmJmUuZGF0YS5hcGlfbmFtZT09PSJ3ZWJhcGlfZ2V0dXNlcmluZm8iPyQuZGF0YT17ZGF0YTpKU09OLnN0cmluZ2lmeShFKSxyYXdEYXRhOiIiLHNpZ25hdHVyZToiIixlbmNyeXB0ZWREYXRhOiIiLGl2OiIifTokLnVzZXJJbmZvPUUsdCgkKX0scyl9KS5jYXRjaCgoKT0+e24oIlx1OEJGN1x1NTE0OFx1OEMwM1x1NzUyOCB1bmkubG9naW4iKX0pfSxPQT14ZShtdyxHcCxfdyksQUE9eGUoYncsR3AseXcpLFlwPXhlKEV3LCh7cHJvdmlkZXI6ZX0se3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9V2wodCkscz1PcihuKTtfdShlKS50aGVuKHU9PnUucHJlTG9naW4ocixzKSkuY2F0Y2gocyl9LEN3LFN3KSxxcD0oKT0+X3UoInVuaXZlcmlmeSIpLnRoZW4oZT0+ZS5jbG9zZUF1dGhWaWV3KCkpLEtwPUJ0KE93LHFwKSxKcD14ZShBdywoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1XbCh0KSxzPU9yKG4pO3RyeXtfdSgidW5pdmVyaWZ5IikudGhlbih1PT57bGV0IGc9dS5nZXRDaGVja0JveFN0YXRlKCk7cih7c3RhdGU6Z30pfSl9Y2F0Y2godSl7cyh1KX19KTtmdW5jdGlvbiBUQShlLHQpe3JldHVybiBKLmlzUGxhaW5PYmplY3QoZSkmJkouaXNQbGFpbk9iamVjdChlLmJ1dHRvbnMpJiZKLnRvVHlwZVN0cmluZyhlLmJ1dHRvbnMubGlzdCk9PT0iW29iamVjdCBBcnJheV0iJiZlLmJ1dHRvbnMubGlzdC5mb3JFYWNoKChuLHIpPT57ZS5idXR0b25zLmxpc3Rbcl0ub25jbGljaz1mdW5jdGlvbigpe2xldCBzPXtjb2RlOiIzMDAwOCIsbWVzc2FnZToiXHU3NTI4XHU2MjM3XHU3MEI5XHU1MUZCXHU0RTg2XHU4MUVBXHU1QjlBXHU0RTQ5XHU2MzA5XHU5NEFFIixpbmRleDpyLHByb3ZpZGVyOm4ucHJvdmlkZXJ9O0ouaXNQbGFpbk9iamVjdChHdSk/R3UuX3RyaWdnZXJVbml2ZXJpZnlCdXR0b25zQ2xpY2socyk6cXAoKS50aGVuKCgpPT57dChzKX0pfX0pLGV9Y2xhc3MgSUF7Y29uc3RydWN0b3IoKXt0aGlzLnByb3ZpZGVyPSJ1bml2ZXJpZnkiLHRoaXMuZXZlbnROYW1lPSJhcGkudW5pdmVyaWZ5QnV0dG9uc0NsaWNrIn1jbG9zZSgpe3JldHVybiBLcCgpfWxvZ2luKHQpe3JldHVybiBXcCh0aGlzLl9nZXRPcHRpb25zKHQpKX1nZXRDaGVja0JveFN0YXRlKHQpe3JldHVybiBKcCh0KX1wcmVMb2dpbih0KXtyZXR1cm4gWXAodGhpcy5fZ2V0T3B0aW9ucyh0KSl9b25CdXR0b25zQ2xpY2sodCl7bXQub24odGhpcy5ldmVudE5hbWUsdCl9b2ZmQnV0dG9uc0NsaWNrKHQpe210Lm9mZih0aGlzLmV2ZW50TmFtZSx0KX1fdHJpZ2dlclVuaXZlcmlmeUJ1dHRvbnNDbGljayh0KXttdC5lbWl0KHRoaXMuZXZlbnROYW1lLHQpfV9nZXRPcHRpb25zKHQ9e30pe3JldHVybiBKLmV4dGVuZCh7fSx0LHtwcm92aWRlcjp0aGlzLnByb3ZpZGVyfSl9fWxldCBQQT1CdChUdywoKT0+R3V8fChHdT1uZXcgSUEpKSxOQT14ZShEdywoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1UcCgpO2lmKHIubm90aWZpY2F0aW9uQXV0aG9yaXplZCE9PSJhdXRob3JpemVkIilyZXR1cm4gbigibm90aWZpY2F0aW9uQXV0aG9yaXplZDogIityLm5vdGlmaWNhdGlvbkF1dGhvcml6ZWQpO2xldCBzPUouZXh0ZW5kKHt9LGUpO2RlbGV0ZSBzLmNvbnRlbnQsZGVsZXRlIHMucGF5bG9hZCxsLnB1c2guY3JlYXRlTWVzc2FnZShlLmNvbnRlbnQsZS5wYXlsb2FkLHMpLHQoKX0sdm9pZCAwLEx3KSxrQT1CdCgicmVnaXN0ZXJSdW50aW1lIixlPT57Si5leHRlbmQoanNSdW50aW1lLGUpfSksUkE9ezA6e25hbWU6IndlYiIsdGl0bGU6Ilx1NTZGRVx1NjU4NyJ9LDE6e25hbWU6InRleHQiLHRpdGxlOiJcdTdFQUZcdTY1ODdcdTVCNTcifSwyOntuYW1lOiJpbWFnZSIsdGl0bGU6Ilx1N0VBRlx1NTZGRVx1NzI0NyJ9LDM6e25hbWU6Im11c2ljIix0aXRsZToiXHU5N0YzXHU0RTUwIn0sNDp7bmFtZToidmlkZW8iLHRpdGxlOiJcdTg5QzZcdTk4OTEifSw1OntuYW1lOiJtaW5pUHJvZ3JhbSIsdGl0bGU6Ilx1NUMwRlx1N0EwQlx1NUU4RiJ9fSx4QT1lPT57ZS50eXBlPWUudHlwZXx8MDtsZXR7cHJvdmlkZXI6dCx0eXBlOm4sdGl0bGU6cixzdW1tYXJ5OnMsaHJlZjp1LGltYWdlVXJsOmcsbWVkaWFVcmw6RSxzY2VuZTokLG1pbmlQcm9ncmFtOlAsb3BlbkN1c3RvbWVyU2VydmljZUNoYXQ6TCxjb3JwaWQ6QWUsY3VzdG9tZXJVcmw6TmV9PWU7Si5pc1N0cmluZyhnKSYmZyYmKGc9dXQoZykpO2xldCBSZT1SQVtuXTtpZihSZSl7bGV0IHN0PXtwcm92aWRlcjp0LHR5cGU6UmUubmFtZSx0aXRsZTpyLGNvbnRlbnQ6cyxocmVmOnUscGljdHVyZXM6W2ddLHRodW1iczpnP1tnXTp2b2lkIDAsbWVkaWE6RSxtaW5pUHJvZ3JhbTpQLGV4dHJhOntzY2VuZTokfSxvcGVuQ3VzdG9tZXJTZXJ2aWNlQ2hhdDpMLGNvcnBpZDpBZSx1cmw6TmV9O3JldHVybiB0PT09IndlaXhpbiImJihuPT09MXx8bj09PTIpJiZkZWxldGUgc3QudGh1bWJzLHN0fXJldHVybiJcdTUyMDZcdTRFQUJcdTUzQzJcdTY1NzAgdHlwZSBcdTRFMERcdTZCNjNcdTc4NkUifSxacD1mdW5jdGlvbihlLHQsbixyLHM9InNoYXJlIil7bGV0IHU9T3IociksZz10Lm9wZW5DdXN0b21lclNlcnZpY2VDaGF0PyJvcGVuQ3VzdG9tZXJTZXJ2aWNlQ2hhdCI6InNlbmQiO3RyeXtlW2ddKHQsKCk9PntuKCl9LHUpfWNhdGNoKEUpe3Uoe21lc3NhZ2U6YCR7dC5wcm92aWRlcn0gJHtnfSBcdTY1QjlcdTZDRDVcdThDMDNcdTc1MjhcdTU5MzFcdThEMjVgfSl9fSxCQT14ZShJdywoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj14QShlKSxzPU9yKG4pO2lmKEouaXNTdHJpbmcocikpcmV0dXJuIG4ocik7bC5zaGFyZS5nZXRTZXJ2aWNlcyh1PT57bGV0IGc9dS5maW5kKCh7aWQ6RX0pPT5FPT09ci5wcm92aWRlcik7Zz9nLmF1dGhlbnRpY2F0ZWQ/WnAoZyxyLHQsbik6Zy5hdXRob3JpemUoKCk9PlpwKGcscix0LG4pLHMpOm4oInNlcnZpY2Ugbm90IGZvdW5kIil9LHMpfSxOdyxQdyksTUE9eGUoa3csKHt0eXBlOmUsaW1hZ2VVcmw6dCxzdW1tYXJ5Om4saHJlZjpyfSx7cmVzb2x2ZTpzLHJlamVjdDp1fSk9PntsZXQgZz1Pcih1KTtKLmlzU3RyaW5nKHQpJiZ0JiYodD11dCh0KSksbC5zaGFyZS5zZW5kV2l0aFN5c3RlbSh7dHlwZTplLHBpY3R1cmVzOnQ/W3RdOnZvaWQgMCxjb250ZW50Om4saHJlZjpyfSwoKT0+cygpLGcpfSx4dyxSdyksREE9eGUoQncsKGUse3Jlc29sdmU6dCxyZWplY3Q6bn0pPT57bGV0IHI9ZS5wcm92aWRlcixzPU9yKG4pO2wucGF5bWVudC5nZXRDaGFubmVscyh1PT57bGV0IGc9dS5maW5kKCh7aWQ6RX0pPT5FPT09cik7Zz9sLnBheW1lbnQucmVxdWVzdChnLGUub3JkZXJJbmZvLEU9Pnt0KEUpfSxzKTpuKCJzZXJ2aWNlIG5vdCBmb3VuZCIpfSxzKX0sTXcpLFhwPV9wLExBPXhlKCJuYXZpZ2F0ZVRvTWluaVByb2dyYW0iLChlLHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e1hwKCJuYXZpZ2F0ZVRvVW5pTVAiLGUscj0+e2lmKHIuZXJyTXNnJiZyLmVyck1zZy5pbmRleE9mKCI6b2siKT09PS0xKXJldHVybiBuKHIuZXJyTXNnLnNwbGl0KCIgIilbMV0pO3QoKX0pfSksUXA9W107ZnVuY3Rpb24gZWcoZSl7UXAucHVzaChlKX1sZXQgRkE9ZWc7ZnVuY3Rpb24gVkEoZSx0KXtRcC5mb3JFYWNoKG49Pm4oZSx0KSl9ZnVuY3Rpb24gJEEoZSx0LC4uLm4pe2xldCByPWpBKGUsdCxuKTtyJiZjb25zb2xlW2VdKHIpfWZ1bmN0aW9uIFVBKCl7cmV0dXJuIHR5cGVvZiBfX2NoYW5uZWxJZF9fPT0ic3RyaW5nIiYmX19jaGFubmVsSWRfX31mdW5jdGlvbiBIQShlLHQpe3N3aXRjaChKLnRvUmF3VHlwZSh0KSl7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuImZ1bmN0aW9uKCkgeyBbbmF0aXZlIGNvZGVdIH0iO2RlZmF1bHQ6cmV0dXJuIHR9fWZ1bmN0aW9uIGpBKGUsdCxuKXtyZXR1cm4gVUEoKT8obi5wdXNoKHQucmVwbGFjZSgiYXQgIiwidW5pLWFwcDovLy8iKSksY29uc29sZVtlXS5hcHBseShjb25zb2xlLG4pKTpuLm1hcChmdW5jdGlvbihzKXtsZXQgdT1KLnRvVHlwZVN0cmluZyhzKS50b0xvd2VyQ2FzZSgpO2lmKFsiW29iamVjdCBvYmplY3RdIiwiW29iamVjdCBhcnJheV0iLCJbb2JqZWN0IG1vZHVsZV0iXS5pbmRleE9mKHUpIT09LTEpdHJ5e3M9Ii0tLUJFR0lOOkpTT04tLS0iK0pTT04uc3RyaW5naWZ5KHMsSEEpKyItLS1FTkQ6SlNPTi0tLSJ9Y2F0Y2goZyl7cz11fWVsc2UgaWYocz09PW51bGwpcz0iLS0tTlVMTC0tLSI7ZWxzZSBpZihzPT09dm9pZCAwKXM9Ii0tLVVOREVGSU5FRC0tLSI7ZWxzZXtsZXQgZz1KLnRvUmF3VHlwZShzKS50b1VwcGVyQ2FzZSgpO2c9PT0iTlVNQkVSInx8Zz09PSJCT09MRUFOIj9zPSItLS1CRUdJTjoiK2crIi0tLSIrcysiLS0tRU5EOiIrZysiLS0tIjpzPVN0cmluZyhzKX1yZXR1cm4gc30pLmpvaW4oIi0tLUNPTU1BLS0tIikrIiAiK3R9bGV0IHpBPTEsZWQsYnU9e307ZnVuY3Rpb24gdGcoZSl7aWYodHlwZW9mIGU9PSJmdW5jdGlvbiIpe2xldCB0PU9iamVjdC5rZXlzKGJ1KS5maW5kKHI9PmJ1W3JdPT09ZSksbj10P3BhcnNlSW50KHQpOnpBKys7cmV0dXJuIGJ1W25dPWUsbn1lbHNlIEouaXNQbGFpbk9iamVjdChlKSYmT2JqZWN0LmtleXMoZSkuZm9yRWFjaCh0PT57ZVt0XT10ZyhlW3RdKX0pO3JldHVybiBlfWZ1bmN0aW9uIFdBKGUsdCxuKXtyZXR1cm4gbmQoZSx0LG4pfWZ1bmN0aW9uIHRkKCl7cmV0dXJuIGVkfHwoZWQ9aWUucmVxdWlyZU5hdGl2ZVBsdWdpbigiVVRTLVByb3h5IikpLGVkfWZ1bmN0aW9uIG5nKGUpe2lmKGUuZXJyTXNnKXRocm93IG5ldyBFcnJvcihlLmVyck1zZyk7cmV0dXJuIGUucGFyYW1zfWZ1bmN0aW9uIHJnKGUpe2lmKGUuZXJyTXNnKXRocm93IG5ldyBFcnJvcihlLmVyck1zZyk7cmV0dXJuIGRlbGV0ZSBlLmVyck1zZyxuZyh0ZCgpLmludm9rZVN5bmMoZSwoKT0+e30pKX1mdW5jdGlvbiBuZChlLHttb2R1bGVOYW1lOnQsbW9kdWxlVHlwZTpuLHBhY2thZ2U6cixjbGFzczpzLG5hbWU6dSxtZXRob2Q6Zyxjb21wYW5pb246RSxwYXJhbXM6JCxlcnJNc2c6UH0sTCl7bGV0IEFlPSh7aWQ6UmUsbmFtZTpzdCxwYXJhbXM6cHQsa2VlcEFsaXZlOiR0fSk9PntsZXQgUnQ9YnVbUmVdO1J0PyhSdCguLi5wdCksJHR8fGRlbGV0ZSBidVtSZV0pOmNvbnNvbGUuZXJyb3IoYCR7cn0ke3N9LiR7dX0gJHtzdH0gaXMgbm90IGZvdW5kYCl9LE5lPUw/e21vZHVsZU5hbWU6dCxtb2R1bGVUeXBlOm4saWQ6TCxuYW1lOnUsbWV0aG9kOiR9Onttb2R1bGVOYW1lOnQsbW9kdWxlVHlwZTpuLHBhY2thZ2U6cixjbGFzczpzLG5hbWU6Z3x8dSxjb21wYW5pb246RSxtZXRob2Q6JH07cmV0dXJuKC4uLlJlKT0+e2lmKFApdGhyb3cgbmV3IEVycm9yKFApO2xldCBzdD1KLmV4dGVuZCh7fSxOZSx7cGFyYW1zOlJlLm1hcChwdD0+dGcocHQpKX0pO3JldHVybiBlP25ldyBQcm9taXNlKChwdCwkdCk9Pnt0ZCgpLmludm9rZUFzeW5jKHN0LFJ0PT57UnQudHlwZSE9PSJyZXR1cm4iP0FlKFJ0KTpSdC5lcnJNc2c/JHQoUnQuZXJyTXNnKTpwdChSdC5wYXJhbXMpfSl9KTpuZyh0ZCgpLmludm9rZVN5bmMoc3QsQWUpKX19ZnVuY3Rpb24gaWcoZSx0KXtyZXR1cm4gdC5tYWluJiYhdC5tZXRob2QmJnR5cGVvZiBsIT0idW5kZWZpbmVkIiYmbC5vcy5uYW1lPT09ImlPUyImJih0Lm1ldGhvZD0ic18iK3QubmFtZSksbmQoZSx0LDApfWxldCBHQT1pZztmdW5jdGlvbiBvZyhlLHQpe3JldHVybiBKLmhhc093bih0LGUrIkJ5SnMiKT9lKyJCeUpzIjplfWZ1bmN0aW9uIFlBKHttb2R1bGVOYW1lOmUsbW9kdWxlVHlwZTp0LHBhY2thZ2U6bixjbGFzczpyLGNvbnN0cnVjdG9yOntwYXJhbXM6c30sbWV0aG9kczp1LHByb3BzOmcsc3RhdGljUHJvcHM6RSxzdGF0aWNNZXRob2RzOiQsZXJyTXNnOlB9KXtsZXQgTD17bW9kdWxlTmFtZTplLG1vZHVsZVR5cGU6dCxwYWNrYWdlOm4sY2xhc3M6cixlcnJNc2c6UH07dHlwZW9mIGwhPSJ1bmRlZmluZWQiJiZsLm9zLm5hbWU9PT0iaU9TIiYmcy5maW5kKFJlPT5SZS50eXBlPT09IlVUU0NhbGxiYWNrInx8UmUudHlwZS5pbmRleE9mKCJKU09OT2JqZWN0Iik+MCkmJnMucHVzaCh7bmFtZToiX2J5SnMiLHR5cGU6ImJvb2xlYW4ifSk7bGV0IEFlPWNsYXNze2NvbnN0cnVjdG9yKC4uLnN0KXtpZihQKXRocm93IG5ldyBFcnJvcihQKTtsZXQgcHQ9e30sJHQ9bmQoITEsSi5leHRlbmQoe25hbWU6ImNvbnN0cnVjdG9yIixwYXJhbXM6c30sTCksMCkuYXBwbHkobnVsbCxzdCk7aWYoISR0KXRocm93IG5ldyBFcnJvcihgbmV3ICR7cn0gaXMgZmFpbGVkYCk7cmV0dXJuIG5ldyBQcm94eSh0aGlzLHtnZXQoUnQsc24pe2lmKCFwdFtzbl0pe2lmKHNuPW9nKHNuLHUpLEouaGFzT3duKHUsc24pKXtsZXR7YXN5bmM6TW4scGFyYW1zOmxufT11W3NuXTtwdFtzbl09V0EoISFNbixKLmV4dGVuZCh7bmFtZTpzbixwYXJhbXM6bG59LEwpLCR0KX1lbHNlIGlmKGcuaW5jbHVkZXMoc24pKXJldHVybiByZyh7bW9kdWxlTmFtZTplLG1vZHVsZVR5cGU6dCxpZDokdCxuYW1lOnNuLGVyck1zZzpQfSl9cmV0dXJuIHB0W3NuXX19KX19LE5lPXt9O3JldHVybiBuZXcgUHJveHkoQWUse2dldChSZSxzdCxwdCl7aWYoc3Q9b2coc3QsJCksSi5oYXNPd24oJCxzdCkpe2lmKCFOZVtzdF0pe2xldHthc3luYzokdCxwYXJhbXM6UnR9PSRbc3RdO05lW3N0XT1pZyghISR0LEouZXh0ZW5kKHtuYW1lOnN0LGNvbXBhbmlvbjohMCxwYXJhbXM6UnR9LEwpKX1yZXR1cm4gTmVbc3RdfXJldHVybiBFLmluY2x1ZGVzKHN0KT9yZyhKLmV4dGVuZCh7bmFtZTpzdCxjb21wYW5pb246ITB9LEwpKTpSZWZsZWN0LmdldChSZSxzdCxwdCl9fSl9ZnVuY3Rpb24gcUEoZSx0KXtyZXR1cm4gdHlwZW9mIGwhPSJ1bmRlZmluZWQiJiZsLm9zLm5hbWU9PT0iQW5kcm9pZCI/InV0cy5zZGsuIisodD8ibW9kdWxlcy4iOiIiKStlOiIifWZ1bmN0aW9uIEtBKGUsdCl7cmV0dXJuIHR5cGVvZiBsPT0idW5kZWZpbmVkIj8iIjphZyhlLGwub3MubmFtZT09PSJpT1MiPyJJbmRleFN3aWZ0IjoiSW5kZXhLdCIsdCl9ZnVuY3Rpb24gYWcoZSx0LG4pe3JldHVybiB0eXBlb2YgbD09InVuZGVmaW5lZCI/IiI6bC5vcy5uYW1lPT09IkFuZHJvaWQiP3Q6bC5vcy5uYW1lPT09ImlPUyI/IlVUU1NESyIrKG4/Ik1vZHVsZXMiOiIiKStKLmNhcGl0YWxpemUoZSkrSi5jYXBpdGFsaXplKHQpOiIifWxldCBzZz17fTtmdW5jdGlvbiBKQShlLHQpe3NnW2VdPXR9ZnVuY3Rpb24gWkEoZSl7bGV0IHQ9c2dbZV07cmV0dXJuIHR8fGNvbnNvbGUuZXJyb3IoYCR7ZX0gaXMgbm90IGZvdW5kYCksdH1sZXQgZGE9e2xvYWQ6ImxvYWQiLGNsb3NlOiJjbG9zZSIsZXJyb3I6ImVycm9yIixhZENsaWNrZWQ6ImFkQ2xpY2tlZCJ9O2NsYXNzIGxne2NvbnN0cnVjdG9yKCl7dGhpcy5fY2FsbGJhY2tzPXt9fW9uTG9hZCh0KXt0aGlzLl9hZGRFdmVudExpc3RlbmVyKGRhLmxvYWQsdCl9b25DbG9zZSh0KXt0aGlzLl9hZGRFdmVudExpc3RlbmVyKGRhLmNsb3NlLHQpfW9uRXJyb3IodCl7dGhpcy5fYWRkRXZlbnRMaXN0ZW5lcihkYS5lcnJvcix0KX1vZmZMb2FkKHQpe3RoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXIoZGEubG9hZCx0KX1vZmZDbG9zZSh0KXt0aGlzLl9yZW1vdmVFdmVudExpc3RlbmVyKGRhLmNsb3NlLHQpfW9mZkVycm9yKHQpe3RoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXIoZGEuZXJyb3IsdCl9X2FkZEV2ZW50TGlzdGVuZXIodCxuKXshSi5pc0Z1bmN0aW9uKG4pfHwodGhpcy5fY2FsbGJhY2tzW3RdfHwodGhpcy5fY2FsbGJhY2tzW3RdPVtdKSx0aGlzLl9jYWxsYmFja3NbdF0ucHVzaChuKSl9X3JlbW92ZUV2ZW50TGlzdGVuZXIodCxuKXtsZXQgcj10aGlzLl9jYWxsYmFja3NbdF0scz1yLmluZGV4T2Yobik7cz4tMSYmci5zcGxpY2UocywxKX1fZGlzcGF0Y2hFdmVudCh0LG4pe3RoaXMuX2NhbGxiYWNrc1t0XS5mb3JFYWNoKHI9PntyKG58fHt9KX0pfX1jbGFzcyByZCBleHRlbmRzIGxne2NvbnN0cnVjdG9yKHQsbil7c3VwZXIoKTt0aGlzLnByZWxvYWQ9ITAsdGhpcy5faXNMb2FkZWQ9ITEsdGhpcy5faXNMb2FkaW5nPSExLHRoaXMuX2xvYWRQcm9taXNlUmVzb2x2ZT1udWxsLHRoaXMuX2xvYWRQcm9taXNlUmVqZWN0PW51bGwsdGhpcy5fc2hvd1Byb21pc2VSZXNvbHZlPW51bGwsdGhpcy5fc2hvd1Byb21pc2VSZWplY3Q9bnVsbCx0aGlzLnByZWxvYWQ9bi5wcmVsb2FkIT09dm9pZCAwP24ucHJlbG9hZDohMTtsZXQgcj10aGlzLl9hZEluc3RhbmNlPXQ7ci5vbkxvYWQoKCk9Pnt0aGlzLl9pc0xvYWRlZD0hMCx0aGlzLl9pc0xvYWRpbmc9ITEsdGhpcy5fbG9hZFByb21pc2VSZXNvbHZlIT1udWxsJiYodGhpcy5fbG9hZFByb21pc2VSZXNvbHZlKCksdGhpcy5fbG9hZFByb21pc2VSZXNvbHZlPW51bGwpLHRoaXMuX3Nob3dQcm9taXNlUmVzb2x2ZSE9bnVsbCYmKHRoaXMuX3Nob3dQcm9taXNlUmVzb2x2ZSgpLHRoaXMuX3Nob3dQcm9taXNlUmVzb2x2ZT1udWxsLHRoaXMuX3Nob3dBZCgpKSx0aGlzLl9kaXNwYXRjaEV2ZW50KGRhLmxvYWQse30pfSksci5vbkNsb3NlKHM9Pnt0aGlzLl9pc0xvYWRlZD0hMSx0aGlzLl9pc0xvYWRpbmc9ITEsdGhpcy5fZGlzcGF0Y2hFdmVudChkYS5jbG9zZSxzKSx0aGlzLnByZWxvYWQ9PT0hMCYmdGhpcy5fbG9hZEFkKCl9KSxyLm9uRXJyb3Iocz0+e3RoaXMuX2lzTG9hZGluZz0hMTtsZXQgdT17Y29kZTpzLmNvZGUsZXJyTXNnOnMubWVzc2FnZX07dGhpcy5fZGlzcGF0Y2hFdmVudChkYS5lcnJvcix1KTtsZXQgZz1uZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkodSkpO3RoaXMuX2xvYWRQcm9taXNlUmVqZWN0IT1udWxsJiYodGhpcy5fbG9hZFByb21pc2VSZWplY3QoZyksdGhpcy5fbG9hZFByb21pc2VSZWplY3Q9bnVsbCksdGhpcy5fc2hvd1Byb21pc2VSZWplY3QhPW51bGwmJih0aGlzLl9zaG93UHJvbWlzZVJlamVjdChnKSx0aGlzLl9zaG93UHJvbWlzZVJlamVjdD1udWxsKX0pLHIub25BZENsaWNrZWQmJnIub25BZENsaWNrZWQoKCk9Pnt0aGlzLl9kaXNwYXRjaEV2ZW50KGRhLmFkQ2xpY2tlZCx7fSl9KX1nZXRQcm92aWRlcigpe3JldHVybiB0aGlzLl9hZEluc3RhbmNlLmdldFByb3ZpZGVyKCl9bG9hZCgpe3JldHVybiBuZXcgUHJvbWlzZSgodCxuKT0+e3RoaXMuX2xvYWRQcm9taXNlUmVzb2x2ZT10LHRoaXMuX2xvYWRQcm9taXNlUmVqZWN0PW4sIXRoaXMuX2lzTG9hZGluZyYmKHRoaXMuX2lzTG9hZGVkP3QoIiIpOnRoaXMuX2xvYWRBZCgpKX0pfXNob3coKXtyZXR1cm4gbmV3IFByb21pc2UoKHQsbik9Pnt0aGlzLl9zaG93UHJvbWlzZVJlc29sdmU9dCx0aGlzLl9zaG93UHJvbWlzZVJlamVjdD1uLCF0aGlzLl9pc0xvYWRpbmcmJih0aGlzLl9pc0xvYWRlZD8odGhpcy5fc2hvd0FkKCksdCgiIikpOnRoaXMuX2xvYWRBZCgpKX0pfWRlc3Ryb3koKXt0aGlzLl9hZEluc3RhbmNlLmRlc3Ryb3koKX1fbG9hZEFkKCl7dGhpcy5faXNMb2FkZWQ9ITEsdGhpcy5faXNMb2FkaW5nPSEwLHRoaXMuX2FkSW5zdGFuY2UubG9hZCgpfV9zaG93QWQoKXt0aGlzLl9hZEluc3RhbmNlLnNob3coKX19Y2xhc3MgWEEgZXh0ZW5kcyByZHtjb25zdHJ1Y3Rvcih0KXtzdXBlcihsLmFkLmNyZWF0ZVJld2FyZGVkVmlkZW9BZCh0KSx0KTt0aGlzLl9sb2FkQWQoKX19bGV0IFFBPUJ0KEZ3LGU9Pm5ldyBYQShlKSwkdyxWdyk7Y2xhc3MgZVQgZXh0ZW5kcyByZHtjb25zdHJ1Y3Rvcih0KXtzdXBlcihsLmFkLmNyZWF0ZUZ1bGxTY3JlZW5WaWRlb0FkKHQpLHQpO3RoaXMucHJlbG9hZD0hMX19bGV0IHRUPUJ0KFV3LGU9Pm5ldyBlVChlKSxqdyxIdyk7Y2xhc3MgblQgZXh0ZW5kcyByZHtjb25zdHJ1Y3Rvcih0KXtzdXBlcihsLmFkLmNyZWF0ZUludGVyc3RpdGlhbEFkKHQpLHQpO3RoaXMucHJlbG9hZD0hMSx0aGlzLl9sb2FkQWQoKX19bGV0IHJUPUJ0KHp3LGU9Pm5ldyBuVChlKSxHdyxXdyksZnM9e30scWw9e307ZnVuY3Rpb24gaVQoZSl7bGV0IHQ9ZS5wcm92aWRlcjtpZihmc1t0XXx8KGZzW3RdPXt9KSx0eXBlb2YgZnNbdF0ucGx1Z2luPT0ib2JqZWN0Iil7ZS5zdWNjZXNzKGZzW3RdLnBsdWdpbik7cmV0dXJufWlmKHFsW3RdfHwocWxbdF09W10pLHFsW3RdLnB1c2goZSksZnNbdF0uc3RhdHVzPT09ITApe2UuX19wbHVnaW49ZnNbdF0ucGx1Z2luO3JldHVybn1mc1t0XS5zdGF0dXM9ITA7bGV0IG49T2EodCk7aWYoIW58fCFuLmluaXRTREspe3FsW3RdLmZvckVhY2gocj0+e3IuZmFpbCh7Y29kZTotMSxtZXNzYWdlOiJwcm92aWRlciBbIit0KyJdIGludmFsaWQifSl9KSxxbFt0XS5sZW5ndGg9MCxmc1t0XS5zdGF0dXM9ITE7cmV0dXJufWZzW3RdLnBsdWdpbj1uLGUuX19wbHVnaW49bixuLmluaXRTREsocj0+e2xldCBzPXIuY29kZT09PTF8fHIuY29kZT09PSIxIjtzP2ZzW3RdLnBsdWdpbj1uOmZzW3RdLnN0YXR1cz0hMSxxbFt0XS5mb3JFYWNoKHU9PntzP3Uuc3VjY2Vzcyh1Ll9fcGx1Z2luKTp1LmZhaWwocil9KSxxbFt0XS5sZW5ndGg9MH0pfWNsYXNzIG9UIGV4dGVuZHMgbGd7Y29uc3RydWN0b3IodCl7c3VwZXIoKTt0aGlzLl9hZHBpZD0iIix0aGlzLl9wcm92aWRlcj0iIix0aGlzLl91c2VyRGF0YT1udWxsLHRoaXMuX2lzTG9hZGVkPSExLHRoaXMuX2lzTG9hZGluZz0hMSx0aGlzLl9sb2FkUHJvbWlzZVJlc29sdmU9bnVsbCx0aGlzLl9sb2FkUHJvbWlzZVJlamVjdD1udWxsLHRoaXMuX3Nob3dQcm9taXNlUmVzb2x2ZT1udWxsLHRoaXMuX3Nob3dQcm9taXNlUmVqZWN0PW51bGwsdGhpcy5fYWRJbnN0YW5jZT1udWxsLHRoaXMuX2FkRXJyb3I9IiIsdGhpcy5fYWRwaWQ9dC5hZHBpZCx0aGlzLl9wcm92aWRlcj10LnByb3ZpZGVyLHRoaXMuX3VzZXJEYXRhPXQudXNlckRhdGEsaygoKT0+e3RoaXMuX2luaXQoKX0pfV9pbml0KCl7dGhpcy5fYWRFcnJvcj0iIixpVCh7cHJvdmlkZXI6dGhpcy5fcHJvdmlkZXIsc3VjY2Vzczp0PT57dGhpcy5fYWRJbnN0YW5jZT10LHRoaXMuX3VzZXJEYXRhJiZ0aGlzLmJpbmRVc2VyRGF0YSh0aGlzLl91c2VyRGF0YSksdGhpcy5fbG9hZEFkKCl9LGZhaWw6dD0+e3RoaXMuX2FkRXJyb3I9dCx0aGlzLl9sb2FkUHJvbWlzZVJlamVjdCE9bnVsbCYmKHRoaXMuX2xvYWRQcm9taXNlUmVqZWN0KHRoaXMuX2NyZWF0ZUVycm9yKHQpKSx0aGlzLl9sb2FkUHJvbWlzZVJlamVjdD1udWxsKSx0aGlzLl9kaXNwYXRjaEV2ZW50KGRhLmVycm9yLHQpfX0pfWdldFByb3ZpZGVyKCl7cmV0dXJuIHRoaXMuX3Byb3ZpZGVyfWxvYWQoKXtyZXR1cm4gbmV3IFByb21pc2UoKHQsbik9PntpZih0aGlzLl9sb2FkUHJvbWlzZVJlc29sdmU9dCx0aGlzLl9sb2FkUHJvbWlzZVJlamVjdD1uLCF0aGlzLl9pc0xvYWRpbmcpe2lmKHRoaXMuX2FkRXJyb3Ipe3RoaXMuX2luaXQoKTtyZXR1cm59dGhpcy5faXNMb2FkZWQ/dCgiIik6dGhpcy5fbG9hZEFkKCl9fSl9c2hvdygpe3JldHVybiBuZXcgUHJvbWlzZSgodCxuKT0+e2lmKHRoaXMuX3Nob3dQcm9taXNlUmVzb2x2ZT10LHRoaXMuX3Nob3dQcm9taXNlUmVqZWN0PW4sIXRoaXMuX2lzTG9hZGluZyl7aWYodGhpcy5fYWRFcnJvcil7dGhpcy5faW5pdCgpO3JldHVybn10aGlzLl9pc0xvYWRlZD8odGhpcy5fc2hvd0FkKCksdCgiIikpOnRoaXMuX2xvYWRBZCgpfX0pfXJlcG9ydEV4cG9zdXJlKCl7dGhpcy5fYWRJbnN0YW5jZSE9PW51bGwmJnRoaXMuX2FkSW5zdGFuY2UucmVwb3J0RXhwb3N1cmUoKX1iaW5kVXNlckRhdGEodCl7dGhpcy5fYWRJbnN0YW5jZSE9PW51bGwmJnRoaXMuX2FkSW5zdGFuY2UuYmluZFVzZXJEYXRhKHQpfWRlc3Ryb3koKXt0aGlzLl9hZEluc3RhbmNlIT09bnVsbCYmdGhpcy5fYWRJbnN0YW5jZS5kZXN0cm95JiZ0aGlzLl9hZEluc3RhbmNlLmRlc3Ryb3koe2FkcGlkOnRoaXMuX2FkcGlkfSl9X2xvYWRBZCgpe2lmKHRoaXMuX2FkSW5zdGFuY2UhPT1udWxsKXtpZih0aGlzLl9pc0xvYWRpbmc9PT0hMClyZXR1cm47dGhpcy5faXNMb2FkaW5nPSEwLHRoaXMuX2FkSW5zdGFuY2UubG9hZERhdGEoe2FkcGlkOnRoaXMuX2FkcGlkfSx0PT57dGhpcy5faXNMb2FkZWQ9ITAsdGhpcy5faXNMb2FkaW5nPSExLHRoaXMuX2xvYWRQcm9taXNlUmVzb2x2ZSE9bnVsbCYmKHRoaXMuX2xvYWRQcm9taXNlUmVzb2x2ZSgpLHRoaXMuX2xvYWRQcm9taXNlUmVzb2x2ZT1udWxsKSx0aGlzLl9zaG93UHJvbWlzZVJlc29sdmUhPW51bGwmJih0aGlzLl9zaG93UHJvbWlzZVJlc29sdmUoKSx0aGlzLl9zaG93UHJvbWlzZVJlc29sdmU9bnVsbCx0aGlzLl9zaG93QWQoKSksdGhpcy5fZGlzcGF0Y2hFdmVudChkYS5sb2FkLHQpfSx0PT57dGhpcy5faXNMb2FkaW5nPSExLHRoaXMuX3Nob3dQcm9taXNlUmVqZWN0IT1udWxsJiYodGhpcy5fc2hvd1Byb21pc2VSZWplY3QodGhpcy5fY3JlYXRlRXJyb3IodCkpLHRoaXMuX3Nob3dQcm9taXNlUmVqZWN0PW51bGwpLHRoaXMuX2Rpc3BhdGNoRXZlbnQoZGEuZXJyb3IsdCl9KX19X3Nob3dBZCgpe3RoaXMuX2FkSW5zdGFuY2UhPT1udWxsJiZ0aGlzLl9pc0xvYWRlZD09PSEwJiZ0aGlzLl9hZEluc3RhbmNlLnNob3coe2FkcGlkOnRoaXMuX2FkcGlkfSwoKT0+e3RoaXMuX2lzTG9hZGVkPSExfSx0PT57dGhpcy5faXNMb2FkZWQ9ITEsdGhpcy5fc2hvd1Byb21pc2VSZWplY3QhPW51bGwmJih0aGlzLl9zaG93UHJvbWlzZVJlamVjdCh0aGlzLl9jcmVhdGVFcnJvcih0KSksdGhpcy5fc2hvd1Byb21pc2VSZWplY3Q9bnVsbCksdGhpcy5fZGlzcGF0Y2hFdmVudChkYS5lcnJvcix0KX0pfV9jcmVhdGVFcnJvcih0KXtyZXR1cm4gbmV3IEVycm9yKEpTT04uc3RyaW5naWZ5KHQpKX19bGV0IGFUPUJ0KFl3LGU9Pm5ldyBvVChlKSxLdyxxdyksY2c9bC5vcy5uYW1lPT09IkFuZHJvaWQiJiZwYXJzZUludChsLm9zLnZlcnNpb24pPDYsc1Q9Y2c/InNsaWRlLWluLXJpZ2h0IjoicG9wLWluIixZdT0zMDAsdWc9Y2c/InNsaWRlLW91dC1yaWdodCI6InBvcC1vdXQiLGxUPSJfd3d3L19fdW5pYXBwdmlldy5odG1sIixjVD0id2Vidmlld0lkIix1VD0idW5pTVBOYXRpdmVFdmVudCI7ZnVuY3Rpb24gZlQoZSx0LG4pe24mJnQuaXNOVnVlJiYoZS51bmlOVmlldz17cGF0aDpuLGRlZmF1bHRGb250U2l6ZTpSLmRlZmF1bHRGb250U2l6ZSx2aWV3cG9ydDpSLnZpZXdwb3J0fSl9bGV0IGRUPS9eI1thLXowLTldezZ9JC9pO2Z1bmN0aW9uIGhUKGUpe3JldHVybiBlJiYoZFQudGVzdChlKXx8ZT09PSJ0cmFuc3BhcmVudCIpfWZ1bmN0aW9uIHBUKGUsdCl7bGV0e2JhY2tncm91bmRDb2xvcjpufT10OyFufHwhaFQobil8fChlLmJhY2tncm91bmR8fChlLmJhY2tncm91bmQ9biksZS5iYWNrZ3JvdW5kQ29sb3JUb3B8fChlLmJhY2tncm91bmRDb2xvclRvcD1uKSxlLmJhY2tncm91bmRDb2xvckJvdHRvbXx8KGUuYmFja2dyb3VuZENvbG9yQm90dG9tPW4pLGUuYW5pbWF0aW9uQWxwaGFCR0NvbG9yfHwoZS5hbmltYXRpb25BbHBoYUJHQ29sb3I9biksdHlwZW9mIGUud2Vidmlld0JHVHJhbnNwYXJlbnQ9PSJ1bmRlZmluZWQiJiYoZS53ZWJ2aWV3QkdUcmFuc3BhcmVudD0hMCkpfWZ1bmN0aW9uIGdUKGUsdCl7ZS5wb3BHZXN0dXJlPT09ImhpZGUiJiZkZWxldGUgZS5wb3BHZXN0dXJlLHQuaXNRdWl0JiYoZS5wb3BHZXN0dXJlPWwub3MubmFtZT09PSJpT1MiPyJhcHBiYWNrIjoibm9uZSIpfWZ1bmN0aW9uIHZUKGUsdCl7aWYoIXQuZW5hYmxlUHVsbERvd25SZWZyZXNoKXJldHVybjtsZXQgbj1PaShKLmV4dGVuZCh7fSxsLm9zLm5hbWU9PT0iQW5kcm9pZCI/X1Q6YlQsdC5wdWxsVG9SZWZyZXNoKSk7ZS5wdWxsVG9SZWZyZXNoPW1UKG4sdCl9ZnVuY3Rpb24gbVQoZSx0KXtsZXQgbj1McihlKTtpZighbilyZXR1cm4gZTtsZXRbcixzLHVdPW47cmV0dXJuKHJ8fHN8fHUpJiZpZS5vbkxvY2FsZUNoYW5nZSgoKT0+e2xldCBnPWwud2Vidmlldy5nZXRXZWJ2aWV3QnlJZCh0LmlkKyIiKTtpZighZylyZXR1cm47bGV0IEU9e3N1cHBvcnQ6ITB9O3ImJihFLmNvbnRlbnRkb3duPXtjYXB0aW9uOmUuY29udGVudGRvd24uY2FwdGlvbn0pLHMmJihFLmNvbnRlbnRvdmVyPXtjYXB0aW9uOmUuY29udGVudG92ZXIuY2FwdGlvbn0pLHUmJihFLmNvbnRlbnRyZWZyZXNoPXtjYXB0aW9uOmUuY29udGVudHJlZnJlc2guY2FwdGlvbn0pLGcuc2V0U3R5bGUoe3B1bGxUb1JlZnJlc2g6RX0pfSksZX1sZXQgX1Q9e3N1cHBvcnQ6ITAsc3R5bGU6ImNpcmNsZSJ9LGJUPXtzdXBwb3J0OiEwLHN0eWxlOiJkZWZhdWx0IixoZWlnaHQ6IjUwcHgiLHJhbmdlOiIyMDBweCIsY29udGVudGRvd246e2NhcHRpb246IiJ9LGNvbnRlbnRvdmVyOntjYXB0aW9uOiIifSxjb250ZW50cmVmcmVzaDp7Y2FwdGlvbjoiIn19O2Z1bmN0aW9uIHlUKGUsdCl7bGV0e25hdmlnYXRpb25CYXI6bn09dDtpZihuLnN0eWxlPT09ImN1c3RvbSIpcmV0dXJuITE7bGV0IHI9ITA7dC5pc1F1aXQmJihyPSExKTtsZXQgcz17YXV0b0JhY2tCdXR0b246cn07T2JqZWN0LmtleXMobikuZm9yRWFjaCh1PT57bGV0IGc9blt1XTt1PT09InRpdGxlSW1hZ2UiJiZnP3MudGFncz13VChnKTp1PT09ImJ1dHRvbnMiJiZKLmlzQXJyYXkoZyk/cy5idXR0b25zPWcubWFwKChFLCQpPT4oRS5vbmNsaWNrPVNUKCQpLEUpKTpzW3VdPWd9KSxlLnRpdGxlTlZpZXc9RVQocyx0KX1mdW5jdGlvbiBFVChlLHQpe2xldCBuPVFyKGUpO2lmKCFuKXJldHVybiBlO2xldFtyLHNdPW47cmV0dXJuKHJ8fHMpJiZpZS5vbkxvY2FsZUNoYW5nZSgoKT0+e2xldCB1PWwud2Vidmlldy5nZXRXZWJ2aWV3QnlJZCh0LmlkKyIiKTtpZighdSlyZXR1cm47bGV0IGc9e307ciYmKGcudGl0bGVUZXh0PWUudGl0bGVUZXh0KSxzJiYoZy5zZWFyY2hJbnB1dD17cGxhY2Vob2xkZXI6ZS5zZWFyY2hJbnB1dC5wbGFjZWhvbGRlcn0pLHUuc2V0U3R5bGUoe3RpdGxlTlZpZXc6Z30pfSksZX1mdW5jdGlvbiB3VChlKXtyZXR1cm5be3RhZzoiaW1nIixzcmM6ZSxwb3NpdGlvbjp7bGVmdDoiYXV0byIsdG9wOiJhdXRvIix3aWR0aDoiYXV0byIsaGVpZ2h0OiIyNnB4In19XX1mdW5jdGlvbiBTVChlKXtyZXR1cm4gZnVuY3Rpb24obil7bi5pbmRleD1lLFBuKHJlLk9OX05BVklHQVRJT05fQkFSX0JVVFRPTl9UQVAsbil9fWZ1bmN0aW9uIGZnKGUsdCxuKXtsZXQgcj17Ym91bmNlOiJ2ZXJ0aWNhbCJ9O3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKHM9PntDVC5pbmRleE9mKHMpPT09LTEmJihyW3NdPXRbc10pfSksbi5pZCE9PSIxIiYmZlQocix0LGUpLGdUKHIsdCkscFQocix0KSx5VChyLHQpLHZUKHIsdCkscn1sZXQgQ1Q9WyJpZCIsInJvdXRlIiwiaXNOVnVlIiwiaXNRdWl0IiwiaXNFbnRyeSIsImlzVGFiQmFyIiwidGFiQmFySW5kZXgiLCJ3aW5kb3dUb3AiLCJ0b3BXaW5kb3ciLCJsZWZ0V2luZG93IiwicmlnaHRXaW5kb3ciLCJtYXhXaWR0aCIsInVzaW5nQ29tcG9uZW50cyIsImRpc2FibGVTY3JvbGwiLCJlbmFibGVQdWxsRG93blJlZnJlc2giLCJuYXZpZ2F0aW9uQmFyIiwicHVsbFRvUmVmcmVzaCIsIm9uUmVhY2hCb3R0b21EaXN0YW5jZSIsInBhZ2VPcmllbnRhdGlvbiIsImJhY2tncm91bmRDb2xvciJdLGRnPTI7ZnVuY3Rpb24gaGcoKXtyZXR1cm4gZGd9ZnVuY3Rpb24gcGcoKXtyZXR1cm4gZGcrK31mdW5jdGlvbiBnZyhlKXtyZXR1cm4gZX1mdW5jdGlvbiB2ZyhlLHQpe2xldCBuPXQ/cmUuc3RyaW5naWZ5UXVlcnkodCxnZyk6IiI7cmV0dXJue3BhdGg6ZS5zbGljZSgxKSxxdWVyeTpuJiZuLnNsaWNlKDEpfX1mdW5jdGlvbiBPVChlLHQsbil7bGV0IHI9bj9yZS5zdHJpbmdpZnlRdWVyeShuLGdnKToiIjtyZXR1cm57aXNUYWI6ZSxhcmd1bWVudHM6SlNPTi5zdHJpbmdpZnkoe3BhdGg6dC5zbGljZSgxKSxxdWVyeTpyJiZyLnNsaWNlKDEpfSl9fWZ1bmN0aW9uIEFUKHtwYXRoOmUscXVlcnk6dCxyb3V0ZU9wdGlvbnM6bix3ZWJ2aWV3RXh0cmFzOnJ9KXtsZXQgcz0oKT0+ZmcoZSxVZihuLm1ldGEpLHtpZDp1KyIifSksdT1wZygpLGc9cygpO2cudW5pUGFnZVVybD12ZyhlLHQpLGcuaXNUYWI9ISFuLm1ldGEuaXNUYWJCYXI7bGV0IEU9bC53ZWJ2aWV3LmNyZWF0ZSgiIixTdHJpbmcodSksZyxKLmV4dGVuZCh7bnZ1ZTohMCxfX3BhdGhfXzplLF9fcXVlcnlfXzpKU09OLnN0cmluZ2lmeSh0KX0scikpO3JldHVybiBvcChFLHMpLEV9bGV0IHVvO2Z1bmN0aW9uIG1nKGUpe3VvPWV9ZnVuY3Rpb24gVFQoKXtyZXR1cm4gdW99ZnVuY3Rpb24gSVQoKXtyZXR1cm4oIXVvfHx1by5fX3VuaWFwcF9yb3V0ZSkmJih1bz1sLndlYnZpZXcuY3JlYXRlKGxULFN0cmluZyhwZygpKSx7Y29udGVudEFkanVzdDohMX0pKSx1b31mdW5jdGlvbiBQVChlKXtsZXR7cG9wdXBTdWJOVnVlV2Vidmlld3M6dH09ZTshdHx8ZS5hZGRFdmVudExpc3RlbmVyKCJjbG9zZSIsKCk9PntPYmplY3Qua2V5cyh0KS5mb3JFYWNoKG49Pnt0W25dLmNsb3NlKCJub25lIil9KX0pfWZ1bmN0aW9uIF9nKGUpe3JldHVybiBSLnJlYWxFbnRyeVBhZ2VQYXRoJiZlLiRwYWdlLnJvdXRlPT09Ui5lbnRyeVBhZ2VQYXRofWZ1bmN0aW9uIGJnKCl7Ui5lbnRyeVBhZ2VQYXRoPVIucmVhbEVudHJ5UGFnZVBhdGgsZGVsZXRlIFIucmVhbEVudHJ5UGFnZVBhdGgsaWUucmVMYXVuY2goe3VybDpyZS5hZGRMZWFkaW5nU2xhc2goUi5lbnRyeVBhZ2VQYXRoKX0pfWZ1bmN0aW9uIE5UKGUpe2xldCB0O2UuYWRkRXZlbnRMaXN0ZW5lcigicG9wR2VzdHVyZSIsbj0+e2lmKG4udHlwZT09PSJzdGFydCIpe2xldCByPXFuKCkscz1yW3IubGVuZ3RoLTJdO3Q9ZnU7bGV0IHU9cyYmcy4kcGFnZS5zdGF0dXNCYXJTdHlsZTt1JiZEcyh1KX1lbHNlIGlmKG4udHlwZT09PSJlbmQiJiYhbi5yZXN1bHQpRHModCk7ZWxzZSBpZihuLnR5cGU9PT0iZW5kIiYmbi5yZXN1bHQpe2xldCByPXFuKCkubGVuZ3RoLHM9RnIoKTtjbCgpLERzKCkscyYmcj09PTEmJl9nKHMpP2JnKCk6UG4ocmUuT05fU0hPVyl9fSl9ZnVuY3Rpb24ga1QoZSl7aWYoZS5udnVlKXJldHVybjtsZXQgdD1lLmlkLHtzdWJzY3JpYmU6bix1bnN1YnNjcmliZTpyfT1tdCxzPSh1LGcpPT57aWYodCE9PWcpcmV0dXJuO3IoQmMscyk7bGV0IEU9em4ocGFyc2VJbnQoZykpO0UmJkUuX19wYWdlX2NvbnRhaW5lcl9fLnJlc3RvcmUoKX07ZS5hZGRFdmVudExpc3RlbmVyKCJyZWNvdmVyeSIsKCk9PntuKEJjLHMpfSl9ZnVuY3Rpb24gUlQoZSl7bGV0e2VtaXQ6dH09bXQsbj1mdW5jdGlvbih7d2lkdGg6cixoZWlnaHQ6c30pe2xldCBnPXtkZXZpY2VPcmllbnRhdGlvbjpNYXRoLmFicyhsLm5hdmlnYXRvci5nZXRPcmllbnRhdGlvbigpKT09PTkwPyJsYW5kc2NhcGUiOiJwb3J0cmFpdCIsc2l6ZTp7d2luZG93V2lkdGg6TWF0aC5jZWlsKHIpLHdpbmRvd0hlaWdodDpNYXRoLmNlaWwocyl9fTt0KHJlLk9OX1JFU0laRSxnLHBhcnNlSW50KGUuaWQpKX07ZS5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLHJlLmRlYm91bmNlKG4sNTAse3NldFRpbWVvdXQ6ayxjbGVhclRpbWVvdXQ6Q30pKX1sZXQgeWc9e3B1bGxUb1JlZnJlc2g6cmUuT05fUFVMTF9ET1dOX1JFRlJFU0gsdGl0bGVOVmlld1NlYXJjaElucHV0Q2hhbmdlZDpyZS5PTl9OQVZJR0FUSU9OX0JBUl9TRUFSQ0hfSU5QVVRfQ0hBTkdFRCx0aXRsZU5WaWV3U2VhcmNoSW5wdXRDb25maXJtZWQ6cmUuT05fTkFWSUdBVElPTl9CQVJfU0VBUkNIX0lOUFVUX0NPTkZJUk1FRCx0aXRsZU5WaWV3U2VhcmNoSW5wdXRDbGlja2VkOnJlLk9OX05BVklHQVRJT05fQkFSX1NFQVJDSF9JTlBVVF9DTElDS0VELHRpdGxlTlZpZXdTZWFyY2hJbnB1dEZvY3VzQ2hhbmdlZDpyZS5PTl9OQVZJR0FUSU9OX0JBUl9TRUFSQ0hfSU5QVVRfRk9DVVNfQ0hBTkdFRH07ZnVuY3Rpb24geFQoZSl7bGV0IHQ9cGFyc2VJbnQoZS5pZCk7T2JqZWN0LmtleXMoeWcpLmZvckVhY2gobj0+e2xldCByPXlnW25dO2UuYWRkRXZlbnRMaXN0ZW5lcihuLHM9PntyPT09cmUuT05fUFVMTF9ET1dOX1JFRlJFU0gmJmpmKGUpLFBuKHQscixzKX0pfSksUFQoZSksUlQoZSksbC5vcy5uYW1lPT09ImlPUyImJihrVChlKSxOVChlKSl9ZnVuY3Rpb24gQlQoZSx0LG4scil7bGV0IHM9KCk9PmZnKHQsVWYociksZSksdT1zKCk7dS51bmlQYWdlVXJsPXZnKHQsbik7bGV0IGc9ISFyLmlzVGFiQmFyO3IuaXNOVnVlP3UuaXNUYWI9Zzp1LmRlYnVnUmVmcmVzaD1PVChnLHQsbiksdS5sb2NhbGU9di5yZXF1aXJlTW9kdWxlKCJwbHVzIikuZ2V0TGFuZ3VhZ2UoKSxvcChlLHMpLGUuc2V0U3R5bGUodSl9ZnVuY3Rpb24gTVQoZSx0LG4peyhuLnN1Yk5WdWVzfHxbXSkuZm9yRWFjaChzPT57aWYoIXMucGF0aClyZXR1cm47bGV0IHU9Q28ocy5zdHlsZXx8e30pLGc9cy50eXBlPT09Im5hdmlnYXRpb25CYXIiLEU9cy50eXBlPT09InBvcHVwIjt1LnVuaU5WaWV3PXtwYXRoOnMucGF0aC5yZXBsYWNlKCIubnZ1ZSIsIi5qcyIpLGRlZmF1bHRGb250U2l6ZTpSLmRlZmF1bHRGb250U2l6ZSx2aWV3cG9ydDpSLnZpZXdwb3J0fTtsZXQgJD17X191bmlhcHBfaG9zdDp0LF9fdW5pYXBwX29yaWdpbjp1LnVuaU5WaWV3LnBhdGguc3BsaXQoIj8iKVswXS5yZXBsYWNlKCIuanMiLCIiKSxfX3VuaWFwcF9vcmlnaW5faWQ6ZS5pZCxfX3VuaWFwcF9vcmlnaW5fdHlwZTplLl9fdW5pYXBwX3R5cGV9LFA7Zz8odS5wb3NpdGlvbj0iZG9jayIsdS5kb2NrPSJ0b3AiLHUudG9wPSIwIix1LndpZHRoPSIxMDAlIix1LmhlaWdodD1TdHJpbmcocmUuTkFWQkFSX0hFSUdIVCt6ZigpKSxkZWxldGUgdS5sZWZ0LGRlbGV0ZSB1LnJpZ2h0LGRlbGV0ZSB1LmJvdHRvbSxkZWxldGUgdS5tYXJnaW4pOkUmJih1LnBvc2l0aW9uPSJhYnNvbHV0ZSIsdXUodCk/UD1OaTpQPWUsJC5fX3VuaWFwcF9tYXNrPXUubWFza3x8InJnYmEoMCwwLDAsMC41KSIsJC5fX3VuaWFwcF9tYXNrX2lkPVAuaWQpLGRlbGV0ZSB1Lm1hc2s7bGV0IEw9bC53ZWJ2aWV3LmNyZWF0ZSgiIixzLmlkLHUsJCk7aWYoRSl7UC5wb3B1cFN1Yk5WdWVXZWJ2aWV3c3x8KFAucG9wdXBTdWJOVnVlV2Vidmlld3M9e30pLFAucG9wdXBTdWJOVnVlV2Vidmlld3NbTC5pZF09TDtsZXQgQWU9ZnVuY3Rpb24oKXtQLnNldFN0eWxlKHttYXNrOiJub25lIn0pLEwuaGlkZSgiYXV0byIpfTtQLmFkZEV2ZW50TGlzdGVuZXIoIm1hc2tDbGljayIsQWUpO2xldCBOZT0hMTtMLmFkZEV2ZW50TGlzdGVuZXIoInNob3ciLCgpPT57TmV8fChsLmtleS5yZW1vdmVFdmVudExpc3RlbmVyKCJiYWNrYnV0dG9uIixpYSksbC5rZXkuYWRkRXZlbnRMaXN0ZW5lcigiYmFja2J1dHRvbiIsQWUpLE5lPSEwKX0pLEwuYWRkRXZlbnRMaXN0ZW5lcigiaGlkZSIsKCk9PntOZSYmKGwua2V5LnJlbW92ZUV2ZW50TGlzdGVuZXIoImJhY2tidXR0b24iLEFlKSxsLmtleS5hZGRFdmVudExpc3RlbmVyKCJiYWNrYnV0dG9uIixpYSksTmU9ITEpfSksTC5hZGRFdmVudExpc3RlbmVyKCJjbG9zZSIsKCk9PntkZWxldGUgUC5wb3B1cFN1Yk5WdWVXZWJ2aWV3c1tMLmlkXSxOZSYmKGwua2V5LnJlbW92ZUV2ZW50TGlzdGVuZXIoImJhY2tidXR0b24iLEFlKSxsLmtleS5hZGRFdmVudExpc3RlbmVyKCJiYWNrYnV0dG9uIixpYSksTmU9ITEpfSl9ZWxzZSBlLmFwcGVuZChMKX0pfWZ1bmN0aW9uIERUKGUsdCxuLHIpeyhlLmlkPT09IjEifHwhci5pc05WdWUpJiZCVChlLHQsbixyKSxNVChlLHQscikseFQoZSl9ZnVuY3Rpb24gRWcoZSl7cmV0dXJuIGUucm91dGVPcHRpb25zLm1ldGEuaXNOVnVlP0FUKGUpOmhnKCk9PT0yP2wud2Vidmlldy5nZXRMYXVuY2hXZWJ2aWV3KCk6VFQoKX1mdW5jdGlvbiB3ZyhlLHQpe210Lm9uY2UoQmMrIi4iK2UsdCl9bGV0IGRzPSExO2Z1bmN0aW9uIFNnKGUsdCxuKXtkcz17cGF0aDplLG52dWU6SmEoZSkuaXNOVnVlLGNhbGxiYWNrOnR9fWZ1bmN0aW9uIENnKGUsdCxuKXtqbyhlKSxLbChlLiRnZXRBcHBXZWJ2aWV3KCksdCxuKX1mdW5jdGlvbiBxdShlLHQsbj0hMSl7aWYoIW4mJmRzKXJldHVybiBjb25zb2xlLmVycm9yKGBXYWl0aW5nIHRvIG5hdmlnYXRlIHRvOiAke2RzLnBhdGh9LCBkbyBub3Qgb3BlcmF0ZSBjb250aW51b3VzbHk6ICR7ZX0uYCk7aWYoUi5yZW5kZXJlcj09PSJuYXRpdmUiKXJldHVybiBxbigpLmxlbmd0aD09PTA/U2coZSx0LCJ3YWl0Rm9yUmVhZHkiKTp0KCk7bGV0IHI9IXVvfHx1byYmdW8uX191bmlhcHBfcm91dGUscz11byYmIXVvLmxvYWRlZDtyfHxzP1NnKGUsdCxyPyJ3YWl0Rm9yQ3JlYXRlIjoid2FpdEZvclJlYWR5Iik6dCgpLHMmJndnKHVvLmlkLEt1KX1mdW5jdGlvbiBLdSgpe2lmKCFkcylyZXR1cm47bGV0e2NhbGxiYWNrOmV9PWRzO3JldHVybiBkcz0hMSxlKCl9ZnVuY3Rpb24gT2coKXtpZihSLnJlbmRlcmVyPT09Im5hdGl2ZSIpcmV0dXJuIGRzJiZkcy5udnVlP0t1KCk6dm9pZCAwO2xldCBlPUlUKCk7aWYoISFkcyl7aWYoZHMubnZ1ZSlyZXR1cm4gS3UoKTtlLmxvYWRlZD9kcy5jYWxsYmFjaygpOndnKGUuaWQsS3UpfX1mdW5jdGlvbiBLbChlLHQsbil7ZVtlLl9fcHJlbG9hZF9fPyJoaWRlIjoiY2xvc2UiXSh0LG4pfWZ1bmN0aW9uIEp1KGUsdCxuLHIscyl7dHlwZW9mIHM9PSJ1bmRlZmluZWQiJiYocz1lLm52dWU/MDoxMDApO2xldCB1PWZ1bmN0aW9uKCl7dS5fY2FsbGVkfHwodS5fY2FsbGVkPSEwLHImJnIoKSxPZygpKX07dS5fY2FsbGVkPSExLGsoKCk9PntsZXQgZz1rKCgpPT57dSgpfSxuKzE1MCk7ZS5zaG93KHQsbiwoKT0+e3UuX2NhbGxlZHx8QyhnKSx1KCl9KX0scyl9ZnVuY3Rpb24gTFQoZSx0KXtsZXQgbj1lLmNoaWxkcmVuKCk7aWYoIW58fCFuLmxlbmd0aClyZXR1cm4gdCgpO2xldCByPW4uZmluZChzPT5zLmlkLmluZGV4T2YoY1QpPT09MCl8fG5bMF07ci5jYW5CYWNrKCh7Y2FuQmFjazpzfSk9PntzP3IuYmFjaygpOnQoKX0pfWxldCBGVD14ZShuRSwoZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXQgcj1GcigpO2lmKCFyKXJldHVybiBuKCJnZXRDdXJyZW50UGFnZXMgaXMgZW1wdHkiKTtpZihQbihyLHJlLk9OX0JBQ0tfUFJFU1Mse2Zyb206ZS5mcm9tfHwibmF2aWdhdGVCYWNrIn0pKXJldHVybiB0KCk7aWYoaWUuaGlkZVRvYXN0KCksaWUuaGlkZUxvYWRpbmcoKSxyLiRwYWdlLm1ldGEuaXNRdWl0KVZUKCk7ZWxzZSBpZihfZyhyKSliZygpO2Vsc2V7bGV0e2RlbHRhOnMsYW5pbWF0aW9uVHlwZTp1LGFuaW1hdGlvbkR1cmF0aW9uOmd9PWU7JFQocyx1LGcpfXJldHVybiB0KCl9LGlFLHBFKSxadT0wO2Z1bmN0aW9uIFZUKCl7U3QoKSxadT9EYXRlLm5vdygpLVp1PDJlMyYmbC5ydW50aW1lLnF1aXQoKTooWnU9RGF0ZS5ub3coKSxsLm5hdGl2ZVVJLnRvYXN0KGNlKCkudCgidW5pLmFwcC5xdWl0IikpLGsoKCk9PntadT0wfSwyZTMpKX1mdW5jdGlvbiAkVChlLHQsbil7bGV0IHI9cW4oKSxzPXIubGVuZ3RoLHU9cltzLTFdO2U+MSYmci5zbGljZShzLWUscy0xKS5yZXZlcnNlKCkuZm9yRWFjaCgkPT57S2wobC53ZWJ2aWV3LmdldFdlYnZpZXdCeUlkKCQuJHBhZ2UuaWQrIiIpLCJub25lIiwwKX0pO2xldCBnPWZ1bmN0aW9uKCQpe3Q/S2woJCx0LG58fFl1KTp1LiRwYWdlLm9wZW5UeXBlPT09InJlZGlyZWN0VG8iP0tsKCQsdWcsWXUpOktsKCQsImF1dG8iKSxyLnNsaWNlKHMtZSxzKS5mb3JFYWNoKFA9PmpvKFApKSxEcygpLFBuKHJlLk9OX1NIT1cpfSxFPWwud2Vidmlldy5nZXRXZWJ2aWV3QnlJZCh1LiRwYWdlLmlkKyIiKTtpZighdS5fX3VuaWFwcF93ZWJ2aWV3KXJldHVybiBnKEUpO0xUKEUsKCk9PntnKEUpfSl9Y2xhc3MgVVQgZXh0ZW5kcyByZS5VbmlOb2Rle2NvbnN0cnVjdG9yKHQsbixyPSExKXtzdXBlcihyZS5OT0RFX1RZUEVfUEFHRSwiI3BhZ2UiLG51bGwpO3RoaXMuX2lkPTEsdGhpcy5fY3JlYXRlZD0hMSx0aGlzLl91cGRhdGluZz0hMSx0aGlzLl9jcmVhdGVBY3Rpb25NYXA9bmV3IE1hcCx0aGlzLnVwZGF0ZUFjdGlvbnM9W10sdGhpcy5kaWN0cz1bXSx0aGlzLm5vZGVJZD0wLHRoaXMucGFnZUlkPXQsdGhpcy5wYWdlTm9kZT10aGlzLHRoaXMub3B0aW9ucz1uLHRoaXMuaXNVbm1vdW50ZWQ9ITEsdGhpcy5jcmVhdGVBY3Rpb249W3JlLkFDVElPTl9UWVBFX1BBR0VfQ1JFQVRFLG5dLHRoaXMuY3JlYXRlZEFjdGlvbj1bcmUuQUNUSU9OX1RZUEVfUEFHRV9DUkVBVEVEXSx0aGlzLm5vcm1hbGl6ZURpY3Q9dGhpcy5fbm9ybWFsaXplRGljdC5iaW5kKHRoaXMpLHRoaXMuX3VwZGF0ZT10aGlzLnVwZGF0ZS5iaW5kKHRoaXMpLHImJnRoaXMuc2V0dXAoKX1fbm9ybWFsaXplRGljdCh0LG49ITApe2lmKCFKLmlzUGxhaW5PYmplY3QodCkpcmV0dXJuIHRoaXMuYWRkRGljdCh0KTtsZXQgcj1bXTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaChzPT57bGV0IHU9W3RoaXMuYWRkRGljdChzKV0sZz10W3NdO24/dS5wdXNoKHRoaXMuYWRkRGljdChnKSk6dS5wdXNoKGcpLHIucHVzaCh1KX0pLHJ9YWRkRGljdCh0KXtsZXR7ZGljdHM6bn09dGhpcyxyPW4uaW5kZXhPZih0KTtyZXR1cm4gcj4tMT9yOm4ucHVzaCh0KS0xfW9uSW5qZWN0SG9vayh0KXsodD09PXJlLk9OX1BBR0VfU0NST0xMfHx0PT09cmUuT05fUkVBQ0hfQk9UVE9NKSYmIXRoaXMuc2Nyb2xsQWN0aW9uJiYodGhpcy5zY3JvbGxBY3Rpb249W3JlLkFDVElPTl9UWVBFX1BBR0VfU0NST0xMLHRoaXMub3B0aW9ucy5vblJlYWNoQm90dG9tRGlzdGFuY2VdLHRoaXMucHVzaCh0aGlzLnNjcm9sbEFjdGlvbikpfW9uQ3JlYXRlKHQsbil7cmV0dXJuIHpUKHRoaXMsdC5ub2RlSWQsbiksdH1vbkluc2VydEJlZm9yZSh0LG4scil7cmV0dXJuIFdUKHRoaXMsbix0Lm5vZGVJZCxyJiZyLm5vZGVJZHx8LTEpLG59b25SZW1vdmVDaGlsZCh0KXtyZXR1cm4gR1QodGhpcyx0Lm5vZGVJZCksdH1vbkFkZEV2ZW50KHQsbixyKXt0LnBhcmVudE5vZGUmJllUKHRoaXMsdC5ub2RlSWQsbixyKX1vbkFkZFd4c0V2ZW50KHQsbixyLHMpe3QucGFyZW50Tm9kZSYmcVQodGhpcyx0Lm5vZGVJZCxuLHIscyl9b25SZW1vdmVFdmVudCh0LG4pe3QucGFyZW50Tm9kZSYmS1QodGhpcyx0Lm5vZGVJZCxuKX1vblNldEF0dHJpYnV0ZSh0LG4scil7dC5wYXJlbnROb2RlJiZaVCh0aGlzLHQubm9kZUlkLG4scil9b25SZW1vdmVBdHRyaWJ1dGUodCxuKXt0LnBhcmVudE5vZGUmJlhUKHRoaXMsdC5ub2RlSWQsbil9b25UZXh0Q29udGVudCh0LG4pe3QucGFyZW50Tm9kZSYmVGcodGhpcyx0Lm5vZGVJZCxuKX1vbk5vZGVWYWx1ZSh0LG4pe3QucGFyZW50Tm9kZSYmVGcodGhpcyx0Lm5vZGVJZCxuKX1nZW5JZCgpe3JldHVybiB0aGlzLl9pZCsrfXB1c2godCxuKXtpZighdGhpcy5pc1VubW91bnRlZCl7c3dpdGNoKHRbMF0pe2Nhc2UgcmUuQUNUSU9OX1RZUEVfQ1JFQVRFOnRoaXMuX2NyZWF0ZUFjdGlvbk1hcC5zZXQodFsxXSx0KTticmVhaztjYXNlIHJlLkFDVElPTl9UWVBFX0lOU0VSVDpsZXQgcj10aGlzLl9jcmVhdGVBY3Rpb25NYXAuZ2V0KHRbMV0pO3I/KHJbM109dFsyXSxyWzRdPXRbM10sbiYmKHJbNV09bikpOihuJiYodFs0XT1uKSx0aGlzLnVwZGF0ZUFjdGlvbnMucHVzaCh0KSk7YnJlYWt9dFswXSE9PXJlLkFDVElPTl9UWVBFX0lOU0VSVCYmdGhpcy51cGRhdGVBY3Rpb25zLnB1c2godCksdGhpcy5fdXBkYXRpbmd8fCh0aGlzLl91cGRhdGluZz0hMCxMbi5xdWV1ZVBvc3RGbHVzaENiKHRoaXMuX3VwZGF0ZSkpfX1yZXN0b3JlKCl7dGhpcy5jbGVhcigpLHRoaXMuc2V0dXAoKSx0aGlzLnNjcm9sbEFjdGlvbiYmdGhpcy5wdXNoKHRoaXMuc2Nyb2xsQWN0aW9uKTtsZXQgdD1uPT57dGhpcy5vbkNyZWF0ZShuLG4ubm9kZU5hbWUpLHRoaXMub25JbnNlcnRCZWZvcmUobi5wYXJlbnROb2RlLG4sbnVsbCksbi5jaGlsZE5vZGVzLmZvckVhY2gocj0+e3Qocil9KX07dGhpcy5jaGlsZE5vZGVzLmZvckVhY2gobj0+dChuKSksdGhpcy5wdXNoKHRoaXMuY3JlYXRlZEFjdGlvbil9c2V0dXAoKXt0aGlzLnNlbmQoW3RoaXMuY3JlYXRlQWN0aW9uXSl9dXBkYXRlKCl7bGV0e2RpY3RzOnQsdXBkYXRlQWN0aW9uczpuLF9jcmVhdGVBY3Rpb25NYXA6cn09dGhpczt0aGlzLl9jcmVhdGVkfHwodGhpcy5fY3JlYXRlZD0hMCxuLnB1c2godGhpcy5jcmVhdGVkQWN0aW9uKSksbi5sZW5ndGgmJih0Lmxlbmd0aCYmbi51bnNoaWZ0KFt2QSx0XSksdGhpcy5zZW5kKG4pKSx0aGlzLmNsZWFyKCl9Y2xlYXIoKXt0aGlzLmRpY3RzLmxlbmd0aD0wLHRoaXMudXBkYXRlQWN0aW9ucy5sZW5ndGg9MCx0aGlzLl91cGRhdGluZz0hMSx0aGlzLl9jcmVhdGVBY3Rpb25NYXAuY2xlYXIoKX1zZW5kKHQpe210LnB1Ymxpc2hIYW5kbGVyKEhwLHQsdGhpcy5wYWdlSWQpfWZpcmVFdmVudCh0LG4pe2xldCByPUFnKHQsdGhpcyk7ciYmci5kaXNwYXRjaEV2ZW50KG4pfX1mdW5jdGlvbiBIVChlKXtsZXQgdD16bihlKTtyZXR1cm4gdD90Ll9fcGFnZV9jb250YWluZXJfXzpudWxsfWZ1bmN0aW9uIGlkKGUsdCxuKXtpZih0eXBlb2Ygbj09Im51bWJlciImJihuPUhUKG4pKSxuW2VdPT09dClyZXR1cm4gbjtsZXR7Y2hpbGROb2RlczpyfT1uO2ZvcihsZXQgcz0wO3M8ci5sZW5ndGg7cysrKXtsZXQgdT1pZChlLHQscltzXSk7aWYodSlyZXR1cm4gdX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBBZyhlLHQpe3JldHVybiBpZCgibm9kZUlkIixlLHQpfWZ1bmN0aW9uIGpUKGUsdCl7cmV0dXJuIGlkKCJub2RlTmFtZSIsZS50b1VwcGVyQ2FzZSgpLHQpfWZ1bmN0aW9uIHpUKGUsdCxuKXtlLnB1c2goW3JlLkFDVElPTl9UWVBFX0NSRUFURSx0LGUuYWRkRGljdChuKSwtMSwtMV0pfWZ1bmN0aW9uIFdUKGUsdCxuLHIpe2xldCBzPXQudG9KU09OKHthdHRyOiEwLG5vcm1hbGl6ZTplLm5vcm1hbGl6ZURpY3R9KTtlLnB1c2goW3JlLkFDVElPTl9UWVBFX0lOU0VSVCx0Lm5vZGVJZCxuLHJdLE9iamVjdC5rZXlzKHMpLmxlbmd0aD9zOnZvaWQgMCl9ZnVuY3Rpb24gR1QoZSx0KXtlLnB1c2goW3JlLkFDVElPTl9UWVBFX1JFTU9WRSx0XSl9ZnVuY3Rpb24gWVQoZSx0LG4scil7ZS5wdXNoKFtyZS5BQ1RJT05fVFlQRV9BRERfRVZFTlQsdCxlLmFkZERpY3Qobikscl0pfWZ1bmN0aW9uIHFUKGUsdCxuLHIscyl7ZS5wdXNoKFtyZS5BQ1RJT05fVFlQRV9BRERfV1hTX0VWRU5ULHQsZS5hZGREaWN0KG4pLGUuYWRkRGljdChyKSxzXSl9ZnVuY3Rpb24gS1QoZSx0LG4pe2UucHVzaChbcmUuQUNUSU9OX1RZUEVfUkVNT1ZFX0VWRU5ULHQsZS5hZGREaWN0KG4pXSl9ZnVuY3Rpb24gSlQoZSx0LG4pe3JldHVybiB0PT09InN0eWxlIiYmSi5pc1BsYWluT2JqZWN0KG4pP2Uubm9ybWFsaXplRGljdChuKTplLmFkZERpY3Qobil9ZnVuY3Rpb24gWlQoZSx0LG4scil7ZS5wdXNoKFtyZS5BQ1RJT05fVFlQRV9TRVRfQVRUUklCVVRFLHQsZS5hZGREaWN0KG4pLEpUKGUsbixyKV0pfWZ1bmN0aW9uIFhUKGUsdCxuKXtlLnB1c2goW3JlLkFDVElPTl9UWVBFX1JFTU9WRV9BVFRSSUJVVEUsdCxlLmFkZERpY3QobildKX1mdW5jdGlvbiBUZyhlLHQsbil7ZS5wdXNoKFtyZS5BQ1RJT05fVFlQRV9TRVRfVEVYVCx0LGUuYWRkRGljdChuKV0pfWZ1bmN0aW9uIFFUKGUsdCxuKXtyZXR1cm4gbmV3IFVUKGUsdCxuKX1mdW5jdGlvbiBJZyhlKXtsZXQgdD1lLnNldHVwO3JldHVybiBlLmluaGVyaXRBdHRycz0hMSxlLnNldHVwPShuLHIpPT57bGV0e2F0dHJzOntfX3BhZ2VJZDpzLF9fcGFnZVBhdGg6dSxfX3BhZ2VRdWVyeTpnLF9fcGFnZUluc3RhbmNlOkV9fT1yLFA9TG4uZ2V0Q3VycmVudEluc3RhbmNlKCkucHJveHk7aWYoV3QoUCxFKSxMYShQZyhzLFAsRSkpLExuLm9uTW91bnRlZCgoKT0+e0xuLm5leHRUaWNrKCgpPT57UG4oUCxyZS5PTl9SRUFEWSl9KX0pLExuLm9uQmVmb3JlVW5tb3VudCgoKT0+e1BuKFAscmUuT05fVU5MT0FEKX0pLHQpcmV0dXJuIHQoZyxyKX0sZX1mdW5jdGlvbiBQZyhlLHQsbil7bGV0IHI9KCk9Pmwud2Vidmlldy5nZXRXZWJ2aWV3QnlJZChlKyIiKTtyZXR1cm4gdC4kZ2V0QXBwV2Vidmlldz1yLHQuJC5jdHguJHNjb3BlPXskZ2V0QXBwV2VidmlldzpyfSx0LmdldE9wZW5lckV2ZW50Q2hhbm5lbD0oKT0+KG4uZXZlbnRDaGFubmVsfHwobi5ldmVudENoYW5uZWw9bmV3IHJlLkV2ZW50Q2hhbm5lbChlKSksbi5ldmVudENoYW5uZWwpLHR9ZnVuY3Rpb24gZUkoZSl7cmV0dXJuIEouaXNGdW5jdGlvbihlKX1sZXQgTmc9bmV3IE1hcDtmdW5jdGlvbiB0SShlLHQpe05nLnNldChlLHJlLm9uY2UockkodCkpKX1mdW5jdGlvbiBuSShlLHQsbixyLHMpe2xldCB1PVFUKGUscywhMCksZz1NYSgpLEU9TmcuZ2V0KHQpKCksJD1QPT5nLm1vdW50UGFnZShQLHtfX3BhZ2VJZDplLF9fcGFnZVBhdGg6dCxfX3BhZ2VRdWVyeTpuLF9fcGFnZUluc3RhbmNlOnJ9LHUpO3JldHVybiBKLmlzUHJvbWlzZShFKT9FLnRoZW4oUD0+JChQKSk6JChFKX1mdW5jdGlvbiBySShlKXtyZXR1cm4oKT0+ZUkoZSk/ZSgpLnRoZW4odD0+SWcodCkpOklnKGUpfWxldCBrZz0hMTtmdW5jdGlvbiBSZygpe2lmKGtnKXJldHVybjtrZz0hMDtsZXQgZSx0O2lmKHYucmVxdWlyZU1vZHVsZSgicGx1cyIpLmdldFJlZGlyZWN0SW5mbyl7bGV0e3BhdGg6dSxxdWVyeTpnLHJlZmVycmVySW5mbzpFfT16ZSgpO3UmJihlPXUsdD1nKSxSLnJlZmVycmVySW5mbz1FfWVsc2V7bGV0IHU9bC5ydW50aW1lLmFyZ3VtZW50cztpZighdSlyZXR1cm47dHJ5e2xldCBnPUpTT04ucGFyc2UodSk7ZT1nLnBhdGh8fGcucGF0aE5hbWUsdD1nLnF1ZXJ5PyI/IitnLnF1ZXJ5OiIifWNhdGNoKGcpe319aWYoIWV8fGU9PT1SLmVudHJ5UGFnZVBhdGgpe3QmJihSLmVudHJ5UGFnZVF1ZXJ5PXQpO3JldHVybn1sZXQgcj1yZS5hZGRMZWFkaW5nU2xhc2goZSkscz1hbyhyKTshc3x8KHMubWV0YS5pc1RhYkJhcnx8KFIucmVhbEVudHJ5UGFnZVBhdGg9Ui5yZWFsRW50cnlQYWdlUGF0aHx8Ui5lbnRyeVBhZ2VQYXRoKSxSLmVudHJ5UGFnZVBhdGg9ZSxSLmVudHJ5UGFnZVF1ZXJ5PXQpfWZ1bmN0aW9uIFh1KGUsdCl7bGV0IG49SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhbyhlKSkpO3JldHVybiBuLm1ldGE9aWwobi5tZXRhKSx0IT09InByZWxvYWRQYWdlIiYmIVIucmVhbEVudHJ5UGFnZVBhdGgmJih0PT09InJlTGF1bmNoInx8cW4oKS5sZW5ndGg9PT0wKT9uLm1ldGEuaXNRdWl0PSEwOm4ubWV0YS5pc1RhYkJhcnx8KG4ubWV0YS5pc1F1aXQ9ITEpLG59bGV0IGhzPXt9O2Z1bmN0aW9uIGlJKGUpe2xldCB0PU9iamVjdC5rZXlzKGhzKS5maW5kKG49PmhzW25dLmlkPT09ZS5pZCk7dCYmZGVsZXRlIGhzW3RdfWZ1bmN0aW9uIG9JKHt1cmw6ZX0pe2xldCB0PWhzW2VdO3JldHVybiB0JiYodC5fX3BhZ2VfXyYmcW4oKS5maW5kKG49Pm49PT10Ll9fcGFnZV9fKT90Ll9fcHJlbG9hZF9fPSExOnQuY2xvc2UoIm5vbmUiKSxkZWxldGUgaHNbZV0pLHR9ZnVuY3Rpb24gYUkoe3VybDplLHBhdGg6dCxxdWVyeTpufSl7aWYoIWhzW2VdKXtsZXQgcj1YdSh0LCJwcmVsb2FkUGFnZSIpO2hzW2VdPUVnKHtwYXRoOnQscm91dGVPcHRpb25zOnIscXVlcnk6bix3ZWJ2aWV3RXh0cmFzOntfX3ByZWxvYWRfXzohMH19KX1yZXR1cm4gaHNbZV19ZnVuY3Rpb24geXUoe3VybDplLHBhdGg6dCxxdWVyeTpuLG9wZW5UeXBlOnIsd2VidmlldzpzLG52dWVQYWdlVm06dSxldmVudENoYW5uZWw6Z30pe2lmKHMmJlJnKCksaHNbZV0pe3M9aHNbZV07bGV0IE5lPXM7aWYoTmUuX19wYWdlX18paWYocW4oKS5maW5kKFJlPT5SZT09PU5lLl9fcGFnZV9fKSlzPXZvaWQgMDtlbHNlIHJldHVybiBnJiYoTmUuX19wYWdlX18uJHBhZ2UuZXZlbnRDaGFubmVsPWcpLHI9PT0ibGF1bmNoIj9zSShlLHQsbixOZSx1LGcpOkxhKE5lLl9fcGFnZV9fKSxOZX1sZXQgRT1YdSh0LHIpO3M/KHM9bC53ZWJ2aWV3LmdldFdlYnZpZXdCeUlkKHMuaWQpLHMubnZ1ZT1FLm1ldGEuaXNOVnVlKTpzPUVnKHtwYXRoOnQscm91dGVPcHRpb25zOkUscXVlcnk6bn0pLEUubWV0YS5pZD1wYXJzZUludChzLmlkKSwhIUUubWV0YS5pc1RhYkJhciYmTmkuYXBwZW5kKHMpLERUKHMsdCxuLEUubWV0YSk7bGV0IFA9dC5zbGljZSgxKTtzLl9fdW5pYXBwX3JvdXRlPVA7bGV0IEw9a2EocixlLG4sRS5tZXRhLGcsUi5kYXJrbW9kZT9sLm5hdmlnYXRvci5nZXRVSVN0eWxlKCk6ImxpZ2h0IiksQWU9cGFyc2VJbnQocy5pZCk7cmV0dXJuIHMubnZ1ZT91P2NJKEFlLHUsTCk6eGcoQWUscyxMKTpuSShBZSxQLG4sTCxsSShFKSksc31mdW5jdGlvbiBzSShlLHQsbixyLHMsdSl7bGV0IGc9WHUodCwicHJlbG9hZFBhZ2UiKTtnLm1ldGEuaWQ9cGFyc2VJbnQoci5pZCk7bGV0IEU9a2EoInByZWxvYWRQYWdlIixlLG4sZy5tZXRhLHUsUi5kYXJrbW9kZT9sLm5hdmlnYXRvci5nZXRVSVN0eWxlKCk6ImxpZ2h0Iik7V3QocyxFKSxyLl9fcGFnZV9fPXN9ZnVuY3Rpb24gbEkoe21ldGE6ZX0pe2xldCB0PXpmKCkse3BsYXRmb3JtOm4scGl4ZWxSYXRpbzpyLHdpbmRvd1dpZHRoOnN9PXlvKCk7cmV0dXJue2NzczohMCxyb3V0ZTplLnJvdXRlLHZlcnNpb246MSxsb2NhbGU6IiIscGxhdGZvcm06bixwaXhlbFJhdGlvOnIsd2luZG93V2lkdGg6cyxkaXNhYmxlU2Nyb2xsOmUuZGlzYWJsZVNjcm9sbD09PSEwLG9uUGFnZVNjcm9sbDohMSxvblBhZ2VSZWFjaEJvdHRvbTohMSxvblJlYWNoQm90dG9tRGlzdGFuY2U6Si5oYXNPd24oZSwib25SZWFjaEJvdHRvbURpc3RhbmNlIik/ZS5vblJlYWNoQm90dG9tRGlzdGFuY2U6cmUuT05fUkVBQ0hfQk9UVE9NX0RJU1RBTkNFLHN0YXR1c2JhckhlaWdodDp0LHdpbmRvd1RvcDplLm5hdmlnYXRpb25CYXIudHlwZT09PSJmbG9hdCI/dCtyZS5OQVZCQVJfSEVJR0hUOjAsd2luZG93Qm90dG9tOk5pLmluZGV4T2YoZS5yb3V0ZSk+PTAmJk5pLmNvdmVyP05pLmhlaWdodDowfX1mdW5jdGlvbiBjSShlLHQsbil7V3QodCxuKSxMYShQZyhlLHQsbikpLGU9PT0xJiYoUi5zcGxhc2hzY3JlZW4mJlIuc3BsYXNoc2NyZWVuLmF1dG9jbG9zZSYmIVIuc3BsYXNoc2NyZWVuLmFsd2F5c1Nob3dCZWZvcmVSZW5kZXImJmwubmF2aWdhdG9yLmNsb3NlU3BsYXNoc2NyZWVuKCksUi5vblJlYWR5KGZ1bmN0aW9uKCl7T2coKX0pKX1mdW5jdGlvbiB4ZyhlLHQsbil7bGV0IHI9eyQ6e30sJGdldEFwcFdlYnZpZXcoKXtyZXR1cm4gdH0sZ2V0T3BlbmVyRXZlbnRDaGFubmVsKCl7cmV0dXJuIG4uZXZlbnRDaGFubmVsfHwobi5ldmVudENoYW5uZWw9bmV3IHJlLkV2ZW50Q2hhbm5lbChlKSksbi5ldmVudENoYW5uZWx9LF9fc2V0dXAocyx1KXtzLiRnZXRBcHBXZWJ2aWV3PSgpPT50LHMuZ2V0T3BlbmVyRXZlbnRDaGFubmVsPXUuZ2V0T3BlbmVyRXZlbnRDaGFubmVsLFd0KHMsbiksdC5fX3ByZWxvYWRfXyYmKHQuX19wYWdlX189cyk7bGV0IGc9SG8oKSxFPWcuZmluZEluZGV4KCQ9PiQ9PT11KTtFPi0xJiZnLnNwbGljZShFLDEscyl9fTtXdChyLG4pLHQuX19wcmVsb2FkX18/KHQuX19wYWdlX189cix0LmFkZEV2ZW50TGlzdGVuZXIoInNob3ciLCgpPT57UG4odC5fX3BhZ2VfXyxyZS5PTl9TSE9XKX0pLHQuYWRkRXZlbnRMaXN0ZW5lcigiaGlkZSIsKCk9PntQbih0Ll9fcGFnZV9fLHJlLk9OX0hJREUpfSkpOkxhKHIpfWxldCBCZz0oZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXR7dXJsOnIsZXZlbnRzOnMsYW5pbWF0aW9uVHlwZTp1LGFuaW1hdGlvbkR1cmF0aW9uOmd9PWUse3BhdGg6RSxxdWVyeTokfT1yZS5wYXJzZVVybChyKSxbUCxMXT1kSShFLHUsZyk7cXUoRSwoKT0+e2ZJKHt1cmw6cixwYXRoOkUscXVlcnk6JCxldmVudHM6cyxhbmlUeXBlOlAsYW5pRHVyYXRpb246TH0pLnRoZW4odCkuY2F0Y2gobil9LGUub3BlblR5cGU9PT0iYXBwTGF1bmNoIil9LHVJPXhlKERmLEJnLHJFLHVFKTtmdW5jdGlvbiBmSSh7dXJsOmUscGF0aDp0LHF1ZXJ5Om4sZXZlbnRzOnIsYW5pVHlwZTpzLGFuaUR1cmF0aW9uOnV9KXtQbihyZS5PTl9ISURFKTtsZXQgZz1uZXcgcmUuRXZlbnRDaGFubmVsKGhnKCkrMSxyKTtyZXR1cm4gbmV3IFByb21pc2UoRT0+e0p1KHl1KHt1cmw6ZSxwYXRoOnQscXVlcnk6bixvcGVuVHlwZToibmF2aWdhdGVUbyIsZXZlbnRDaGFubmVsOmd9KSxzLHUsKCk9PntFKHtldmVudENoYW5uZWw6Z30pfSksRHMoKX0pfWZ1bmN0aW9uIGRJKGUsdCxuKXtsZXR7Z2xvYmFsU3R5bGU6cn09UixzPUphKGUpO3JldHVyblt0fHxzLmFuaW1hdGlvblR5cGV8fHIuYW5pbWF0aW9uVHlwZXx8c1Qsbnx8cy5hbmltYXRpb25EdXJhdGlvbnx8ci5hbmltYXRpb25EdXJhdGlvbnx8WXVdfWxldCBoST14ZShMZiwoe3VybDplfSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXR7cGF0aDpyLHF1ZXJ5OnN9PXJlLnBhcnNlVXJsKGUpO3F1KHIsKCk9PntwSSh7dXJsOmUscGF0aDpyLHF1ZXJ5OnN9KS50aGVuKHQpLmNhdGNoKG4pfSl9LG9FLGZFKTtmdW5jdGlvbiBwSSh7dXJsOmUscGF0aDp0LHF1ZXJ5Om59KXtsZXQgcj1GcigpO3JldHVybiByJiZqbyhyKSxuZXcgUHJvbWlzZShzPT57SnUoeXUoe3VybDplLHBhdGg6dCxxdWVyeTpuLG9wZW5UeXBlOiJyZWRpcmVjdFRvIn0pLCJub25lIiwwLCgpPT57aWYocil7bGV0IHU9ci4kZ2V0QXBwV2VidmlldygpO3UuX19wcmVsb2FkX18mJmlJKHUpLHUuY2xvc2UoIm5vbmUiKX1zKHZvaWQgMCl9KSxEcygpfSl9bGV0IGdJPSh7dXJsOmV9LHtyZXNvbHZlOnQscmVqZWN0Om59KT0+e2xldHtwYXRoOnIscXVlcnk6c309cmUucGFyc2VVcmwoZSk7cXUociwoKT0+e3ZJKHt1cmw6ZSxwYXRoOnIscXVlcnk6c30pLnRoZW4odCkuY2F0Y2gobil9KX07ZnVuY3Rpb24gdkkoe3VybDplLHBhdGg6dCxxdWVyeTpufSl7cmV0dXJuIG5ldyBQcm9taXNlKHI9PntsZXQgcz1IbygpLnNsaWNlKDApO1dlLmZpbmQoZz0+Zy5wYXRoPT09dCkubWV0YS5pc1RhYkJhciYmTmkuc3dpdGNoVGFiKHQuc2xpY2UoMSkpLEp1KHl1KHt1cmw6ZSxwYXRoOnQscXVlcnk6bixvcGVuVHlwZToicmVMYXVuY2gifSksIm5vbmUiLDAsKCk9PntzLmZvckVhY2goZz0+Q2coZywibm9uZSIpKSxyKHZvaWQgMCl9KSxEcygpfSl9bGV0IG1JPXhlKFdoLGdJLGFFLGRFKSxNZz0oZSx7cmVzb2x2ZTp0LHJlamVjdDpufSk9PntsZXR7dXJsOnJ9PWUse3BhdGg6cyxxdWVyeTp1fT1yZS5wYXJzZVVybChyKTtxdShzLCgpPT57Ykkoe3VybDpyLHBhdGg6cyxxdWVyeTp1fSkudGhlbih0KS5jYXRjaChuKX0sZS5vcGVuVHlwZT09PSJhcHBMYXVuY2giKX0sX0k9eGUoUnUsTWcsc0UsaEUpO2Z1bmN0aW9uIGJJKHt1cmw6ZSxwYXRoOnQscXVlcnk6bn0pe05pLnN3aXRjaFRhYih0LnNsaWNlKDEpKTtsZXQgcj1xbigpLHM9ci5sZW5ndGgsdT0hMSxnPSExLEU7cz49MSYmKEU9cltzLTFdLEUmJiFFLiQuX19pc1RhYkJhcj8oZz0hMCxyLnJldmVyc2UoKS5mb3JFYWNoKFA9PnshUC4kLl9faXNUYWJCYXImJlAhPT1FJiZDZyhQLCJub25lIil9KSxqbyhFKSxrKCgpPT57RS4kcGFnZS5vcGVuVHlwZT09PSJyZWRpcmVjdFRvIj9LbChFLiRnZXRBcHBXZWJ2aWV3KCksdWcsWXUpOktsKEUuJGdldEFwcFdlYnZpZXcoKSwiYXV0byIpfSwxMDApKTp1PSEwKTtsZXQgJDtyZXR1cm4gSG8oKS5mb3JFYWNoKFA9PntyZS5hZGRMZWFkaW5nU2xhc2goUC5yb3V0ZSk9PT10PyhQLiQuX19pc0FjdGl2ZXx8KGc9ITApLFAuJC5fX2lzQWN0aXZlPSEwLCQ9UCk6UC4kLl9faXNUYWJCYXImJihQLiQuX19pc0FjdGl2ZT0hMSl9KSxFPT09JCYmKHU9ITEpLEUmJnUmJlBuKEUscmUuT05fSElERSksbmV3IFByb21pc2UoUD0+e2lmKCQpe2xldCBMPSQuJGdldEFwcFdlYnZpZXcoKTtMLnNob3coIm5vbmUiKSxnJiYhTC5fX3ByZWxvYWRfXyYmUG4oJCxyZS5PTl9TSE9XKSxEcygpLFAodm9pZCAwKX1lbHNlIEp1KHl1KHt1cmw6ZSxwYXRoOnQscXVlcnk6bixvcGVuVHlwZToic3dpdGNoVGFiIn0pLCJub25lIiwwLCgpPT57RHMoKSxQKHZvaWQgMCl9LDcwKX0pfWxldCB5ST1CdChHaCwoe3VybDplfSk9PntsZXQgdD1vSSh7dXJsOmV9KTtyZXR1cm4gdD97aWQ6dC5pZCx1cmw6ZSxlcnJNc2c6InVuUHJlbG9hZFBhZ2U6b2sifTp7dXJsOmUsZXJyTXNnOiJ1blByZWxvYWRQYWdlOmZhaWwgbm90IGZvdW5kIn19LGNFKSxFST14ZShGZiwoe3VybDplfSx7cmVzb2x2ZTp0fSk9PntpZihoc1tlXSlyZXR1cm47bGV0IG49ZS5zcGxpdCgiPyIpLHI9blswXSxzPXJlLnBhcnNlUXVlcnkoblsxXXx8IiIpLHU9YUkoe3VybDplLHBhdGg6cixxdWVyeTpzfSksZz1YdShyLCJwcmVsb2FkUGFnZSIpO2cubWV0YS5pZD1wYXJzZUludCh1LmlkKTtsZXQgRT1rYSgicHJlbG9hZFBhZ2UiLGUscyxnLm1ldGEsdm9pZCAwLFIuZGFya21vZGU/bC5uYXZpZ2F0b3IuZ2V0VUlTdHlsZSgpOiJsaWdodCIpO3hnKHBhcnNlSW50KHUuaWQpLHUsRSksdCh7aWQ6dS5pZCx1cmw6ZSxlcnJNc2c6InByZWxvYWRQYWdlOm9rIn0pfSxsRSk7dmFyIHdJPXtfX3Byb3RvX186bnVsbCwkZW1pdDpMbSwkb2ZmOkRtLCRvbjpCbSwkb25jZTpNbSxfX2xvZ19fOiRBLGFkZEludGVyY2VwdG9yOkNtLGFkZFBob25lQ29udGFjdDpmQyxhcnJheUJ1ZmZlclRvQmFzZTY0OkRpLGJhc2U2NFRvQXJyYXlCdWZmZXI6UW8sY2FuSVVzZTptUyxjYW52YXNHZXRJbWFnZURhdGE6Zl8sY2FudmFzUHV0SW1hZ2VEYXRhOmRfLGNhbnZhc1RvVGVtcEZpbGVQYXRoOmhfLGNoZWNrSXNTb3RlckVucm9sbGVkSW5EZXZpY2U6bUMsY2hlY2tJc1N1cHBvcnRTb3RlckF1dGhlbnRpY2F0aW9uOnZDLGNob29zZUltYWdlOlZDLGNob29zZUxvY2F0aW9uOkxPLGNob29zZVZpZGVvOiRDLGNsZWFyU3RvcmFnZTppUyxjbGVhclN0b3JhZ2VTeW5jOnJTLGNsb3NlQXV0aFZpZXc6S3AsY2xvc2VCTEVDb25uZWN0aW9uOktTLGNsb3NlQmx1ZXRvb3RoQWRhcHRlcjpIUyxjbG9zZVByZXZpZXdJbWFnZTpOQyxjbG9zZVNvY2tldDpyTyxjb21wcmVzc0ltYWdlOkRDLGNvbXByZXNzVmlkZW86TEMsY29uZmlnTVRMUzpaQyxjb25uZWN0U29ja2V0OnRPLGNyZWF0ZUFuaW1hdGlvbjpSXyxjcmVhdGVCTEVDb25uZWN0aW9uOnFTLGNyZWF0ZUNhbnZhc0NvbnRleHQ6dV8sY3JlYXRlRnVsbFNjcmVlblZpZGVvQWQ6dFQsY3JlYXRlSW5uZXJBdWRpb0NvbnRleHQ6Yk8sY3JlYXRlSW50ZXJhY3RpdmVBZDphVCxjcmVhdGVJbnRlcnNlY3Rpb25PYnNlcnZlcjpfXyxjcmVhdGVJbnRlcnN0aXRpYWxBZDpyVCxjcmVhdGVMaXZlUHVzaGVyQ29udGV4dDp4TyxjcmVhdGVNYXBDb250ZXh0OkttLGNyZWF0ZU1lZGlhUXVlcnlPYnNlcnZlcjp5XyxjcmVhdGVQdXNoTWVzc2FnZTpOQSxjcmVhdGVSZXdhcmRlZFZpZGVvQWQ6UUEsY3JlYXRlU2VsZWN0b3JRdWVyeTpBXyxjcmVhdGVWaWRlb0NvbnRleHQ6WW0sZG93bmxvYWRGaWxlOkdDLGdldEFwcEF1dGhvcml6ZVNldHRpbmc6VHAsZ2V0QXBwQmFzZUluZm86ZHAsZ2V0QkxFRGV2aWNlQ2hhcmFjdGVyaXN0aWNzOlpTLGdldEJMRURldmljZVJTU0k6bkMsZ2V0QkxFRGV2aWNlU2VydmljZXM6SlMsZ2V0QmFja2dyb3VuZEF1ZGlvTWFuYWdlcjpOTyxnZXRCZWFjb25zOm9DLGdldEJsdWV0b290aEFkYXB0ZXJTdGF0ZTpqUyxnZXRCbHVldG9vdGhEZXZpY2VzOkdTLGdldENoZWNrQm94U3RhdGU6SnAsZ2V0Q2xpcGJvYXJkRGF0YTpkQyxnZXRDb25uZWN0ZWRCbHVldG9vdGhEZXZpY2VzOllTLGdldERldmljZUluZm86ZnAsZ2V0RW50ZXJPcHRpb25zU3luYzplYixnZXRGaWxlSW5mbzphUyxnZXRJbWFnZUluZm86VEMsZ2V0TGF1bmNoT3B0aW9uc1N5bmM6dGIsZ2V0TG9jYWxlOm91LGdldExvY2F0aW9uOkRPLGdldE5ldHdvcmtUeXBlOkVwLGdldFByb3ZpZGVyOkNBLGdldFB1c2hDbGllbnRJZDpuYixnZXRSZWNvcmRlck1hbmFnZXI6eEMsZ2V0U2F2ZWRGaWxlSW5mbzpwUyxnZXRTYXZlZEZpbGVMaXN0OmhTLGdldFNjcmVlbkJyaWdodG5lc3M6d0MsZ2V0U2VsZWN0ZWRUZXh0UmFuZ2U6SF8sZ2V0U3RvcmFnZTplUyxnZXRTdG9yYWdlSW5mbzpvUyxnZXRTdG9yYWdlSW5mb1N5bmM6UWgsZ2V0U3RvcmFnZVN5bmM6UXcsZ2V0U3ViTlZ1ZUJ5SWQ6eUEsZ2V0U3lzdGVtSW5mbzpOUyxnZXRTeXN0ZW1JbmZvU3luYzpocCxnZXRTeXN0ZW1TZXR0aW5nOk9DLGdldFVuaXZlcmlmeU1hbmFnZXI6UEEsZ2V0VXNlckluZm86T0EsZ2V0VXNlclByb2ZpbGU6QUEsZ2V0VmlkZW9JbmZvOklDLGdldFdpbmRvd0luZm86dXAsaGlkZUtleWJvYXJkOkhDLGhpZGVMb2FkaW5nOlpPLGhpZGVOYXZpZ2F0aW9uQmFyTG9hZGluZzppQSxoaWRlVGFiQmFyOnVBLGhpZGVUYWJCYXJSZWREb3Q6cEEsaGlkZVRvYXN0OkpPLGluaXRVVFNDbGFzc05hbWU6YWcsaW5pdFVUU0luZGV4Q2xhc3NOYW1lOktBLGluaXRVVFNQYWNrYWdlTmFtZTpxQSxpbml0VVRTUHJveHlDbGFzczpZQSxpbml0VVRTUHJveHlGdW5jdGlvbjpHQSxpbnRlcmNlcHRvcnM6QW0saW52b2tlUHVzaENhbGxiYWNrOkJmLGxvYWRGb250RmFjZTplQSxsb2dpbjpXcCxtYWtlUGhvbmVDYWxsOmxDLG5hdmlnYXRlQmFjazpGVCxuYXZpZ2F0ZVRvOnVJLG5hdmlnYXRlVG9NaW5pUHJvZ3JhbTpMQSxub3RpZnlCTEVDaGFyYWN0ZXJpc3RpY1ZhbHVlQ2hhbmdlOlhTLG9mZkFjY2VsZXJvbWV0ZXJDaGFuZ2U6RFMsb2ZmQXBwSGlkZTpRXyxvZmZBcHBTaG93OlpfLG9mZkNvbXBhc3NDaGFuZ2U6UlMsb2ZmRXJyb3I6S18sb2ZmS2V5Ym9hcmRIZWlnaHRDaGFuZ2U6ekMsb2ZmTG9jYXRpb25DaGFuZ2U6SE8sb2ZmTG9jYXRpb25DaGFuZ2VFcnJvcjp6TyxvZmZOZXR3b3JrU3RhdHVzQ2hhbmdlOmdDLG9mZlBhZ2VOb3RGb3VuZDpZXyxvZmZQdXNoTWVzc2FnZTppYixvZmZUaGVtZUNoYW5nZTpFQyxvZmZVbmhhbmRsZWRSZWplY3Rpb246V18sb2ZmV2luZG93UmVzaXplOkxfLG9uQWNjZWxlcm9tZXRlckNoYW5nZTpNUyxvbkFwcEhpZGU6WF8sb25BcHBTaG93OkpfLG9uQkxFQ2hhcmFjdGVyaXN0aWNWYWx1ZUNoYW5nZTokUyxvbkJMRUNvbm5lY3Rpb25TdGF0ZUNoYW5nZTpWUyxvbkJlYWNvblNlcnZpY2VDaGFuZ2U6aUMsb25CZWFjb25VcGRhdGU6ckMsb25CbHVldG9vdGhBZGFwdGVyU3RhdGVDaGFuZ2U6RlMsb25CbHVldG9vdGhEZXZpY2VGb3VuZDpMUyxvbkNvbXBhc3NDaGFuZ2U6a1Msb25DcmVhdGVWdWVBcHA6cmUub25DcmVhdGVWdWVBcHAsb25FcnJvcjpxXyxvbkhvc3RFdmVudFJlY2VpdmU6ZWcsb25LZXlib2FyZEhlaWdodENoYW5nZTpqQyxvbkxvY2FsZUNoYW5nZTpWXyxvbkxvY2F0aW9uQ2hhbmdlOlVPLG9uTG9jYXRpb25DaGFuZ2VFcnJvcjpqTyxvbk5hdGl2ZUV2ZW50UmVjZWl2ZTpGQSxvbk5ldHdvcmtTdGF0dXNDaGFuZ2U6cEMsb25QYWdlTm90Rm91bmQ6R18sb25QdXNoTWVzc2FnZTpyYixvblNvY2tldENsb3NlOnNPLG9uU29ja2V0RXJyb3I6b08sb25Tb2NrZXRNZXNzYWdlOmFPLG9uU29ja2V0T3BlbjppTyxvblRhYkJhck1pZEJ1dHRvblRhcDp4XyxvblRoZW1lQ2hhbmdlOnlDLG9uVW5oYW5kbGVkUmVqZWN0aW9uOnpfLG9uV2luZG93UmVzaXplOkRfLG9wZW5BcHBBdXRob3JpemVTZXR0aW5nOkFDLG9wZW5CbHVldG9vdGhBZGFwdGVyOlVTLG9wZW5Eb2N1bWVudDp2UyxvcGVuTG9jYXRpb246Rk8scGFnZVNjcm9sbFRvOnRBLHByZUxvZ2luOllwLHByZWxvYWRQYWdlOkVJLHByZXZpZXdJbWFnZTpQQyxyZUxhdW5jaDptSSxyZWFkQkxFQ2hhcmFjdGVyaXN0aWNWYWx1ZTpRUyxyZWRpcmVjdFRvOmhJLHJlZ2lzdGVyUnVudGltZTprQSxyZWdpc3RlclVUU1BsdWdpbjpKQSxyZW1vdmVJbnRlcmNlcHRvcjpPbSxyZW1vdmVTYXZlZEZpbGU6Z1MscmVtb3ZlU3RvcmFnZTpuUyxyZW1vdmVTdG9yYWdlU3luYzp0UyxyZW1vdmVUYWJCYXJCYWRnZTpoQSxyZXF1ZXN0OkpDLHJlcXVlc3RQYXltZW50OkRBLHJlcXVpcmVHbG9iYWw6d0EscmVxdWlyZU5hdGl2ZVBsdWdpbjpPYSxyZXF1aXJlVVRTUGx1Z2luOlpBLHJlc3RvcmVHbG9iYWw6RUEsc2F2ZUZpbGU6dVMsc2F2ZUltYWdlVG9QaG90b3NBbGJ1bTpNQyxzYXZlVmlkZW9Ub1Bob3Rvc0FsYnVtOkJDLHNjYW5Db2RlOmJDLHNlbmRIb3N0RXZlbnQ6WHAsc2VuZE5hdGl2ZUV2ZW50Ol9wLHNlbmRTb2NrZXRNZXNzYWdlOm5PLHNldEJMRU1UVTp0QyxzZXRDbGlwYm9hcmREYXRhOmhDLHNldEtlZXBTY3JlZW5PbjpDQyxzZXRMb2NhbGU6JF8sc2V0TmF2aWdhdGlvbkJhckNvbG9yOmFBLHNldE5hdmlnYXRpb25CYXJUaXRsZTpuQSxzZXRQYWdlTWV0YTpVXyxzZXRTY3JlZW5CcmlnaHRuZXNzOlNDLHNldFN0b3JhZ2U6WHcsc2V0U3RvcmFnZVN5bmM6Wncsc2V0VGFiQmFyQmFkZ2U6c0Esc2V0VGFiQmFySXRlbTpsQSxzZXRUYWJCYXJTdHlsZTpjQSxzaGFyZTpCQSxzaGFyZVdpdGhTeXN0ZW06TUEsc2hvd0FjdGlvblNoZWV0OllPLHNob3dLZXlib2FyZDpVQyxzaG93TG9hZGluZzpxTyxzaG93TW9kYWw6V08sc2hvd05hdmlnYXRpb25CYXJMb2FkaW5nOnJBLHNob3dUYWJCYXI6ZkEsc2hvd1RhYkJhclJlZERvdDpkQSxzaG93VG9hc3Q6S08sc3RhcnRBY2NlbGVyb21ldGVyOnZwLHN0YXJ0QmVhY29uRGlzY292ZXJ5OmFDLHN0YXJ0Qmx1ZXRvb3RoRGV2aWNlc0Rpc2NvdmVyeTp6UyxzdGFydENvbXBhc3M6cHAsc3RhcnRMb2NhdGlvblVwZGF0ZTpWTyxzdGFydFB1bGxEb3duUmVmcmVzaDpYTyxzdGFydFNvdGVyQXV0aGVudGljYXRpb246X0Msc3RvcEFjY2VsZXJvbWV0ZXI6bXAsc3RvcEJlYWNvbkRpc2NvdmVyeTpzQyxzdG9wQmx1ZXRvb3RoRGV2aWNlc0Rpc2NvdmVyeTpXUyxzdG9wQ29tcGFzczpncCxzdG9wTG9jYXRpb25VcGRhdGU6JE8sc3RvcFB1bGxEb3duUmVmcmVzaDpRTyxzd2l0Y2hUYWI6X0ksc3luY0RhdGFUb0dsb2JhbDpTQSx1blByZWxvYWRQYWdlOnlJLHVwbG9hZEZpbGU6Y08sdXB4MnB4Ol9tLHZpYnJhdGVMb25nOkJTLHZpYnJhdGVTaG9ydDp4Uyx3ZWV4R2V0U3lzdGVtSW5mb1N5bmM6aHUsd3JpdGVCTEVDaGFyYWN0ZXJpc3RpY1ZhbHVlOmVDfTtsZXQgU0k9Si5leHRlbmQoUSx7cHVibGlzaEhhbmRsZXI6Q0l9KTtmdW5jdGlvbiBDSShlLHQsbil7dD1KU09OLnN0cmluZ2lmeSh0KSxKLmlzQXJyYXkobil8fChuPVtuXSk7bGV0IHI9YHR5cGVvZiBVbmlWaWV3SlNCcmlkZ2UgIT09ICd1bmRlZmluZWQnICYmIFVuaVZpZXdKU0JyaWRnZS5zdWJzY3JpYmVIYW5kbGVyKCIke2V9Iiwke3R9LF9fUEFHRV9JRF9fKWA7bi5mb3JFYWNoKHM9PntsZXQgdT1TdHJpbmcocyksZz1sLndlYnZpZXcuZ2V0V2Vidmlld0J5SWQodSk7ZyYmZy5ldmFsSlMoci5yZXBsYWNlKCJfX1BBR0VfSURfXyIsdSkpfSl9ZnVuY3Rpb24gT0koKXtsZXR7dGFiQmFyOmV9PVI7aWYoIShlJiZlLmxpc3QmJmUubGlzdC5sZW5ndGgpKXJldHVybjtsZXR7ZW50cnlQYWdlUGF0aDpufT1SO2Uuc2VsZWN0ZWRJbmRleD0wO2xldCByPWUubGlzdC5maW5kSW5kZXgocz0+cy5wYWdlUGF0aD09PW4pO05pLmluaXQoZSwocyx1KT0+e2llLnN3aXRjaFRhYih7dXJsOnJlLmFkZExlYWRpbmdTbGFzaChzLnBhZ2VQYXRoKSxvcGVuVHlwZToic3dpdGNoVGFiIixmcm9tOiJ0YWJCYXIiLHN1Y2Nlc3MoKXtQbihyZS5PTl9UQUJfSVRFTV9UQVAse2luZGV4OnUsdGV4dDpzLnRleHQscGFnZVBhdGg6cy5wYWdlUGF0aH0pfX0pfSksciE9PS0xJiYoZS5zZWxlY3RlZEluZGV4PXIsciE9PTAmJk5pLnN3aXRjaFRhYihuKSl9ZnVuY3Rpb24gQUkoKXtsZXQgZT1sLmdsb2JhbEV2ZW50LHQ9di5yZXF1aXJlTW9kdWxlKCJnbG9iYWxFdmVudCIpLHtlbWl0Om4scHVibGlzaEhhbmRsZXI6cn09bXQ7di5jb25maWcucHJlbG9hZD9sLmtleS5hZGRFdmVudExpc3RlbmVyKEVhLGlhKTplLmFkZEV2ZW50TGlzdGVuZXIoInNwbGFzaGNsb3NlZCIsKCk9PntsLmtleS5hZGRFdmVudExpc3RlbmVyKEVhLGlhKX0pLGUuYWRkRXZlbnRMaXN0ZW5lcigicGF1c2UiLCgpPT57bihyZS5PTl9BUFBfRU5URVJfQkFDS0dST1VORCl9KSxlLmFkZEV2ZW50TGlzdGVuZXIoInJlc3VtZSIsKCk9PntsZXQgdT16ZSgpO3UmJnUudXNlckFjdGlvbiYmWmEodSksbihyZS5PTl9BUFBfRU5URVJfRk9SRUdST1VORCxTcygpKX0pLHQuYWRkRXZlbnRMaXN0ZW5lcigidWlzdHlsZWNoYW5nZSIsZnVuY3Rpb24odSl7bGV0IGc9e3RoZW1lOnUudWlzdHlsZX07bihyZS5PTl9USEVNRV9DSEFOR0UsZykscihyZS5PTl9USEVNRV9DSEFOR0UsZyxOYSgpKSxFUygpfSk7bGV0IHM9MDtlLmFkZEV2ZW50TGlzdGVuZXIoIktleWJvYXJkSGVpZ2h0Q2hhbmdlIixmdW5jdGlvbih1KXtzIT09dS5oZWlnaHQmJihzPXUuaGVpZ2h0LG4ocmUuT05fS0VZQk9BUkRfSEVJR0hUX0NIQU5HRSx7aGVpZ2h0OnN9KSl9KSx0LmFkZEV2ZW50TGlzdGVuZXIodVQsZnVuY3Rpb24odSl7dSYmdS5ldmVudCYmVkEodS5ldmVudCx1LmRhdGEpfSksZS5hZGRFdmVudExpc3RlbmVyKCJwbHVzTWVzc2FnZSIsRGcpLGUuYWRkRXZlbnRMaXN0ZW5lcigiV2Vidmlld1Bvc3RNZXNzYWdlIixEZyl9ZnVuY3Rpb24gRGcoe2RhdGE6ZX0pe2UmJmUudHlwZSYmbXQuc3Vic2NyaWJlSGFuZGxlcigicGx1c01lc3NhZ2UuIitlLnR5cGUsZS5hcmdzKX1mdW5jdGlvbiBMZyhlLHQsbj0hMSl7bXQuc3Vic2NyaWJlKCJwbHVzTWVzc2FnZS4iK2UsdCxuKX1mdW5jdGlvbiBUSShlKXtqXyhlLiQpO2xldHtlbnRyeVBhZ2VQYXRoOnQsZW50cnlQYWdlUXVlcnk6bixyZWZlcnJlckluZm86cn09UixzPXpzKHtwYXRoOnQscXVlcnk6bixyZWZlcnJlckluZm86cn0pO1BuKGUscmUuT05fTEFVTkNILHMpLFBuKGUscmUuT05fU0hPVyxzKTtsZXQgdT12LnJlcXVpcmVNb2R1bGUoInBsdXMiKS5nZXRBcHBTdGF0ZTsodSYmTnVtYmVyKHUoKSkpPT09MiYmUG4oZSxyZS5PTl9ISURFLHMpfWZ1bmN0aW9uIEZnKGUpe3JldHVybiBlPWUucmVwbGFjZSgvXC8kLywiIiksZS5pbmRleE9mKCJfIik9PT0wP2wuaW8uY29udmVydExvY2FsRmlsZVN5c3RlbVVSTChlKTplfWZ1bmN0aW9uIElJKCl7bGV0IGU9RmcoRmEpLHQ9RmcoSGkpLG49dC5zcGxpdCgiLyIpO24ucG9wKCk7bGV0IHI9bi5qb2luKCIvIik7bC5pby5yZXNvbHZlTG9jYWxGaWxlU3lzdGVtVVJMKGwuaW8uY29udmVydEFic29sdXRlRmlsZVN5c3RlbShyKSxzPT57cy5jcmVhdGVSZWFkZXIoKS5yZWFkRW50cmllcyhmdW5jdGlvbihnKXtsZXQgRT1nO0UmJkUubGVuZ3RoJiZFLmZvckVhY2goZnVuY3Rpb24oJCl7JC5pc0RpcmVjdG9yeSYmJC5mdWxsUGF0aC5pbmRleE9mKGUpPT09MCYmJC5mdWxsUGF0aC5pbmRleE9mKHQpIT09MCYmJC5yZW1vdmVSZWN1cnNpdmVseSgpfSl9KX0pfWxldCBWZz0wLE1jPTAsUXU9bnVsbCxKbD1udWxsO2Z1bmN0aW9uIFBJKGUsdCl7aWYoUXU9bnVsbCxKbCYmKEMoSmwpLEpsPW51bGwpLGUudHlwZT09PSJvbkZvY3VzIilpZihNYz4wKWUuZGV0YWlsLmhlaWdodD1NYztlbHNle0psPWsoZnVuY3Rpb24oKXtlLmRldGFpbC5oZWlnaHQ9TWMsdChlKX0sVmcpLFF1PWZ1bmN0aW9uKCl7SmwmJihDKEpsKSxKbD1udWxsKSxlLmRldGFpbC5oZWlnaHQ9TWMsdChlKX07cmV0dXJufXQoZSl9ZnVuY3Rpb24gTkkoKXtWZz1sLm9zLm5hbWUudG9Mb3dlckNhc2UoKT09PSJhbmRyb2lkIj8zMDA6NzAwLG10Lm9uKHJlLk9OX0tFWUJPQVJEX0hFSUdIVF9DSEFOR0UsdD0+e2lmKE1jPXQuaGVpZ2h0LE1jPjApe2xldCBuPVF1O1F1PW51bGwsbiYmbigpfX0pfWZ1bmN0aW9uIGtJKGUsdCxuKXtsZXQgcj10LnR5cGU7cj09PSJvbkZvY3VzInx8cj09PSJvbkJsdXIiP1BJKHQscz0+e24uZmlyZUV2ZW50KGUscyl9KTpuLmZpcmVFdmVudChlLHQpfWZ1bmN0aW9uIFJJKGUsdCl7bGV0IG49em4ocGFyc2VJbnQodCkpO2lmKCFuKXJldHVybjtsZXQgcj1uLl9fcGFnZV9jb250YWluZXJfXztlLmZvckVhY2gocz0+e3N3aXRjaChzWzBdKXtjYXNlIHJlLkFDVElPTl9UWVBFX0VWRU5UOmtJKHNbMV0sc1syXSxyKTticmVha319KX1sZXQgJGc9e307ZnVuY3Rpb24geEkoZSx0LG4pe2xldHthZHBpZDpyLHdpZHRoOnN9PWUsdT1yKyItIitzLGc9JGdbdV07aWYoZyYmZy5sZW5ndGg+MCl7dChnLnNwbGljZSgwLDEpWzBdKTtyZXR1cm59bC5hZC5nZXRBZHMoZSxFPT57bGV0ICQ9RS5hZHM7dCgkLnNwbGljZSgwLDEpWzBdKSwkZ1t1XT1nP2cuY29uY2F0KCQpOiR9LEU9PntuKHtlcnJDb2RlOkUuY29kZSxlcnJNc2c6RS5tZXNzYWdlfSl9KX1mdW5jdGlvbiBCSSgpe0coImdldEFkRGF0YSIsKGUsdCk9Pnt4SShlLG49Pnt0KHtjb2RlOjAsZGF0YTpufSl9LG49Pnt0KHtjb2RlOjEsbWVzc2FnZTpufSl9KX0pfWxldCBNST1bInN3aXRjaFRhYiIsInJlTGF1bmNoIiwicmVkaXJlY3RUbyIsIm5hdmlnYXRlVG8iLCJuYXZpZ2F0ZUJhY2siXTtmdW5jdGlvbiBESSgpe01JLmZvckVhY2goZT0+e0coZSx0PT57aWVbZV0oSi5leHRlbmQodCx7ZmFpbChuKXtjb25zb2xlLmVycm9yKG4uZXJyTXNnKX19KSl9KX0pfWxldCBVZz0hMTtmdW5jdGlvbiBMSShlLHQpe2xldCBuPXQ9PT0iMSI7aWYoIShuJiZVZykpe2lmKG4/KFVnPSEwLG1nKGwud2Vidmlldy5nZXRMYXVuY2hXZWJ2aWV3KCkpKTp1b3x8bWcobC53ZWJ2aWV3LmdldFdlYnZpZXdCeUlkKHQpKSwhdW8ubG9hZGVkKXtpZih1by5pZCE9PXQpcmV0dXJuIGNvbnNvbGUuZXJyb3IoYHdlYnZpZXdSZWFkeVske3VvLmlkfV1bJHt0fV0gbm90IG1hdGNoYCk7dW8ubG9hZGVkPSEwfW10LmVtaXQoQmMrIi4iK3QpLG4mJkZJKCl9fWZ1bmN0aW9uIEZJKCl7bGV0e2F1dG9jbG9zZTplLGFsd2F5c1Nob3dCZWZvcmVSZW5kZXI6dH09Ui5zcGxhc2hzY3JlZW47ZSYmIXQmJmwubmF2aWdhdG9yLmNsb3NlU3BsYXNoc2NyZWVuKCk7bGV0IG49cmUuYWRkTGVhZGluZ1NsYXNoKFIuZW50cnlQYWdlUGF0aCkscj1hbyhuKTtpZighci5tZXRhLmlzTlZ1ZSl7bGV0IHM9e3VybDpuKyhSLmVudHJ5UGFnZVF1ZXJ5fHwiIiksb3BlblR5cGU6ImFwcExhdW5jaCJ9LHU9e3Jlc29sdmUoKXt9LHJlamVjdCgpe319O3JldHVybiByLm1ldGEuaXNUYWJCYXI/TWcocyx1KTpCZyhzLHUpfX1mdW5jdGlvbiBWSShlLHQpe2xldCBuPXpuKHBhcnNlSW50KHQpKTtuJiYobi5fX3VuaWFwcF93ZWJ2aWV3PSEwKX1mdW5jdGlvbiAkSShlLHQpe2xldCBuPXpuKHBhcnNlSW50KHQpKTtuJiZkZWxldGUgbi5fX3VuaWFwcF93ZWJ2aWV3fWxldCBVST0oe25hbWU6ZSxhcmc6dH0sbik9PntlPT09InBvc3RNZXNzYWdlIj9ISShuWzBdLHQpOmllW2VdKEouZXh0ZW5kKHQse2ZhaWwocil7Y29uc29sZS5lcnJvcihyLmVyck1zZyl9fSkpfTtmdW5jdGlvbiBISShlLHQpe2xldCBuPWpUKCJ3ZWItdmlldyIscGFyc2VJbnQoZSkpO24mJm4uZGlzcGF0Y2hFdmVudChyZS5jcmVhdGVVbmlFdmVudCh7dHlwZToib25NZXNzYWdlIix0YXJnZXQ6T2JqZWN0LmNyZWF0ZShudWxsKSxjdXJyZW50VGFyZ2V0Ok9iamVjdC5jcmVhdGUobnVsbCksZGV0YWlsOntkYXRhOlt0XX19KSl9ZnVuY3Rpb24gakkoe25vZGVJZDplLG93bmVySWQ6dCxtZXRob2Q6bixhcmdzOnJ9LHMpe2xldCB1PUFnKGUscGFyc2VJbnQocykpO2lmKCF1KXJldHVybjtsZXQgZz16SSh0LHUuX192dWVQYXJlbnRDb21wb25lbnQpOyFnfHwhZ1tuXXx8Z1tuXShyKX1mdW5jdGlvbiB6SShlLHQpe2lmKCF0KXJldHVybiBudWxsO2lmKHQudWlkPT09ZSlyZXR1cm4gdC5wcm94eTtsZXQgbj10LnBhcmVudDtmb3IoO247KXtpZihuLnVpZD09PWUpcmV0dXJuIG4ucHJveHk7bj1uLnBhcmVudH1yZXR1cm4gdC5wcm94eX1mdW5jdGlvbiBXSSgpe2xldHtzdWJzY3JpYmU6ZSxzdWJzY3JpYmVIYW5kbGVyOnQscHVibGlzaEhhbmRsZXI6bn09bXQ7aWYoTGcoInN1YnNjcmliZUhhbmRsZXIiLCh7dHlwZTpyLGRhdGE6cyxwYWdlSWQ6dX0pPT57dChyLHMsdSl9KSxMZyhyZS5XRUJfSU5WT0tFX0FQUFNFUlZJQ0UsKHtkYXRhOnIsd2Vidmlld0lkczpzfSk9PntVSShyLHMpfSksUi5yZW5kZXJlciE9PSJuYXRpdmUiKXtlKEJjLExJKSxlKEhwLFJJKSxEKCksQkkoKSxESSgpLGUobUEsVkkpLGUoX0EsJEkpLGUocmUuT05fV1hTX0lOVk9LRV9DQUxMX01FVEhPRCxqSSk7bGV0IHI9YW8ocmUuYWRkTGVhZGluZ1NsYXNoKFIuZW50cnlQYWdlUGF0aCkpO3ImJiFyLm1ldGEuaXNOVnVlJiZuKEJjLHt9LDEpfX1sZXQgRGMsb2Q9e2dsb2JhbERhdGE6e319O2Z1bmN0aW9uIEdJKHthbGxvd0RlZmF1bHQ6ZT0hMX09e30pe2lmKERjKXJldHVybiBEYztpZihlKXJldHVybiBvZDtjb25zb2xlLmVycm9yKCJbd2Fybl06IGdldEFwcCgpIGZhaWxlZC4gTGVhcm4gbW9yZTogaHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2NvbGxvY2F0aW9uL2ZyYW1lL3dpbmRvdz9pZD1nZXRhcHAuIil9ZnVuY3Rpb24gWUkoZSl7aWYoaWUuVnVleCYmZS4kc3RvcmUpe2xldHt1c2VTdG9yZTp0fT1pZS5WdWV4O2llLlZ1ZXgudXNlU3RvcmU9bj0+bj90KG4pOmUuJHN0b3JlfURhKGUpLERjPWUsTnQoRGMpLEouZXh0ZW5kKERjLG9kKSxodChEYyxvZC5nbG9iYWxEYXRhKSxfdCgpLFJnKCksT0koKSxBSSgpLE5JKCksV0koKSxUSShlKSxrKElJLDFlNCksUi5yZWFkeT0hMH12YXIgcUk9e3VuaTp3SSxnZXRBcHA6R0ksZ2V0Q3VycmVudFBhZ2VzOmpzLF9fZGVmaW5lUGFnZTp0SSxfX3JlZ2lzdGVyQXBwOllJLF9fcmVnaXN0ZXJQYWdlOnl1LFVuaVNlcnZpY2VKU0JyaWRnZTpTSX07cmV0dXJuIHFJfShQdCxRdCxUKTtPPU8uZGVmYXVsdHx8TztsZXQgaWU9Ty51bmksVG49Ty5nZXRBcHAscW49Ty5nZXRDdXJyZW50UGFnZXMsbXQ9Ty5VbmlTZXJ2aWNlSlNCcmlkZ2U7cmV0dXJuIE99dmFyIFN2PXhOKEROKTt2YXIgQ3Y9dj0+e2xldHtpbml0VVRTUHJveHlDbGFzczpsLGluaXRVVFNQcm94eUZ1bmN0aW9uOmIsaW5pdFVUU1BhY2thZ2VOYW1lOlQsaW5pdFVUU0luZGV4Q2xhc3NOYW1lOmssaW5pdFVUU0NsYXNzTmFtZTpDfT12LGQ9IkRDbG91ZFVuaUZhY2lhbFJlY29nbml0aW9uVmVyaWZ5IixtPSJGYWNpYWxSZWNvZ25pdGlvblZlcmlmeShcdTVCOUVcdTRFQkFcdThCQTRcdThCQzEpIixSPSJidWlsdC1pbiIsV2U9IiIsUHQ9ITAsUXQ9VChkLFB0KSxPPWsoZCxQdCk7di5zdGFydEZhY2lhbFJlY29nbml0aW9uVmVyaWZ5PWIoITEse21vZHVsZU5hbWU6bSxtb2R1bGVUeXBlOlIsZXJyTXNnOldlLG1haW46ITAscGFja2FnZTpRdCxjbGFzczpPLG5hbWU6InN0YXJ0RmFjaWFsUmVjb2duaXRpb25WZXJpZnlCeUpzIixwYXJhbXM6W3tuYW1lOiJmYWNlU3R5bGUiLHR5cGU6IlVUU1NES01vZHVsZXNEQ2xvdWRVbmlGYWNpYWxSZWNvZ25pdGlvblZlcmlmeVN0YXJ0RmFjaWFsUmVjb2duaXRpb25WZXJpZnlPcHRpb25zSlNPTk9iamVjdCJ9XX0pLHYuZ2V0RmFjaWFsUmVjb2duaXRpb25NZXRhSW5mbz1iKCExLHttb2R1bGVOYW1lOm0sbW9kdWxlVHlwZTpSLGVyck1zZzpXZSxtYWluOiEwLHBhY2thZ2U6UXQsY2xhc3M6TyxuYW1lOiJnZXRGYWNpYWxSZWNvZ25pdGlvbk1ldGFJbmZvQnlKcyIscGFyYW1zOltdfSl9O2Z1bmN0aW9uIE92KHYpe0N2KHYpfXZhciBPZCxBZCxUZCxGcyxJZCxQZCxOZDtmdW5jdGlvbiBBdigpe3JldHVybiBGcz97X19kZWZpbmVQYWdlOk9kLF9fcmVnaXN0ZXJBcHA6QWQsX19yZWdpc3RlclBhZ2U6VGQsdW5pOkZzLHd4OkZzLGdldEFwcDpJZCxnZXRDdXJyZW50UGFnZXM6UGQsVW5pU2VydmljZUpTQnJpZGdlOk5kfTp7fX1mdW5jdGlvbiBUdih2KXtsZXR7d2VleDpsLHBsdXM6YixWdWVTaGFyZWQ6VH09djtyZXR1cm4gRnN8fCh7X19kZWZpbmVQYWdlOk9kLF9fcmVnaXN0ZXJBcHA6QWQsX19yZWdpc3RlclBhZ2U6VGQsdW5pOkZzLGdldEFwcDpJZCxnZXRDdXJyZW50UGFnZXM6UGQsVW5pU2VydmljZUpTQnJpZGdlOk5kfT13dihsLGIsdiksRnMuVnVlU2hhcmVkPVQsT3YoRnMpLFdnKEZzKSkse19fZGVmaW5lUGFnZTpPZCxfX3JlZ2lzdGVyQXBwOkFkLF9fcmVnaXN0ZXJQYWdlOlRkLHBsdXM6Yix1bmk6RnMsd3g6RnMsZ2V0QXBwOklkLGdldEN1cnJlbnRQYWdlczpQZCxVbmlTZXJ2aWNlSlNCcmlkZ2U6TmR9fWZ1bmN0aW9uIEl2KHYsbCl7bGV0e19fdW5pQ29uZmlnOmJ9PWw7aWYoIWIpcmV0dXJuO2xldCBUPWwud2VleDtULmRvY3VtZW50Ll9fJGF1dG9tYXRvcl9fPSEhYi5hdXRvbWF0b3I7bGV0IGs9Yi5yZW5kZXJlciE9PSJuYXRpdmUiJiZULmNvbmZpZy5idW5kbGVVcmwuaW5kZXhPZigiYXBwLXNlcnZpY2UuanMiKSE9PS0xO2lmKGtpKGwsQXYoKSksaz9TdihsKTooS2codixsKSxndihsLlZ1ZS5wYXJzZUNsYXNzU3R5bGVzKSksa2kobCxUdihsKSksVC5jb25maWcucGx1c193ZWJfaWQ9PT0iMSIpe2xldCBSPVQucmVxdWlyZU1vZHVsZSgicGx1cyIpO1Iuc2V0RGVmYXVsdEZvbnRTaXplJiZSLnNldERlZmF1bHRGb250U2l6ZShNYXRoLnJvdW5kKGwucGx1cy5zY3JlZW4ucmVzb2x1dGlvbldpZHRoLzIwKSl9bGV0e3NjYWxlOkMsZGV2aWNlV2lkdGg6ZCxwbGF0Zm9ybTptfT1nbG9iYWwuV1hFbnZpcm9ubWVudDtpZihtLnRvTG93ZXJDYXNlKCk9PT0iaW9zIil7bGV0IFI9TWF0aC5jZWlsKGQvQyk7VC5yZXF1aXJlTW9kdWxlKCJtZXRhIikuc2V0Vmlld3BvcnQoe3dpZHRoOlIscm91bmRPZmZEZXZpYXRpb246ITF9KX19dmFyIG5jPWNsYXNzIGV4dGVuZHMgdGN7Y29uc3RydWN0b3IobCl7c3VwZXIoKTt0aGlzLm5vZGVUeXBlPTg7dGhpcy50eXBlPSJjb21tZW50Ijt0aGlzLnZhbHVlPSIiO3RoaXMudmFsdWU9bH10b1N0cmluZygpe3JldHVybiI8IS0tICIrdGhpcy52YWx1ZSsiIC0tPiJ9fTtmdW5jdGlvbiBoYSh2LGw9W10pe3JldHVybnttb2R1bGU6ImRvbSIsbWV0aG9kOnYsYXJnczpsfX12YXIgSGM9Y2xhc3N7Y29uc3RydWN0b3IobCxiKXt0aGlzLmlkPWwsdGhpcy5iYXRjaGVkPSExLHRoaXMudXBkYXRlcz1bXSxIbihiKT9PYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywiaGFuZGxlciIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmJ9KTpjb25zb2xlLmVycm9yKCJbSlMgUnVudGltZV0gaW52YWxpZCBwYXJhbWV0ZXIsIGhhbmRsZXIgbXVzdCBiZSBhIGZ1bmN0aW9uIil9Y3JlYXRlRmluaXNoKGwpe3JldHVybiB0aGlzLmhhbmRsZXIoW2hhKCJjcmVhdGVGaW5pc2giKV0sbCl9dXBkYXRlRmluaXNoKGwpe3JldHVybiB0aGlzLmhhbmRsZXIoW2hhKCJ1cGRhdGVGaW5pc2giKV0sbCl9cmVmcmVzaEZpbmlzaChsKXtyZXR1cm4gdGhpcy5oYW5kbGVyKFtoYSgicmVmcmVzaEZpbmlzaCIpXSxsKX1jcmVhdGVCb2R5KGwpe2xldCBiPWwudG9KU09OKCksVD1iLmNoaWxkcmVuO2RlbGV0ZSBiLmNoaWxkcmVuO2xldCBrPVtoYSgiY3JlYXRlQm9keSIsW2JdKV07cmV0dXJuIFQmJmsucHVzaC5hcHBseShrLFQubWFwKEM9PmhhKCJhZGRFbGVtZW50IixbYi5yZWYsQywtMV0pKSksdGhpcy5hZGRBY3Rpb25zKGspfWFkZEVsZW1lbnQobCxiLFQpe3JldHVybiBUPj0wfHwoVD0tMSksdGhpcy5hZGRBY3Rpb25zKGhhKCJhZGRFbGVtZW50IixbYixsLnRvSlNPTigpLFRdKSl9cmVtb3ZlRWxlbWVudChsKXtpZihaaShsKSl7bGV0IGI9bC5tYXAoVD0+aGEoInJlbW92ZUVsZW1lbnQiLFtUXSkpO3JldHVybiB0aGlzLmFkZEFjdGlvbnMoYil9cmV0dXJuIHRoaXMuYWRkQWN0aW9ucyhoYSgicmVtb3ZlRWxlbWVudCIsW2xdKSl9bW92ZUVsZW1lbnQobCxiLFQpe3JldHVybiB0aGlzLmFkZEFjdGlvbnMoaGEoIm1vdmVFbGVtZW50IixbbCxiLFRdKSl9c2V0QXR0cihsLGIsVCl7cmV0dXJuIHRoaXMuYWRkQWN0aW9ucyhoYSgidXBkYXRlQXR0cnMiLFtsLHtbYl06VH1dKSl9c2V0U3R5bGUobCxiLFQpe3JldHVybiB0aGlzLmFkZEFjdGlvbnMoaGEoInVwZGF0ZVN0eWxlIixbbCx7W2JdOlR9XSkpfXNldFN0eWxlcyhsLGIpe3JldHVybiB0aGlzLmFkZEFjdGlvbnMoaGEoInVwZGF0ZVN0eWxlIixbbCxiXSkpfWFkZEV2ZW50KGwsYil7cmV0dXJuIHRoaXMuYWRkQWN0aW9ucyhoYSgiYWRkRXZlbnQiLFtsLGJdKSl9cmVtb3ZlRXZlbnQobCxiKXtyZXR1cm4gdGhpcy5hZGRBY3Rpb25zKGhhKCJyZW1vdmVFdmVudCIsW2wsYl0pKX1oYW5kbGVyKGwsYil7cmV0dXJuIGImJmIoKX1hZGRBY3Rpb25zKGwpe2xldCBiPXRoaXMudXBkYXRlcyxUPXRoaXMuaGFuZGxlcjtpZihaaShsKXx8KGw9W2xdKSx0aGlzLmJhdGNoZWQpYi5wdXNoLmFwcGx5KGIsbCk7ZWxzZSByZXR1cm4gVChsKX19O3ZhciBrZD17Y3JlYXRlQm9keToiY2FsbENyZWF0ZUJvZHkiLGFkZEVsZW1lbnQ6ImNhbGxBZGRFbGVtZW50IixyZW1vdmVFbGVtZW50OiJjYWxsUmVtb3ZlRWxlbWVudCIsbW92ZUVsZW1lbnQ6ImNhbGxNb3ZlRWxlbWVudCIsdXBkYXRlQXR0cnM6ImNhbGxVcGRhdGVBdHRycyIsdXBkYXRlU3R5bGU6ImNhbGxVcGRhdGVTdHlsZSIsYWRkRXZlbnQ6ImNhbGxBZGRFdmVudCIscmVtb3ZlRXZlbnQ6ImNhbGxSZW1vdmVFdmVudCJ9O2Z1bmN0aW9uIFB2KHYsbCl7bGV0IGI9bHx8Z2xvYmFsLmNhbGxOYXRpdmU7cmV0dXJuIEhuKGIpfHxjb25zb2xlLmVycm9yKCJbSlMgUnVudGltZV0gbm8gZGVmYXVsdCBoYW5kbGVyIiksZnVuY3Rpb24oayl7Wmkoayl8fChrPVtrXSk7Zm9yKGxldCBDPTA7QzxrLmxlbmd0aDtDKyspe2xldCBkPUZOKHYsa1tDXSxiKTtpZihkPT09LTEpcmV0dXJuIGR9fX1mdW5jdGlvbiBMTih2LGwpe3JldHVybiB2PT09ImRvbSImJmtkW2xdJiZIbihnbG9iYWxba2RbbF1dKX1mdW5jdGlvbiBGTih2LGwsYil7bGV0e21vZHVsZTpULG1ldGhvZDprLGFyZ3M6Q309bDtyZXR1cm4gTE4oVCxrKT9nbG9iYWxba2Rba11dKHYsLi4uQywiLTEiKTpiKHYsW2xdLCItMSIpfXZhciBtZj1jbGFzcyBleHRlbmRzIHhve2NvbnN0cnVjdG9yKGwpe3N1cGVyKCk7dGhpcy52YWx1ZT1sLHRoaXMubm9kZVR5cGU9Myx0aGlzLnR5cGU9InRleHQiLHRoaXMudmFsdWU9IiJ9dG9TdHJpbmcoKXtyZXR1cm4iIit0aGlzLnZhbHVlfX07dmFyIE52PXtzbGlkZXI6e2NoYW5nZTpmdW5jdGlvbih2KXtyZXR1cm57aW5kZXg6di5pbmRleCxzb3VyY2U6di5zb3VyY2V9fSxzY3JvbGw6ZnVuY3Rpb24odil7cmV0dXJue29mZnNldFhSYXRpbzp2Lm9mZnNldFhSYXRpbyxvZmZzZXRZUmF0aW86di5vZmZzZXRZUmF0aW8sZHJhZzp2LmRyYWd9fX0sInNjcm9sbC12aWV3Ijp7c2Nyb2xsZW5kOmZ1bmN0aW9uKHYpe3JldHVybntjb250ZW50T2Zmc2V0OnYuY29udGVudE9mZnNldH19fX07ZnVuY3Rpb24ga3Yodil7bGV0e2F0dHI6bCxvZmZzZXRMZWZ0OmIsb2Zmc2V0VG9wOlR9PXYsaz17fTtyZXR1cm4gbCYmT2JqZWN0LmtleXMobCkuZm9yRWFjaChDPT57Qy5pbmRleE9mKCJkYXRhLSIpPT09MCYmKGtbQy5yZXBsYWNlKCJkYXRhLSIsIiIpXT1sW0NdKX0pLHtpZDpsJiZsLmlkfHwiIixkYXRhc2V0Omssb2Zmc2V0TGVmdDpifHwwLG9mZnNldFRvcDpUfHwwfX12YXIgVk49WyJhIiwiZGl2IiwibGlzdCIsImNlbGwiLCJsb2FkaW5nIiwicmVmcmVzaCIsInJlY3ljbGUtbGlzdCIsInNjcm9sbGVyIiwiaW5kaWNhdG9yIiwid2F0ZXJmYWxsIiwid2ViIiwicmljaHRleHQiXSwkTj1bInZpZXdhcHBlYXIiLCJ2aWV3ZGlzYXBwZWFyIl0sVU49e21hcmtlcnRhcDpbIm1hcmtlcklkIl0sY29udHJvbHRhcDpbImNvbnRyb2xJZCJdLHJlZ2lvbmNoYW5nZTpbImNhdXNlZEJ5Il0sZW5kOlsiY2F1c2VkQnkiXSxhcHBlYXI6WyJkaXJlY3Rpb24iXSxkaXNhcHBlYXI6WyJkaXJlY3Rpb24iXX07ZnVuY3Rpb24gUnYodixsKXtsZXQgYj12LnR5cGU7aWYoJE4uaW5kZXhPZihiKSE9PS0xKXJldHVybiB2O2xldCBUPXYuY3VycmVudFRhcmdldCxrPVQudHlwZS5yZXBsYWNlKCJ1LSIsIiIpO2lmKFZOLmluZGV4T2YoaykhPT0tMSlyZXR1cm4gdjtsZXR7dGltZXN0YW1wOkMsdGFyZ2V0OmR9PXY7aWYoIWwpe2xldCBXZT1OdltrXTtXZT9IbihXZVtiXSk/bD1XZVtiXSh2KTpsPXYuZGV0YWlsfHx7fTpsPXYuZGV0YWlsfHx7fX1sZXQgbT17dHlwZTpiLHRpbWVTdGFtcDpDLHRhcmdldDprdihkKSxjdXJyZW50VGFyZ2V0Omt2KFQpLGRldGFpbDpsLHRvdWNoZXM6Yj09PSJ0b3VjaGVuZCJ8fGI9PT0icGFuZW5kIj9bXTp2LmNoYW5nZWRUb3VjaGVzLGNoYW5nZWRUb3VjaGVzOnYuY2hhbmdlZFRvdWNoZXN9O3YuY29tcG9uZW50SWQmJihtLmNvbXBvbmVudElkPXYuY29tcG9uZW50SWQpO2xldCBSPVVOW2JdO3JldHVybiBSJiZSLmZvckVhY2goV2U9PntabCh2LFdlKSYmKG1bV2VdPXZbV2VdKX0pLG19ZnVuY3Rpb24gSE4odixsKXtsZXQgYj1sLmF0dHJzfHx7fTtmb3IobGV0IGsgaW4gYil2LnNldEF0dHIoayxiW2tdLCEwKTtsZXQgVD1sLnN0eWxlfHx7fTtmb3IobGV0IGsgaW4gVCl2LnNldFN0eWxlKGssVFtrXSwhMCl9dmFyIEFhPWNsYXNze2NvbnN0cnVjdG9yKGwsYj0iIixUKXtsPWw/bC50b1N0cmluZygpOiIiLHRoaXMuaWQ9bCx0aGlzLlVSTD1iLHN2KGwsdGhpcyksdGhpcy5ub2RlTWFwPXt9O2xldCBrPUFhLkxpc3RlbmVyfHxIYzt0aGlzLmxpc3RlbmVyPW5ldyBrKGwsVHx8UHYobCxBYS5oYW5kbGVyKSksdGhpcy50YXNrQ2VudGVyPW5ldyBVYyhsLFQ/KEMsZCk9PlQoZCk6QWEuaGFuZGxlciksdGhpcy5jcmVhdGVEb2N1bWVudEVsZW1lbnQoKX1nZXRSZWYobCl7cmV0dXJuIHRoaXMubm9kZU1hcFtsXX1vcGVuKCl7dGhpcy5saXN0ZW5lci5iYXRjaGVkPSExfWNsb3NlKCl7dGhpcy5saXN0ZW5lci5iYXRjaGVkPSEwfWNyZWF0ZURvY3VtZW50RWxlbWVudCgpe2lmKCF0aGlzLmRvY3VtZW50RWxlbWVudCl7bGV0IGw9bmV3IHhvKCJkb2N1bWVudCIpO2wuZG9jSWQ9dGhpcy5pZCxsLm93bmVyRG9jdW1lbnQ9dGhpcyxsLnJvbGU9ImRvY3VtZW50RWxlbWVudCIsbC5yZWY9Il9kb2N1bWVudEVsZW1lbnQiLHRoaXMubm9kZU1hcC5fZG9jdW1lbnRFbGVtZW50PWwsdGhpcy5kb2N1bWVudEVsZW1lbnQ9bCxPYmplY3QuZGVmaW5lUHJvcGVydHkobCwiYXBwZW5kQ2hpbGQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpiPT57ZmQodGhpcyxiKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkobCwiaW5zZXJ0QmVmb3JlIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6KGIsVCk9PntmZCh0aGlzLGIsVCl9fSksbnIoImRlYnVnIikmJmZvKGBDcmVhdGUgZG9jdW1lbnQgZWxlbWVudCAoaWQ6ICIke2wuZG9jSWR9IiwgcmVmOiAiJHtsLnJlZn0iKWApfXJldHVybiB0aGlzLmRvY3VtZW50RWxlbWVudH1jcmVhdGVCb2R5KGwsYil7aWYoIXRoaXMuYm9keSl7bGV0IFQ9bmV3IHhvKGwsYik7ZGQodGhpcyxUKSxucigiZGVidWciKSYmZm8oYFtjcmVhdGVCb2R5XSgke3RoaXMuaWR9LCR7VC50eXBlfSwke1QucmVmfSkgKCR7SlNPTi5zdHJpbmdpZnkoVC50b0pTT04oITApKX0pLmApfXJldHVybiB0aGlzLmJvZHl9Y3JlYXRlRWxlbWVudChsLGIpe2xldCBUPW5ldyB4byhsLGIpO3JldHVybiBucigiZGVidWciKSYmZm8oYFtjcmVhdGVFbGVtZW50XSgke3RoaXMuaWR9LCR7VC50eXBlfSwke1QucmVmfSkgKCR7SlNPTi5zdHJpbmdpZnkoVC50b0pTT04oITApKX0pLmApLFR9Y3JlYXRlQ29tbWVudChsKXtyZXR1cm4gbmV3IG5jKGwpfWNyZWF0ZVRleHQobCl7cmV0dXJuIG5ldyBtZihsKX1maXJlRXZlbnQobCxiLFQsayxDKXtpZighbClyZXR1cm47VD1UfHx7fSxULnR5cGU9VC50eXBlfHxiLFQudGFyZ2V0PWwsVC5jdXJyZW50VGFyZ2V0PWwsVC50aW1lc3RhbXA9RGF0ZS5ub3coKSxrJiZITihsLGspO2xldCBkPSEwLG09dGhpcy5nZXRSZWYoIl9yb290Iik7aWYobSYmbS5hdHRyKXtsZXQgUj1tLmF0dHIuYnViYmxlO2Q9Uj09PSJ0cnVlInx8Uj09PSEwfHxkJiZSPT09dm9pZCAwfXJldHVybiBUPVJ2KFQpLGwuZmlyZUV2ZW50KGIsVCxkLEMpfWRlc3Ryb3koKXtucigiZGVidWciKSYmZm8oYFtkZXN0cm95XSgke3RoaXMuaWR9LGRvY3VtZW50KSBEZXN0cm95IGRvY3VtZW50IChpZDogIiR7dGhpcy5pZH0iLCBVUkw6ICIke3RoaXMuVVJMfSIpYCksdGhpcy50YXNrQ2VudGVyLmRlc3Ryb3lDYWxsYmFjaygpLGRlbGV0ZSB0aGlzLmxpc3RlbmVyLGRlbGV0ZSB0aGlzLm5vZGVNYXAsZGVsZXRlIHRoaXMudGFza0NlbnRlcixsdih0aGlzLmlkKX19O0FhLmhhbmRsZXI9bnVsbDt2YXIgeHY9e0lucHV0RWxlbWVudERpdjoiPFdoaXRlU3BhY2U+fDxMaW5lVGVybWluYXRvcj58PFJlc2VydmVkV29yZD58PElkZW50aWZpZXI+fDxOdW1lcmljTGl0ZXJhbD58PFB1bmN0dWF0b3I+fDxTdHJpbmdMaXRlcmFsPiIsSW5wdXRFbGVtZW50UmVnRXhwOiI8V2hpdGVTcGFjZT58PExpbmVUZXJtaW5hdG9yPnw8UmVzZXJ2ZWRXb3JkPnw8SWRlbnRpZmllcj58PE51bWVyaWNMaXRlcmFsPnw8UHVuY3R1YXRvcj58PFN0cmluZ0xpdGVyYWw+IixSZXNlcnZlZFdvcmQ6IjxLZXl3b3JkPnw8TnVsbExpdGVyYWw+fDxCb29sZWFuTGl0ZXJhbD4iLFdoaXRlU3BhY2U6L1tcdFx2XGZcdTAwMjBcdTAwQTBcdTE2ODBcdTE4MEVcdTIwMDAtXHUyMDBBXHUyMDJGXHUyMDVmXHUzMDAwXHVGRUZGXS8sTGluZVRlcm1pbmF0b3I6L1tcblxyXHUyMDI4XHUyMDI5XS8sS2V5d29yZDovbmV3KD8hW18kYS16QS1aMC05XSl8dm9pZCg/IVtfJGEtekEtWjAtOV0pfGRlbGV0ZSg/IVtfJGEtekEtWjAtOV0pfGluKD8hW18kYS16QS1aMC05XSl8aW5zdGFuY2VvZig/IVtfJGEtekEtWjAtOV0pfHR5cGVvZig/IVtfJGEtekEtWjAtOV0pLyxOdWxsTGl0ZXJhbDovbnVsbCg/IVtfJGEtekEtWjAtOV0pLyxCb29sZWFuTGl0ZXJhbDovKD86dHJ1ZXxmYWxzZSkoPyFbXyRhLXpBLVowLTldKS8sSWRlbnRpZmllcjovW18kYS16QS1aXVtfJGEtekEtWjAtOV0qLyxQdW5jdHVhdG9yOi9cL3w9PnxcKlwqfD4+Pj18Pj49fDw8PXw9PT18IT09fD4+Pnw8PHwlPXxcKj18LT18XCs9fDw9fD49fD09fCE9fFxePXxcfD18XHxcfHwmJnwmPXw+PnxcK1wrfC0tfFw6fH18XCp8JnxcfHxcXnwhfH58LXxcK3xcP3wlfD18Pnw8fCx8O3xcLig/IVswLTldKXxcXXxcW3xcKXxcKHx7LyxEaXZQdW5jdHVhdG9yOi9cLz18XC8vLE51bWVyaWNMaXRlcmFsOi8oPzowW3hYXVswLTlhLWZBLUZdKnxcLlswLTldK3woPzpbMS05XStbMC05XSp8MCkoPzpcLlswLTldKnxcLik/KSg/OltlRV1bKy1dezAsMX1bMC05XSspPyg/IVtfJGEtekEtWjAtOV0pLyxTdHJpbmdMaXRlcmFsOi8iKD86W14iXG5cXFxyXHUyMDI4XHUyMDI5XXxcXCg/OlsnIlxcYmZucnR2XG5cclx1MjAyOFx1MjAyOV18XHJcbil8XFx4WzAtOWEtZkEtRl17Mn18XFx1WzAtOWEtZkEtRl17NH18XFxbXjAtOXV4JyJcXGJmbnJ0dlxuXFxcclx1MjAyOFx1MjAyOV0pKiJ8Jyg/OlteJ1xuXFxcclx1MjAyOFx1MjAyOV18XFwoPzpbJyJcXGJmbnJ0dlxuXHJcdTIwMjhcdTIwMjldfFxyXG4pfFxceFswLTlhLWZBLUZdezJ9fFxcdVswLTlhLWZBLUZdezR9fFxcW14wLTl1eCciXFxiZm5ydHZcblxcXHJcdTIwMjhcdTIwMjldKSonLyxSZWd1bGFyRXhwcmVzc2lvbkxpdGVyYWw6L1wvKD86XFsoPzpcXFtcc1xTXXxbXlxdXSkqXF18W14qXC9cXFxuXHJcdTIwMjhcdTIwMjldfFxcW15cblxyXHUyMDI4XHUyMDI5XSkoPzpcWyg/OlxcW1xzXFNdfFteXF1dKSpcXXxbXlwvXFxcblxyXHUyMDI4XHUyMDI5XXxcXFteXG5cclx1MjAyOFx1MjAyOV0pKlwvWzAtOWEtekEtWl0qL307ZnVuY3Rpb24gQnYodixsLGIpe3ZhciBUPVtsXTtmdW5jdGlvbiBrKGQpe3ZhciBtPW5ldyBSZWdFeHA7cmV0dXJuIG0uY29tcGlsZShkLnJlcGxhY2UoLzwoW14+XSspPi9nLGZ1bmN0aW9uKFIsV2Upe3JldHVybiB2W1dlXT8oVC5wdXNoKFdlKSx2W1dlXWluc3RhbmNlb2YgUmVnRXhwPyIoIit2W1dlXS5zb3VyY2UrIikiOiIoIitrKHZbV2VdKS5zb3VyY2UrIikiKToiIn0pLGIpLG19dmFyIEM9ayh2W2xdKTt0aGlzLmV4ZWM9ZnVuY3Rpb24oZCl7dmFyIG09Qy5leGVjKGQpO2lmKG09PW51bGwpcmV0dXJuIG51bGw7Zm9yKHZhciBSPW5ldyBTdHJpbmcobVswXSksV2U9MDtXZTxULmxlbmd0aDtXZSsrKW1bV2VdJiYoUltUW1dlXV09bVtXZV0pO3JldHVybiBSfSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywibGFzdEluZGV4Iix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEMubGFzdEluZGV4fSxzZXQ6ZnVuY3Rpb24oZCl7Qy5sYXN0SW5kZXg9ZH19KX1mdW5jdGlvbiBqTigpe3ZhciB2PW5ldyBCdih4diwiSW5wdXRFbGVtZW50RGl2IiwiZyIpLGw9bmV3IEJ2KHh2LCJJbnB1dEVsZW1lbnRSZWdFeHAiLCJnIiksYjtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywic291cmNlIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGJ9LHNldDpmdW5jdGlvbihUKXtiPVQsdi5sYXN0SW5kZXg9MCxsLmxhc3RJbmRleD0wfX0pLHRoaXMucmVzZXQ9ZnVuY3Rpb24oKXt2Lmxhc3RJbmRleD0wLGwubGFzdEluZGV4PTB9LHRoaXMuZ2V0TmV4dFRva2VuPWZ1bmN0aW9uKFQpe3ZhciBrPXYubGFzdEluZGV4LEM7VD9DPXY6Qz1sO3ZhciBkPUMuZXhlYyhiKTtpZihkJiZDLmxhc3RJbmRleC1rPmQubGVuZ3RoKXRocm93IG5ldyBTeW50YXhFcnJvcigiVW5leHBlY3RlZCB0b2tlbiBJTExFR0FMIik7cmV0dXJuIHYubGFzdEluZGV4PUMubGFzdEluZGV4LGwubGFzdEluZGV4PUMubGFzdEluZGV4LGR9fXZhciBNdj17SWRlbnRpZmllck5hbWU6W1siSWRlbnRpZmllciJdXSxMaXRlcmFsOltbIk51bGxMaXRlcmFsIl0sWyJCb29sZWFuTGl0ZXJhbCJdLFsiTnVtZXJpY0xpdGVyYWwiXSxbIlN0cmluZ0xpdGVyYWwiXSxbIlJlZ3VsYXJFeHByZXNzaW9uTGl0ZXJhbCJdXSxQcmltYXJ5RXhwcmVzc2lvbjpbWyJJZGVudGlmaWVyIl0sWyJMaXRlcmFsIl0sWyIoIiwiRXhwcmVzc2lvbiIsIikiXV0sQ2FsbEV4cHJlc3Npb246W1siUHJpbWFyeUV4cHJlc3Npb24iLCJBcmd1bWVudHMiXSxbIkNhbGxFeHByZXNzaW9uIiwiQXJndW1lbnRzIl1dLEFyZ3VtZW50czpbWyIoIiwiKSJdLFsiKCIsIkFyZ3VtZW50TGlzdCIsIikiXV0sQXJndW1lbnRMaXN0OltbIkNvbmRpdGlvbmFsRXhwcmVzc2lvbiJdLFsiQXJndW1lbnRMaXN0IiwiLCIsIkNvbmRpdGlvbmFsRXhwcmVzc2lvbiJdXSxMZWZ0SGFuZFNpZGVFeHByZXNzaW9uOltbIlByaW1hcnlFeHByZXNzaW9uIl0sWyJDYWxsRXhwcmVzc2lvbiJdXSxVbmFyeUV4cHJlc3Npb246W1siTGVmdEhhbmRTaWRlRXhwcmVzc2lvbiJdLFsidm9pZCIsIlVuYXJ5RXhwcmVzc2lvbiJdLFsiKyIsIlVuYXJ5RXhwcmVzc2lvbiJdLFsiLSIsIlVuYXJ5RXhwcmVzc2lvbiJdLFsifiIsIlVuYXJ5RXhwcmVzc2lvbiJdLFsiISIsIlVuYXJ5RXhwcmVzc2lvbiJdXSxFeHBvbmVudGlhdGlvbkV4cHJlc3Npb246W1siVW5hcnlFeHByZXNzaW9uIl0sWyJFeHBvbmVudGlhdGlvbkV4cHJlc3Npb24iLCIqKiIsIlVuYXJ5RXhwcmVzc2lvbiJdXSxNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb246W1siTXVsdGlwbGljYXRpdmVFeHByZXNzaW9uIiwiLyIsIkV4cG9uZW50aWF0aW9uRXhwcmVzc2lvbiJdLFsiRXhwb25lbnRpYXRpb25FeHByZXNzaW9uIl0sWyJNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb24iLCIqIiwiRXhwb25lbnRpYXRpb25FeHByZXNzaW9uIl0sWyJNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb24iLCIlIiwiRXhwb25lbnRpYXRpb25FeHByZXNzaW9uIl1dLEFkZGl0aXZlRXhwcmVzc2lvbjpbWyJNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb24iXSxbIkFkZGl0aXZlRXhwcmVzc2lvbiIsIisiLCJNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb24iXSxbIkFkZGl0aXZlRXhwcmVzc2lvbiIsIi0iLCJNdWx0aXBsaWNhdGl2ZUV4cHJlc3Npb24iXV0sU2hpZnRFeHByZXNzaW9uOltbIkFkZGl0aXZlRXhwcmVzc2lvbiJdLFsiU2hpZnRFeHByZXNzaW9uIiwiPDwiLCJBZGRpdGl2ZUV4cHJlc3Npb24iXSxbIlNoaWZ0RXhwcmVzc2lvbiIsIj4+IiwiQWRkaXRpdmVFeHByZXNzaW9uIl0sWyJTaGlmdEV4cHJlc3Npb24iLCI+Pj4iLCJBZGRpdGl2ZUV4cHJlc3Npb24iXV0sUmVsYXRpb25hbEV4cHJlc3Npb246W1siU2hpZnRFeHByZXNzaW9uIl0sWyJSZWxhdGlvbmFsRXhwcmVzc2lvbiIsIjwiLCJTaGlmdEV4cHJlc3Npb24iXSxbIlJlbGF0aW9uYWxFeHByZXNzaW9uIiwiPiIsIlNoaWZ0RXhwcmVzc2lvbiJdLFsiUmVsYXRpb25hbEV4cHJlc3Npb24iLCI8PSIsIlNoaWZ0RXhwcmVzc2lvbiJdLFsiUmVsYXRpb25hbEV4cHJlc3Npb24iLCI+PSIsIlNoaWZ0RXhwcmVzc2lvbiJdLFsiUmVsYXRpb25hbEV4cHJlc3Npb24iLCJpbnN0YW5jZW9mIiwiU2hpZnRFeHByZXNzaW9uIl0sWyJSZWxhdGlvbmFsRXhwcmVzc2lvbiIsImluIiwiU2hpZnRFeHByZXNzaW9uIl1dLEVxdWFsaXR5RXhwcmVzc2lvbjpbWyJSZWxhdGlvbmFsRXhwcmVzc2lvbiJdLFsiRXF1YWxpdHlFeHByZXNzaW9uIiwiPT0iLCJSZWxhdGlvbmFsRXhwcmVzc2lvbiJdLFsiRXF1YWxpdHlFeHByZXNzaW9uIiwiIT0iLCJSZWxhdGlvbmFsRXhwcmVzc2lvbiJdLFsiRXF1YWxpdHlFeHByZXNzaW9uIiwiPT09IiwiUmVsYXRpb25hbEV4cHJlc3Npb24iXSxbIkVxdWFsaXR5RXhwcmVzc2lvbiIsIiE9PSIsIlJlbGF0aW9uYWxFeHByZXNzaW9uIl1dLEJpdHdpc2VBTkRFeHByZXNzaW9uOltbIkVxdWFsaXR5RXhwcmVzc2lvbiJdLFsiQml0d2lzZUFOREV4cHJlc3Npb24iLCImIiwiRXF1YWxpdHlFeHByZXNzaW9uIl1dLEJpdHdpc2VYT1JFeHByZXNzaW9uOltbIkJpdHdpc2VBTkRFeHByZXNzaW9uIl0sWyJCaXR3aXNlWE9SRXhwcmVzc2lvbiIsIl4iLCJCaXR3aXNlQU5ERXhwcmVzc2lvbiJdXSxCaXR3aXNlT1JFeHByZXNzaW9uOltbIkJpdHdpc2VYT1JFeHByZXNzaW9uIl0sWyJCaXR3aXNlT1JFeHByZXNzaW9uIiwifCIsIkJpdHdpc2VYT1JFeHByZXNzaW9uIl1dLExvZ2ljYWxBTkRFeHByZXNzaW9uOltbIkJpdHdpc2VPUkV4cHJlc3Npb24iXSxbIkxvZ2ljYWxBTkRFeHByZXNzaW9uIiwiJiYiLCJCaXR3aXNlT1JFeHByZXNzaW9uIl1dLExvZ2ljYWxPUkV4cHJlc3Npb246W1siTG9naWNhbEFOREV4cHJlc3Npb24iXSxbIkxvZ2ljYWxPUkV4cHJlc3Npb24iLCJ8fCIsIkxvZ2ljYWxBTkRFeHByZXNzaW9uIl1dLENvbmRpdGlvbmFsRXhwcmVzc2lvbjpbWyJMb2dpY2FsT1JFeHByZXNzaW9uIl0sWyJMb2dpY2FsT1JFeHByZXNzaW9uIiwiPyIsIkxvZ2ljYWxPUkV4cHJlc3Npb24iLCI6IiwiTG9naWNhbE9SRXhwcmVzc2lvbiJdXSxFeHByZXNzaW9uOltbIkNvbmRpdGlvbmFsRXhwcmVzc2lvbiJdLFsiRXhwcmVzc2lvbiIsIiwiLCJDb25kaXRpb25hbEV4cHJlc3Npb24iXV0sUHJvZ3JhbTpbWyJFeHByZXNzaW9uIl1dfTtmdW5jdGlvbiBBdSh2LGwpe3RoaXMubmFtZT12LHRoaXMudG9rZW49bCx0aGlzLmNoaWxkTm9kZXM9W10sdGhpcy50b1N0cmluZz1mdW5jdGlvbihiKXtpZihifHwoYj0iIiksdGhpcy5jaGlsZE5vZGVzLmxlbmd0aD09MSlyZXR1cm4gdGhpcy5jaGlsZE5vZGVzWzBdLnRvU3RyaW5nKGIpO2Zvcih2YXIgVD1iK3RoaXMubmFtZSsodGhpcy50b2tlbiE9bnVsbCYmdGhpcy5uYW1lIT10aGlzLnRva2VuPyI6Iit0aGlzLnRva2VuOiIiKStgCmAsaz0wO2s8dGhpcy5jaGlsZE5vZGVzLmxlbmd0aDtrKyspVCs9dGhpcy5jaGlsZE5vZGVzW2tdLnRvU3RyaW5nKGIrIiAgICAiKTtyZXR1cm4gVH19ZnVuY3Rpb24gek4oKXt2YXIgdixsPXtQcm9ncmFtOiIkIn0sYj17fTtmdW5jdGlvbiBUKG0pe2JbSlNPTi5zdHJpbmdpZnkobSldPW07Zm9yKHZhciBSPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG0pO1IubGVuZ3RoOyl7dmFyIFdlPVIuc2hpZnQoKTshTXZbV2VdfHxNdltXZV0uZm9yRWFjaChmdW5jdGlvbihRdCl7bVtRdFswXV18fFIucHVzaChRdFswXSk7dmFyIE89bSxpZT1udWxsO1F0LmZvckVhY2goZnVuY3Rpb24oVG4pe09bVG5dfHwoT1tUbl09e30pLGllPU8sTz1PW1RuXX0pLG1bV2VdLiRkaXYmJihPLiRkaXY9ITApLE8uJHJlZHVjZT1XZSxPLiRjb3VudD1RdC5sZW5ndGh9KX1mb3IodmFyIFB0IGluIG0pdHlwZW9mIG1bUHRdIT0ib2JqZWN0Inx8UHQuY2hhckF0KDApPT0iJCJ8fG1bUHRdLiRjbG9zdXJlfHwoYltKU09OLnN0cmluZ2lmeShtW1B0XSldP21bUHRdPWJbSlNPTi5zdHJpbmdpZnkobVtQdF0pXTpUKG1bUHRdKSk7bS4kY2xvc3VyZT0hMH1UKGwpO3ZhciBrPVtdLEM9W2xdLGQ9bDt0aGlzLmluc2VydFN5bWJvbD1mdW5jdGlvbihSLFdlKXtmb3IoOyFkW1IubmFtZV0mJmQuJHJlZHVjZTspe2Zvcih2YXIgUHQ9ZC4kY291bnQsUXQ9bmV3IEF1KGQuJHJlZHVjZSk7UHQtLTspUXQuY2hpbGROb2Rlcy5wdXNoKGsucG9wKCkpLEMucG9wKCk7ZD1DW0MubGVuZ3RoLTFdLHRoaXMuaW5zZXJ0U3ltYm9sKFF0KX1pZihkPWRbUi5uYW1lXSxrLnB1c2goUiksQy5wdXNoKGQpLCFkKXRocm93IG5ldyBFcnJvcjtyZXR1cm4gZC4kZGl2fSx0aGlzLnJlc2V0PWZ1bmN0aW9uKCl7ZD1sLGs9W10sQz1bbF19LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJncmFtbWFyVHJlZSIse2dldDpmdW5jdGlvbigpe3RyeXtmb3IoO2QuJHJlZHVjZTspe2Zvcih2YXIgbT1kLiRjb3VudCxSPW5ldyBBdShkLiRyZWR1Y2UpO20tLTspUi5jaGlsZE5vZGVzLnB1c2goay5wb3AoKSksQy5wb3AoKTtkPUNbQy5sZW5ndGgtMV0sdGhpcy5pbnNlcnRTeW1ib2woUil9aWYoay5sZW5ndGg+MCYmZFsiOyJdKXJldHVybiB0aGlzLmluc2VydFN5bWJvbChuZXcgQXUoIjsiLCI7IikpLHRoaXMuZ3JhbW1hclRyZWU7aWYoay5sZW5ndGghPTF8fGtbMF0ubmFtZSE9IlByb2dyYW0iKXRocm93IG5ldyBFcnJvcn1jYXRjaChXZSl7dGhyb3cgbmV3IFN5bnRheEVycm9yKCJVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dCIpfXJldHVybiBrWzBdfX0pfWZ1bmN0aW9uIFdOKCl7dGhpcy5sZXhpY2FsUGFyc2VyPW5ldyBqTix0aGlzLnN5bnRhY3RpY2FsUGFyc2VyPW5ldyB6Tjt2YXIgdj1bIk51bGxMaXRlcmFsIiwiQm9vbGVhbkxpdGVyYWwiLCJOdW1lcmljTGl0ZXJhbCIsIlN0cmluZ0xpdGVyYWwiLCJSZWd1bGFyRXhwcmVzc2lvbkxpdGVyYWwiLCJJZGVudGlmaWVyIiwiKioiLCI9PiIsInsiLCJ9IiwiKCIsIikiLCJbIiwiXSIsIi4iLCI7IiwiLCIsIjwiLCI+IiwiPD0iLCI+PSIsIj09IiwiIT0iLCI9PT0iLCIhPT0iLCIrIiwiLSIsIioiLCIlIiwiKysiLCItLSIsIjw8IiwiPj4iLCI+Pj4iLCImIiwifCIsIl4iLCIhIiwifiIsIiYmIiwifHwiLCI/IiwiOiIsIj0iLCIrPSIsIi09IiwiKj0iLCIlPSIsIjw8PSIsIj4+PSIsIj4+Pj0iLCImPSIsInw9IiwiXj0iLCIvIiwiLz0iLCJpbnN0YW5jZW9mIiwidHlwZW9mIiwibmV3Iiwidm9pZCIsImRlYnVnZ2VyIiwidGhpcyIsImRlbGV0ZSIsImluIl0sbD17fTt2LmZvckVhY2goZnVuY3Rpb24oYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGwsYix7fSl9KSx0aGlzLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5sZXhpY2FsUGFyc2VyLnJlc2V0KCksdGhpcy5zeW50YWN0aWNhbFBhcnNlci5yZXNldCgpfSx0aGlzLnBhcnNlPWZ1bmN0aW9uKGIsVCl7dmFyIGssQz0hMTt0aGlzLmxleGljYWxQYXJzZXIuc291cmNlPWI7Zm9yKHZhciBkPSExO2s9dGhpcy5sZXhpY2FsUGFyc2VyLmdldE5leHRUb2tlbihkKTspe1QmJlQoayk7dHJ5e2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGspLnNvbWUobT0+bC5oYXNPd25Qcm9wZXJ0eShtKT8oZD10aGlzLnN5bnRhY3RpY2FsUGFyc2VyLmluc2VydFN5bWJvbChuZXcgQXUobSxrKSxDKSxDPSExLCEwKTohMSkpY29udGludWU7KGsuS2V5d29yZHx8ay5QdW5jdHVhdG9yfHxrLkRpdlB1bmN0dWF0b3IpJiZsLmhhc093blByb3BlcnR5KGsudG9TdHJpbmcoKSkmJihkPXRoaXMuc3ludGFjdGljYWxQYXJzZXIuaW5zZXJ0U3ltYm9sKG5ldyBBdShrLnRvU3RyaW5nKCksayksQykpfWNhdGNoKG0pe3Rocm93IG5ldyBTeW50YXhFcnJvcigiVW5leHBlY3RlZCB0b2tlbiAiK2spfX1yZXR1cm4gdGhpcy5zeW50YWN0aWNhbFBhcnNlci5ncmFtbWFyVHJlZX19dmFyIER2PW5ldyBXTjtmdW5jdGlvbiBHTih2KXtEdi5yZXNldCgpLHRoaXMudHJlZT1Edi5wYXJzZSh2KSx0aGlzLnBhdGhzPVtdO3ZhciBsPU9iamVjdC5jcmVhdGUobnVsbCksYj10aGlzLFQ9T2JqZWN0LmNyZWF0ZShudWxsKTt0aGlzLmlzU2ltcGxlLHRoaXMuaXNDb25zdCxDKHRoaXMudHJlZSksayh0aGlzLnRyZWUpLHRoaXMucGF0aHMubGVuZ3RoPT09MCYmKHRoaXMuaXNDb25zdD0hMCksdGhpcy5zZXR0ZXI9ZnVuY3Rpb24oUil7Zm9yKHZhciBXZT1sLFB0PTA7UHQ8Ui5sZW5ndGgtMTtQdCsrKVdlW1JbUHRdXXx8KFdlW1JbUHRdXT1PYmplY3QuY3JlYXRlKG51bGwpKSxXZT1XZVtSW1B0XV07cmV0dXJue2lzQ29tcGxldGVkOmZ1bmN0aW9uKCl7Zm9yKHZhciBRdCBpbiBUKWlmKCFUW1F0XSlyZXR1cm4hMTtyZXR1cm4hMH0sc2V0OmZ1bmN0aW9uKFF0KXtpZihUW1Iuam9pbigiLiIpXXx8KFRbUi5qb2luKCIuIildPSEwKSxXZVtSW1B0XV09UXQsdGhpcy5pc0NvbXBsZXRlZCgpKXJldHVybiBiLmV4ZWMoKX19fSx0aGlzLnZhbHVlT2Y9dGhpcy5leGVjPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiBmdW5jdGlvbigpe3JldHVybigwLGV2YWwpKHYpfS5jYWxsKGwpfWNhdGNoKFIpe319O2Z1bmN0aW9uIGsoUil7Zm9yKHZhciBXZT1SO1dlLmNoaWxkTm9kZXMubGVuZ3RoPD0xJiZXZS5uYW1lIT09Ik1lbWJlckV4cHJlc3Npb24iOylXZT1XZS5jaGlsZE5vZGVzWzBdO1dlLm5hbWU9PT0iTWVtYmVyRXhwcmVzc2lvbiI/Yi5pc1NpbXBsZT0hMDpiLmlzU2ltcGxlPSExfWZ1bmN0aW9uIEMoUil7aWYoUi5uYW1lPT09IkNhbGxFeHByZXNzaW9uIiYmUi5jaGlsZE5vZGVzW1IuY2hpbGROb2Rlcy5sZW5ndGgtMV0ubmFtZSE9PSJDYWxsRXhwcmVzc2lvbiIpe3ZhciBXZT1kKFIuY2hpbGROb2Rlc1sxXSk7QyhSLmNoaWxkTm9kZXNbMF0pfWVsc2UgaWYoUi5uYW1lPT09Ik5ld0V4cHJlc3Npb24iJiZSLmNoaWxkTm9kZXMubGVuZ3RoPT09MSl2YXIgV2U9ZChSLmNoaWxkTm9kZXNbMF0pO2Vsc2UgaWYoUi5uYW1lPT09Ik1lbWJlckV4cHJlc3Npb24iJiZSLmNoaWxkTm9kZXMubGVuZ3RoPT09MSl2YXIgV2U9ZChSKTtlbHNlIGZvcih2YXIgUHQ9MDtQdDxSLmNoaWxkTm9kZXMubGVuZ3RoO1B0KyspQyhSLmNoaWxkTm9kZXNbUHRdKX1mdW5jdGlvbiBkKFIpe2lmKFIuY2hpbGROb2Rlc1swXS5uYW1lPT09IklkZW50aWZpZXJOYW1lIil7dmFyIFdlPWQoUi5jaGlsZE5vZGVzWzJdKTtyZXR1cm4gV2UmJihXZT1XZS5jb25jYXQoUi5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0udG9rZW4udG9TdHJpbmcoKSkpLG0oV2UpLFdlfWVsc2UgaWYoUi5jaGlsZE5vZGVzWzBdLm5hbWU9PT0iUHJpbWFyeUV4cHJlc3Npb24iKWlmKFIuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5hbWU9PT0iSWRlbnRpZmllciIpe3ZhciBXZT1bUi5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0udG9rZW4udG9TdHJpbmcoKV07cmV0dXJuIG0oV2UpLFdlfWVsc2UgcmV0dXJuIG51bGw7ZWxzZXtpZihSLmNoaWxkTm9kZXNbMF0ubmFtZT09PSJdIilyZXR1cm4gZChSLmNoaWxkTm9kZXNbM10pLEMoUi5jaGlsZE5vZGVzWzFdKSxudWxsO2lmKFIuY2hpbGROb2Rlc1swXS5uYW1lPT09IkFyZ3VtZW50cyIpcmV0dXJuIEMoUi5jaGlsZE5vZGVzWzBdKSxDKFIuY2hpbGROb2Rlc1sxXSksbnVsbDtmb3IodmFyIFB0PTA7UHQ8Ui5jaGlsZE5vZGVzLmxlbmd0aDtQdCsrKUMoUi5jaGlsZE5vZGVzW1B0XSl9fWZ1bmN0aW9uIG0oUil7Zm9yKHZhciBXZT1sLFB0PTA7UHQ8Ui5sZW5ndGgtMTtQdCsrKVdlW1JbUHRdXXx8KFdlW1JbUHRdXT1PYmplY3QuY3JlYXRlKG51bGwpKSxXZT1XZVtSW1B0XV07Yi5wYXRocy5wdXNoKFIpLFRbUi5qb2luKCIuIildPSExfX1mdW5jdGlvbiByYyh2KXt2YXIgbD12LmNoaWxkTm9kZXMuc2xpY2UoKS5yZXZlcnNlKCksYj1sLmZpbHRlcihSPT4hUi50b2tlbnx8IVIudG9rZW4uUHVuY3R1YXRvcik7aWYodi5uYW1lPT09IlVuYXJ5RXhwcmVzc2lvbiImJmwubGVuZ3RoPT09MiYmbFswXS5uYW1lPT09Ii0iJiZiLmxlbmd0aD09PTEpe3ZhciBUPXJjKGJbMF0pO3JldHVybiBULnZhbHVlPS1ULnZhbHVlLFR9aWYodi5uYW1lPT09IkFyZ3VtZW50cyIpe2Zvcih2YXIgaz1bXSxDPWJbMF07QzspQy5jaGlsZE5vZGVzLmxlbmd0aD09PTMmJihrLnVuc2hpZnQoQy5jaGlsZE5vZGVzWzBdKSxDPUMuY2hpbGROb2Rlc1syXSksQy5jaGlsZE5vZGVzLmxlbmd0aD09PTEmJihrLnVuc2hpZnQoQy5jaGlsZE5vZGVzWzBdKSxDPW51bGwpO3JldHVybnt0eXBlOiJBcmd1bWVudHMiLGNoaWxkcmVuOmsubWFwKFI9PnJjKFIpKX19aWYoYiYmYi5sZW5ndGg9PT0xKXt2YXIgVD1yYyhiWzBdKTtyZXR1cm4gVH1pZih2LnRva2VuJiZbIk51bGxMaXRlcmFsIiwiQm9vbGVhbkxpdGVyYWwiLCJOdW1lcmljTGl0ZXJhbCIsIlN0cmluZ0xpdGVyYWwiLCJJZGVudGlmaWVyIl0uc29tZShSPT52LnRva2VuW1JdKSl7dmFyIGQ9T2JqZWN0LmtleXModi50b2tlbikuZmlsdGVyKFI9PlIubWF0Y2goL0xpdGVyYWwvKXx8Ui5tYXRjaCgvSWRlbnRpZmllci8pKVswXSxtPXtOdWxsTGl0ZXJhbDpudWxsLEJvb2xlYW5MaXRlcmFsOkJvb2xlYW4odi50b2tlbiksTnVtZXJpY0xpdGVyYWw6TnVtYmVyKHYudG9rZW4pLFN0cmluZ0xpdGVyYWw6di50b2tlbixJZGVudGlmaWVyOnYudG9rZW59W2RdO3JldHVybnt0eXBlOmQsdmFsdWU6bX19cmV0dXJuIHYubmFtZT09PSJDYWxsRXhwcmVzc2lvbiI/e3R5cGU6IkNhbGxFeHByZXNzaW9uIixjaGlsZHJlbjpbcmMobFswXSkscmMobFsxXSldfTp7dHlwZTpsLmZpbHRlcihSPT5SLnRva2VuJiZSLnRva2VuLlB1bmN0dWF0b3IpWzBdLm5hbWUsY2hpbGRyZW46bC5maWx0ZXIoUj0+IVIudG9rZW58fCFSLnRva2VuLlB1bmN0dWF0b3IpLm1hcChSPT5yYyhSKSl9fWZ1bmN0aW9uIEx2KHYpe3ZhciBsPW5ldyBHTih2KTtyZXR1cm4gSlNPTi5zdHJpbmdpZnkocmMobC50cmVlKSxudWxsKX1mdW5jdGlvbiBZTih2LGwpe3JldHVybiBsPT09ImJpbmQiJiYodj09PSJiaW5kaW5neCJ8fHY9PT0iYmluZGluZyIpfWZ1bmN0aW9uIEZ2KHYpe2lmKCF2KXJldHVybjt0cnl7dj1KU09OLnBhcnNlKHYpfWNhdGNoKGIpe31sZXQgbD17fTtpZihSaSh2KT9sLm9yaWdpbj12OnYmJihsLm9yaWdpbj12Lm9yaWdpbixsLnRyYW5zZm9ybWVkPXYudHJhbnNmb3JtZWQpLCEoIWwudHJhbnNmb3JtZWQmJiFsLm9yaWdpbikpcmV0dXJuIGwudHJhbnNmb3JtZWQ9bC50cmFuc2Zvcm1lZHx8THYobC5vcmlnaW4pLGx9ZnVuY3Rpb24gcU4odil7cmV0dXJuIHYmJih2LmV4aXRFeHByZXNzaW9uPUZ2KHYuZXhpdEV4cHJlc3Npb24pLHYucHJvcHMmJnYucHJvcHMuZm9yRWFjaChsPT57bC5leHByZXNzaW9uPUZ2KGwuZXhwcmVzc2lvbil9KSx2KX1mdW5jdGlvbiBLTih2KXtyZXR1cm4gZnVuY3Rpb24obD17fSl7aWYoSG4odikpcmV0dXJuIHYoe3N0YXRlOmwuc3RhdGU9PT0iZW5kIj8iZXhpdCI6bC5zdGF0ZSx0OmwudCE9PXZvaWQgMD9sLnQ6bC5kZWx0YVR9KX19ZnVuY3Rpb24gVnYodixsLGIpe3JldHVybiBiJiYoWU4odixsKT9mdW5jdGlvbihULGs9ZnVuY3Rpb24oKXt9KXtpZighVCl0aHJvdyBuZXcgRXJyb3IoInNob3VsZCBwYXNzIG9wdGlvbnMgZm9yIGJpbmRpbmciKTtyZXR1cm4gcU4oVCksYihULFQmJlQuZXZlbnRUeXBlPT09InRpbWluZyI/S04oayk6ayl9OmIpfWZ1bmN0aW9uIEpOKHYsbCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHYsIltbQ3VycmVudEluc3RhbmNlSWRdXSIse3ZhbHVlOmx9KX1mdW5jdGlvbiAkdih2KXtyZXR1cm4gdlsiW1tDdXJyZW50SW5zdGFuY2VJZF1dIl19ZnVuY3Rpb24gWk4odixsLGIpe2xldCBUPUpyKHYpO3JldHVybiFUfHwhSG4oVC5zZW5kKT8oY29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIGZpbmQgdGFza0NlbnRlciAoJHt2fSkuYCksbnVsbCk6KC4uLmspPT5ULnNlbmQoIm1vZHVsZSIse21vZHVsZTpsLG1ldGhvZDpifSxrKX1mdW5jdGlvbiBYTih2LGwsYixUKXtsZXQgaz1Kcih2KTtyZXR1cm4ha3x8IUhuKGsuc2VuZCk/KGNvbnNvbGUuZXJyb3IoYFtKUyBGcmFtZXdvcmtdIEZhaWxlZCB0byBmaW5kIHRhc2tDZW50ZXIgKCR7dn0pLmApLG51bGwpOkhuKFQpP0M9Pmsuc2VuZCgibW9kdWxlIix7bW9kdWxlOmwsbWV0aG9kOmJ9LFtDXSk6KGNvbnNvbGUuZXJyb3IoYFtKUyBGcmFtZXdvcmtdICR7bH0uJHtifSBtdXN0IGJlIGFzc2lnbmVkIGFzIGEgZnVuY3Rpb24uYCksbnVsbCl9dmFyIF9mPWNsYXNze2NvbnN0cnVjdG9yKGwsYil7Sk4odGhpcyxTdHJpbmcobCkpLHRoaXMuY29uZmlnPWJ8fHt9LHRoaXMuZG9jdW1lbnQ9bmV3IEFhKGwsdGhpcy5jb25maWcuYnVuZGxlVXJsKSx0aGlzLnJlcXVpcmVNb2R1bGU9dGhpcy5yZXF1aXJlTW9kdWxlLmJpbmQodGhpcyksdGhpcy5pbXBvcnRTY3JpcHQ9dGhpcy5pbXBvcnRTY3JpcHQuYmluZCh0aGlzKSx0aGlzLmlzUmVnaXN0ZXJlZE1vZHVsZT1wZix0aGlzLmlzUmVnaXN0ZXJlZENvbXBvbmVudD1TZH1yZXF1aXJlTW9kdWxlKGwpe2xldCBiPSR2KHRoaXMpO2lmKCEoYiYmdGhpcy5kb2N1bWVudCYmdGhpcy5kb2N1bWVudC50YXNrQ2VudGVyKSl7Y29uc29sZS5lcnJvcihgW0pTIEZyYW1ld29ya10gRmFpbGVkIHRvIHJlcXVpcmVNb2R1bGUoIiR7bH0iKSwgaW5zdGFuY2UgKCR7Yn0pIGRvZXNuJ3QgZXhpc3QgYW55bW9yZS5gKTtyZXR1cm59aWYoIXBmKGwpKXtjb25zb2xlLndhcm4oYFtKUyBGcmFtZXdvcmtdIFx1NUY1M1x1NTI0RFx1OEZEMFx1ODg0Q1x1NzY4NFx1NTdGQVx1NUVBN1x1NEUwRFx1NTMwNVx1NTQyQlx1NTM5Rlx1NzUxRlx1NjNEMlx1NEVGNlske2x9XVx1RkYwQ1x1OEJGN1x1NTcyOG1hbmlmZXN0XHU0RTJEXHU5MTREXHU3RjZFXHU4QkU1XHU2M0QyXHU0RUY2XHVGRjBDXHU5MUNEXHU2NUIwXHU1MjM2XHU0RjVDXHU1MzA1XHU2MkVDXHU4QkU1XHU1MzlGXHU3NTFGXHU2M0QyXHU0RUY2XHU3Njg0XHU4MUVBXHU1QjlBXHU0RTQ5XHU4RkQwXHU4ODRDXHU1N0ZBXHU1RUE3YCk7cmV0dXJufWxldCBUPXt9LGs9eXYobCk7Zm9yKGxldCBDIGluIGspT2JqZWN0LmRlZmluZVByb3BlcnR5KFQsQyx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OigpPT5WdihsLEMsWk4oYixsLEMpKSxzZXQ6ZD0+WE4oYixsLEMsZCl9KTtyZXR1cm4gVH1zdXBwb3J0cyhsKXtpZighUmkobCkpcmV0dXJuIG51bGw7bGV0IGI9bC5tYXRjaCgvXkAoXHcrKVwvKFtcdy1dKykoXC4oXHcrKSk/JC9pKTtpZihiKXtsZXQgVD1iWzFdLGs9YlsyXSxDPWJbNF07c3dpdGNoKFQpe2Nhc2UibW9kdWxlIjpyZXR1cm4gcGYoayxDKTtjYXNlImNvbXBvbmVudCI6cmV0dXJuIFNkKGspfX1yZXR1cm4gbnVsbH1pbXBvcnRTY3JpcHQobCxiPXt9KXtsZXQgVD0kdih0aGlzKSxrPUpyKFQpO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihDLGQpe2lmKCFrfHwhSG4oay5zZW5kKSlyZXR1cm4gZChuZXcgRXJyb3IoYFtKUyBGcmFtZXdvcmtdIEZhaWxlZCB0byBpbXBvcnQgc2NyaXB0ICIke2x9Iiwgbm8gdGFza0NlbnRlciAoJHtUfSkgbWF0Y2hlZC5gKSk7dHJ5e2suc2VuZCgibW9kdWxlIix7bW9kdWxlOiJzY3JpcHQiLG1ldGhvZDoiaW1wb3J0U2NyaXB0In0sW2wsYl0se2NhbGxiYWNrOlttPT5DKG0pLG09PmQobSldfSl9Y2F0Y2gobSl7ZChtKX19KX19O2Z1bmN0aW9uIFFOKHYsbCl7bGV0IGI9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gYi5zZXJ2aWNlPU9iamVjdC5jcmVhdGUobnVsbCksSWwuZm9yRWFjaCgoe25hbWU6VCxvcHRpb25zOmt9KT0+e2xldCBDPWsuY3JlYXRlO2lmKEMpdHJ5e2xldCBkPUModixsKTtraShiLnNlcnZpY2UsZCksa2koYixkLmluc3RhbmNlKX1jYXRjaChkKXtjb25zb2xlLmVycm9yKGBbSlMgUnVudGltZV0gRmFpbGVkIHRvIGNyZWF0ZSBzZXJ2aWNlICR7VH0uYCl9fSksZGVsZXRlIGIuc2VydmljZS5pbnN0YW5jZSxncyhiLnNlcnZpY2UpLGJ9dmFyIGUxPXt1aWQ6MH0sdDE9cnYod3UpLG4xPW52KHd1KTtmdW5jdGlvbiBVdih2LGwsYil7bGV0IFQ9bmV3IF9mKHYsbCksaz0iVnVlIixDPVFOKHYse3dlZXg6VCxudnVlOlQsY29uZmlnOmwsY3JlYXRlZDpEYXRlLm5vdygpLGZyYW1ld29yazprfSk7Z3MoQyk7bGV0IGQ9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4ga2koZCxjMShUKSksa2koZCxDLHtTaGFyZWRPYmplY3Q6ZTEsd2VleDpULG52dWU6VCxyZXF1aXJlTW9kdWxlOm09PlQucmVxdWlyZU1vZHVsZShtKSxfX1dFRVhfQ0FMTF9KQVZBU0NSSVBUX186RWQsc2VydmljZXM6Q30pLGQucGx1cz1uZXcgZC5XZWV4UGx1cyhUKSxkLlZ1ZVNoYXJlZD13dSxkLlVuaVNoYXJlZD10MSxkLlZ1ZVJlYWN0aXZpdHk9bjEsSXYodixkKSxncyhkKSxkfWZ1bmN0aW9uIHIxKHYsbCxiPXt9KXtsZXQgVD0iVnVlIjtiPWNkKGIpLGIuZW52PWNkKGdsb2JhbC5XWEVudmlyb25tZW50fHx7fSksYi5idW5kbGVUeXBlPVQ7bGV0IGs9VXYodixiKTtpMShsLGspfWZ1bmN0aW9uIGkxKHYsbCl7bGV0IGI9W10sVD1bXTtmb3IobGV0IEMgaW4gbCliLnB1c2goQyksVC5wdXNoKGxbQ10pO2xldCBrPSIoZnVuY3Rpb24gKGdsb2JhbCkgeyAiK3YrIiB9KShPYmplY3QuY3JlYXRlKHRoaXMpKSI7cmV0dXJuIG5ldyBGdW5jdGlvbiguLi5iLGspKC4uLlQpfWZ1bmN0aW9uIG8xKHYpe2xldCBsPXJsKHYpO3RyeXtpZihsJiZsLmJvZHkpcmV0dXJuIGwuYm9keS50b0pTT04oKX1jYXRjaChiKXtjb25zb2xlLmVycm9yKCJbSlMgRnJhbWV3b3JrXSBGYWlsZWQgdG8gZ2V0IHRoZSB2aXJ0dWFsIGRvbSB0cmVlLiIpO3JldHVybn19ZnVuY3Rpb24gYTEodil7WWcodiksSWwuZm9yRWFjaChsPT57bGV0IGI9bC5vcHRpb25zLmRlc3Ryb3k7YiYmYih2KX0pfWZ1bmN0aW9uIHMxKHYpe3FnKHYpLElsLmZvckVhY2gobD0+e2xldCBiPWwub3B0aW9ucy5yZWZyZXNoO2ImJmIodil9KX12YXIgbDE9e2NyZWF0ZUluc3RhbmNlOnIxLGNyZWF0ZUluc3RhbmNlQ29udGV4dDpVdixnZXRSb290Om8xLGdldERvY3VtZW50OnJsLHJlZ2lzdGVyU2VydmljZTpnZix1bnJlZ2lzdGVyU2VydmljZTp2ZixjYWxsSlModixsKXtyZXR1cm4gRWQodixsKX0scmVnaXN0ZXJDb21wb25lbnRzOkV2LHJlZ2lzdGVyTW9kdWxlczpidixkZXN0cm95SW5zdGFuY2U6YTEscmVmcmVzaEluc3RhbmNlOnMxfTtmdW5jdGlvbiBSZCgpe3JldHVybiBfdigpLGwxfWZ1bmN0aW9uIGMxKHYpe2lmKGdsb2JhbC5zZXRUaW1lb3V0JiZnbG9iYWwuc2V0SW50ZXJ2YWwpcmV0dXJue3NldFRpbWVvdXQ6Z2xvYmFsLnNldFRpbWVvdXQsc2V0SW50ZXJ2YWw6Z2xvYmFsLnNldEludGVydmFsLGNsZWFyVGltZW91dDpnbG9iYWwuY2xlYXJUaW1lb3V0LGNsZWFySW50ZXJ2YWw6Z2xvYmFsLmNsZWFySW50ZXJ2YWx9O2xldCBsPXYucmVxdWlyZU1vZHVsZSgidGltZXIiKTtyZXR1cm57c2V0VGltZW91dDooLi4uVCk9PntsZXQgaz1mdW5jdGlvbigpe1RbMF0oLi4uVC5zbGljZSgyKSl9O3JldHVybiBsLnNldFRpbWVvdXQoayxUWzFdKSx2LmRvY3VtZW50LnRhc2tDZW50ZXIuY2FsbGJhY2tNYW5hZ2VyLmxhc3RDYWxsYmFja0lkLnRvU3RyaW5nKCl9LHNldEludGVydmFsOiguLi5UKT0+e2xldCBrPWZ1bmN0aW9uKCl7VFswXSguLi5ULnNsaWNlKDIpKX07cmV0dXJuIGwuc2V0SW50ZXJ2YWwoayxUWzFdKSx2LmRvY3VtZW50LnRhc2tDZW50ZXIuY2FsbGJhY2tNYW5hZ2VyLmxhc3RDYWxsYmFja0lkLnRvU3RyaW5nKCl9LGNsZWFyVGltZW91dDpUPT57bC5jbGVhclRpbWVvdXQoVCl9LGNsZWFySW50ZXJ2YWw6VD0+e2wuY2xlYXJJbnRlcnZhbChUKX19fXZhciBIdj17RG9jdW1lbnQ6QWEsRWxlbWVudDp4byxDb21tZW50Om5jLExpc3RlbmVyOkhjLFRhc2tDZW50ZXI6VWMsc2VuZFRhc2tzKC4uLnYpe3JldHVybiBIbihjYWxsTmF0aXZlKT9jYWxsTmF0aXZlKC4uLnYpOihnbG9iYWwuY2FsbE5hdGl2ZXx8KCgpPT57fSkpKC4uLnYpfX07QWEuaGFuZGxlcj1Idi5zZW5kVGFza3M7dmFyIGljPUh2O2Z1bmN0aW9uIHUxKCl7Z3MoaWMuQ29tbWVudCksZ3MoaWMuTGlzdGVuZXIpLGdzKGljLkRvY3VtZW50LnByb3RvdHlwZSksZ3MoaWMuQ29tbWVudC5wcm90b3R5cGUpLGdzKGljLkxpc3RlbmVyLnByb3RvdHlwZSl9dmFyIGJmPXtzZXJ2aWNlOntyZWdpc3RlcjpnZix1bnJlZ2lzdGVyOnZmLGhhczpDZH0sZnJlZXplUHJvdG90eXBlOnUxLGluaXQ6UmQsY29uZmlnOmljfTt2YXIgeGQ9Y2xhc3N7Y29uc3RydWN0b3IobCxiPXt9KXt0aGlzLnR5cGU9bHx8Im1lc3NhZ2UiLHRoaXMuZGF0YT1iLmRhdGF8fG51bGwsdGhpcy5vcmlnaW49Yi5vcmlnaW58fCIiLHRoaXMuc291cmNlPWIuc291cmNlfHxudWxsLHRoaXMucG9ydHM9Yi5wb3J0c3x8W10sdGhpcy50YXJnZXQ9bnVsbCx0aGlzLnRpbWVTdGFtcD1EYXRlLm5vdygpfX07dmFyIFBsPXt9LFR1PXt9O2Z1bmN0aW9uIEJkKCl7fUJkLnByb3RvdHlwZS5wb3N0TWVzc2FnZT1mdW5jdGlvbih2KXtpZih0aGlzLl9jbG9zZWQpdGhyb3cgbmV3IEVycm9yKGBCcm9hZGNhc3RDaGFubmVsICIke3RoaXMubmFtZX0iIGlzIGNsb3NlZC5gKTtsZXQgbD1QbFt0aGlzLm5hbWVdO2lmKGwmJmwubGVuZ3RoKWZvcihsZXQgYj0wO2I8bC5sZW5ndGg7KytiKXtsZXQgVD1sW2JdO1QuX2Nsb3NlZHx8VD09PXRoaXN8fEhuKFQub25tZXNzYWdlKSYmVC5vbm1lc3NhZ2UobmV3IHhkKCJtZXNzYWdlIix7ZGF0YTp2fSkpfX07QmQucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2Nsb3NlZCYmKHRoaXMuX2Nsb3NlZD0hMCxQbFt0aGlzLm5hbWVdKSl7bGV0IHY9UGxbdGhpcy5uYW1lXS5maWx0ZXIobD0+bCE9PXRoaXMpO3YubGVuZ3RoP1BsW3RoaXMubmFtZV09djpkZWxldGUgUGxbdGhpcy5uYW1lXX19O3ZhciBqdj17Y3JlYXRlOnY9PntpZihUdVt2XT1bXSxIbihnbG9iYWwuQnJvYWRjYXN0Q2hhbm5lbCkpcmV0dXJue307bGV0IGw9e0Jyb2FkY2FzdENoYW5uZWw6ZnVuY3Rpb24oYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIm5hbWUiLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCx3cml0YWJsZTohMSx2YWx1ZTpTdHJpbmcoYil9KSx0aGlzLl9jbG9zZWQ9ITEsdGhpcy5vbm1lc3NhZ2U9bnVsbCxQbFt0aGlzLm5hbWVdfHwoUGxbdGhpcy5uYW1lXT1bXSksUGxbdGhpcy5uYW1lXS5wdXNoKHRoaXMpLFR1W3ZdLnB1c2godGhpcyl9fTtyZXR1cm4gbC5Ccm9hZGNhc3RDaGFubmVsLnByb3RvdHlwZT1CZC5wcm90b3R5cGUse2luc3RhbmNlOmx9fSxkZXN0cm95OnY9PntUdVt2XSYmKFR1W3ZdLmZvckVhY2gobD0+bC5jbG9zZSgpKSxkZWxldGUgVHVbdl0pfX07ZnVuY3Rpb24gTWQoKXtsZXR7aW5pdDp2fT1iZjtiZi5zZXJ2aWNlLnJlZ2lzdGVyKCJCcm9hZGNhc3RDaGFubmVsIixqdiksYmYuZnJlZXplUHJvdG90eXBlKCk7bGV0IGw9digpO2ZvcihsZXQgYiBpbiBsKWdsb2JhbFtiXT0oLi4uVCk9PntsZXQgaz1sW2JdKC4uLlQpO3JldHVybiBrIGluc3RhbmNlb2YgRXJyb3ImJmNvbnNvbGUuZXJyb3Ioay50b1N0cmluZygpKSxrfX12YXIgb3g9Z2xvYmFsLmNvbnNvbGU7ZnVuY3Rpb24genYoKXtpZihvdigpLGdsb2JhbC5XWEVudmlyb25tZW50JiZnbG9iYWwuV1hFbnZpcm9ubWVudC5wbGF0Zm9ybSE9PSJXZWIiKWdsb2JhbC5jb25zb2xlPXtkZWJ1ZzooLi4udik9PntucigiZGVidWciKSYmZ2xvYmFsLm5hdGl2ZUxvZyguLi5JdSh2KSwiX19ERUJVRyIpfSxsb2c6KC4uLnYpPT57bnIoImxvZyIpJiZnbG9iYWwubmF0aXZlTG9nKC4uLkl1KHYpLCJfX0xPRyIpfSxpbmZvOiguLi52KT0+e25yKCJpbmZvIikmJmdsb2JhbC5uYXRpdmVMb2coLi4uSXUodiksIl9fSU5GTyIpfSx3YXJuOiguLi52KT0+e25yKCJ3YXJuIikmJmdsb2JhbC5uYXRpdmVMb2coLi4uSXUodiksIl9fV0FSTiIpfSxlcnJvcjooLi4udik9PntucigiZXJyb3IiKSYmZ2xvYmFsLm5hdGl2ZUxvZyguLi5JdSh2KSwiX19FUlJPUiIpfX07ZWxzZXtsZXR7ZGVidWc6dixsb2c6bCxpbmZvOmIsd2FybjpULGVycm9yOmt9PWNvbnNvbGU7Y29uc29sZS5fX29yaV9fPXtkZWJ1Zzp2LGxvZzpsLGluZm86Yix3YXJuOlQsZXJyb3I6a30sY29uc29sZS5kZWJ1Zz0oLi4uQyk9PntucigiZGVidWciKSYmY29uc29sZS5fX29yaV9fLmRlYnVnLmFwcGx5KGNvbnNvbGUsQyl9LGNvbnNvbGUubG9nPSguLi5DKT0+e25yKCJsb2ciKSYmY29uc29sZS5fX29yaV9fLmxvZy5hcHBseShjb25zb2xlLEMpfSxjb25zb2xlLmluZm89KC4uLkMpPT57bnIoImluZm8iKSYmY29uc29sZS5fX29yaV9fLmluZm8uYXBwbHkoY29uc29sZSxDKX0sY29uc29sZS53YXJuPSguLi5DKT0+e25yKCJ3YXJuIikmJmNvbnNvbGUuX19vcmlfXy53YXJuLmFwcGx5KGNvbnNvbGUsQyl9LGNvbnNvbGUuZXJyb3I9KC4uLkMpPT57bnIoImVycm9yIikmJmNvbnNvbGUuX19vcmlfXy5lcnJvci5hcHBseShjb25zb2xlLEMpfX19ZnVuY3Rpb24gSXUodil7cmV0dXJuIHYubWFwKGw9PntpZihMcyhsKS50b0xvd2VyQ2FzZSgpPT09IltvYmplY3Qgb2JqZWN0XSIpdHJ5e2w9SlNPTi5zdHJpbmdpZnkobCl9Y2F0Y2goVCl7bD0iW29iamVjdCBvYmplY3RdIn1lbHNlIGw9U3RyaW5nKGwpO3JldHVybiBsfSl9enYoKTtNZCgpO30pKCk7Cg==